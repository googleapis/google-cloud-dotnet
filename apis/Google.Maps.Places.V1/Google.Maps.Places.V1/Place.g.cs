// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/maps/places/v1/place.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Maps.Places.V1 {

  /// <summary>Holder for reflection information generated from google/maps/places/v1/place.proto</summary>
  public static partial class PlaceReflection {

    #region Descriptor
    /// <summary>File descriptor for google/maps/places/v1/place.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PlaceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiFnb29nbGUvbWFwcy9wbGFjZXMvdjEvcGxhY2UucHJvdG8SFWdvb2dsZS5t",
            "YXBzLnBsYWNlcy52MRoZZ29vZ2xlL2FwaS9yZXNvdXJjZS5wcm90bxoeZ29v",
            "Z2xlL2dlby90eXBlL3ZpZXdwb3J0LnByb3RvGi5nb29nbGUvbWFwcy9wbGFj",
            "ZXMvdjEvYWRkcmVzc19kZXNjcmlwdG9yLnByb3RvGilnb29nbGUvbWFwcy9w",
            "bGFjZXMvdjEvY29udGVudF9ibG9jay5wcm90bxonZ29vZ2xlL21hcHMvcGxh",
            "Y2VzL3YxL2V2X2NoYXJnaW5nLnByb3RvGihnb29nbGUvbWFwcy9wbGFjZXMv",
            "djEvZnVlbF9vcHRpb25zLnByb3RvGiFnb29nbGUvbWFwcy9wbGFjZXMvdjEv",
            "cGhvdG8ucHJvdG8aJ2dvb2dsZS9tYXBzL3BsYWNlcy92MS9wcmljZV9yYW5n",
            "ZS5wcm90bxoiZ29vZ2xlL21hcHMvcGxhY2VzL3YxL3Jldmlldy5wcm90bxof",
            "Z29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90bxoWZ29vZ2xlL3R5cGUv",
            "ZGF0ZS5wcm90bxoaZ29vZ2xlL3R5cGUvZGF0ZXRpbWUucHJvdG8aGGdvb2ds",
            "ZS90eXBlL2xhdGxuZy5wcm90bxogZ29vZ2xlL3R5cGUvbG9jYWxpemVkX3Rl",
            "eHQucHJvdG8aIGdvb2dsZS90eXBlL3Bvc3RhbF9hZGRyZXNzLnByb3RvIus2",
            "CgVQbGFjZRIMCgRuYW1lGAEgASgJEgoKAmlkGAIgASgJEjAKDGRpc3BsYXlf",
            "bmFtZRgfIAEoCzIaLmdvb2dsZS50eXBlLkxvY2FsaXplZFRleHQSDQoFdHlw",
            "ZXMYBSADKAkSFAoMcHJpbWFyeV90eXBlGDIgASgJEj0KGXByaW1hcnlfdHlw",
            "ZV9kaXNwbGF5X25hbWUYICABKAsyGi5nb29nbGUudHlwZS5Mb2NhbGl6ZWRU",
            "ZXh0Eh0KFW5hdGlvbmFsX3Bob25lX251bWJlchgHIAEoCRIiChppbnRlcm5h",
            "dGlvbmFsX3Bob25lX251bWJlchgIIAEoCRIZChFmb3JtYXR0ZWRfYWRkcmVz",
            "cxgJIAEoCRIfChdzaG9ydF9mb3JtYXR0ZWRfYWRkcmVzcxgzIAEoCRIyCg5w",
            "b3N0YWxfYWRkcmVzcxhaIAEoCzIaLmdvb2dsZS50eXBlLlBvc3RhbEFkZHJl",
            "c3MSSQoSYWRkcmVzc19jb21wb25lbnRzGAogAygLMi0uZ29vZ2xlLm1hcHMu",
            "cGxhY2VzLnYxLlBsYWNlLkFkZHJlc3NDb21wb25lbnQSOAoJcGx1c19jb2Rl",
            "GAsgASgLMiUuZ29vZ2xlLm1hcHMucGxhY2VzLnYxLlBsYWNlLlBsdXNDb2Rl",
            "EiUKCGxvY2F0aW9uGAwgASgLMhMuZ29vZ2xlLnR5cGUuTGF0TG5nEisKCHZp",
            "ZXdwb3J0GA0gASgLMhkuZ29vZ2xlLmdlby50eXBlLlZpZXdwb3J0Eg4KBnJh",
            "dGluZxgOIAEoARIXCg9nb29nbGVfbWFwc191cmkYDyABKAkSEwoLd2Vic2l0",
            "ZV91cmkYECABKAkSLgoHcmV2aWV3cxg1IAMoCzIdLmdvb2dsZS5tYXBzLnBs",
            "YWNlcy52MS5SZXZpZXcSSAoVcmVndWxhcl9vcGVuaW5nX2hvdXJzGBUgASgL",
            "MikuZ29vZ2xlLm1hcHMucGxhY2VzLnYxLlBsYWNlLk9wZW5pbmdIb3VycxIf",
            "ChJ1dGNfb2Zmc2V0X21pbnV0ZXMYFiABKAVIAIgBARIoCgl0aW1lX3pvbmUY",
            "WCABKAsyFS5nb29nbGUudHlwZS5UaW1lWm9uZRIsCgZwaG90b3MYNiADKAsy",
            "HC5nb29nbGUubWFwcy5wbGFjZXMudjEuUGhvdG8SGgoSYWRyX2Zvcm1hdF9h",
            "ZGRyZXNzGBggASgJEkQKD2J1c2luZXNzX3N0YXR1cxgZIAEoDjIrLmdvb2ds",
            "ZS5tYXBzLnBsYWNlcy52MS5QbGFjZS5CdXNpbmVzc1N0YXR1cxI2Cgtwcmlj",
            "ZV9sZXZlbBgaIAEoDjIhLmdvb2dsZS5tYXBzLnBsYWNlcy52MS5QcmljZUxl",
            "dmVsEj4KDGF0dHJpYnV0aW9ucxgbIAMoCzIoLmdvb2dsZS5tYXBzLnBsYWNl",
            "cy52MS5QbGFjZS5BdHRyaWJ1dGlvbhIeChF1c2VyX3JhdGluZ19jb3VudBgc",
            "IAEoBUgBiAEBEhoKEmljb25fbWFza19iYXNlX3VyaRgdIAEoCRIdChVpY29u",
            "X2JhY2tncm91bmRfY29sb3IYHiABKAkSFAoHdGFrZW91dBghIAEoCEgCiAEB",
            "EhUKCGRlbGl2ZXJ5GCIgASgISAOIAQESFAoHZGluZV9pbhgjIAEoCEgEiAEB",
            "EhwKD2N1cmJzaWRlX3BpY2t1cBgkIAEoCEgFiAEBEhcKCnJlc2VydmFibGUY",
            "JiABKAhIBogBARIdChBzZXJ2ZXNfYnJlYWtmYXN0GCcgASgISAeIAQESGQoM",
            "c2VydmVzX2x1bmNoGCggASgISAiIAQESGgoNc2VydmVzX2Rpbm5lchgpIAEo",
            "CEgJiAEBEhgKC3NlcnZlc19iZWVyGCogASgISAqIAQESGAoLc2VydmVzX3dp",
            "bmUYKyABKAhIC4gBARIaCg1zZXJ2ZXNfYnJ1bmNoGCwgASgISAyIAQESIwoW",
            "c2VydmVzX3ZlZ2V0YXJpYW5fZm9vZBgtIAEoCEgNiAEBEkgKFWN1cnJlbnRf",
            "b3BlbmluZ19ob3VycxguIAEoCzIpLmdvb2dsZS5tYXBzLnBsYWNlcy52MS5Q",
            "bGFjZS5PcGVuaW5nSG91cnMSUgofY3VycmVudF9zZWNvbmRhcnlfb3Blbmlu",
            "Z19ob3VycxgvIAMoCzIpLmdvb2dsZS5tYXBzLnBsYWNlcy52MS5QbGFjZS5P",
            "cGVuaW5nSG91cnMSUgofcmVndWxhcl9zZWNvbmRhcnlfb3BlbmluZ19ob3Vy",
            "cxgxIAMoCzIpLmdvb2dsZS5tYXBzLnBsYWNlcy52MS5QbGFjZS5PcGVuaW5n",
            "SG91cnMSNQoRZWRpdG9yaWFsX3N1bW1hcnkYNCABKAsyGi5nb29nbGUudHlw",
            "ZS5Mb2NhbGl6ZWRUZXh0EhwKD291dGRvb3Jfc2VhdGluZxg3IAEoCEgOiAEB",
            "EhcKCmxpdmVfbXVzaWMYOCABKAhID4gBARIeChFtZW51X2Zvcl9jaGlsZHJl",
            "bhg5IAEoCEgQiAEBEh0KEHNlcnZlc19jb2NrdGFpbHMYOiABKAhIEYgBARIb",
            "Cg5zZXJ2ZXNfZGVzc2VydBg7IAEoCEgSiAEBEhoKDXNlcnZlc19jb2ZmZWUY",
            "PCABKAhIE4gBARIeChFnb29kX2Zvcl9jaGlsZHJlbhg+IAEoCEgUiAEBEhgK",
            "C2FsbG93c19kb2dzGD8gASgISBWIAQESFQoIcmVzdHJvb20YQCABKAhIFogB",
            "ARIcCg9nb29kX2Zvcl9ncm91cHMYQSABKAhIF4gBARIlChhnb29kX2Zvcl93",
            "YXRjaGluZ19zcG9ydHMYQiABKAhIGIgBARJECg9wYXltZW50X29wdGlvbnMY",
            "QyABKAsyKy5nb29nbGUubWFwcy5wbGFjZXMudjEuUGxhY2UuUGF5bWVudE9w",
            "dGlvbnMSRAoPcGFya2luZ19vcHRpb25zGEYgASgLMisuZ29vZ2xlLm1hcHMu",
            "cGxhY2VzLnYxLlBsYWNlLlBhcmtpbmdPcHRpb25zEkUKEHN1Yl9kZXN0aW5h",
            "dGlvbnMYRyADKAsyKy5nb29nbGUubWFwcy5wbGFjZXMudjEuUGxhY2UuU3Vi",
            "RGVzdGluYXRpb24SVQoVYWNjZXNzaWJpbGl0eV9vcHRpb25zGEggASgLMjEu",
            "Z29vZ2xlLm1hcHMucGxhY2VzLnYxLlBsYWNlLkFjY2Vzc2liaWxpdHlPcHRp",
            "b25zSBmIAQESOAoMZnVlbF9vcHRpb25zGE4gASgLMiIuZ29vZ2xlLm1hcHMu",
            "cGxhY2VzLnYxLkZ1ZWxPcHRpb25zEkEKEWV2X2NoYXJnZV9vcHRpb25zGE8g",
            "ASgLMiYuZ29vZ2xlLm1hcHMucGxhY2VzLnYxLkVWQ2hhcmdlT3B0aW9ucxJK",
            "ChJnZW5lcmF0aXZlX3N1bW1hcnkYUCABKAsyLi5nb29nbGUubWFwcy5wbGFj",
            "ZXMudjEuUGxhY2UuR2VuZXJhdGl2ZVN1bW1hcnkSRwoRY29udGFpbmluZ19w",
            "bGFjZXMYUiADKAsyLC5nb29nbGUubWFwcy5wbGFjZXMudjEuUGxhY2UuQ29u",
            "dGFpbmluZ1BsYWNlEicKGnB1cmVfc2VydmljZV9hcmVhX2J1c2luZXNzGFMg",
            "ASgISBqIAQESRAoSYWRkcmVzc19kZXNjcmlwdG9yGFQgASgLMiguZ29vZ2xl",
            "Lm1hcHMucGxhY2VzLnYxLkFkZHJlc3NEZXNjcmlwdG9yEjYKC3ByaWNlX3Jh",
            "bmdlGFYgASgLMiEuZ29vZ2xlLm1hcHMucGxhY2VzLnYxLlByaWNlUmFuZ2US",
            "QgoOcmV2aWV3X3N1bW1hcnkYVyABKAsyKi5nb29nbGUubWFwcy5wbGFjZXMu",
            "djEuUGxhY2UuUmV2aWV3U3VtbWFyeRJWChlldl9jaGFyZ2VfYW1lbml0eV9z",
            "dW1tYXJ5GFkgASgLMjMuZ29vZ2xlLm1hcHMucGxhY2VzLnYxLlBsYWNlLkV2",
            "Q2hhcmdlQW1lbml0eVN1bW1hcnkSTgoUbmVpZ2hib3Job29kX3N1bW1hcnkY",
            "WyABKAsyMC5nb29nbGUubWFwcy5wbGFjZXMudjEuUGxhY2UuTmVpZ2hib3Jo",
            "b29kU3VtbWFyeRpfChBBZGRyZXNzQ29tcG9uZW50EhEKCWxvbmdfdGV4dBgB",
            "IAEoCRISCgpzaG9ydF90ZXh0GAIgASgJEg0KBXR5cGVzGAMgAygJEhUKDWxh",
            "bmd1YWdlX2NvZGUYBCABKAkaNgoIUGx1c0NvZGUSEwoLZ2xvYmFsX2NvZGUY",
            "ASABKAkSFQoNY29tcG91bmRfY29kZRgCIAEoCRr9BwoMT3BlbmluZ0hvdXJz",
            "EhUKCG9wZW5fbm93GAEgASgISACIAQESQQoHcGVyaW9kcxgCIAMoCzIwLmdv",
            "b2dsZS5tYXBzLnBsYWNlcy52MS5QbGFjZS5PcGVuaW5nSG91cnMuUGVyaW9k",
            "EhwKFHdlZWtkYXlfZGVzY3JpcHRpb25zGAMgAygJEloKFHNlY29uZGFyeV9o",
            "b3Vyc190eXBlGAQgASgOMjwuZ29vZ2xlLm1hcHMucGxhY2VzLnYxLlBsYWNl",
            "Lk9wZW5pbmdIb3Vycy5TZWNvbmRhcnlIb3Vyc1R5cGUSSgoMc3BlY2lhbF9k",
            "YXlzGAUgAygLMjQuZ29vZ2xlLm1hcHMucGxhY2VzLnYxLlBsYWNlLk9wZW5p",
            "bmdIb3Vycy5TcGVjaWFsRGF5EjIKDm5leHRfb3Blbl90aW1lGAYgASgLMhou",
            "Z29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIzCg9uZXh0X2Nsb3NlX3RpbWUY",
            "ByABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wGqkCCgZQZXJpb2QS",
            "RAoEb3BlbhgBIAEoCzI2Lmdvb2dsZS5tYXBzLnBsYWNlcy52MS5QbGFjZS5P",
            "cGVuaW5nSG91cnMuUGVyaW9kLlBvaW50EkUKBWNsb3NlGAIgASgLMjYuZ29v",
            "Z2xlLm1hcHMucGxhY2VzLnYxLlBsYWNlLk9wZW5pbmdIb3Vycy5QZXJpb2Qu",
            "UG9pbnQakQEKBVBvaW50EhAKA2RheRgBIAEoBUgAiAEBEhEKBGhvdXIYAiAB",
            "KAVIAYgBARITCgZtaW51dGUYAyABKAVIAogBARIfCgRkYXRlGAYgASgLMhEu",
            "Z29vZ2xlLnR5cGUuRGF0ZRIRCgl0cnVuY2F0ZWQYBSABKAhCBgoEX2RheUIH",
            "CgVfaG91ckIJCgdfbWludXRlGi0KClNwZWNpYWxEYXkSHwoEZGF0ZRgBIAEo",
            "CzIRLmdvb2dsZS50eXBlLkRhdGUi+wEKElNlY29uZGFyeUhvdXJzVHlwZRIk",
            "CiBTRUNPTkRBUllfSE9VUlNfVFlQRV9VTlNQRUNJRklFRBAAEhEKDURSSVZF",
            "X1RIUk9VR0gQARIOCgpIQVBQWV9IT1VSEAISDAoIREVMSVZFUlkQAxILCgdU",
            "QUtFT1VUEAQSCwoHS0lUQ0hFThAFEg0KCUJSRUFLRkFTVBAGEgkKBUxVTkNI",
            "EAcSCgoGRElOTkVSEAgSCgoGQlJVTkNIEAkSCgoGUElDS1VQEAoSCgoGQUND",
            "RVNTEAsSEAoMU0VOSU9SX0hPVVJTEAwSGAoUT05MSU5FX1NFUlZJQ0VfSE9V",
            "UlMQDUILCglfb3Blbl9ub3caNQoLQXR0cmlidXRpb24SEAoIcHJvdmlkZXIY",
            "ASABKAkSFAoMcHJvdmlkZXJfdXJpGAIgASgJGuYBCg5QYXltZW50T3B0aW9u",
            "cxIhChRhY2NlcHRzX2NyZWRpdF9jYXJkcxgBIAEoCEgAiAEBEiAKE2FjY2Vw",
            "dHNfZGViaXRfY2FyZHMYAiABKAhIAYgBARIeChFhY2NlcHRzX2Nhc2hfb25s",
            "eRgDIAEoCEgCiAEBEhgKC2FjY2VwdHNfbmZjGAQgASgISAOIAQFCFwoVX2Fj",
            "Y2VwdHNfY3JlZGl0X2NhcmRzQhYKFF9hY2NlcHRzX2RlYml0X2NhcmRzQhQK",
            "El9hY2NlcHRzX2Nhc2hfb25seUIOCgxfYWNjZXB0c19uZmMajgMKDlBhcmtp",
            "bmdPcHRpb25zEh0KEGZyZWVfcGFya2luZ19sb3QYASABKAhIAIgBARIdChBw",
            "YWlkX3BhcmtpbmdfbG90GAIgASgISAGIAQESIAoTZnJlZV9zdHJlZXRfcGFy",
            "a2luZxgDIAEoCEgCiAEBEiAKE3BhaWRfc3RyZWV0X3BhcmtpbmcYBCABKAhI",
            "A4gBARIaCg12YWxldF9wYXJraW5nGAUgASgISASIAQESIAoTZnJlZV9nYXJh",
            "Z2VfcGFya2luZxgGIAEoCEgFiAEBEiAKE3BhaWRfZ2FyYWdlX3BhcmtpbmcY",
            "ByABKAhIBogBAUITChFfZnJlZV9wYXJraW5nX2xvdEITChFfcGFpZF9wYXJr",
            "aW5nX2xvdEIWChRfZnJlZV9zdHJlZXRfcGFya2luZ0IWChRfcGFpZF9zdHJl",
            "ZXRfcGFya2luZ0IQCg5fdmFsZXRfcGFya2luZ0IWChRfZnJlZV9nYXJhZ2Vf",
            "cGFya2luZ0IWChRfcGFpZF9nYXJhZ2VfcGFya2luZxpMCg5TdWJEZXN0aW5h",
            "dGlvbhIuCgRuYW1lGAEgASgJQiD6QR0KG3BsYWNlcy5nb29nbGVhcGlzLmNv",
            "bS9QbGFjZRIKCgJpZBgCIAEoCRrSAgoUQWNjZXNzaWJpbGl0eU9wdGlvbnMS",
            "Kgodd2hlZWxjaGFpcl9hY2Nlc3NpYmxlX3BhcmtpbmcYASABKAhIAIgBARIr",
            "Ch53aGVlbGNoYWlyX2FjY2Vzc2libGVfZW50cmFuY2UYAiABKAhIAYgBARIr",
            "Ch53aGVlbGNoYWlyX2FjY2Vzc2libGVfcmVzdHJvb20YAyABKAhIAogBARIq",
            "Ch13aGVlbGNoYWlyX2FjY2Vzc2libGVfc2VhdGluZxgEIAEoCEgDiAEBQiAK",
            "Hl93aGVlbGNoYWlyX2FjY2Vzc2libGVfcGFya2luZ0IhCh9fd2hlZWxjaGFp",
            "cl9hY2Nlc3NpYmxlX2VudHJhbmNlQiEKH193aGVlbGNoYWlyX2FjY2Vzc2li",
            "bGVfcmVzdHJvb21CIAoeX3doZWVsY2hhaXJfYWNjZXNzaWJsZV9zZWF0aW5n",
            "GpkBChFHZW5lcmF0aXZlU3VtbWFyeRIsCghvdmVydmlldxgBIAEoCzIaLmdv",
            "b2dsZS50eXBlLkxvY2FsaXplZFRleHQSIQoZb3ZlcnZpZXdfZmxhZ19jb250",
            "ZW50X3VyaRgEIAEoCRIzCg9kaXNjbG9zdXJlX3RleHQYBiABKAsyGi5nb29n",
            "bGUudHlwZS5Mb2NhbGl6ZWRUZXh0Gk0KD0NvbnRhaW5pbmdQbGFjZRIuCgRu",
            "YW1lGAEgASgJQiD6QR0KG3BsYWNlcy5nb29nbGVhcGlzLmNvbS9QbGFjZRIK",
            "CgJpZBgCIAEoCRqIAQoNUmV2aWV3U3VtbWFyeRIoCgR0ZXh0GAEgASgLMhou",
            "Z29vZ2xlLnR5cGUuTG9jYWxpemVkVGV4dBIYChBmbGFnX2NvbnRlbnRfdXJp",
            "GAIgASgJEjMKD2Rpc2Nsb3N1cmVfdGV4dBgDIAEoCzIaLmdvb2dsZS50eXBl",
            "LkxvY2FsaXplZFRleHQawAIKFkV2Q2hhcmdlQW1lbml0eVN1bW1hcnkSNQoI",
            "b3ZlcnZpZXcYASABKAsyIy5nb29nbGUubWFwcy5wbGFjZXMudjEuQ29udGVu",
            "dEJsb2NrEjMKBmNvZmZlZRgCIAEoCzIjLmdvb2dsZS5tYXBzLnBsYWNlcy52",
            "MS5Db250ZW50QmxvY2sSNwoKcmVzdGF1cmFudBgDIAEoCzIjLmdvb2dsZS5t",
            "YXBzLnBsYWNlcy52MS5Db250ZW50QmxvY2sSMgoFc3RvcmUYBCABKAsyIy5n",
            "b29nbGUubWFwcy5wbGFjZXMudjEuQ29udGVudEJsb2NrEhgKEGZsYWdfY29u",
            "dGVudF91cmkYBSABKAkSMwoPZGlzY2xvc3VyZV90ZXh0GAYgASgLMhouZ29v",
            "Z2xlLnR5cGUuTG9jYWxpemVkVGV4dBrVAQoTTmVpZ2hib3Job29kU3VtbWFy",
            "eRI1CghvdmVydmlldxgBIAEoCzIjLmdvb2dsZS5tYXBzLnBsYWNlcy52MS5D",
            "b250ZW50QmxvY2sSOAoLZGVzY3JpcHRpb24YAiABKAsyIy5nb29nbGUubWFw",
            "cy5wbGFjZXMudjEuQ29udGVudEJsb2NrEhgKEGZsYWdfY29udGVudF91cmkY",
            "AyABKAkSMwoPZGlzY2xvc3VyZV90ZXh0GAQgASgLMhouZ29vZ2xlLnR5cGUu",
            "TG9jYWxpemVkVGV4dCJyCg5CdXNpbmVzc1N0YXR1cxIfChtCVVNJTkVTU19T",
            "VEFUVVNfVU5TUEVDSUZJRUQQABIPCgtPUEVSQVRJT05BTBABEhYKEkNMT1NF",
            "RF9URU1QT1JBUklMWRACEhYKEkNMT1NFRF9QRVJNQU5FTlRMWRADOkLqQT8K",
            "G3BsYWNlcy5nb29nbGVhcGlzLmNvbS9QbGFjZRIRcGxhY2VzL3twbGFjZV9p",
            "ZH0qBnBsYWNlczIFcGxhY2VCFQoTX3V0Y19vZmZzZXRfbWludXRlc0IUChJf",
            "dXNlcl9yYXRpbmdfY291bnRCCgoIX3Rha2VvdXRCCwoJX2RlbGl2ZXJ5QgoK",
            "CF9kaW5lX2luQhIKEF9jdXJic2lkZV9waWNrdXBCDQoLX3Jlc2VydmFibGVC",
            "EwoRX3NlcnZlc19icmVha2Zhc3RCDwoNX3NlcnZlc19sdW5jaEIQCg5fc2Vy",
            "dmVzX2Rpbm5lckIOCgxfc2VydmVzX2JlZXJCDgoMX3NlcnZlc193aW5lQhAK",
            "Dl9zZXJ2ZXNfYnJ1bmNoQhkKF19zZXJ2ZXNfdmVnZXRhcmlhbl9mb29kQhIK",
            "EF9vdXRkb29yX3NlYXRpbmdCDQoLX2xpdmVfbXVzaWNCFAoSX21lbnVfZm9y",
            "X2NoaWxkcmVuQhMKEV9zZXJ2ZXNfY29ja3RhaWxzQhEKD19zZXJ2ZXNfZGVz",
            "c2VydEIQCg5fc2VydmVzX2NvZmZlZUIUChJfZ29vZF9mb3JfY2hpbGRyZW5C",
            "DgoMX2FsbG93c19kb2dzQgsKCV9yZXN0cm9vbUISChBfZ29vZF9mb3JfZ3Jv",
            "dXBzQhsKGV9nb29kX2Zvcl93YXRjaGluZ19zcG9ydHNCGAoWX2FjY2Vzc2li",
            "aWxpdHlfb3B0aW9uc0IdChtfcHVyZV9zZXJ2aWNlX2FyZWFfYnVzaW5lc3Mq",
            "sQEKClByaWNlTGV2ZWwSGwoXUFJJQ0VfTEVWRUxfVU5TUEVDSUZJRUQQABIU",
            "ChBQUklDRV9MRVZFTF9GUkVFEAESGwoXUFJJQ0VfTEVWRUxfSU5FWFBFTlNJ",
            "VkUQAhIYChRQUklDRV9MRVZFTF9NT0RFUkFURRADEhkKFVBSSUNFX0xFVkVM",
            "X0VYUEVOU0lWRRAEEh4KGlBSSUNFX0xFVkVMX1ZFUllfRVhQRU5TSVZFEAVC",
            "mwEKGWNvbS5nb29nbGUubWFwcy5wbGFjZXMudjFCClBsYWNlUHJvdG9QAVo3",
            "Y2xvdWQuZ29vZ2xlLmNvbS9nby9tYXBzL3BsYWNlcy9hcGl2MS9wbGFjZXNw",
            "YjtwbGFjZXNwYqICBkdNUFNWMaoCFUdvb2dsZS5NYXBzLlBsYWNlcy5WMcoC",
            "FUdvb2dsZVxNYXBzXFBsYWNlc1xWMWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.ResourceReflection.Descriptor, global::Google.Geo.Type.ViewportReflection.Descriptor, global::Google.Maps.Places.V1.AddressDescriptorReflection.Descriptor, global::Google.Maps.Places.V1.ContentBlockReflection.Descriptor, global::Google.Maps.Places.V1.EvChargingReflection.Descriptor, global::Google.Maps.Places.V1.FuelOptionsReflection.Descriptor, global::Google.Maps.Places.V1.PhotoReflection.Descriptor, global::Google.Maps.Places.V1.PriceRangeReflection.Descriptor, global::Google.Maps.Places.V1.ReviewReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Type.DateReflection.Descriptor, global::Google.Type.DatetimeReflection.Descriptor, global::Google.Type.LatlngReflection.Descriptor, global::Google.Type.LocalizedTextReflection.Descriptor, global::Google.Type.PostalAddressReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Google.Maps.Places.V1.PriceLevel), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Maps.Places.V1.Place), global::Google.Maps.Places.V1.Place.Parser, new[]{ "Name", "Id", "DisplayName", "Types_", "PrimaryType", "PrimaryTypeDisplayName", "NationalPhoneNumber", "InternationalPhoneNumber", "FormattedAddress", "ShortFormattedAddress", "PostalAddress", "AddressComponents", "PlusCode", "Location", "Viewport", "Rating", "GoogleMapsUri", "WebsiteUri", "Reviews", "RegularOpeningHours", "UtcOffsetMinutes", "TimeZone", "Photos", "AdrFormatAddress", "BusinessStatus", "PriceLevel", "Attributions", "UserRatingCount", "IconMaskBaseUri", "IconBackgroundColor", "Takeout", "Delivery", "DineIn", "CurbsidePickup", "Reservable", "ServesBreakfast", "ServesLunch", "ServesDinner", "ServesBeer", "ServesWine", "ServesBrunch", "ServesVegetarianFood", "CurrentOpeningHours", "CurrentSecondaryOpeningHours", "RegularSecondaryOpeningHours", "EditorialSummary", "OutdoorSeating", "LiveMusic", "MenuForChildren", "ServesCocktails", "ServesDessert", "ServesCoffee", "GoodForChildren", "AllowsDogs", "Restroom", "GoodForGroups", "GoodForWatchingSports", "PaymentOptions", "ParkingOptions", "SubDestinations", "AccessibilityOptions", "FuelOptions", "EvChargeOptions", "GenerativeSummary", "ContainingPlaces", "PureServiceAreaBusiness", "AddressDescriptor", "PriceRange", "ReviewSummary", "EvChargeAmenitySummary", "NeighborhoodSummary" }, new[]{ "UtcOffsetMinutes", "UserRatingCount", "Takeout", "Delivery", "DineIn", "CurbsidePickup", "Reservable", "ServesBreakfast", "ServesLunch", "ServesDinner", "ServesBeer", "ServesWine", "ServesBrunch", "ServesVegetarianFood", "OutdoorSeating", "LiveMusic", "MenuForChildren", "ServesCocktails", "ServesDessert", "ServesCoffee", "GoodForChildren", "AllowsDogs", "Restroom", "GoodForGroups", "GoodForWatchingSports", "AccessibilityOptions", "PureServiceAreaBusiness" }, new[]{ typeof(global::Google.Maps.Places.V1.Place.Types.BusinessStatus) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Maps.Places.V1.Place.Types.AddressComponent), global::Google.Maps.Places.V1.Place.Types.AddressComponent.Parser, new[]{ "LongText", "ShortText", "Types_", "LanguageCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Maps.Places.V1.Place.Types.PlusCode), global::Google.Maps.Places.V1.Place.Types.PlusCode.Parser, new[]{ "GlobalCode", "CompoundCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Maps.Places.V1.Place.Types.OpeningHours), global::Google.Maps.Places.V1.Place.Types.OpeningHours.Parser, new[]{ "OpenNow", "Periods", "WeekdayDescriptions", "SecondaryHoursType", "SpecialDays", "NextOpenTime", "NextCloseTime" }, new[]{ "OpenNow" }, new[]{ typeof(global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.SecondaryHoursType) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.Period), global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.Period.Parser, new[]{ "Open", "Close" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.Period.Types.Point), global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.Period.Types.Point.Parser, new[]{ "Day", "Hour", "Minute", "Date", "Truncated" }, new[]{ "Day", "Hour", "Minute" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.SpecialDay), global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.SpecialDay.Parser, new[]{ "Date" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Maps.Places.V1.Place.Types.Attribution), global::Google.Maps.Places.V1.Place.Types.Attribution.Parser, new[]{ "Provider", "ProviderUri" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Maps.Places.V1.Place.Types.PaymentOptions), global::Google.Maps.Places.V1.Place.Types.PaymentOptions.Parser, new[]{ "AcceptsCreditCards", "AcceptsDebitCards", "AcceptsCashOnly", "AcceptsNfc" }, new[]{ "AcceptsCreditCards", "AcceptsDebitCards", "AcceptsCashOnly", "AcceptsNfc" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Maps.Places.V1.Place.Types.ParkingOptions), global::Google.Maps.Places.V1.Place.Types.ParkingOptions.Parser, new[]{ "FreeParkingLot", "PaidParkingLot", "FreeStreetParking", "PaidStreetParking", "ValetParking", "FreeGarageParking", "PaidGarageParking" }, new[]{ "FreeParkingLot", "PaidParkingLot", "FreeStreetParking", "PaidStreetParking", "ValetParking", "FreeGarageParking", "PaidGarageParking" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Maps.Places.V1.Place.Types.SubDestination), global::Google.Maps.Places.V1.Place.Types.SubDestination.Parser, new[]{ "Name", "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Maps.Places.V1.Place.Types.AccessibilityOptions), global::Google.Maps.Places.V1.Place.Types.AccessibilityOptions.Parser, new[]{ "WheelchairAccessibleParking", "WheelchairAccessibleEntrance", "WheelchairAccessibleRestroom", "WheelchairAccessibleSeating" }, new[]{ "WheelchairAccessibleParking", "WheelchairAccessibleEntrance", "WheelchairAccessibleRestroom", "WheelchairAccessibleSeating" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Maps.Places.V1.Place.Types.GenerativeSummary), global::Google.Maps.Places.V1.Place.Types.GenerativeSummary.Parser, new[]{ "Overview", "OverviewFlagContentUri", "DisclosureText" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Maps.Places.V1.Place.Types.ContainingPlace), global::Google.Maps.Places.V1.Place.Types.ContainingPlace.Parser, new[]{ "Name", "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Maps.Places.V1.Place.Types.ReviewSummary), global::Google.Maps.Places.V1.Place.Types.ReviewSummary.Parser, new[]{ "Text", "FlagContentUri", "DisclosureText" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Maps.Places.V1.Place.Types.EvChargeAmenitySummary), global::Google.Maps.Places.V1.Place.Types.EvChargeAmenitySummary.Parser, new[]{ "Overview", "Coffee", "Restaurant", "Store", "FlagContentUri", "DisclosureText" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Maps.Places.V1.Place.Types.NeighborhoodSummary), global::Google.Maps.Places.V1.Place.Types.NeighborhoodSummary.Parser, new[]{ "Overview", "Description", "FlagContentUri", "DisclosureText" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Price level of the place.
  /// </summary>
  public enum PriceLevel {
    /// <summary>
    /// Place price level is unspecified or unknown.
    /// </summary>
    [pbr::OriginalName("PRICE_LEVEL_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Place provides free services.
    /// </summary>
    [pbr::OriginalName("PRICE_LEVEL_FREE")] Free = 1,
    /// <summary>
    /// Place provides inexpensive services.
    /// </summary>
    [pbr::OriginalName("PRICE_LEVEL_INEXPENSIVE")] Inexpensive = 2,
    /// <summary>
    /// Place provides moderately priced services.
    /// </summary>
    [pbr::OriginalName("PRICE_LEVEL_MODERATE")] Moderate = 3,
    /// <summary>
    /// Place provides expensive services.
    /// </summary>
    [pbr::OriginalName("PRICE_LEVEL_EXPENSIVE")] Expensive = 4,
    /// <summary>
    /// Place provides very expensive services.
    /// </summary>
    [pbr::OriginalName("PRICE_LEVEL_VERY_EXPENSIVE")] VeryExpensive = 5,
  }

  #endregion

  #region Messages
  /// <summary>
  /// All the information representing a Place.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Place : pb::IMessage<Place>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Place> _parser = new pb::MessageParser<Place>(() => new Place());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Place> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Maps.Places.V1.PlaceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Place() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Place(Place other) : this() {
      _hasBits0 = other._hasBits0;
      name_ = other.name_;
      id_ = other.id_;
      displayName_ = other.displayName_ != null ? other.displayName_.Clone() : null;
      types_ = other.types_.Clone();
      primaryType_ = other.primaryType_;
      primaryTypeDisplayName_ = other.primaryTypeDisplayName_ != null ? other.primaryTypeDisplayName_.Clone() : null;
      nationalPhoneNumber_ = other.nationalPhoneNumber_;
      internationalPhoneNumber_ = other.internationalPhoneNumber_;
      formattedAddress_ = other.formattedAddress_;
      shortFormattedAddress_ = other.shortFormattedAddress_;
      postalAddress_ = other.postalAddress_ != null ? other.postalAddress_.Clone() : null;
      addressComponents_ = other.addressComponents_.Clone();
      plusCode_ = other.plusCode_ != null ? other.plusCode_.Clone() : null;
      location_ = other.location_ != null ? other.location_.Clone() : null;
      viewport_ = other.viewport_ != null ? other.viewport_.Clone() : null;
      rating_ = other.rating_;
      googleMapsUri_ = other.googleMapsUri_;
      websiteUri_ = other.websiteUri_;
      reviews_ = other.reviews_.Clone();
      regularOpeningHours_ = other.regularOpeningHours_ != null ? other.regularOpeningHours_.Clone() : null;
      utcOffsetMinutes_ = other.utcOffsetMinutes_;
      timeZone_ = other.timeZone_ != null ? other.timeZone_.Clone() : null;
      photos_ = other.photos_.Clone();
      adrFormatAddress_ = other.adrFormatAddress_;
      businessStatus_ = other.businessStatus_;
      priceLevel_ = other.priceLevel_;
      attributions_ = other.attributions_.Clone();
      userRatingCount_ = other.userRatingCount_;
      iconMaskBaseUri_ = other.iconMaskBaseUri_;
      iconBackgroundColor_ = other.iconBackgroundColor_;
      takeout_ = other.takeout_;
      delivery_ = other.delivery_;
      dineIn_ = other.dineIn_;
      curbsidePickup_ = other.curbsidePickup_;
      reservable_ = other.reservable_;
      servesBreakfast_ = other.servesBreakfast_;
      servesLunch_ = other.servesLunch_;
      servesDinner_ = other.servesDinner_;
      servesBeer_ = other.servesBeer_;
      servesWine_ = other.servesWine_;
      servesBrunch_ = other.servesBrunch_;
      servesVegetarianFood_ = other.servesVegetarianFood_;
      currentOpeningHours_ = other.currentOpeningHours_ != null ? other.currentOpeningHours_.Clone() : null;
      currentSecondaryOpeningHours_ = other.currentSecondaryOpeningHours_.Clone();
      regularSecondaryOpeningHours_ = other.regularSecondaryOpeningHours_.Clone();
      editorialSummary_ = other.editorialSummary_ != null ? other.editorialSummary_.Clone() : null;
      outdoorSeating_ = other.outdoorSeating_;
      liveMusic_ = other.liveMusic_;
      menuForChildren_ = other.menuForChildren_;
      servesCocktails_ = other.servesCocktails_;
      servesDessert_ = other.servesDessert_;
      servesCoffee_ = other.servesCoffee_;
      goodForChildren_ = other.goodForChildren_;
      allowsDogs_ = other.allowsDogs_;
      restroom_ = other.restroom_;
      goodForGroups_ = other.goodForGroups_;
      goodForWatchingSports_ = other.goodForWatchingSports_;
      paymentOptions_ = other.paymentOptions_ != null ? other.paymentOptions_.Clone() : null;
      parkingOptions_ = other.parkingOptions_ != null ? other.parkingOptions_.Clone() : null;
      subDestinations_ = other.subDestinations_.Clone();
      accessibilityOptions_ = other.accessibilityOptions_ != null ? other.accessibilityOptions_.Clone() : null;
      fuelOptions_ = other.fuelOptions_ != null ? other.fuelOptions_.Clone() : null;
      evChargeOptions_ = other.evChargeOptions_ != null ? other.evChargeOptions_.Clone() : null;
      generativeSummary_ = other.generativeSummary_ != null ? other.generativeSummary_.Clone() : null;
      containingPlaces_ = other.containingPlaces_.Clone();
      pureServiceAreaBusiness_ = other.pureServiceAreaBusiness_;
      addressDescriptor_ = other.addressDescriptor_ != null ? other.addressDescriptor_.Clone() : null;
      priceRange_ = other.priceRange_ != null ? other.priceRange_.Clone() : null;
      reviewSummary_ = other.reviewSummary_ != null ? other.reviewSummary_.Clone() : null;
      evChargeAmenitySummary_ = other.evChargeAmenitySummary_ != null ? other.evChargeAmenitySummary_.Clone() : null;
      neighborhoodSummary_ = other.neighborhoodSummary_ != null ? other.neighborhoodSummary_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Place Clone() {
      return new Place(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// This Place's resource name, in `places/{place_id}` format.  Can be used to
    /// look up the Place.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private string id_ = "";
    /// <summary>
    /// The unique identifier of a place.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 31;
    private global::Google.Type.LocalizedText displayName_;
    /// <summary>
    /// The localized name of the place, suitable as a short human-readable
    /// description. For example, "Google Sydney", "Starbucks", "Pyrmont", etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Type.LocalizedText DisplayName {
      get { return displayName_; }
      set {
        displayName_ = value;
      }
    }

    /// <summary>Field number for the "types" field.</summary>
    public const int Types_FieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_types_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> types_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// A set of type tags for this result. For example, "political" and
    /// "locality". For the complete list of possible values, see Table A and Table
    /// B at
    /// https://developers.google.com/maps/documentation/places/web-service/place-types
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Types_ {
      get { return types_; }
    }

    /// <summary>Field number for the "primary_type" field.</summary>
    public const int PrimaryTypeFieldNumber = 50;
    private string primaryType_ = "";
    /// <summary>
    /// The primary type of the given result. This type must be one of the Places
    /// API supported types. For example, "restaurant", "cafe", "airport", etc.  A
    /// place can only have a single primary type.  For the complete list of
    /// possible values, see Table A and Table B at
    /// https://developers.google.com/maps/documentation/places/web-service/place-types.
    /// The primary type may be missing if the place's primary type is not a
    /// supported type. When a primary type is present, it is always one of the
    /// types in the `types` field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PrimaryType {
      get { return primaryType_; }
      set {
        primaryType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "primary_type_display_name" field.</summary>
    public const int PrimaryTypeDisplayNameFieldNumber = 32;
    private global::Google.Type.LocalizedText primaryTypeDisplayName_;
    /// <summary>
    /// The display name of the primary type, localized to the request language if
    /// applicable. For the complete list of possible values, see Table A and Table
    /// B at
    /// https://developers.google.com/maps/documentation/places/web-service/place-types.
    /// The primary type may be missing if the place's primary type is not a
    /// supported type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Type.LocalizedText PrimaryTypeDisplayName {
      get { return primaryTypeDisplayName_; }
      set {
        primaryTypeDisplayName_ = value;
      }
    }

    /// <summary>Field number for the "national_phone_number" field.</summary>
    public const int NationalPhoneNumberFieldNumber = 7;
    private string nationalPhoneNumber_ = "";
    /// <summary>
    /// A human-readable phone number for the place, in national format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NationalPhoneNumber {
      get { return nationalPhoneNumber_; }
      set {
        nationalPhoneNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "international_phone_number" field.</summary>
    public const int InternationalPhoneNumberFieldNumber = 8;
    private string internationalPhoneNumber_ = "";
    /// <summary>
    /// A human-readable phone number for the place, in international format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InternationalPhoneNumber {
      get { return internationalPhoneNumber_; }
      set {
        internationalPhoneNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "formatted_address" field.</summary>
    public const int FormattedAddressFieldNumber = 9;
    private string formattedAddress_ = "";
    /// <summary>
    /// A full, human-readable address for this place.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FormattedAddress {
      get { return formattedAddress_; }
      set {
        formattedAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "short_formatted_address" field.</summary>
    public const int ShortFormattedAddressFieldNumber = 51;
    private string shortFormattedAddress_ = "";
    /// <summary>
    /// A short, human-readable address for this place.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ShortFormattedAddress {
      get { return shortFormattedAddress_; }
      set {
        shortFormattedAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "postal_address" field.</summary>
    public const int PostalAddressFieldNumber = 90;
    private global::Google.Type.PostalAddress postalAddress_;
    /// <summary>
    /// The address in postal address format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Type.PostalAddress PostalAddress {
      get { return postalAddress_; }
      set {
        postalAddress_ = value;
      }
    }

    /// <summary>Field number for the "address_components" field.</summary>
    public const int AddressComponentsFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Google.Maps.Places.V1.Place.Types.AddressComponent> _repeated_addressComponents_codec
        = pb::FieldCodec.ForMessage(82, global::Google.Maps.Places.V1.Place.Types.AddressComponent.Parser);
    private readonly pbc::RepeatedField<global::Google.Maps.Places.V1.Place.Types.AddressComponent> addressComponents_ = new pbc::RepeatedField<global::Google.Maps.Places.V1.Place.Types.AddressComponent>();
    /// <summary>
    /// Repeated components for each locality level.
    /// Note the following facts about the address_components[] array:
    /// - The array of address components may contain more components than the
    /// formatted_address.
    /// - The array does not necessarily include all the political entities that
    /// contain an address, apart from those included in the formatted_address. To
    /// retrieve all the political entities that contain a specific address, you
    /// should use reverse geocoding, passing the latitude/longitude of the address
    /// as a parameter to the request.
    /// - The format of the response is not guaranteed to remain the same between
    /// requests. In particular, the number of address_components varies based on
    /// the address requested and can change over time for the same address. A
    /// component can change position in the array. The type of the component can
    /// change. A particular component may be missing in a later response.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Maps.Places.V1.Place.Types.AddressComponent> AddressComponents {
      get { return addressComponents_; }
    }

    /// <summary>Field number for the "plus_code" field.</summary>
    public const int PlusCodeFieldNumber = 11;
    private global::Google.Maps.Places.V1.Place.Types.PlusCode plusCode_;
    /// <summary>
    /// Plus code of the place location lat/long.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Maps.Places.V1.Place.Types.PlusCode PlusCode {
      get { return plusCode_; }
      set {
        plusCode_ = value;
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 12;
    private global::Google.Type.LatLng location_;
    /// <summary>
    /// The position of this place.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Type.LatLng Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }

    /// <summary>Field number for the "viewport" field.</summary>
    public const int ViewportFieldNumber = 13;
    private global::Google.Geo.Type.Viewport viewport_;
    /// <summary>
    /// A viewport suitable for displaying the place on an average-sized map. This
    /// viewport should not be used as the physical boundary or the service area of
    /// the business.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Geo.Type.Viewport Viewport {
      get { return viewport_; }
      set {
        viewport_ = value;
      }
    }

    /// <summary>Field number for the "rating" field.</summary>
    public const int RatingFieldNumber = 14;
    private double rating_;
    /// <summary>
    /// A rating between 1.0 and 5.0, based on user reviews of this place.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Rating {
      get { return rating_; }
      set {
        rating_ = value;
      }
    }

    /// <summary>Field number for the "google_maps_uri" field.</summary>
    public const int GoogleMapsUriFieldNumber = 15;
    private string googleMapsUri_ = "";
    /// <summary>
    /// A URL providing more information about this place.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GoogleMapsUri {
      get { return googleMapsUri_; }
      set {
        googleMapsUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "website_uri" field.</summary>
    public const int WebsiteUriFieldNumber = 16;
    private string websiteUri_ = "";
    /// <summary>
    /// The authoritative website for this place, e.g. a business' homepage.
    /// Note that for places that are part of a chain (e.g. an IKEA store), this
    /// will usually be the website for the individual store, not the overall
    /// chain.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string WebsiteUri {
      get { return websiteUri_; }
      set {
        websiteUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reviews" field.</summary>
    public const int ReviewsFieldNumber = 53;
    private static readonly pb::FieldCodec<global::Google.Maps.Places.V1.Review> _repeated_reviews_codec
        = pb::FieldCodec.ForMessage(426, global::Google.Maps.Places.V1.Review.Parser);
    private readonly pbc::RepeatedField<global::Google.Maps.Places.V1.Review> reviews_ = new pbc::RepeatedField<global::Google.Maps.Places.V1.Review>();
    /// <summary>
    /// List of reviews about this place, sorted by relevance. A maximum of 5
    /// reviews can be returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Maps.Places.V1.Review> Reviews {
      get { return reviews_; }
    }

    /// <summary>Field number for the "regular_opening_hours" field.</summary>
    public const int RegularOpeningHoursFieldNumber = 21;
    private global::Google.Maps.Places.V1.Place.Types.OpeningHours regularOpeningHours_;
    /// <summary>
    /// The regular hours of operation. Note that if a place is always open (24
    /// hours), the `close` field will not be set. Clients can rely on always open
    /// (24 hours) being represented as an
    /// [`open`](https://developers.google.com/maps/documentation/places/web-service/reference/rest/v1/places#Period)
    /// period containing
    /// [`day`](https://developers.google.com/maps/documentation/places/web-service/reference/rest/v1/places#Point)
    /// with value `0`,
    /// [`hour`](https://developers.google.com/maps/documentation/places/web-service/reference/rest/v1/places#Point)
    /// with value `0`, and
    /// [`minute`](https://developers.google.com/maps/documentation/places/web-service/reference/rest/v1/places#Point)
    /// with value `0`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Maps.Places.V1.Place.Types.OpeningHours RegularOpeningHours {
      get { return regularOpeningHours_; }
      set {
        regularOpeningHours_ = value;
      }
    }

    /// <summary>Field number for the "utc_offset_minutes" field.</summary>
    public const int UtcOffsetMinutesFieldNumber = 22;
    private readonly static int UtcOffsetMinutesDefaultValue = 0;

    private int utcOffsetMinutes_;
    /// <summary>
    /// Number of minutes this place's timezone is currently offset from UTC.
    /// This is expressed in minutes to support timezones that are offset by
    /// fractions of an hour, e.g. X hours and 15 minutes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UtcOffsetMinutes {
      get { if ((_hasBits0 & 1) != 0) { return utcOffsetMinutes_; } else { return UtcOffsetMinutesDefaultValue; } }
      set {
        _hasBits0 |= 1;
        utcOffsetMinutes_ = value;
      }
    }
    /// <summary>Gets whether the "utc_offset_minutes" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUtcOffsetMinutes {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "utc_offset_minutes" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUtcOffsetMinutes() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "time_zone" field.</summary>
    public const int TimeZoneFieldNumber = 88;
    private global::Google.Type.TimeZone timeZone_;
    /// <summary>
    /// IANA Time Zone Database time zone. For example "America/New_York".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Type.TimeZone TimeZone {
      get { return timeZone_; }
      set {
        timeZone_ = value;
      }
    }

    /// <summary>Field number for the "photos" field.</summary>
    public const int PhotosFieldNumber = 54;
    private static readonly pb::FieldCodec<global::Google.Maps.Places.V1.Photo> _repeated_photos_codec
        = pb::FieldCodec.ForMessage(434, global::Google.Maps.Places.V1.Photo.Parser);
    private readonly pbc::RepeatedField<global::Google.Maps.Places.V1.Photo> photos_ = new pbc::RepeatedField<global::Google.Maps.Places.V1.Photo>();
    /// <summary>
    /// Information (including references) about photos of this place. A maximum of
    /// 10 photos can be returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Maps.Places.V1.Photo> Photos {
      get { return photos_; }
    }

    /// <summary>Field number for the "adr_format_address" field.</summary>
    public const int AdrFormatAddressFieldNumber = 24;
    private string adrFormatAddress_ = "";
    /// <summary>
    /// The place's address in adr microformat: http://microformats.org/wiki/adr.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AdrFormatAddress {
      get { return adrFormatAddress_; }
      set {
        adrFormatAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "business_status" field.</summary>
    public const int BusinessStatusFieldNumber = 25;
    private global::Google.Maps.Places.V1.Place.Types.BusinessStatus businessStatus_ = global::Google.Maps.Places.V1.Place.Types.BusinessStatus.Unspecified;
    /// <summary>
    /// The business status for the place.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Maps.Places.V1.Place.Types.BusinessStatus BusinessStatus {
      get { return businessStatus_; }
      set {
        businessStatus_ = value;
      }
    }

    /// <summary>Field number for the "price_level" field.</summary>
    public const int PriceLevelFieldNumber = 26;
    private global::Google.Maps.Places.V1.PriceLevel priceLevel_ = global::Google.Maps.Places.V1.PriceLevel.Unspecified;
    /// <summary>
    /// Price level of the place.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Maps.Places.V1.PriceLevel PriceLevel {
      get { return priceLevel_; }
      set {
        priceLevel_ = value;
      }
    }

    /// <summary>Field number for the "attributions" field.</summary>
    public const int AttributionsFieldNumber = 27;
    private static readonly pb::FieldCodec<global::Google.Maps.Places.V1.Place.Types.Attribution> _repeated_attributions_codec
        = pb::FieldCodec.ForMessage(218, global::Google.Maps.Places.V1.Place.Types.Attribution.Parser);
    private readonly pbc::RepeatedField<global::Google.Maps.Places.V1.Place.Types.Attribution> attributions_ = new pbc::RepeatedField<global::Google.Maps.Places.V1.Place.Types.Attribution>();
    /// <summary>
    /// A set of data provider that must be shown with this result.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Maps.Places.V1.Place.Types.Attribution> Attributions {
      get { return attributions_; }
    }

    /// <summary>Field number for the "user_rating_count" field.</summary>
    public const int UserRatingCountFieldNumber = 28;
    private readonly static int UserRatingCountDefaultValue = 0;

    private int userRatingCount_;
    /// <summary>
    /// The total number of reviews (with or without text) for this place.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UserRatingCount {
      get { if ((_hasBits0 & 2) != 0) { return userRatingCount_; } else { return UserRatingCountDefaultValue; } }
      set {
        _hasBits0 |= 2;
        userRatingCount_ = value;
      }
    }
    /// <summary>Gets whether the "user_rating_count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUserRatingCount {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "user_rating_count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUserRatingCount() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "icon_mask_base_uri" field.</summary>
    public const int IconMaskBaseUriFieldNumber = 29;
    private string iconMaskBaseUri_ = "";
    /// <summary>
    /// A truncated URL to an icon mask. User can access different icon type by
    /// appending type suffix to the end (eg, ".svg" or ".png").
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string IconMaskBaseUri {
      get { return iconMaskBaseUri_; }
      set {
        iconMaskBaseUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "icon_background_color" field.</summary>
    public const int IconBackgroundColorFieldNumber = 30;
    private string iconBackgroundColor_ = "";
    /// <summary>
    /// Background color for icon_mask in hex format, e.g. #909CE1.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string IconBackgroundColor {
      get { return iconBackgroundColor_; }
      set {
        iconBackgroundColor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "takeout" field.</summary>
    public const int TakeoutFieldNumber = 33;
    private readonly static bool TakeoutDefaultValue = false;

    private bool takeout_;
    /// <summary>
    /// Specifies if the business supports takeout.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Takeout {
      get { if ((_hasBits0 & 4) != 0) { return takeout_; } else { return TakeoutDefaultValue; } }
      set {
        _hasBits0 |= 4;
        takeout_ = value;
      }
    }
    /// <summary>Gets whether the "takeout" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTakeout {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "takeout" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTakeout() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "delivery" field.</summary>
    public const int DeliveryFieldNumber = 34;
    private readonly static bool DeliveryDefaultValue = false;

    private bool delivery_;
    /// <summary>
    /// Specifies if the business supports delivery.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Delivery {
      get { if ((_hasBits0 & 8) != 0) { return delivery_; } else { return DeliveryDefaultValue; } }
      set {
        _hasBits0 |= 8;
        delivery_ = value;
      }
    }
    /// <summary>Gets whether the "delivery" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDelivery {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "delivery" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDelivery() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "dine_in" field.</summary>
    public const int DineInFieldNumber = 35;
    private readonly static bool DineInDefaultValue = false;

    private bool dineIn_;
    /// <summary>
    /// Specifies if the business supports indoor or outdoor seating options.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DineIn {
      get { if ((_hasBits0 & 16) != 0) { return dineIn_; } else { return DineInDefaultValue; } }
      set {
        _hasBits0 |= 16;
        dineIn_ = value;
      }
    }
    /// <summary>Gets whether the "dine_in" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDineIn {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "dine_in" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDineIn() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "curbside_pickup" field.</summary>
    public const int CurbsidePickupFieldNumber = 36;
    private readonly static bool CurbsidePickupDefaultValue = false;

    private bool curbsidePickup_;
    /// <summary>
    /// Specifies if the business supports curbside pickup.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CurbsidePickup {
      get { if ((_hasBits0 & 32) != 0) { return curbsidePickup_; } else { return CurbsidePickupDefaultValue; } }
      set {
        _hasBits0 |= 32;
        curbsidePickup_ = value;
      }
    }
    /// <summary>Gets whether the "curbside_pickup" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCurbsidePickup {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "curbside_pickup" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCurbsidePickup() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "reservable" field.</summary>
    public const int ReservableFieldNumber = 38;
    private readonly static bool ReservableDefaultValue = false;

    private bool reservable_;
    /// <summary>
    /// Specifies if the place supports reservations.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Reservable {
      get { if ((_hasBits0 & 64) != 0) { return reservable_; } else { return ReservableDefaultValue; } }
      set {
        _hasBits0 |= 64;
        reservable_ = value;
      }
    }
    /// <summary>Gets whether the "reservable" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReservable {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "reservable" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReservable() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "serves_breakfast" field.</summary>
    public const int ServesBreakfastFieldNumber = 39;
    private readonly static bool ServesBreakfastDefaultValue = false;

    private bool servesBreakfast_;
    /// <summary>
    /// Specifies if the place serves breakfast.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ServesBreakfast {
      get { if ((_hasBits0 & 128) != 0) { return servesBreakfast_; } else { return ServesBreakfastDefaultValue; } }
      set {
        _hasBits0 |= 128;
        servesBreakfast_ = value;
      }
    }
    /// <summary>Gets whether the "serves_breakfast" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasServesBreakfast {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "serves_breakfast" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearServesBreakfast() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "serves_lunch" field.</summary>
    public const int ServesLunchFieldNumber = 40;
    private readonly static bool ServesLunchDefaultValue = false;

    private bool servesLunch_;
    /// <summary>
    /// Specifies if the place serves lunch.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ServesLunch {
      get { if ((_hasBits0 & 256) != 0) { return servesLunch_; } else { return ServesLunchDefaultValue; } }
      set {
        _hasBits0 |= 256;
        servesLunch_ = value;
      }
    }
    /// <summary>Gets whether the "serves_lunch" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasServesLunch {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "serves_lunch" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearServesLunch() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "serves_dinner" field.</summary>
    public const int ServesDinnerFieldNumber = 41;
    private readonly static bool ServesDinnerDefaultValue = false;

    private bool servesDinner_;
    /// <summary>
    /// Specifies if the place serves dinner.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ServesDinner {
      get { if ((_hasBits0 & 512) != 0) { return servesDinner_; } else { return ServesDinnerDefaultValue; } }
      set {
        _hasBits0 |= 512;
        servesDinner_ = value;
      }
    }
    /// <summary>Gets whether the "serves_dinner" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasServesDinner {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "serves_dinner" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearServesDinner() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "serves_beer" field.</summary>
    public const int ServesBeerFieldNumber = 42;
    private readonly static bool ServesBeerDefaultValue = false;

    private bool servesBeer_;
    /// <summary>
    /// Specifies if the place serves beer.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ServesBeer {
      get { if ((_hasBits0 & 1024) != 0) { return servesBeer_; } else { return ServesBeerDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        servesBeer_ = value;
      }
    }
    /// <summary>Gets whether the "serves_beer" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasServesBeer {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "serves_beer" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearServesBeer() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "serves_wine" field.</summary>
    public const int ServesWineFieldNumber = 43;
    private readonly static bool ServesWineDefaultValue = false;

    private bool servesWine_;
    /// <summary>
    /// Specifies if the place serves wine.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ServesWine {
      get { if ((_hasBits0 & 2048) != 0) { return servesWine_; } else { return ServesWineDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        servesWine_ = value;
      }
    }
    /// <summary>Gets whether the "serves_wine" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasServesWine {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "serves_wine" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearServesWine() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "serves_brunch" field.</summary>
    public const int ServesBrunchFieldNumber = 44;
    private readonly static bool ServesBrunchDefaultValue = false;

    private bool servesBrunch_;
    /// <summary>
    /// Specifies if the place serves brunch.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ServesBrunch {
      get { if ((_hasBits0 & 4096) != 0) { return servesBrunch_; } else { return ServesBrunchDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        servesBrunch_ = value;
      }
    }
    /// <summary>Gets whether the "serves_brunch" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasServesBrunch {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "serves_brunch" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearServesBrunch() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "serves_vegetarian_food" field.</summary>
    public const int ServesVegetarianFoodFieldNumber = 45;
    private readonly static bool ServesVegetarianFoodDefaultValue = false;

    private bool servesVegetarianFood_;
    /// <summary>
    /// Specifies if the place serves vegetarian food.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ServesVegetarianFood {
      get { if ((_hasBits0 & 8192) != 0) { return servesVegetarianFood_; } else { return ServesVegetarianFoodDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        servesVegetarianFood_ = value;
      }
    }
    /// <summary>Gets whether the "serves_vegetarian_food" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasServesVegetarianFood {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "serves_vegetarian_food" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearServesVegetarianFood() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "current_opening_hours" field.</summary>
    public const int CurrentOpeningHoursFieldNumber = 46;
    private global::Google.Maps.Places.V1.Place.Types.OpeningHours currentOpeningHours_;
    /// <summary>
    /// The hours of operation for the next seven days (including today). The time
    /// period starts at midnight on the date of the request and ends at 11:59 pm
    /// six days later. This field includes the special_days subfield of all hours,
    /// set for dates that have exceptional hours.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Maps.Places.V1.Place.Types.OpeningHours CurrentOpeningHours {
      get { return currentOpeningHours_; }
      set {
        currentOpeningHours_ = value;
      }
    }

    /// <summary>Field number for the "current_secondary_opening_hours" field.</summary>
    public const int CurrentSecondaryOpeningHoursFieldNumber = 47;
    private static readonly pb::FieldCodec<global::Google.Maps.Places.V1.Place.Types.OpeningHours> _repeated_currentSecondaryOpeningHours_codec
        = pb::FieldCodec.ForMessage(378, global::Google.Maps.Places.V1.Place.Types.OpeningHours.Parser);
    private readonly pbc::RepeatedField<global::Google.Maps.Places.V1.Place.Types.OpeningHours> currentSecondaryOpeningHours_ = new pbc::RepeatedField<global::Google.Maps.Places.V1.Place.Types.OpeningHours>();
    /// <summary>
    /// Contains an array of entries for the next seven days including information
    /// about secondary hours of a business. Secondary hours are different from a
    /// business's main hours. For example, a restaurant can specify drive through
    /// hours or delivery hours as its secondary hours. This field populates the
    /// type subfield, which draws from a predefined list of opening hours types
    /// (such as DRIVE_THROUGH, PICKUP, or TAKEOUT) based on the types of the
    /// place. This field includes the special_days subfield of all hours, set for
    /// dates that have exceptional hours.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Maps.Places.V1.Place.Types.OpeningHours> CurrentSecondaryOpeningHours {
      get { return currentSecondaryOpeningHours_; }
    }

    /// <summary>Field number for the "regular_secondary_opening_hours" field.</summary>
    public const int RegularSecondaryOpeningHoursFieldNumber = 49;
    private static readonly pb::FieldCodec<global::Google.Maps.Places.V1.Place.Types.OpeningHours> _repeated_regularSecondaryOpeningHours_codec
        = pb::FieldCodec.ForMessage(394, global::Google.Maps.Places.V1.Place.Types.OpeningHours.Parser);
    private readonly pbc::RepeatedField<global::Google.Maps.Places.V1.Place.Types.OpeningHours> regularSecondaryOpeningHours_ = new pbc::RepeatedField<global::Google.Maps.Places.V1.Place.Types.OpeningHours>();
    /// <summary>
    /// Contains an array of entries for information about regular secondary hours
    /// of a business. Secondary hours are different from a business's main hours.
    /// For example, a restaurant can specify drive through hours or delivery hours
    /// as its secondary hours. This field populates the type subfield, which draws
    /// from a predefined list of opening hours types (such as DRIVE_THROUGH,
    /// PICKUP, or TAKEOUT) based on the types of the place.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Maps.Places.V1.Place.Types.OpeningHours> RegularSecondaryOpeningHours {
      get { return regularSecondaryOpeningHours_; }
    }

    /// <summary>Field number for the "editorial_summary" field.</summary>
    public const int EditorialSummaryFieldNumber = 52;
    private global::Google.Type.LocalizedText editorialSummary_;
    /// <summary>
    /// Contains a summary of the place. A summary is comprised of a textual
    /// overview, and also includes the language code for these if applicable.
    /// Summary text must be presented as-is and can not be modified or altered.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Type.LocalizedText EditorialSummary {
      get { return editorialSummary_; }
      set {
        editorialSummary_ = value;
      }
    }

    /// <summary>Field number for the "outdoor_seating" field.</summary>
    public const int OutdoorSeatingFieldNumber = 55;
    private readonly static bool OutdoorSeatingDefaultValue = false;

    private bool outdoorSeating_;
    /// <summary>
    /// Place provides outdoor seating.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool OutdoorSeating {
      get { if ((_hasBits0 & 16384) != 0) { return outdoorSeating_; } else { return OutdoorSeatingDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        outdoorSeating_ = value;
      }
    }
    /// <summary>Gets whether the "outdoor_seating" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOutdoorSeating {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "outdoor_seating" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOutdoorSeating() {
      _hasBits0 &= ~16384;
    }

    /// <summary>Field number for the "live_music" field.</summary>
    public const int LiveMusicFieldNumber = 56;
    private readonly static bool LiveMusicDefaultValue = false;

    private bool liveMusic_;
    /// <summary>
    /// Place provides live music.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool LiveMusic {
      get { if ((_hasBits0 & 32768) != 0) { return liveMusic_; } else { return LiveMusicDefaultValue; } }
      set {
        _hasBits0 |= 32768;
        liveMusic_ = value;
      }
    }
    /// <summary>Gets whether the "live_music" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLiveMusic {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "live_music" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLiveMusic() {
      _hasBits0 &= ~32768;
    }

    /// <summary>Field number for the "menu_for_children" field.</summary>
    public const int MenuForChildrenFieldNumber = 57;
    private readonly static bool MenuForChildrenDefaultValue = false;

    private bool menuForChildren_;
    /// <summary>
    /// Place has a children's menu.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool MenuForChildren {
      get { if ((_hasBits0 & 65536) != 0) { return menuForChildren_; } else { return MenuForChildrenDefaultValue; } }
      set {
        _hasBits0 |= 65536;
        menuForChildren_ = value;
      }
    }
    /// <summary>Gets whether the "menu_for_children" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMenuForChildren {
      get { return (_hasBits0 & 65536) != 0; }
    }
    /// <summary>Clears the value of the "menu_for_children" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMenuForChildren() {
      _hasBits0 &= ~65536;
    }

    /// <summary>Field number for the "serves_cocktails" field.</summary>
    public const int ServesCocktailsFieldNumber = 58;
    private readonly static bool ServesCocktailsDefaultValue = false;

    private bool servesCocktails_;
    /// <summary>
    /// Place serves cocktails.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ServesCocktails {
      get { if ((_hasBits0 & 131072) != 0) { return servesCocktails_; } else { return ServesCocktailsDefaultValue; } }
      set {
        _hasBits0 |= 131072;
        servesCocktails_ = value;
      }
    }
    /// <summary>Gets whether the "serves_cocktails" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasServesCocktails {
      get { return (_hasBits0 & 131072) != 0; }
    }
    /// <summary>Clears the value of the "serves_cocktails" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearServesCocktails() {
      _hasBits0 &= ~131072;
    }

    /// <summary>Field number for the "serves_dessert" field.</summary>
    public const int ServesDessertFieldNumber = 59;
    private readonly static bool ServesDessertDefaultValue = false;

    private bool servesDessert_;
    /// <summary>
    /// Place serves dessert.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ServesDessert {
      get { if ((_hasBits0 & 262144) != 0) { return servesDessert_; } else { return ServesDessertDefaultValue; } }
      set {
        _hasBits0 |= 262144;
        servesDessert_ = value;
      }
    }
    /// <summary>Gets whether the "serves_dessert" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasServesDessert {
      get { return (_hasBits0 & 262144) != 0; }
    }
    /// <summary>Clears the value of the "serves_dessert" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearServesDessert() {
      _hasBits0 &= ~262144;
    }

    /// <summary>Field number for the "serves_coffee" field.</summary>
    public const int ServesCoffeeFieldNumber = 60;
    private readonly static bool ServesCoffeeDefaultValue = false;

    private bool servesCoffee_;
    /// <summary>
    /// Place serves coffee.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ServesCoffee {
      get { if ((_hasBits0 & 524288) != 0) { return servesCoffee_; } else { return ServesCoffeeDefaultValue; } }
      set {
        _hasBits0 |= 524288;
        servesCoffee_ = value;
      }
    }
    /// <summary>Gets whether the "serves_coffee" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasServesCoffee {
      get { return (_hasBits0 & 524288) != 0; }
    }
    /// <summary>Clears the value of the "serves_coffee" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearServesCoffee() {
      _hasBits0 &= ~524288;
    }

    /// <summary>Field number for the "good_for_children" field.</summary>
    public const int GoodForChildrenFieldNumber = 62;
    private readonly static bool GoodForChildrenDefaultValue = false;

    private bool goodForChildren_;
    /// <summary>
    /// Place is good for children.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GoodForChildren {
      get { if ((_hasBits0 & 1048576) != 0) { return goodForChildren_; } else { return GoodForChildrenDefaultValue; } }
      set {
        _hasBits0 |= 1048576;
        goodForChildren_ = value;
      }
    }
    /// <summary>Gets whether the "good_for_children" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGoodForChildren {
      get { return (_hasBits0 & 1048576) != 0; }
    }
    /// <summary>Clears the value of the "good_for_children" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGoodForChildren() {
      _hasBits0 &= ~1048576;
    }

    /// <summary>Field number for the "allows_dogs" field.</summary>
    public const int AllowsDogsFieldNumber = 63;
    private readonly static bool AllowsDogsDefaultValue = false;

    private bool allowsDogs_;
    /// <summary>
    /// Place allows dogs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AllowsDogs {
      get { if ((_hasBits0 & 2097152) != 0) { return allowsDogs_; } else { return AllowsDogsDefaultValue; } }
      set {
        _hasBits0 |= 2097152;
        allowsDogs_ = value;
      }
    }
    /// <summary>Gets whether the "allows_dogs" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAllowsDogs {
      get { return (_hasBits0 & 2097152) != 0; }
    }
    /// <summary>Clears the value of the "allows_dogs" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAllowsDogs() {
      _hasBits0 &= ~2097152;
    }

    /// <summary>Field number for the "restroom" field.</summary>
    public const int RestroomFieldNumber = 64;
    private readonly static bool RestroomDefaultValue = false;

    private bool restroom_;
    /// <summary>
    /// Place has restroom.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Restroom {
      get { if ((_hasBits0 & 4194304) != 0) { return restroom_; } else { return RestroomDefaultValue; } }
      set {
        _hasBits0 |= 4194304;
        restroom_ = value;
      }
    }
    /// <summary>Gets whether the "restroom" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRestroom {
      get { return (_hasBits0 & 4194304) != 0; }
    }
    /// <summary>Clears the value of the "restroom" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRestroom() {
      _hasBits0 &= ~4194304;
    }

    /// <summary>Field number for the "good_for_groups" field.</summary>
    public const int GoodForGroupsFieldNumber = 65;
    private readonly static bool GoodForGroupsDefaultValue = false;

    private bool goodForGroups_;
    /// <summary>
    /// Place accommodates groups.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GoodForGroups {
      get { if ((_hasBits0 & 8388608) != 0) { return goodForGroups_; } else { return GoodForGroupsDefaultValue; } }
      set {
        _hasBits0 |= 8388608;
        goodForGroups_ = value;
      }
    }
    /// <summary>Gets whether the "good_for_groups" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGoodForGroups {
      get { return (_hasBits0 & 8388608) != 0; }
    }
    /// <summary>Clears the value of the "good_for_groups" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGoodForGroups() {
      _hasBits0 &= ~8388608;
    }

    /// <summary>Field number for the "good_for_watching_sports" field.</summary>
    public const int GoodForWatchingSportsFieldNumber = 66;
    private readonly static bool GoodForWatchingSportsDefaultValue = false;

    private bool goodForWatchingSports_;
    /// <summary>
    /// Place is suitable for watching sports.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GoodForWatchingSports {
      get { if ((_hasBits0 & 16777216) != 0) { return goodForWatchingSports_; } else { return GoodForWatchingSportsDefaultValue; } }
      set {
        _hasBits0 |= 16777216;
        goodForWatchingSports_ = value;
      }
    }
    /// <summary>Gets whether the "good_for_watching_sports" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGoodForWatchingSports {
      get { return (_hasBits0 & 16777216) != 0; }
    }
    /// <summary>Clears the value of the "good_for_watching_sports" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGoodForWatchingSports() {
      _hasBits0 &= ~16777216;
    }

    /// <summary>Field number for the "payment_options" field.</summary>
    public const int PaymentOptionsFieldNumber = 67;
    private global::Google.Maps.Places.V1.Place.Types.PaymentOptions paymentOptions_;
    /// <summary>
    /// Payment options the place accepts. If a payment option data is not
    /// available, the payment option field will be unset.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Maps.Places.V1.Place.Types.PaymentOptions PaymentOptions {
      get { return paymentOptions_; }
      set {
        paymentOptions_ = value;
      }
    }

    /// <summary>Field number for the "parking_options" field.</summary>
    public const int ParkingOptionsFieldNumber = 70;
    private global::Google.Maps.Places.V1.Place.Types.ParkingOptions parkingOptions_;
    /// <summary>
    /// Options of parking provided by the place.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Maps.Places.V1.Place.Types.ParkingOptions ParkingOptions {
      get { return parkingOptions_; }
      set {
        parkingOptions_ = value;
      }
    }

    /// <summary>Field number for the "sub_destinations" field.</summary>
    public const int SubDestinationsFieldNumber = 71;
    private static readonly pb::FieldCodec<global::Google.Maps.Places.V1.Place.Types.SubDestination> _repeated_subDestinations_codec
        = pb::FieldCodec.ForMessage(570, global::Google.Maps.Places.V1.Place.Types.SubDestination.Parser);
    private readonly pbc::RepeatedField<global::Google.Maps.Places.V1.Place.Types.SubDestination> subDestinations_ = new pbc::RepeatedField<global::Google.Maps.Places.V1.Place.Types.SubDestination>();
    /// <summary>
    /// A list of sub-destinations related to the place.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Maps.Places.V1.Place.Types.SubDestination> SubDestinations {
      get { return subDestinations_; }
    }

    /// <summary>Field number for the "accessibility_options" field.</summary>
    public const int AccessibilityOptionsFieldNumber = 72;
    private global::Google.Maps.Places.V1.Place.Types.AccessibilityOptions accessibilityOptions_;
    /// <summary>
    /// Information about the accessibility options a place offers.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Maps.Places.V1.Place.Types.AccessibilityOptions AccessibilityOptions {
      get { return accessibilityOptions_; }
      set {
        accessibilityOptions_ = value;
      }
    }

    /// <summary>Field number for the "fuel_options" field.</summary>
    public const int FuelOptionsFieldNumber = 78;
    private global::Google.Maps.Places.V1.FuelOptions fuelOptions_;
    /// <summary>
    /// The most recent information about fuel options in a gas station. This
    /// information is updated regularly.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Maps.Places.V1.FuelOptions FuelOptions {
      get { return fuelOptions_; }
      set {
        fuelOptions_ = value;
      }
    }

    /// <summary>Field number for the "ev_charge_options" field.</summary>
    public const int EvChargeOptionsFieldNumber = 79;
    private global::Google.Maps.Places.V1.EVChargeOptions evChargeOptions_;
    /// <summary>
    /// Information of ev charging options.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Maps.Places.V1.EVChargeOptions EvChargeOptions {
      get { return evChargeOptions_; }
      set {
        evChargeOptions_ = value;
      }
    }

    /// <summary>Field number for the "generative_summary" field.</summary>
    public const int GenerativeSummaryFieldNumber = 80;
    private global::Google.Maps.Places.V1.Place.Types.GenerativeSummary generativeSummary_;
    /// <summary>
    /// AI-generated summary of the place.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Maps.Places.V1.Place.Types.GenerativeSummary GenerativeSummary {
      get { return generativeSummary_; }
      set {
        generativeSummary_ = value;
      }
    }

    /// <summary>Field number for the "containing_places" field.</summary>
    public const int ContainingPlacesFieldNumber = 82;
    private static readonly pb::FieldCodec<global::Google.Maps.Places.V1.Place.Types.ContainingPlace> _repeated_containingPlaces_codec
        = pb::FieldCodec.ForMessage(658, global::Google.Maps.Places.V1.Place.Types.ContainingPlace.Parser);
    private readonly pbc::RepeatedField<global::Google.Maps.Places.V1.Place.Types.ContainingPlace> containingPlaces_ = new pbc::RepeatedField<global::Google.Maps.Places.V1.Place.Types.ContainingPlace>();
    /// <summary>
    /// List of places in which the current place is located.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Maps.Places.V1.Place.Types.ContainingPlace> ContainingPlaces {
      get { return containingPlaces_; }
    }

    /// <summary>Field number for the "pure_service_area_business" field.</summary>
    public const int PureServiceAreaBusinessFieldNumber = 83;
    private readonly static bool PureServiceAreaBusinessDefaultValue = false;

    private bool pureServiceAreaBusiness_;
    /// <summary>
    /// Indicates whether the place is a pure service area business. Pure service
    /// area business is a business that visits or delivers to customers directly
    /// but does not serve customers at their business address. For example,
    /// businesses like cleaning services or plumbers. Those businesses may not
    /// have a physical address or location on Google Maps.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PureServiceAreaBusiness {
      get { if ((_hasBits0 & 33554432) != 0) { return pureServiceAreaBusiness_; } else { return PureServiceAreaBusinessDefaultValue; } }
      set {
        _hasBits0 |= 33554432;
        pureServiceAreaBusiness_ = value;
      }
    }
    /// <summary>Gets whether the "pure_service_area_business" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPureServiceAreaBusiness {
      get { return (_hasBits0 & 33554432) != 0; }
    }
    /// <summary>Clears the value of the "pure_service_area_business" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPureServiceAreaBusiness() {
      _hasBits0 &= ~33554432;
    }

    /// <summary>Field number for the "address_descriptor" field.</summary>
    public const int AddressDescriptorFieldNumber = 84;
    private global::Google.Maps.Places.V1.AddressDescriptor addressDescriptor_;
    /// <summary>
    /// The address descriptor of the place. Address descriptors include additional
    /// information that help describe a location using landmarks and areas. See
    /// address descriptor regional coverage in
    /// https://developers.google.com/maps/documentation/geocoding/address-descriptors/coverage.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Maps.Places.V1.AddressDescriptor AddressDescriptor {
      get { return addressDescriptor_; }
      set {
        addressDescriptor_ = value;
      }
    }

    /// <summary>Field number for the "price_range" field.</summary>
    public const int PriceRangeFieldNumber = 86;
    private global::Google.Maps.Places.V1.PriceRange priceRange_;
    /// <summary>
    /// The price range associated with a Place.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Maps.Places.V1.PriceRange PriceRange {
      get { return priceRange_; }
      set {
        priceRange_ = value;
      }
    }

    /// <summary>Field number for the "review_summary" field.</summary>
    public const int ReviewSummaryFieldNumber = 87;
    private global::Google.Maps.Places.V1.Place.Types.ReviewSummary reviewSummary_;
    /// <summary>
    /// AI-generated summary of the place using user reviews.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Maps.Places.V1.Place.Types.ReviewSummary ReviewSummary {
      get { return reviewSummary_; }
      set {
        reviewSummary_ = value;
      }
    }

    /// <summary>Field number for the "ev_charge_amenity_summary" field.</summary>
    public const int EvChargeAmenitySummaryFieldNumber = 89;
    private global::Google.Maps.Places.V1.Place.Types.EvChargeAmenitySummary evChargeAmenitySummary_;
    /// <summary>
    /// The summary of amenities near the EV charging station.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Maps.Places.V1.Place.Types.EvChargeAmenitySummary EvChargeAmenitySummary {
      get { return evChargeAmenitySummary_; }
      set {
        evChargeAmenitySummary_ = value;
      }
    }

    /// <summary>Field number for the "neighborhood_summary" field.</summary>
    public const int NeighborhoodSummaryFieldNumber = 91;
    private global::Google.Maps.Places.V1.Place.Types.NeighborhoodSummary neighborhoodSummary_;
    /// <summary>
    /// A summary of points of interest near the place.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Maps.Places.V1.Place.Types.NeighborhoodSummary NeighborhoodSummary {
      get { return neighborhoodSummary_; }
      set {
        neighborhoodSummary_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Place);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Place other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Id != other.Id) return false;
      if (!object.Equals(DisplayName, other.DisplayName)) return false;
      if(!types_.Equals(other.types_)) return false;
      if (PrimaryType != other.PrimaryType) return false;
      if (!object.Equals(PrimaryTypeDisplayName, other.PrimaryTypeDisplayName)) return false;
      if (NationalPhoneNumber != other.NationalPhoneNumber) return false;
      if (InternationalPhoneNumber != other.InternationalPhoneNumber) return false;
      if (FormattedAddress != other.FormattedAddress) return false;
      if (ShortFormattedAddress != other.ShortFormattedAddress) return false;
      if (!object.Equals(PostalAddress, other.PostalAddress)) return false;
      if(!addressComponents_.Equals(other.addressComponents_)) return false;
      if (!object.Equals(PlusCode, other.PlusCode)) return false;
      if (!object.Equals(Location, other.Location)) return false;
      if (!object.Equals(Viewport, other.Viewport)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Rating, other.Rating)) return false;
      if (GoogleMapsUri != other.GoogleMapsUri) return false;
      if (WebsiteUri != other.WebsiteUri) return false;
      if(!reviews_.Equals(other.reviews_)) return false;
      if (!object.Equals(RegularOpeningHours, other.RegularOpeningHours)) return false;
      if (UtcOffsetMinutes != other.UtcOffsetMinutes) return false;
      if (!object.Equals(TimeZone, other.TimeZone)) return false;
      if(!photos_.Equals(other.photos_)) return false;
      if (AdrFormatAddress != other.AdrFormatAddress) return false;
      if (BusinessStatus != other.BusinessStatus) return false;
      if (PriceLevel != other.PriceLevel) return false;
      if(!attributions_.Equals(other.attributions_)) return false;
      if (UserRatingCount != other.UserRatingCount) return false;
      if (IconMaskBaseUri != other.IconMaskBaseUri) return false;
      if (IconBackgroundColor != other.IconBackgroundColor) return false;
      if (Takeout != other.Takeout) return false;
      if (Delivery != other.Delivery) return false;
      if (DineIn != other.DineIn) return false;
      if (CurbsidePickup != other.CurbsidePickup) return false;
      if (Reservable != other.Reservable) return false;
      if (ServesBreakfast != other.ServesBreakfast) return false;
      if (ServesLunch != other.ServesLunch) return false;
      if (ServesDinner != other.ServesDinner) return false;
      if (ServesBeer != other.ServesBeer) return false;
      if (ServesWine != other.ServesWine) return false;
      if (ServesBrunch != other.ServesBrunch) return false;
      if (ServesVegetarianFood != other.ServesVegetarianFood) return false;
      if (!object.Equals(CurrentOpeningHours, other.CurrentOpeningHours)) return false;
      if(!currentSecondaryOpeningHours_.Equals(other.currentSecondaryOpeningHours_)) return false;
      if(!regularSecondaryOpeningHours_.Equals(other.regularSecondaryOpeningHours_)) return false;
      if (!object.Equals(EditorialSummary, other.EditorialSummary)) return false;
      if (OutdoorSeating != other.OutdoorSeating) return false;
      if (LiveMusic != other.LiveMusic) return false;
      if (MenuForChildren != other.MenuForChildren) return false;
      if (ServesCocktails != other.ServesCocktails) return false;
      if (ServesDessert != other.ServesDessert) return false;
      if (ServesCoffee != other.ServesCoffee) return false;
      if (GoodForChildren != other.GoodForChildren) return false;
      if (AllowsDogs != other.AllowsDogs) return false;
      if (Restroom != other.Restroom) return false;
      if (GoodForGroups != other.GoodForGroups) return false;
      if (GoodForWatchingSports != other.GoodForWatchingSports) return false;
      if (!object.Equals(PaymentOptions, other.PaymentOptions)) return false;
      if (!object.Equals(ParkingOptions, other.ParkingOptions)) return false;
      if(!subDestinations_.Equals(other.subDestinations_)) return false;
      if (!object.Equals(AccessibilityOptions, other.AccessibilityOptions)) return false;
      if (!object.Equals(FuelOptions, other.FuelOptions)) return false;
      if (!object.Equals(EvChargeOptions, other.EvChargeOptions)) return false;
      if (!object.Equals(GenerativeSummary, other.GenerativeSummary)) return false;
      if(!containingPlaces_.Equals(other.containingPlaces_)) return false;
      if (PureServiceAreaBusiness != other.PureServiceAreaBusiness) return false;
      if (!object.Equals(AddressDescriptor, other.AddressDescriptor)) return false;
      if (!object.Equals(PriceRange, other.PriceRange)) return false;
      if (!object.Equals(ReviewSummary, other.ReviewSummary)) return false;
      if (!object.Equals(EvChargeAmenitySummary, other.EvChargeAmenitySummary)) return false;
      if (!object.Equals(NeighborhoodSummary, other.NeighborhoodSummary)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (displayName_ != null) hash ^= DisplayName.GetHashCode();
      hash ^= types_.GetHashCode();
      if (PrimaryType.Length != 0) hash ^= PrimaryType.GetHashCode();
      if (primaryTypeDisplayName_ != null) hash ^= PrimaryTypeDisplayName.GetHashCode();
      if (NationalPhoneNumber.Length != 0) hash ^= NationalPhoneNumber.GetHashCode();
      if (InternationalPhoneNumber.Length != 0) hash ^= InternationalPhoneNumber.GetHashCode();
      if (FormattedAddress.Length != 0) hash ^= FormattedAddress.GetHashCode();
      if (ShortFormattedAddress.Length != 0) hash ^= ShortFormattedAddress.GetHashCode();
      if (postalAddress_ != null) hash ^= PostalAddress.GetHashCode();
      hash ^= addressComponents_.GetHashCode();
      if (plusCode_ != null) hash ^= PlusCode.GetHashCode();
      if (location_ != null) hash ^= Location.GetHashCode();
      if (viewport_ != null) hash ^= Viewport.GetHashCode();
      if (Rating != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Rating);
      if (GoogleMapsUri.Length != 0) hash ^= GoogleMapsUri.GetHashCode();
      if (WebsiteUri.Length != 0) hash ^= WebsiteUri.GetHashCode();
      hash ^= reviews_.GetHashCode();
      if (regularOpeningHours_ != null) hash ^= RegularOpeningHours.GetHashCode();
      if (HasUtcOffsetMinutes) hash ^= UtcOffsetMinutes.GetHashCode();
      if (timeZone_ != null) hash ^= TimeZone.GetHashCode();
      hash ^= photos_.GetHashCode();
      if (AdrFormatAddress.Length != 0) hash ^= AdrFormatAddress.GetHashCode();
      if (BusinessStatus != global::Google.Maps.Places.V1.Place.Types.BusinessStatus.Unspecified) hash ^= BusinessStatus.GetHashCode();
      if (PriceLevel != global::Google.Maps.Places.V1.PriceLevel.Unspecified) hash ^= PriceLevel.GetHashCode();
      hash ^= attributions_.GetHashCode();
      if (HasUserRatingCount) hash ^= UserRatingCount.GetHashCode();
      if (IconMaskBaseUri.Length != 0) hash ^= IconMaskBaseUri.GetHashCode();
      if (IconBackgroundColor.Length != 0) hash ^= IconBackgroundColor.GetHashCode();
      if (HasTakeout) hash ^= Takeout.GetHashCode();
      if (HasDelivery) hash ^= Delivery.GetHashCode();
      if (HasDineIn) hash ^= DineIn.GetHashCode();
      if (HasCurbsidePickup) hash ^= CurbsidePickup.GetHashCode();
      if (HasReservable) hash ^= Reservable.GetHashCode();
      if (HasServesBreakfast) hash ^= ServesBreakfast.GetHashCode();
      if (HasServesLunch) hash ^= ServesLunch.GetHashCode();
      if (HasServesDinner) hash ^= ServesDinner.GetHashCode();
      if (HasServesBeer) hash ^= ServesBeer.GetHashCode();
      if (HasServesWine) hash ^= ServesWine.GetHashCode();
      if (HasServesBrunch) hash ^= ServesBrunch.GetHashCode();
      if (HasServesVegetarianFood) hash ^= ServesVegetarianFood.GetHashCode();
      if (currentOpeningHours_ != null) hash ^= CurrentOpeningHours.GetHashCode();
      hash ^= currentSecondaryOpeningHours_.GetHashCode();
      hash ^= regularSecondaryOpeningHours_.GetHashCode();
      if (editorialSummary_ != null) hash ^= EditorialSummary.GetHashCode();
      if (HasOutdoorSeating) hash ^= OutdoorSeating.GetHashCode();
      if (HasLiveMusic) hash ^= LiveMusic.GetHashCode();
      if (HasMenuForChildren) hash ^= MenuForChildren.GetHashCode();
      if (HasServesCocktails) hash ^= ServesCocktails.GetHashCode();
      if (HasServesDessert) hash ^= ServesDessert.GetHashCode();
      if (HasServesCoffee) hash ^= ServesCoffee.GetHashCode();
      if (HasGoodForChildren) hash ^= GoodForChildren.GetHashCode();
      if (HasAllowsDogs) hash ^= AllowsDogs.GetHashCode();
      if (HasRestroom) hash ^= Restroom.GetHashCode();
      if (HasGoodForGroups) hash ^= GoodForGroups.GetHashCode();
      if (HasGoodForWatchingSports) hash ^= GoodForWatchingSports.GetHashCode();
      if (paymentOptions_ != null) hash ^= PaymentOptions.GetHashCode();
      if (parkingOptions_ != null) hash ^= ParkingOptions.GetHashCode();
      hash ^= subDestinations_.GetHashCode();
      if (accessibilityOptions_ != null) hash ^= AccessibilityOptions.GetHashCode();
      if (fuelOptions_ != null) hash ^= FuelOptions.GetHashCode();
      if (evChargeOptions_ != null) hash ^= EvChargeOptions.GetHashCode();
      if (generativeSummary_ != null) hash ^= GenerativeSummary.GetHashCode();
      hash ^= containingPlaces_.GetHashCode();
      if (HasPureServiceAreaBusiness) hash ^= PureServiceAreaBusiness.GetHashCode();
      if (addressDescriptor_ != null) hash ^= AddressDescriptor.GetHashCode();
      if (priceRange_ != null) hash ^= PriceRange.GetHashCode();
      if (reviewSummary_ != null) hash ^= ReviewSummary.GetHashCode();
      if (evChargeAmenitySummary_ != null) hash ^= EvChargeAmenitySummary.GetHashCode();
      if (neighborhoodSummary_ != null) hash ^= NeighborhoodSummary.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      types_.WriteTo(output, _repeated_types_codec);
      if (NationalPhoneNumber.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(NationalPhoneNumber);
      }
      if (InternationalPhoneNumber.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(InternationalPhoneNumber);
      }
      if (FormattedAddress.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(FormattedAddress);
      }
      addressComponents_.WriteTo(output, _repeated_addressComponents_codec);
      if (plusCode_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(PlusCode);
      }
      if (location_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Location);
      }
      if (viewport_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Viewport);
      }
      if (Rating != 0D) {
        output.WriteRawTag(113);
        output.WriteDouble(Rating);
      }
      if (GoogleMapsUri.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(GoogleMapsUri);
      }
      if (WebsiteUri.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(WebsiteUri);
      }
      if (regularOpeningHours_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(RegularOpeningHours);
      }
      if (HasUtcOffsetMinutes) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(UtcOffsetMinutes);
      }
      if (AdrFormatAddress.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(AdrFormatAddress);
      }
      if (BusinessStatus != global::Google.Maps.Places.V1.Place.Types.BusinessStatus.Unspecified) {
        output.WriteRawTag(200, 1);
        output.WriteEnum((int) BusinessStatus);
      }
      if (PriceLevel != global::Google.Maps.Places.V1.PriceLevel.Unspecified) {
        output.WriteRawTag(208, 1);
        output.WriteEnum((int) PriceLevel);
      }
      attributions_.WriteTo(output, _repeated_attributions_codec);
      if (HasUserRatingCount) {
        output.WriteRawTag(224, 1);
        output.WriteInt32(UserRatingCount);
      }
      if (IconMaskBaseUri.Length != 0) {
        output.WriteRawTag(234, 1);
        output.WriteString(IconMaskBaseUri);
      }
      if (IconBackgroundColor.Length != 0) {
        output.WriteRawTag(242, 1);
        output.WriteString(IconBackgroundColor);
      }
      if (displayName_ != null) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(DisplayName);
      }
      if (primaryTypeDisplayName_ != null) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(PrimaryTypeDisplayName);
      }
      if (HasTakeout) {
        output.WriteRawTag(136, 2);
        output.WriteBool(Takeout);
      }
      if (HasDelivery) {
        output.WriteRawTag(144, 2);
        output.WriteBool(Delivery);
      }
      if (HasDineIn) {
        output.WriteRawTag(152, 2);
        output.WriteBool(DineIn);
      }
      if (HasCurbsidePickup) {
        output.WriteRawTag(160, 2);
        output.WriteBool(CurbsidePickup);
      }
      if (HasReservable) {
        output.WriteRawTag(176, 2);
        output.WriteBool(Reservable);
      }
      if (HasServesBreakfast) {
        output.WriteRawTag(184, 2);
        output.WriteBool(ServesBreakfast);
      }
      if (HasServesLunch) {
        output.WriteRawTag(192, 2);
        output.WriteBool(ServesLunch);
      }
      if (HasServesDinner) {
        output.WriteRawTag(200, 2);
        output.WriteBool(ServesDinner);
      }
      if (HasServesBeer) {
        output.WriteRawTag(208, 2);
        output.WriteBool(ServesBeer);
      }
      if (HasServesWine) {
        output.WriteRawTag(216, 2);
        output.WriteBool(ServesWine);
      }
      if (HasServesBrunch) {
        output.WriteRawTag(224, 2);
        output.WriteBool(ServesBrunch);
      }
      if (HasServesVegetarianFood) {
        output.WriteRawTag(232, 2);
        output.WriteBool(ServesVegetarianFood);
      }
      if (currentOpeningHours_ != null) {
        output.WriteRawTag(242, 2);
        output.WriteMessage(CurrentOpeningHours);
      }
      currentSecondaryOpeningHours_.WriteTo(output, _repeated_currentSecondaryOpeningHours_codec);
      regularSecondaryOpeningHours_.WriteTo(output, _repeated_regularSecondaryOpeningHours_codec);
      if (PrimaryType.Length != 0) {
        output.WriteRawTag(146, 3);
        output.WriteString(PrimaryType);
      }
      if (ShortFormattedAddress.Length != 0) {
        output.WriteRawTag(154, 3);
        output.WriteString(ShortFormattedAddress);
      }
      if (editorialSummary_ != null) {
        output.WriteRawTag(162, 3);
        output.WriteMessage(EditorialSummary);
      }
      reviews_.WriteTo(output, _repeated_reviews_codec);
      photos_.WriteTo(output, _repeated_photos_codec);
      if (HasOutdoorSeating) {
        output.WriteRawTag(184, 3);
        output.WriteBool(OutdoorSeating);
      }
      if (HasLiveMusic) {
        output.WriteRawTag(192, 3);
        output.WriteBool(LiveMusic);
      }
      if (HasMenuForChildren) {
        output.WriteRawTag(200, 3);
        output.WriteBool(MenuForChildren);
      }
      if (HasServesCocktails) {
        output.WriteRawTag(208, 3);
        output.WriteBool(ServesCocktails);
      }
      if (HasServesDessert) {
        output.WriteRawTag(216, 3);
        output.WriteBool(ServesDessert);
      }
      if (HasServesCoffee) {
        output.WriteRawTag(224, 3);
        output.WriteBool(ServesCoffee);
      }
      if (HasGoodForChildren) {
        output.WriteRawTag(240, 3);
        output.WriteBool(GoodForChildren);
      }
      if (HasAllowsDogs) {
        output.WriteRawTag(248, 3);
        output.WriteBool(AllowsDogs);
      }
      if (HasRestroom) {
        output.WriteRawTag(128, 4);
        output.WriteBool(Restroom);
      }
      if (HasGoodForGroups) {
        output.WriteRawTag(136, 4);
        output.WriteBool(GoodForGroups);
      }
      if (HasGoodForWatchingSports) {
        output.WriteRawTag(144, 4);
        output.WriteBool(GoodForWatchingSports);
      }
      if (paymentOptions_ != null) {
        output.WriteRawTag(154, 4);
        output.WriteMessage(PaymentOptions);
      }
      if (parkingOptions_ != null) {
        output.WriteRawTag(178, 4);
        output.WriteMessage(ParkingOptions);
      }
      subDestinations_.WriteTo(output, _repeated_subDestinations_codec);
      if (accessibilityOptions_ != null) {
        output.WriteRawTag(194, 4);
        output.WriteMessage(AccessibilityOptions);
      }
      if (fuelOptions_ != null) {
        output.WriteRawTag(242, 4);
        output.WriteMessage(FuelOptions);
      }
      if (evChargeOptions_ != null) {
        output.WriteRawTag(250, 4);
        output.WriteMessage(EvChargeOptions);
      }
      if (generativeSummary_ != null) {
        output.WriteRawTag(130, 5);
        output.WriteMessage(GenerativeSummary);
      }
      containingPlaces_.WriteTo(output, _repeated_containingPlaces_codec);
      if (HasPureServiceAreaBusiness) {
        output.WriteRawTag(152, 5);
        output.WriteBool(PureServiceAreaBusiness);
      }
      if (addressDescriptor_ != null) {
        output.WriteRawTag(162, 5);
        output.WriteMessage(AddressDescriptor);
      }
      if (priceRange_ != null) {
        output.WriteRawTag(178, 5);
        output.WriteMessage(PriceRange);
      }
      if (reviewSummary_ != null) {
        output.WriteRawTag(186, 5);
        output.WriteMessage(ReviewSummary);
      }
      if (timeZone_ != null) {
        output.WriteRawTag(194, 5);
        output.WriteMessage(TimeZone);
      }
      if (evChargeAmenitySummary_ != null) {
        output.WriteRawTag(202, 5);
        output.WriteMessage(EvChargeAmenitySummary);
      }
      if (postalAddress_ != null) {
        output.WriteRawTag(210, 5);
        output.WriteMessage(PostalAddress);
      }
      if (neighborhoodSummary_ != null) {
        output.WriteRawTag(218, 5);
        output.WriteMessage(NeighborhoodSummary);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      types_.WriteTo(ref output, _repeated_types_codec);
      if (NationalPhoneNumber.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(NationalPhoneNumber);
      }
      if (InternationalPhoneNumber.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(InternationalPhoneNumber);
      }
      if (FormattedAddress.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(FormattedAddress);
      }
      addressComponents_.WriteTo(ref output, _repeated_addressComponents_codec);
      if (plusCode_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(PlusCode);
      }
      if (location_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Location);
      }
      if (viewport_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Viewport);
      }
      if (Rating != 0D) {
        output.WriteRawTag(113);
        output.WriteDouble(Rating);
      }
      if (GoogleMapsUri.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(GoogleMapsUri);
      }
      if (WebsiteUri.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(WebsiteUri);
      }
      if (regularOpeningHours_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(RegularOpeningHours);
      }
      if (HasUtcOffsetMinutes) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(UtcOffsetMinutes);
      }
      if (AdrFormatAddress.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(AdrFormatAddress);
      }
      if (BusinessStatus != global::Google.Maps.Places.V1.Place.Types.BusinessStatus.Unspecified) {
        output.WriteRawTag(200, 1);
        output.WriteEnum((int) BusinessStatus);
      }
      if (PriceLevel != global::Google.Maps.Places.V1.PriceLevel.Unspecified) {
        output.WriteRawTag(208, 1);
        output.WriteEnum((int) PriceLevel);
      }
      attributions_.WriteTo(ref output, _repeated_attributions_codec);
      if (HasUserRatingCount) {
        output.WriteRawTag(224, 1);
        output.WriteInt32(UserRatingCount);
      }
      if (IconMaskBaseUri.Length != 0) {
        output.WriteRawTag(234, 1);
        output.WriteString(IconMaskBaseUri);
      }
      if (IconBackgroundColor.Length != 0) {
        output.WriteRawTag(242, 1);
        output.WriteString(IconBackgroundColor);
      }
      if (displayName_ != null) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(DisplayName);
      }
      if (primaryTypeDisplayName_ != null) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(PrimaryTypeDisplayName);
      }
      if (HasTakeout) {
        output.WriteRawTag(136, 2);
        output.WriteBool(Takeout);
      }
      if (HasDelivery) {
        output.WriteRawTag(144, 2);
        output.WriteBool(Delivery);
      }
      if (HasDineIn) {
        output.WriteRawTag(152, 2);
        output.WriteBool(DineIn);
      }
      if (HasCurbsidePickup) {
        output.WriteRawTag(160, 2);
        output.WriteBool(CurbsidePickup);
      }
      if (HasReservable) {
        output.WriteRawTag(176, 2);
        output.WriteBool(Reservable);
      }
      if (HasServesBreakfast) {
        output.WriteRawTag(184, 2);
        output.WriteBool(ServesBreakfast);
      }
      if (HasServesLunch) {
        output.WriteRawTag(192, 2);
        output.WriteBool(ServesLunch);
      }
      if (HasServesDinner) {
        output.WriteRawTag(200, 2);
        output.WriteBool(ServesDinner);
      }
      if (HasServesBeer) {
        output.WriteRawTag(208, 2);
        output.WriteBool(ServesBeer);
      }
      if (HasServesWine) {
        output.WriteRawTag(216, 2);
        output.WriteBool(ServesWine);
      }
      if (HasServesBrunch) {
        output.WriteRawTag(224, 2);
        output.WriteBool(ServesBrunch);
      }
      if (HasServesVegetarianFood) {
        output.WriteRawTag(232, 2);
        output.WriteBool(ServesVegetarianFood);
      }
      if (currentOpeningHours_ != null) {
        output.WriteRawTag(242, 2);
        output.WriteMessage(CurrentOpeningHours);
      }
      currentSecondaryOpeningHours_.WriteTo(ref output, _repeated_currentSecondaryOpeningHours_codec);
      regularSecondaryOpeningHours_.WriteTo(ref output, _repeated_regularSecondaryOpeningHours_codec);
      if (PrimaryType.Length != 0) {
        output.WriteRawTag(146, 3);
        output.WriteString(PrimaryType);
      }
      if (ShortFormattedAddress.Length != 0) {
        output.WriteRawTag(154, 3);
        output.WriteString(ShortFormattedAddress);
      }
      if (editorialSummary_ != null) {
        output.WriteRawTag(162, 3);
        output.WriteMessage(EditorialSummary);
      }
      reviews_.WriteTo(ref output, _repeated_reviews_codec);
      photos_.WriteTo(ref output, _repeated_photos_codec);
      if (HasOutdoorSeating) {
        output.WriteRawTag(184, 3);
        output.WriteBool(OutdoorSeating);
      }
      if (HasLiveMusic) {
        output.WriteRawTag(192, 3);
        output.WriteBool(LiveMusic);
      }
      if (HasMenuForChildren) {
        output.WriteRawTag(200, 3);
        output.WriteBool(MenuForChildren);
      }
      if (HasServesCocktails) {
        output.WriteRawTag(208, 3);
        output.WriteBool(ServesCocktails);
      }
      if (HasServesDessert) {
        output.WriteRawTag(216, 3);
        output.WriteBool(ServesDessert);
      }
      if (HasServesCoffee) {
        output.WriteRawTag(224, 3);
        output.WriteBool(ServesCoffee);
      }
      if (HasGoodForChildren) {
        output.WriteRawTag(240, 3);
        output.WriteBool(GoodForChildren);
      }
      if (HasAllowsDogs) {
        output.WriteRawTag(248, 3);
        output.WriteBool(AllowsDogs);
      }
      if (HasRestroom) {
        output.WriteRawTag(128, 4);
        output.WriteBool(Restroom);
      }
      if (HasGoodForGroups) {
        output.WriteRawTag(136, 4);
        output.WriteBool(GoodForGroups);
      }
      if (HasGoodForWatchingSports) {
        output.WriteRawTag(144, 4);
        output.WriteBool(GoodForWatchingSports);
      }
      if (paymentOptions_ != null) {
        output.WriteRawTag(154, 4);
        output.WriteMessage(PaymentOptions);
      }
      if (parkingOptions_ != null) {
        output.WriteRawTag(178, 4);
        output.WriteMessage(ParkingOptions);
      }
      subDestinations_.WriteTo(ref output, _repeated_subDestinations_codec);
      if (accessibilityOptions_ != null) {
        output.WriteRawTag(194, 4);
        output.WriteMessage(AccessibilityOptions);
      }
      if (fuelOptions_ != null) {
        output.WriteRawTag(242, 4);
        output.WriteMessage(FuelOptions);
      }
      if (evChargeOptions_ != null) {
        output.WriteRawTag(250, 4);
        output.WriteMessage(EvChargeOptions);
      }
      if (generativeSummary_ != null) {
        output.WriteRawTag(130, 5);
        output.WriteMessage(GenerativeSummary);
      }
      containingPlaces_.WriteTo(ref output, _repeated_containingPlaces_codec);
      if (HasPureServiceAreaBusiness) {
        output.WriteRawTag(152, 5);
        output.WriteBool(PureServiceAreaBusiness);
      }
      if (addressDescriptor_ != null) {
        output.WriteRawTag(162, 5);
        output.WriteMessage(AddressDescriptor);
      }
      if (priceRange_ != null) {
        output.WriteRawTag(178, 5);
        output.WriteMessage(PriceRange);
      }
      if (reviewSummary_ != null) {
        output.WriteRawTag(186, 5);
        output.WriteMessage(ReviewSummary);
      }
      if (timeZone_ != null) {
        output.WriteRawTag(194, 5);
        output.WriteMessage(TimeZone);
      }
      if (evChargeAmenitySummary_ != null) {
        output.WriteRawTag(202, 5);
        output.WriteMessage(EvChargeAmenitySummary);
      }
      if (postalAddress_ != null) {
        output.WriteRawTag(210, 5);
        output.WriteMessage(PostalAddress);
      }
      if (neighborhoodSummary_ != null) {
        output.WriteRawTag(218, 5);
        output.WriteMessage(NeighborhoodSummary);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (displayName_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DisplayName);
      }
      size += types_.CalculateSize(_repeated_types_codec);
      if (PrimaryType.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PrimaryType);
      }
      if (primaryTypeDisplayName_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PrimaryTypeDisplayName);
      }
      if (NationalPhoneNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NationalPhoneNumber);
      }
      if (InternationalPhoneNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InternationalPhoneNumber);
      }
      if (FormattedAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FormattedAddress);
      }
      if (ShortFormattedAddress.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ShortFormattedAddress);
      }
      if (postalAddress_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PostalAddress);
      }
      size += addressComponents_.CalculateSize(_repeated_addressComponents_codec);
      if (plusCode_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlusCode);
      }
      if (location_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
      }
      if (viewport_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Viewport);
      }
      if (Rating != 0D) {
        size += 1 + 8;
      }
      if (GoogleMapsUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GoogleMapsUri);
      }
      if (WebsiteUri.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(WebsiteUri);
      }
      size += reviews_.CalculateSize(_repeated_reviews_codec);
      if (regularOpeningHours_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RegularOpeningHours);
      }
      if (HasUtcOffsetMinutes) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UtcOffsetMinutes);
      }
      if (timeZone_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TimeZone);
      }
      size += photos_.CalculateSize(_repeated_photos_codec);
      if (AdrFormatAddress.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AdrFormatAddress);
      }
      if (BusinessStatus != global::Google.Maps.Places.V1.Place.Types.BusinessStatus.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) BusinessStatus);
      }
      if (PriceLevel != global::Google.Maps.Places.V1.PriceLevel.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PriceLevel);
      }
      size += attributions_.CalculateSize(_repeated_attributions_codec);
      if (HasUserRatingCount) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UserRatingCount);
      }
      if (IconMaskBaseUri.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(IconMaskBaseUri);
      }
      if (IconBackgroundColor.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(IconBackgroundColor);
      }
      if (HasTakeout) {
        size += 2 + 1;
      }
      if (HasDelivery) {
        size += 2 + 1;
      }
      if (HasDineIn) {
        size += 2 + 1;
      }
      if (HasCurbsidePickup) {
        size += 2 + 1;
      }
      if (HasReservable) {
        size += 2 + 1;
      }
      if (HasServesBreakfast) {
        size += 2 + 1;
      }
      if (HasServesLunch) {
        size += 2 + 1;
      }
      if (HasServesDinner) {
        size += 2 + 1;
      }
      if (HasServesBeer) {
        size += 2 + 1;
      }
      if (HasServesWine) {
        size += 2 + 1;
      }
      if (HasServesBrunch) {
        size += 2 + 1;
      }
      if (HasServesVegetarianFood) {
        size += 2 + 1;
      }
      if (currentOpeningHours_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CurrentOpeningHours);
      }
      size += currentSecondaryOpeningHours_.CalculateSize(_repeated_currentSecondaryOpeningHours_codec);
      size += regularSecondaryOpeningHours_.CalculateSize(_repeated_regularSecondaryOpeningHours_codec);
      if (editorialSummary_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EditorialSummary);
      }
      if (HasOutdoorSeating) {
        size += 2 + 1;
      }
      if (HasLiveMusic) {
        size += 2 + 1;
      }
      if (HasMenuForChildren) {
        size += 2 + 1;
      }
      if (HasServesCocktails) {
        size += 2 + 1;
      }
      if (HasServesDessert) {
        size += 2 + 1;
      }
      if (HasServesCoffee) {
        size += 2 + 1;
      }
      if (HasGoodForChildren) {
        size += 2 + 1;
      }
      if (HasAllowsDogs) {
        size += 2 + 1;
      }
      if (HasRestroom) {
        size += 2 + 1;
      }
      if (HasGoodForGroups) {
        size += 2 + 1;
      }
      if (HasGoodForWatchingSports) {
        size += 2 + 1;
      }
      if (paymentOptions_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PaymentOptions);
      }
      if (parkingOptions_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ParkingOptions);
      }
      size += subDestinations_.CalculateSize(_repeated_subDestinations_codec);
      if (accessibilityOptions_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(AccessibilityOptions);
      }
      if (fuelOptions_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FuelOptions);
      }
      if (evChargeOptions_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EvChargeOptions);
      }
      if (generativeSummary_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GenerativeSummary);
      }
      size += containingPlaces_.CalculateSize(_repeated_containingPlaces_codec);
      if (HasPureServiceAreaBusiness) {
        size += 2 + 1;
      }
      if (addressDescriptor_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(AddressDescriptor);
      }
      if (priceRange_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PriceRange);
      }
      if (reviewSummary_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ReviewSummary);
      }
      if (evChargeAmenitySummary_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EvChargeAmenitySummary);
      }
      if (neighborhoodSummary_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NeighborhoodSummary);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Place other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.displayName_ != null) {
        if (displayName_ == null) {
          DisplayName = new global::Google.Type.LocalizedText();
        }
        DisplayName.MergeFrom(other.DisplayName);
      }
      types_.Add(other.types_);
      if (other.PrimaryType.Length != 0) {
        PrimaryType = other.PrimaryType;
      }
      if (other.primaryTypeDisplayName_ != null) {
        if (primaryTypeDisplayName_ == null) {
          PrimaryTypeDisplayName = new global::Google.Type.LocalizedText();
        }
        PrimaryTypeDisplayName.MergeFrom(other.PrimaryTypeDisplayName);
      }
      if (other.NationalPhoneNumber.Length != 0) {
        NationalPhoneNumber = other.NationalPhoneNumber;
      }
      if (other.InternationalPhoneNumber.Length != 0) {
        InternationalPhoneNumber = other.InternationalPhoneNumber;
      }
      if (other.FormattedAddress.Length != 0) {
        FormattedAddress = other.FormattedAddress;
      }
      if (other.ShortFormattedAddress.Length != 0) {
        ShortFormattedAddress = other.ShortFormattedAddress;
      }
      if (other.postalAddress_ != null) {
        if (postalAddress_ == null) {
          PostalAddress = new global::Google.Type.PostalAddress();
        }
        PostalAddress.MergeFrom(other.PostalAddress);
      }
      addressComponents_.Add(other.addressComponents_);
      if (other.plusCode_ != null) {
        if (plusCode_ == null) {
          PlusCode = new global::Google.Maps.Places.V1.Place.Types.PlusCode();
        }
        PlusCode.MergeFrom(other.PlusCode);
      }
      if (other.location_ != null) {
        if (location_ == null) {
          Location = new global::Google.Type.LatLng();
        }
        Location.MergeFrom(other.Location);
      }
      if (other.viewport_ != null) {
        if (viewport_ == null) {
          Viewport = new global::Google.Geo.Type.Viewport();
        }
        Viewport.MergeFrom(other.Viewport);
      }
      if (other.Rating != 0D) {
        Rating = other.Rating;
      }
      if (other.GoogleMapsUri.Length != 0) {
        GoogleMapsUri = other.GoogleMapsUri;
      }
      if (other.WebsiteUri.Length != 0) {
        WebsiteUri = other.WebsiteUri;
      }
      reviews_.Add(other.reviews_);
      if (other.regularOpeningHours_ != null) {
        if (regularOpeningHours_ == null) {
          RegularOpeningHours = new global::Google.Maps.Places.V1.Place.Types.OpeningHours();
        }
        RegularOpeningHours.MergeFrom(other.RegularOpeningHours);
      }
      if (other.HasUtcOffsetMinutes) {
        UtcOffsetMinutes = other.UtcOffsetMinutes;
      }
      if (other.timeZone_ != null) {
        if (timeZone_ == null) {
          TimeZone = new global::Google.Type.TimeZone();
        }
        TimeZone.MergeFrom(other.TimeZone);
      }
      photos_.Add(other.photos_);
      if (other.AdrFormatAddress.Length != 0) {
        AdrFormatAddress = other.AdrFormatAddress;
      }
      if (other.BusinessStatus != global::Google.Maps.Places.V1.Place.Types.BusinessStatus.Unspecified) {
        BusinessStatus = other.BusinessStatus;
      }
      if (other.PriceLevel != global::Google.Maps.Places.V1.PriceLevel.Unspecified) {
        PriceLevel = other.PriceLevel;
      }
      attributions_.Add(other.attributions_);
      if (other.HasUserRatingCount) {
        UserRatingCount = other.UserRatingCount;
      }
      if (other.IconMaskBaseUri.Length != 0) {
        IconMaskBaseUri = other.IconMaskBaseUri;
      }
      if (other.IconBackgroundColor.Length != 0) {
        IconBackgroundColor = other.IconBackgroundColor;
      }
      if (other.HasTakeout) {
        Takeout = other.Takeout;
      }
      if (other.HasDelivery) {
        Delivery = other.Delivery;
      }
      if (other.HasDineIn) {
        DineIn = other.DineIn;
      }
      if (other.HasCurbsidePickup) {
        CurbsidePickup = other.CurbsidePickup;
      }
      if (other.HasReservable) {
        Reservable = other.Reservable;
      }
      if (other.HasServesBreakfast) {
        ServesBreakfast = other.ServesBreakfast;
      }
      if (other.HasServesLunch) {
        ServesLunch = other.ServesLunch;
      }
      if (other.HasServesDinner) {
        ServesDinner = other.ServesDinner;
      }
      if (other.HasServesBeer) {
        ServesBeer = other.ServesBeer;
      }
      if (other.HasServesWine) {
        ServesWine = other.ServesWine;
      }
      if (other.HasServesBrunch) {
        ServesBrunch = other.ServesBrunch;
      }
      if (other.HasServesVegetarianFood) {
        ServesVegetarianFood = other.ServesVegetarianFood;
      }
      if (other.currentOpeningHours_ != null) {
        if (currentOpeningHours_ == null) {
          CurrentOpeningHours = new global::Google.Maps.Places.V1.Place.Types.OpeningHours();
        }
        CurrentOpeningHours.MergeFrom(other.CurrentOpeningHours);
      }
      currentSecondaryOpeningHours_.Add(other.currentSecondaryOpeningHours_);
      regularSecondaryOpeningHours_.Add(other.regularSecondaryOpeningHours_);
      if (other.editorialSummary_ != null) {
        if (editorialSummary_ == null) {
          EditorialSummary = new global::Google.Type.LocalizedText();
        }
        EditorialSummary.MergeFrom(other.EditorialSummary);
      }
      if (other.HasOutdoorSeating) {
        OutdoorSeating = other.OutdoorSeating;
      }
      if (other.HasLiveMusic) {
        LiveMusic = other.LiveMusic;
      }
      if (other.HasMenuForChildren) {
        MenuForChildren = other.MenuForChildren;
      }
      if (other.HasServesCocktails) {
        ServesCocktails = other.ServesCocktails;
      }
      if (other.HasServesDessert) {
        ServesDessert = other.ServesDessert;
      }
      if (other.HasServesCoffee) {
        ServesCoffee = other.ServesCoffee;
      }
      if (other.HasGoodForChildren) {
        GoodForChildren = other.GoodForChildren;
      }
      if (other.HasAllowsDogs) {
        AllowsDogs = other.AllowsDogs;
      }
      if (other.HasRestroom) {
        Restroom = other.Restroom;
      }
      if (other.HasGoodForGroups) {
        GoodForGroups = other.GoodForGroups;
      }
      if (other.HasGoodForWatchingSports) {
        GoodForWatchingSports = other.GoodForWatchingSports;
      }
      if (other.paymentOptions_ != null) {
        if (paymentOptions_ == null) {
          PaymentOptions = new global::Google.Maps.Places.V1.Place.Types.PaymentOptions();
        }
        PaymentOptions.MergeFrom(other.PaymentOptions);
      }
      if (other.parkingOptions_ != null) {
        if (parkingOptions_ == null) {
          ParkingOptions = new global::Google.Maps.Places.V1.Place.Types.ParkingOptions();
        }
        ParkingOptions.MergeFrom(other.ParkingOptions);
      }
      subDestinations_.Add(other.subDestinations_);
      if (other.accessibilityOptions_ != null) {
        if (accessibilityOptions_ == null) {
          AccessibilityOptions = new global::Google.Maps.Places.V1.Place.Types.AccessibilityOptions();
        }
        AccessibilityOptions.MergeFrom(other.AccessibilityOptions);
      }
      if (other.fuelOptions_ != null) {
        if (fuelOptions_ == null) {
          FuelOptions = new global::Google.Maps.Places.V1.FuelOptions();
        }
        FuelOptions.MergeFrom(other.FuelOptions);
      }
      if (other.evChargeOptions_ != null) {
        if (evChargeOptions_ == null) {
          EvChargeOptions = new global::Google.Maps.Places.V1.EVChargeOptions();
        }
        EvChargeOptions.MergeFrom(other.EvChargeOptions);
      }
      if (other.generativeSummary_ != null) {
        if (generativeSummary_ == null) {
          GenerativeSummary = new global::Google.Maps.Places.V1.Place.Types.GenerativeSummary();
        }
        GenerativeSummary.MergeFrom(other.GenerativeSummary);
      }
      containingPlaces_.Add(other.containingPlaces_);
      if (other.HasPureServiceAreaBusiness) {
        PureServiceAreaBusiness = other.PureServiceAreaBusiness;
      }
      if (other.addressDescriptor_ != null) {
        if (addressDescriptor_ == null) {
          AddressDescriptor = new global::Google.Maps.Places.V1.AddressDescriptor();
        }
        AddressDescriptor.MergeFrom(other.AddressDescriptor);
      }
      if (other.priceRange_ != null) {
        if (priceRange_ == null) {
          PriceRange = new global::Google.Maps.Places.V1.PriceRange();
        }
        PriceRange.MergeFrom(other.PriceRange);
      }
      if (other.reviewSummary_ != null) {
        if (reviewSummary_ == null) {
          ReviewSummary = new global::Google.Maps.Places.V1.Place.Types.ReviewSummary();
        }
        ReviewSummary.MergeFrom(other.ReviewSummary);
      }
      if (other.evChargeAmenitySummary_ != null) {
        if (evChargeAmenitySummary_ == null) {
          EvChargeAmenitySummary = new global::Google.Maps.Places.V1.Place.Types.EvChargeAmenitySummary();
        }
        EvChargeAmenitySummary.MergeFrom(other.EvChargeAmenitySummary);
      }
      if (other.neighborhoodSummary_ != null) {
        if (neighborhoodSummary_ == null) {
          NeighborhoodSummary = new global::Google.Maps.Places.V1.Place.Types.NeighborhoodSummary();
        }
        NeighborhoodSummary.MergeFrom(other.NeighborhoodSummary);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 42: {
            types_.AddEntriesFrom(input, _repeated_types_codec);
            break;
          }
          case 58: {
            NationalPhoneNumber = input.ReadString();
            break;
          }
          case 66: {
            InternationalPhoneNumber = input.ReadString();
            break;
          }
          case 74: {
            FormattedAddress = input.ReadString();
            break;
          }
          case 82: {
            addressComponents_.AddEntriesFrom(input, _repeated_addressComponents_codec);
            break;
          }
          case 90: {
            if (plusCode_ == null) {
              PlusCode = new global::Google.Maps.Places.V1.Place.Types.PlusCode();
            }
            input.ReadMessage(PlusCode);
            break;
          }
          case 98: {
            if (location_ == null) {
              Location = new global::Google.Type.LatLng();
            }
            input.ReadMessage(Location);
            break;
          }
          case 106: {
            if (viewport_ == null) {
              Viewport = new global::Google.Geo.Type.Viewport();
            }
            input.ReadMessage(Viewport);
            break;
          }
          case 113: {
            Rating = input.ReadDouble();
            break;
          }
          case 122: {
            GoogleMapsUri = input.ReadString();
            break;
          }
          case 130: {
            WebsiteUri = input.ReadString();
            break;
          }
          case 170: {
            if (regularOpeningHours_ == null) {
              RegularOpeningHours = new global::Google.Maps.Places.V1.Place.Types.OpeningHours();
            }
            input.ReadMessage(RegularOpeningHours);
            break;
          }
          case 176: {
            UtcOffsetMinutes = input.ReadInt32();
            break;
          }
          case 194: {
            AdrFormatAddress = input.ReadString();
            break;
          }
          case 200: {
            BusinessStatus = (global::Google.Maps.Places.V1.Place.Types.BusinessStatus) input.ReadEnum();
            break;
          }
          case 208: {
            PriceLevel = (global::Google.Maps.Places.V1.PriceLevel) input.ReadEnum();
            break;
          }
          case 218: {
            attributions_.AddEntriesFrom(input, _repeated_attributions_codec);
            break;
          }
          case 224: {
            UserRatingCount = input.ReadInt32();
            break;
          }
          case 234: {
            IconMaskBaseUri = input.ReadString();
            break;
          }
          case 242: {
            IconBackgroundColor = input.ReadString();
            break;
          }
          case 250: {
            if (displayName_ == null) {
              DisplayName = new global::Google.Type.LocalizedText();
            }
            input.ReadMessage(DisplayName);
            break;
          }
          case 258: {
            if (primaryTypeDisplayName_ == null) {
              PrimaryTypeDisplayName = new global::Google.Type.LocalizedText();
            }
            input.ReadMessage(PrimaryTypeDisplayName);
            break;
          }
          case 264: {
            Takeout = input.ReadBool();
            break;
          }
          case 272: {
            Delivery = input.ReadBool();
            break;
          }
          case 280: {
            DineIn = input.ReadBool();
            break;
          }
          case 288: {
            CurbsidePickup = input.ReadBool();
            break;
          }
          case 304: {
            Reservable = input.ReadBool();
            break;
          }
          case 312: {
            ServesBreakfast = input.ReadBool();
            break;
          }
          case 320: {
            ServesLunch = input.ReadBool();
            break;
          }
          case 328: {
            ServesDinner = input.ReadBool();
            break;
          }
          case 336: {
            ServesBeer = input.ReadBool();
            break;
          }
          case 344: {
            ServesWine = input.ReadBool();
            break;
          }
          case 352: {
            ServesBrunch = input.ReadBool();
            break;
          }
          case 360: {
            ServesVegetarianFood = input.ReadBool();
            break;
          }
          case 370: {
            if (currentOpeningHours_ == null) {
              CurrentOpeningHours = new global::Google.Maps.Places.V1.Place.Types.OpeningHours();
            }
            input.ReadMessage(CurrentOpeningHours);
            break;
          }
          case 378: {
            currentSecondaryOpeningHours_.AddEntriesFrom(input, _repeated_currentSecondaryOpeningHours_codec);
            break;
          }
          case 394: {
            regularSecondaryOpeningHours_.AddEntriesFrom(input, _repeated_regularSecondaryOpeningHours_codec);
            break;
          }
          case 402: {
            PrimaryType = input.ReadString();
            break;
          }
          case 410: {
            ShortFormattedAddress = input.ReadString();
            break;
          }
          case 418: {
            if (editorialSummary_ == null) {
              EditorialSummary = new global::Google.Type.LocalizedText();
            }
            input.ReadMessage(EditorialSummary);
            break;
          }
          case 426: {
            reviews_.AddEntriesFrom(input, _repeated_reviews_codec);
            break;
          }
          case 434: {
            photos_.AddEntriesFrom(input, _repeated_photos_codec);
            break;
          }
          case 440: {
            OutdoorSeating = input.ReadBool();
            break;
          }
          case 448: {
            LiveMusic = input.ReadBool();
            break;
          }
          case 456: {
            MenuForChildren = input.ReadBool();
            break;
          }
          case 464: {
            ServesCocktails = input.ReadBool();
            break;
          }
          case 472: {
            ServesDessert = input.ReadBool();
            break;
          }
          case 480: {
            ServesCoffee = input.ReadBool();
            break;
          }
          case 496: {
            GoodForChildren = input.ReadBool();
            break;
          }
          case 504: {
            AllowsDogs = input.ReadBool();
            break;
          }
          case 512: {
            Restroom = input.ReadBool();
            break;
          }
          case 520: {
            GoodForGroups = input.ReadBool();
            break;
          }
          case 528: {
            GoodForWatchingSports = input.ReadBool();
            break;
          }
          case 538: {
            if (paymentOptions_ == null) {
              PaymentOptions = new global::Google.Maps.Places.V1.Place.Types.PaymentOptions();
            }
            input.ReadMessage(PaymentOptions);
            break;
          }
          case 562: {
            if (parkingOptions_ == null) {
              ParkingOptions = new global::Google.Maps.Places.V1.Place.Types.ParkingOptions();
            }
            input.ReadMessage(ParkingOptions);
            break;
          }
          case 570: {
            subDestinations_.AddEntriesFrom(input, _repeated_subDestinations_codec);
            break;
          }
          case 578: {
            if (accessibilityOptions_ == null) {
              AccessibilityOptions = new global::Google.Maps.Places.V1.Place.Types.AccessibilityOptions();
            }
            input.ReadMessage(AccessibilityOptions);
            break;
          }
          case 626: {
            if (fuelOptions_ == null) {
              FuelOptions = new global::Google.Maps.Places.V1.FuelOptions();
            }
            input.ReadMessage(FuelOptions);
            break;
          }
          case 634: {
            if (evChargeOptions_ == null) {
              EvChargeOptions = new global::Google.Maps.Places.V1.EVChargeOptions();
            }
            input.ReadMessage(EvChargeOptions);
            break;
          }
          case 642: {
            if (generativeSummary_ == null) {
              GenerativeSummary = new global::Google.Maps.Places.V1.Place.Types.GenerativeSummary();
            }
            input.ReadMessage(GenerativeSummary);
            break;
          }
          case 658: {
            containingPlaces_.AddEntriesFrom(input, _repeated_containingPlaces_codec);
            break;
          }
          case 664: {
            PureServiceAreaBusiness = input.ReadBool();
            break;
          }
          case 674: {
            if (addressDescriptor_ == null) {
              AddressDescriptor = new global::Google.Maps.Places.V1.AddressDescriptor();
            }
            input.ReadMessage(AddressDescriptor);
            break;
          }
          case 690: {
            if (priceRange_ == null) {
              PriceRange = new global::Google.Maps.Places.V1.PriceRange();
            }
            input.ReadMessage(PriceRange);
            break;
          }
          case 698: {
            if (reviewSummary_ == null) {
              ReviewSummary = new global::Google.Maps.Places.V1.Place.Types.ReviewSummary();
            }
            input.ReadMessage(ReviewSummary);
            break;
          }
          case 706: {
            if (timeZone_ == null) {
              TimeZone = new global::Google.Type.TimeZone();
            }
            input.ReadMessage(TimeZone);
            break;
          }
          case 714: {
            if (evChargeAmenitySummary_ == null) {
              EvChargeAmenitySummary = new global::Google.Maps.Places.V1.Place.Types.EvChargeAmenitySummary();
            }
            input.ReadMessage(EvChargeAmenitySummary);
            break;
          }
          case 722: {
            if (postalAddress_ == null) {
              PostalAddress = new global::Google.Type.PostalAddress();
            }
            input.ReadMessage(PostalAddress);
            break;
          }
          case 730: {
            if (neighborhoodSummary_ == null) {
              NeighborhoodSummary = new global::Google.Maps.Places.V1.Place.Types.NeighborhoodSummary();
            }
            input.ReadMessage(NeighborhoodSummary);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 42: {
            types_.AddEntriesFrom(ref input, _repeated_types_codec);
            break;
          }
          case 58: {
            NationalPhoneNumber = input.ReadString();
            break;
          }
          case 66: {
            InternationalPhoneNumber = input.ReadString();
            break;
          }
          case 74: {
            FormattedAddress = input.ReadString();
            break;
          }
          case 82: {
            addressComponents_.AddEntriesFrom(ref input, _repeated_addressComponents_codec);
            break;
          }
          case 90: {
            if (plusCode_ == null) {
              PlusCode = new global::Google.Maps.Places.V1.Place.Types.PlusCode();
            }
            input.ReadMessage(PlusCode);
            break;
          }
          case 98: {
            if (location_ == null) {
              Location = new global::Google.Type.LatLng();
            }
            input.ReadMessage(Location);
            break;
          }
          case 106: {
            if (viewport_ == null) {
              Viewport = new global::Google.Geo.Type.Viewport();
            }
            input.ReadMessage(Viewport);
            break;
          }
          case 113: {
            Rating = input.ReadDouble();
            break;
          }
          case 122: {
            GoogleMapsUri = input.ReadString();
            break;
          }
          case 130: {
            WebsiteUri = input.ReadString();
            break;
          }
          case 170: {
            if (regularOpeningHours_ == null) {
              RegularOpeningHours = new global::Google.Maps.Places.V1.Place.Types.OpeningHours();
            }
            input.ReadMessage(RegularOpeningHours);
            break;
          }
          case 176: {
            UtcOffsetMinutes = input.ReadInt32();
            break;
          }
          case 194: {
            AdrFormatAddress = input.ReadString();
            break;
          }
          case 200: {
            BusinessStatus = (global::Google.Maps.Places.V1.Place.Types.BusinessStatus) input.ReadEnum();
            break;
          }
          case 208: {
            PriceLevel = (global::Google.Maps.Places.V1.PriceLevel) input.ReadEnum();
            break;
          }
          case 218: {
            attributions_.AddEntriesFrom(ref input, _repeated_attributions_codec);
            break;
          }
          case 224: {
            UserRatingCount = input.ReadInt32();
            break;
          }
          case 234: {
            IconMaskBaseUri = input.ReadString();
            break;
          }
          case 242: {
            IconBackgroundColor = input.ReadString();
            break;
          }
          case 250: {
            if (displayName_ == null) {
              DisplayName = new global::Google.Type.LocalizedText();
            }
            input.ReadMessage(DisplayName);
            break;
          }
          case 258: {
            if (primaryTypeDisplayName_ == null) {
              PrimaryTypeDisplayName = new global::Google.Type.LocalizedText();
            }
            input.ReadMessage(PrimaryTypeDisplayName);
            break;
          }
          case 264: {
            Takeout = input.ReadBool();
            break;
          }
          case 272: {
            Delivery = input.ReadBool();
            break;
          }
          case 280: {
            DineIn = input.ReadBool();
            break;
          }
          case 288: {
            CurbsidePickup = input.ReadBool();
            break;
          }
          case 304: {
            Reservable = input.ReadBool();
            break;
          }
          case 312: {
            ServesBreakfast = input.ReadBool();
            break;
          }
          case 320: {
            ServesLunch = input.ReadBool();
            break;
          }
          case 328: {
            ServesDinner = input.ReadBool();
            break;
          }
          case 336: {
            ServesBeer = input.ReadBool();
            break;
          }
          case 344: {
            ServesWine = input.ReadBool();
            break;
          }
          case 352: {
            ServesBrunch = input.ReadBool();
            break;
          }
          case 360: {
            ServesVegetarianFood = input.ReadBool();
            break;
          }
          case 370: {
            if (currentOpeningHours_ == null) {
              CurrentOpeningHours = new global::Google.Maps.Places.V1.Place.Types.OpeningHours();
            }
            input.ReadMessage(CurrentOpeningHours);
            break;
          }
          case 378: {
            currentSecondaryOpeningHours_.AddEntriesFrom(ref input, _repeated_currentSecondaryOpeningHours_codec);
            break;
          }
          case 394: {
            regularSecondaryOpeningHours_.AddEntriesFrom(ref input, _repeated_regularSecondaryOpeningHours_codec);
            break;
          }
          case 402: {
            PrimaryType = input.ReadString();
            break;
          }
          case 410: {
            ShortFormattedAddress = input.ReadString();
            break;
          }
          case 418: {
            if (editorialSummary_ == null) {
              EditorialSummary = new global::Google.Type.LocalizedText();
            }
            input.ReadMessage(EditorialSummary);
            break;
          }
          case 426: {
            reviews_.AddEntriesFrom(ref input, _repeated_reviews_codec);
            break;
          }
          case 434: {
            photos_.AddEntriesFrom(ref input, _repeated_photos_codec);
            break;
          }
          case 440: {
            OutdoorSeating = input.ReadBool();
            break;
          }
          case 448: {
            LiveMusic = input.ReadBool();
            break;
          }
          case 456: {
            MenuForChildren = input.ReadBool();
            break;
          }
          case 464: {
            ServesCocktails = input.ReadBool();
            break;
          }
          case 472: {
            ServesDessert = input.ReadBool();
            break;
          }
          case 480: {
            ServesCoffee = input.ReadBool();
            break;
          }
          case 496: {
            GoodForChildren = input.ReadBool();
            break;
          }
          case 504: {
            AllowsDogs = input.ReadBool();
            break;
          }
          case 512: {
            Restroom = input.ReadBool();
            break;
          }
          case 520: {
            GoodForGroups = input.ReadBool();
            break;
          }
          case 528: {
            GoodForWatchingSports = input.ReadBool();
            break;
          }
          case 538: {
            if (paymentOptions_ == null) {
              PaymentOptions = new global::Google.Maps.Places.V1.Place.Types.PaymentOptions();
            }
            input.ReadMessage(PaymentOptions);
            break;
          }
          case 562: {
            if (parkingOptions_ == null) {
              ParkingOptions = new global::Google.Maps.Places.V1.Place.Types.ParkingOptions();
            }
            input.ReadMessage(ParkingOptions);
            break;
          }
          case 570: {
            subDestinations_.AddEntriesFrom(ref input, _repeated_subDestinations_codec);
            break;
          }
          case 578: {
            if (accessibilityOptions_ == null) {
              AccessibilityOptions = new global::Google.Maps.Places.V1.Place.Types.AccessibilityOptions();
            }
            input.ReadMessage(AccessibilityOptions);
            break;
          }
          case 626: {
            if (fuelOptions_ == null) {
              FuelOptions = new global::Google.Maps.Places.V1.FuelOptions();
            }
            input.ReadMessage(FuelOptions);
            break;
          }
          case 634: {
            if (evChargeOptions_ == null) {
              EvChargeOptions = new global::Google.Maps.Places.V1.EVChargeOptions();
            }
            input.ReadMessage(EvChargeOptions);
            break;
          }
          case 642: {
            if (generativeSummary_ == null) {
              GenerativeSummary = new global::Google.Maps.Places.V1.Place.Types.GenerativeSummary();
            }
            input.ReadMessage(GenerativeSummary);
            break;
          }
          case 658: {
            containingPlaces_.AddEntriesFrom(ref input, _repeated_containingPlaces_codec);
            break;
          }
          case 664: {
            PureServiceAreaBusiness = input.ReadBool();
            break;
          }
          case 674: {
            if (addressDescriptor_ == null) {
              AddressDescriptor = new global::Google.Maps.Places.V1.AddressDescriptor();
            }
            input.ReadMessage(AddressDescriptor);
            break;
          }
          case 690: {
            if (priceRange_ == null) {
              PriceRange = new global::Google.Maps.Places.V1.PriceRange();
            }
            input.ReadMessage(PriceRange);
            break;
          }
          case 698: {
            if (reviewSummary_ == null) {
              ReviewSummary = new global::Google.Maps.Places.V1.Place.Types.ReviewSummary();
            }
            input.ReadMessage(ReviewSummary);
            break;
          }
          case 706: {
            if (timeZone_ == null) {
              TimeZone = new global::Google.Type.TimeZone();
            }
            input.ReadMessage(TimeZone);
            break;
          }
          case 714: {
            if (evChargeAmenitySummary_ == null) {
              EvChargeAmenitySummary = new global::Google.Maps.Places.V1.Place.Types.EvChargeAmenitySummary();
            }
            input.ReadMessage(EvChargeAmenitySummary);
            break;
          }
          case 722: {
            if (postalAddress_ == null) {
              PostalAddress = new global::Google.Type.PostalAddress();
            }
            input.ReadMessage(PostalAddress);
            break;
          }
          case 730: {
            if (neighborhoodSummary_ == null) {
              NeighborhoodSummary = new global::Google.Maps.Places.V1.Place.Types.NeighborhoodSummary();
            }
            input.ReadMessage(NeighborhoodSummary);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Place message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Business status for the place.
      /// </summary>
      public enum BusinessStatus {
        /// <summary>
        /// Default value. This value is unused.
        /// </summary>
        [pbr::OriginalName("BUSINESS_STATUS_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The establishment is operational, not necessarily open now.
        /// </summary>
        [pbr::OriginalName("OPERATIONAL")] Operational = 1,
        /// <summary>
        /// The establishment is temporarily closed.
        /// </summary>
        [pbr::OriginalName("CLOSED_TEMPORARILY")] ClosedTemporarily = 2,
        /// <summary>
        /// The establishment is permanently closed.
        /// </summary>
        [pbr::OriginalName("CLOSED_PERMANENTLY")] ClosedPermanently = 3,
      }

      /// <summary>
      /// The structured components that form the formatted address, if this
      /// information is available.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class AddressComponent : pb::IMessage<AddressComponent>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<AddressComponent> _parser = new pb::MessageParser<AddressComponent>(() => new AddressComponent());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<AddressComponent> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Maps.Places.V1.Place.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AddressComponent() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AddressComponent(AddressComponent other) : this() {
          longText_ = other.longText_;
          shortText_ = other.shortText_;
          types_ = other.types_.Clone();
          languageCode_ = other.languageCode_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AddressComponent Clone() {
          return new AddressComponent(this);
        }

        /// <summary>Field number for the "long_text" field.</summary>
        public const int LongTextFieldNumber = 1;
        private string longText_ = "";
        /// <summary>
        /// The full text description or name of the address component. For example,
        /// an address component for the country Australia may have a long_name of
        /// "Australia".
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string LongText {
          get { return longText_; }
          set {
            longText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "short_text" field.</summary>
        public const int ShortTextFieldNumber = 2;
        private string shortText_ = "";
        /// <summary>
        /// An abbreviated textual name for the address component, if available. For
        /// example, an address component for the country of Australia may have a
        /// short_name of "AU".
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ShortText {
          get { return shortText_; }
          set {
            shortText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "types" field.</summary>
        public const int Types_FieldNumber = 3;
        private static readonly pb::FieldCodec<string> _repeated_types_codec
            = pb::FieldCodec.ForString(26);
        private readonly pbc::RepeatedField<string> types_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// An array indicating the type(s) of the address component.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> Types_ {
          get { return types_; }
        }

        /// <summary>Field number for the "language_code" field.</summary>
        public const int LanguageCodeFieldNumber = 4;
        private string languageCode_ = "";
        /// <summary>
        /// The language used to format this components, in CLDR notation.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string LanguageCode {
          get { return languageCode_; }
          set {
            languageCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as AddressComponent);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(AddressComponent other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (LongText != other.LongText) return false;
          if (ShortText != other.ShortText) return false;
          if(!types_.Equals(other.types_)) return false;
          if (LanguageCode != other.LanguageCode) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (LongText.Length != 0) hash ^= LongText.GetHashCode();
          if (ShortText.Length != 0) hash ^= ShortText.GetHashCode();
          hash ^= types_.GetHashCode();
          if (LanguageCode.Length != 0) hash ^= LanguageCode.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (LongText.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(LongText);
          }
          if (ShortText.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(ShortText);
          }
          types_.WriteTo(output, _repeated_types_codec);
          if (LanguageCode.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(LanguageCode);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (LongText.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(LongText);
          }
          if (ShortText.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(ShortText);
          }
          types_.WriteTo(ref output, _repeated_types_codec);
          if (LanguageCode.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(LanguageCode);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (LongText.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(LongText);
          }
          if (ShortText.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ShortText);
          }
          size += types_.CalculateSize(_repeated_types_codec);
          if (LanguageCode.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(LanguageCode);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(AddressComponent other) {
          if (other == null) {
            return;
          }
          if (other.LongText.Length != 0) {
            LongText = other.LongText;
          }
          if (other.ShortText.Length != 0) {
            ShortText = other.ShortText;
          }
          types_.Add(other.types_);
          if (other.LanguageCode.Length != 0) {
            LanguageCode = other.LanguageCode;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                LongText = input.ReadString();
                break;
              }
              case 18: {
                ShortText = input.ReadString();
                break;
              }
              case 26: {
                types_.AddEntriesFrom(input, _repeated_types_codec);
                break;
              }
              case 34: {
                LanguageCode = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                LongText = input.ReadString();
                break;
              }
              case 18: {
                ShortText = input.ReadString();
                break;
              }
              case 26: {
                types_.AddEntriesFrom(ref input, _repeated_types_codec);
                break;
              }
              case 34: {
                LanguageCode = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Plus code (http://plus.codes) is a location reference with two formats:
      /// global code defining a 14mx14m (1/8000th of a degree) or smaller rectangle,
      /// and compound code, replacing the prefix with a reference location.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class PlusCode : pb::IMessage<PlusCode>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PlusCode> _parser = new pb::MessageParser<PlusCode>(() => new PlusCode());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PlusCode> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Maps.Places.V1.Place.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PlusCode() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PlusCode(PlusCode other) : this() {
          globalCode_ = other.globalCode_;
          compoundCode_ = other.compoundCode_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PlusCode Clone() {
          return new PlusCode(this);
        }

        /// <summary>Field number for the "global_code" field.</summary>
        public const int GlobalCodeFieldNumber = 1;
        private string globalCode_ = "";
        /// <summary>
        /// Place's global (full) code, such as "9FWM33GV+HQ", representing an
        /// 1/8000 by 1/8000 degree area (~14 by 14 meters).
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string GlobalCode {
          get { return globalCode_; }
          set {
            globalCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "compound_code" field.</summary>
        public const int CompoundCodeFieldNumber = 2;
        private string compoundCode_ = "";
        /// <summary>
        /// Place's compound code, such as "33GV+HQ, Ramberg, Norway", containing
        /// the suffix of the global code and replacing the prefix with a formatted
        /// name of a reference entity.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string CompoundCode {
          get { return compoundCode_; }
          set {
            compoundCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PlusCode);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PlusCode other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (GlobalCode != other.GlobalCode) return false;
          if (CompoundCode != other.CompoundCode) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (GlobalCode.Length != 0) hash ^= GlobalCode.GetHashCode();
          if (CompoundCode.Length != 0) hash ^= CompoundCode.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (GlobalCode.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(GlobalCode);
          }
          if (CompoundCode.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(CompoundCode);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (GlobalCode.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(GlobalCode);
          }
          if (CompoundCode.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(CompoundCode);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (GlobalCode.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(GlobalCode);
          }
          if (CompoundCode.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CompoundCode);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PlusCode other) {
          if (other == null) {
            return;
          }
          if (other.GlobalCode.Length != 0) {
            GlobalCode = other.GlobalCode;
          }
          if (other.CompoundCode.Length != 0) {
            CompoundCode = other.CompoundCode;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                GlobalCode = input.ReadString();
                break;
              }
              case 18: {
                CompoundCode = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                GlobalCode = input.ReadString();
                break;
              }
              case 18: {
                CompoundCode = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Information about business hour of the place.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class OpeningHours : pb::IMessage<OpeningHours>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<OpeningHours> _parser = new pb::MessageParser<OpeningHours>(() => new OpeningHours());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<OpeningHours> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Maps.Places.V1.Place.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OpeningHours() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OpeningHours(OpeningHours other) : this() {
          _hasBits0 = other._hasBits0;
          openNow_ = other.openNow_;
          periods_ = other.periods_.Clone();
          weekdayDescriptions_ = other.weekdayDescriptions_.Clone();
          secondaryHoursType_ = other.secondaryHoursType_;
          specialDays_ = other.specialDays_.Clone();
          nextOpenTime_ = other.nextOpenTime_ != null ? other.nextOpenTime_.Clone() : null;
          nextCloseTime_ = other.nextCloseTime_ != null ? other.nextCloseTime_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OpeningHours Clone() {
          return new OpeningHours(this);
        }

        /// <summary>Field number for the "open_now" field.</summary>
        public const int OpenNowFieldNumber = 1;
        private readonly static bool OpenNowDefaultValue = false;

        private bool openNow_;
        /// <summary>
        /// Whether the opening hours period is currently active. For regular opening
        /// hours and current opening hours, this field means whether the place is
        /// open. For secondary opening hours and current secondary opening hours,
        /// this field means whether the secondary hours of this place is active.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool OpenNow {
          get { if ((_hasBits0 & 1) != 0) { return openNow_; } else { return OpenNowDefaultValue; } }
          set {
            _hasBits0 |= 1;
            openNow_ = value;
          }
        }
        /// <summary>Gets whether the "open_now" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasOpenNow {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "open_now" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearOpenNow() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "periods" field.</summary>
        public const int PeriodsFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.Period> _repeated_periods_codec
            = pb::FieldCodec.ForMessage(18, global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.Period.Parser);
        private readonly pbc::RepeatedField<global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.Period> periods_ = new pbc::RepeatedField<global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.Period>();
        /// <summary>
        /// The periods that this place is open during the week. The periods are in
        /// chronological order, in the place-local timezone. An empty (but not
        /// absent) value indicates a place that is never open, e.g.
        /// because it is closed temporarily for renovations.
        ///
        /// The starting day of `periods` is NOT fixed and should not be assumed to
        /// be Sunday. The API determines the start day based on a variety of
        /// factors. For example, for a 24/7 business, the first period may begin on
        /// the day of the request. For other businesses, it might be the first day
        /// of the week that they are open.
        ///
        /// NOTE: The ordering of the `periods` array is independent of the ordering
        /// of the `weekday_descriptions` array. Do not assume they will begin on the
        /// same day.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.Period> Periods {
          get { return periods_; }
        }

        /// <summary>Field number for the "weekday_descriptions" field.</summary>
        public const int WeekdayDescriptionsFieldNumber = 3;
        private static readonly pb::FieldCodec<string> _repeated_weekdayDescriptions_codec
            = pb::FieldCodec.ForString(26);
        private readonly pbc::RepeatedField<string> weekdayDescriptions_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// Localized strings describing the opening hours of this place, one string
        /// for each day of the week.
        ///
        /// NOTE: The order of the days and the start of the week is determined by
        /// the locale (language and region). The ordering of the `periods` array is
        /// independent of the ordering of the `weekday_descriptions` array. Do not
        /// assume they will begin on the same day.
        ///
        /// Will be empty if the hours are unknown or could not be converted to
        /// localized text. Example: "Sun: 18:00–06:00"
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> WeekdayDescriptions {
          get { return weekdayDescriptions_; }
        }

        /// <summary>Field number for the "secondary_hours_type" field.</summary>
        public const int SecondaryHoursTypeFieldNumber = 4;
        private global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.SecondaryHoursType secondaryHoursType_ = global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.SecondaryHoursType.Unspecified;
        /// <summary>
        /// A type string used to identify the type of secondary hours.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.SecondaryHoursType SecondaryHoursType {
          get { return secondaryHoursType_; }
          set {
            secondaryHoursType_ = value;
          }
        }

        /// <summary>Field number for the "special_days" field.</summary>
        public const int SpecialDaysFieldNumber = 5;
        private static readonly pb::FieldCodec<global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.SpecialDay> _repeated_specialDays_codec
            = pb::FieldCodec.ForMessage(42, global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.SpecialDay.Parser);
        private readonly pbc::RepeatedField<global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.SpecialDay> specialDays_ = new pbc::RepeatedField<global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.SpecialDay>();
        /// <summary>
        /// Structured information for special days that fall within the period that
        /// the returned opening hours cover. Special days are days that could impact
        /// the business hours of a place, e.g. Christmas day. Set for
        /// current_opening_hours and current_secondary_opening_hours if there are
        /// exceptional hours.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.SpecialDay> SpecialDays {
          get { return specialDays_; }
        }

        /// <summary>Field number for the "next_open_time" field.</summary>
        public const int NextOpenTimeFieldNumber = 6;
        private global::Google.Protobuf.WellKnownTypes.Timestamp nextOpenTime_;
        /// <summary>
        /// The next time the current opening hours period starts up to 7 days in the
        /// future. This field is only populated if the opening hours period is not
        /// active at the time of serving the request.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Protobuf.WellKnownTypes.Timestamp NextOpenTime {
          get { return nextOpenTime_; }
          set {
            nextOpenTime_ = value;
          }
        }

        /// <summary>Field number for the "next_close_time" field.</summary>
        public const int NextCloseTimeFieldNumber = 7;
        private global::Google.Protobuf.WellKnownTypes.Timestamp nextCloseTime_;
        /// <summary>
        /// The next time the current opening hours period ends up to 7 days in the
        /// future. This field is only populated if the opening hours period is
        /// active at the time of serving the request.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Protobuf.WellKnownTypes.Timestamp NextCloseTime {
          get { return nextCloseTime_; }
          set {
            nextCloseTime_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as OpeningHours);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(OpeningHours other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OpenNow != other.OpenNow) return false;
          if(!periods_.Equals(other.periods_)) return false;
          if(!weekdayDescriptions_.Equals(other.weekdayDescriptions_)) return false;
          if (SecondaryHoursType != other.SecondaryHoursType) return false;
          if(!specialDays_.Equals(other.specialDays_)) return false;
          if (!object.Equals(NextOpenTime, other.NextOpenTime)) return false;
          if (!object.Equals(NextCloseTime, other.NextCloseTime)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasOpenNow) hash ^= OpenNow.GetHashCode();
          hash ^= periods_.GetHashCode();
          hash ^= weekdayDescriptions_.GetHashCode();
          if (SecondaryHoursType != global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.SecondaryHoursType.Unspecified) hash ^= SecondaryHoursType.GetHashCode();
          hash ^= specialDays_.GetHashCode();
          if (nextOpenTime_ != null) hash ^= NextOpenTime.GetHashCode();
          if (nextCloseTime_ != null) hash ^= NextCloseTime.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasOpenNow) {
            output.WriteRawTag(8);
            output.WriteBool(OpenNow);
          }
          periods_.WriteTo(output, _repeated_periods_codec);
          weekdayDescriptions_.WriteTo(output, _repeated_weekdayDescriptions_codec);
          if (SecondaryHoursType != global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.SecondaryHoursType.Unspecified) {
            output.WriteRawTag(32);
            output.WriteEnum((int) SecondaryHoursType);
          }
          specialDays_.WriteTo(output, _repeated_specialDays_codec);
          if (nextOpenTime_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(NextOpenTime);
          }
          if (nextCloseTime_ != null) {
            output.WriteRawTag(58);
            output.WriteMessage(NextCloseTime);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasOpenNow) {
            output.WriteRawTag(8);
            output.WriteBool(OpenNow);
          }
          periods_.WriteTo(ref output, _repeated_periods_codec);
          weekdayDescriptions_.WriteTo(ref output, _repeated_weekdayDescriptions_codec);
          if (SecondaryHoursType != global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.SecondaryHoursType.Unspecified) {
            output.WriteRawTag(32);
            output.WriteEnum((int) SecondaryHoursType);
          }
          specialDays_.WriteTo(ref output, _repeated_specialDays_codec);
          if (nextOpenTime_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(NextOpenTime);
          }
          if (nextCloseTime_ != null) {
            output.WriteRawTag(58);
            output.WriteMessage(NextCloseTime);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasOpenNow) {
            size += 1 + 1;
          }
          size += periods_.CalculateSize(_repeated_periods_codec);
          size += weekdayDescriptions_.CalculateSize(_repeated_weekdayDescriptions_codec);
          if (SecondaryHoursType != global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.SecondaryHoursType.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SecondaryHoursType);
          }
          size += specialDays_.CalculateSize(_repeated_specialDays_codec);
          if (nextOpenTime_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(NextOpenTime);
          }
          if (nextCloseTime_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(NextCloseTime);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(OpeningHours other) {
          if (other == null) {
            return;
          }
          if (other.HasOpenNow) {
            OpenNow = other.OpenNow;
          }
          periods_.Add(other.periods_);
          weekdayDescriptions_.Add(other.weekdayDescriptions_);
          if (other.SecondaryHoursType != global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.SecondaryHoursType.Unspecified) {
            SecondaryHoursType = other.SecondaryHoursType;
          }
          specialDays_.Add(other.specialDays_);
          if (other.nextOpenTime_ != null) {
            if (nextOpenTime_ == null) {
              NextOpenTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            NextOpenTime.MergeFrom(other.NextOpenTime);
          }
          if (other.nextCloseTime_ != null) {
            if (nextCloseTime_ == null) {
              NextCloseTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            NextCloseTime.MergeFrom(other.NextCloseTime);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                OpenNow = input.ReadBool();
                break;
              }
              case 18: {
                periods_.AddEntriesFrom(input, _repeated_periods_codec);
                break;
              }
              case 26: {
                weekdayDescriptions_.AddEntriesFrom(input, _repeated_weekdayDescriptions_codec);
                break;
              }
              case 32: {
                SecondaryHoursType = (global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.SecondaryHoursType) input.ReadEnum();
                break;
              }
              case 42: {
                specialDays_.AddEntriesFrom(input, _repeated_specialDays_codec);
                break;
              }
              case 50: {
                if (nextOpenTime_ == null) {
                  NextOpenTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(NextOpenTime);
                break;
              }
              case 58: {
                if (nextCloseTime_ == null) {
                  NextCloseTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(NextCloseTime);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                OpenNow = input.ReadBool();
                break;
              }
              case 18: {
                periods_.AddEntriesFrom(ref input, _repeated_periods_codec);
                break;
              }
              case 26: {
                weekdayDescriptions_.AddEntriesFrom(ref input, _repeated_weekdayDescriptions_codec);
                break;
              }
              case 32: {
                SecondaryHoursType = (global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.SecondaryHoursType) input.ReadEnum();
                break;
              }
              case 42: {
                specialDays_.AddEntriesFrom(ref input, _repeated_specialDays_codec);
                break;
              }
              case 50: {
                if (nextOpenTime_ == null) {
                  NextOpenTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(NextOpenTime);
                break;
              }
              case 58: {
                if (nextCloseTime_ == null) {
                  NextCloseTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(NextCloseTime);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the OpeningHours message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          /// <summary>
          /// A type used to identify the type of secondary hours.
          /// </summary>
          public enum SecondaryHoursType {
            /// <summary>
            /// Default value when secondary hour type is not specified.
            /// </summary>
            [pbr::OriginalName("SECONDARY_HOURS_TYPE_UNSPECIFIED")] Unspecified = 0,
            /// <summary>
            /// The drive-through hour for banks, restaurants, or pharmacies.
            /// </summary>
            [pbr::OriginalName("DRIVE_THROUGH")] DriveThrough = 1,
            /// <summary>
            /// The happy hour.
            /// </summary>
            [pbr::OriginalName("HAPPY_HOUR")] HappyHour = 2,
            /// <summary>
            /// The delivery hour.
            /// </summary>
            [pbr::OriginalName("DELIVERY")] Delivery = 3,
            /// <summary>
            /// The takeout hour.
            /// </summary>
            [pbr::OriginalName("TAKEOUT")] Takeout = 4,
            /// <summary>
            /// The kitchen hour.
            /// </summary>
            [pbr::OriginalName("KITCHEN")] Kitchen = 5,
            /// <summary>
            /// The breakfast hour.
            /// </summary>
            [pbr::OriginalName("BREAKFAST")] Breakfast = 6,
            /// <summary>
            /// The lunch hour.
            /// </summary>
            [pbr::OriginalName("LUNCH")] Lunch = 7,
            /// <summary>
            /// The dinner hour.
            /// </summary>
            [pbr::OriginalName("DINNER")] Dinner = 8,
            /// <summary>
            /// The brunch hour.
            /// </summary>
            [pbr::OriginalName("BRUNCH")] Brunch = 9,
            /// <summary>
            /// The pickup hour.
            /// </summary>
            [pbr::OriginalName("PICKUP")] Pickup = 10,
            /// <summary>
            /// The access hours for storage places.
            /// </summary>
            [pbr::OriginalName("ACCESS")] Access = 11,
            /// <summary>
            /// The special hours for seniors.
            /// </summary>
            [pbr::OriginalName("SENIOR_HOURS")] SeniorHours = 12,
            /// <summary>
            /// The online service hours.
            /// </summary>
            [pbr::OriginalName("ONLINE_SERVICE_HOURS")] OnlineServiceHours = 13,
          }

          /// <summary>
          /// A period the place remains in open_now status.
          /// </summary>
          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class Period : pb::IMessage<Period>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Period> _parser = new pb::MessageParser<Period>(() => new Period());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<Period> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Maps.Places.V1.Place.Types.OpeningHours.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Period() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Period(Period other) : this() {
              open_ = other.open_ != null ? other.open_.Clone() : null;
              close_ = other.close_ != null ? other.close_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Period Clone() {
              return new Period(this);
            }

            /// <summary>Field number for the "open" field.</summary>
            public const int OpenFieldNumber = 1;
            private global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.Period.Types.Point open_;
            /// <summary>
            /// The time that the place starts to be open.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.Period.Types.Point Open {
              get { return open_; }
              set {
                open_ = value;
              }
            }

            /// <summary>Field number for the "close" field.</summary>
            public const int CloseFieldNumber = 2;
            private global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.Period.Types.Point close_;
            /// <summary>
            /// The time that the place starts to be closed.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.Period.Types.Point Close {
              get { return close_; }
              set {
                close_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as Period);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(Period other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(Open, other.Open)) return false;
              if (!object.Equals(Close, other.Close)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (open_ != null) hash ^= Open.GetHashCode();
              if (close_ != null) hash ^= Close.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (open_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(Open);
              }
              if (close_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(Close);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (open_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(Open);
              }
              if (close_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(Close);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (open_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Open);
              }
              if (close_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Close);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(Period other) {
              if (other == null) {
                return;
              }
              if (other.open_ != null) {
                if (open_ == null) {
                  Open = new global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.Period.Types.Point();
                }
                Open.MergeFrom(other.Open);
              }
              if (other.close_ != null) {
                if (close_ == null) {
                  Close = new global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.Period.Types.Point();
                }
                Close.MergeFrom(other.Close);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (open_ == null) {
                      Open = new global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.Period.Types.Point();
                    }
                    input.ReadMessage(Open);
                    break;
                  }
                  case 18: {
                    if (close_ == null) {
                      Close = new global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.Period.Types.Point();
                    }
                    input.ReadMessage(Close);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    if (open_ == null) {
                      Open = new global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.Period.Types.Point();
                    }
                    input.ReadMessage(Open);
                    break;
                  }
                  case 18: {
                    if (close_ == null) {
                      Close = new global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.Period.Types.Point();
                    }
                    input.ReadMessage(Close);
                    break;
                  }
                }
              }
            }
            #endif

            #region Nested types
            /// <summary>Container for nested types declared in the Period message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static partial class Types {
              /// <summary>
              /// Status changing points.
              /// </summary>
              [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
              public sealed partial class Point : pb::IMessage<Point>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<Point> _parser = new pb::MessageParser<Point>(() => new Point());
                private pb::UnknownFieldSet _unknownFields;
                private int _hasBits0;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pb::MessageParser<Point> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.Period.Descriptor.NestedTypes[0]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public Point() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public Point(Point other) : this() {
                  _hasBits0 = other._hasBits0;
                  day_ = other.day_;
                  hour_ = other.hour_;
                  minute_ = other.minute_;
                  date_ = other.date_ != null ? other.date_.Clone() : null;
                  truncated_ = other.truncated_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public Point Clone() {
                  return new Point(this);
                }

                /// <summary>Field number for the "day" field.</summary>
                public const int DayFieldNumber = 1;
                private readonly static int DayDefaultValue = 0;

                private int day_;
                /// <summary>
                /// A day of the week, as an integer in the range 0-6.  0 is Sunday, 1 is
                /// Monday, etc.
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public int Day {
                  get { if ((_hasBits0 & 1) != 0) { return day_; } else { return DayDefaultValue; } }
                  set {
                    _hasBits0 |= 1;
                    day_ = value;
                  }
                }
                /// <summary>Gets whether the "day" field is set</summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool HasDay {
                  get { return (_hasBits0 & 1) != 0; }
                }
                /// <summary>Clears the value of the "day" field</summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void ClearDay() {
                  _hasBits0 &= ~1;
                }

                /// <summary>Field number for the "hour" field.</summary>
                public const int HourFieldNumber = 2;
                private readonly static int HourDefaultValue = 0;

                private int hour_;
                /// <summary>
                /// The hour in 24 hour format. Ranges from 0 to 23.
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public int Hour {
                  get { if ((_hasBits0 & 2) != 0) { return hour_; } else { return HourDefaultValue; } }
                  set {
                    _hasBits0 |= 2;
                    hour_ = value;
                  }
                }
                /// <summary>Gets whether the "hour" field is set</summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool HasHour {
                  get { return (_hasBits0 & 2) != 0; }
                }
                /// <summary>Clears the value of the "hour" field</summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void ClearHour() {
                  _hasBits0 &= ~2;
                }

                /// <summary>Field number for the "minute" field.</summary>
                public const int MinuteFieldNumber = 3;
                private readonly static int MinuteDefaultValue = 0;

                private int minute_;
                /// <summary>
                /// The minute. Ranges from 0 to 59.
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public int Minute {
                  get { if ((_hasBits0 & 4) != 0) { return minute_; } else { return MinuteDefaultValue; } }
                  set {
                    _hasBits0 |= 4;
                    minute_ = value;
                  }
                }
                /// <summary>Gets whether the "minute" field is set</summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool HasMinute {
                  get { return (_hasBits0 & 4) != 0; }
                }
                /// <summary>Clears the value of the "minute" field</summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void ClearMinute() {
                  _hasBits0 &= ~4;
                }

                /// <summary>Field number for the "date" field.</summary>
                public const int DateFieldNumber = 6;
                private global::Google.Type.Date date_;
                /// <summary>
                /// Date in the local timezone for the place.
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public global::Google.Type.Date Date {
                  get { return date_; }
                  set {
                    date_ = value;
                  }
                }

                /// <summary>Field number for the "truncated" field.</summary>
                public const int TruncatedFieldNumber = 5;
                private bool truncated_;
                /// <summary>
                /// Whether or not this endpoint was truncated. Truncation occurs when
                /// the real hours are outside the times we are willing to return hours
                /// between, so we truncate the hours back to these boundaries. This
                /// ensures that at most 24 * 7 hours from midnight of the day of the
                /// request are returned.
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool Truncated {
                  get { return truncated_; }
                  set {
                    truncated_ = value;
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override bool Equals(object other) {
                  return Equals(other as Point);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool Equals(Point other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (Day != other.Day) return false;
                  if (Hour != other.Hour) return false;
                  if (Minute != other.Minute) return false;
                  if (!object.Equals(Date, other.Date)) return false;
                  if (Truncated != other.Truncated) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override int GetHashCode() {
                  int hash = 1;
                  if (HasDay) hash ^= Day.GetHashCode();
                  if (HasHour) hash ^= Hour.GetHashCode();
                  if (HasMinute) hash ^= Minute.GetHashCode();
                  if (date_ != null) hash ^= Date.GetHashCode();
                  if (Truncated != false) hash ^= Truncated.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (HasDay) {
                    output.WriteRawTag(8);
                    output.WriteInt32(Day);
                  }
                  if (HasHour) {
                    output.WriteRawTag(16);
                    output.WriteInt32(Hour);
                  }
                  if (HasMinute) {
                    output.WriteRawTag(24);
                    output.WriteInt32(Minute);
                  }
                  if (Truncated != false) {
                    output.WriteRawTag(40);
                    output.WriteBool(Truncated);
                  }
                  if (date_ != null) {
                    output.WriteRawTag(50);
                    output.WriteMessage(Date);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (HasDay) {
                    output.WriteRawTag(8);
                    output.WriteInt32(Day);
                  }
                  if (HasHour) {
                    output.WriteRawTag(16);
                    output.WriteInt32(Hour);
                  }
                  if (HasMinute) {
                    output.WriteRawTag(24);
                    output.WriteInt32(Minute);
                  }
                  if (Truncated != false) {
                    output.WriteRawTag(40);
                    output.WriteBool(Truncated);
                  }
                  if (date_ != null) {
                    output.WriteRawTag(50);
                    output.WriteMessage(Date);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public int CalculateSize() {
                  int size = 0;
                  if (HasDay) {
                    size += 1 + pb::CodedOutputStream.ComputeInt32Size(Day);
                  }
                  if (HasHour) {
                    size += 1 + pb::CodedOutputStream.ComputeInt32Size(Hour);
                  }
                  if (HasMinute) {
                    size += 1 + pb::CodedOutputStream.ComputeInt32Size(Minute);
                  }
                  if (date_ != null) {
                    size += 1 + pb::CodedOutputStream.ComputeMessageSize(Date);
                  }
                  if (Truncated != false) {
                    size += 1 + 1;
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(Point other) {
                  if (other == null) {
                    return;
                  }
                  if (other.HasDay) {
                    Day = other.Day;
                  }
                  if (other.HasHour) {
                    Hour = other.Hour;
                  }
                  if (other.HasMinute) {
                    Minute = other.Minute;
                  }
                  if (other.date_ != null) {
                    if (date_ == null) {
                      Date = new global::Google.Type.Date();
                    }
                    Date.MergeFrom(other.Date);
                  }
                  if (other.Truncated != false) {
                    Truncated = other.Truncated;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 8: {
                        Day = input.ReadInt32();
                        break;
                      }
                      case 16: {
                        Hour = input.ReadInt32();
                        break;
                      }
                      case 24: {
                        Minute = input.ReadInt32();
                        break;
                      }
                      case 40: {
                        Truncated = input.ReadBool();
                        break;
                      }
                      case 50: {
                        if (date_ == null) {
                          Date = new global::Google.Type.Date();
                        }
                        input.ReadMessage(Date);
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 8: {
                        Day = input.ReadInt32();
                        break;
                      }
                      case 16: {
                        Hour = input.ReadInt32();
                        break;
                      }
                      case 24: {
                        Minute = input.ReadInt32();
                        break;
                      }
                      case 40: {
                        Truncated = input.ReadBool();
                        break;
                      }
                      case 50: {
                        if (date_ == null) {
                          Date = new global::Google.Type.Date();
                        }
                        input.ReadMessage(Date);
                        break;
                      }
                    }
                  }
                }
                #endif

              }

            }
            #endregion

          }

          /// <summary>
          /// Structured information for special days that fall within the period that
          /// the returned opening hours cover. Special days are days that could impact
          /// the business hours of a place, e.g. Christmas day.
          /// </summary>
          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class SpecialDay : pb::IMessage<SpecialDay>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<SpecialDay> _parser = new pb::MessageParser<SpecialDay>(() => new SpecialDay());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<SpecialDay> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Maps.Places.V1.Place.Types.OpeningHours.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public SpecialDay() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public SpecialDay(SpecialDay other) : this() {
              date_ = other.date_ != null ? other.date_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public SpecialDay Clone() {
              return new SpecialDay(this);
            }

            /// <summary>Field number for the "date" field.</summary>
            public const int DateFieldNumber = 1;
            private global::Google.Type.Date date_;
            /// <summary>
            /// The date of this special day.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Google.Type.Date Date {
              get { return date_; }
              set {
                date_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as SpecialDay);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(SpecialDay other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(Date, other.Date)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (date_ != null) hash ^= Date.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (date_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(Date);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (date_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(Date);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (date_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Date);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(SpecialDay other) {
              if (other == null) {
                return;
              }
              if (other.date_ != null) {
                if (date_ == null) {
                  Date = new global::Google.Type.Date();
                }
                Date.MergeFrom(other.Date);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (date_ == null) {
                      Date = new global::Google.Type.Date();
                    }
                    input.ReadMessage(Date);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    if (date_ == null) {
                      Date = new global::Google.Type.Date();
                    }
                    input.ReadMessage(Date);
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

      /// <summary>
      /// Information about data providers of this place.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Attribution : pb::IMessage<Attribution>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Attribution> _parser = new pb::MessageParser<Attribution>(() => new Attribution());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Attribution> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Maps.Places.V1.Place.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Attribution() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Attribution(Attribution other) : this() {
          provider_ = other.provider_;
          providerUri_ = other.providerUri_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Attribution Clone() {
          return new Attribution(this);
        }

        /// <summary>Field number for the "provider" field.</summary>
        public const int ProviderFieldNumber = 1;
        private string provider_ = "";
        /// <summary>
        /// Name of the Place's data provider.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Provider {
          get { return provider_; }
          set {
            provider_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "provider_uri" field.</summary>
        public const int ProviderUriFieldNumber = 2;
        private string providerUri_ = "";
        /// <summary>
        /// URI to the Place's data provider.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ProviderUri {
          get { return providerUri_; }
          set {
            providerUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Attribution);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Attribution other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Provider != other.Provider) return false;
          if (ProviderUri != other.ProviderUri) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Provider.Length != 0) hash ^= Provider.GetHashCode();
          if (ProviderUri.Length != 0) hash ^= ProviderUri.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Provider.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Provider);
          }
          if (ProviderUri.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(ProviderUri);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Provider.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Provider);
          }
          if (ProviderUri.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(ProviderUri);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Provider.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Provider);
          }
          if (ProviderUri.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ProviderUri);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Attribution other) {
          if (other == null) {
            return;
          }
          if (other.Provider.Length != 0) {
            Provider = other.Provider;
          }
          if (other.ProviderUri.Length != 0) {
            ProviderUri = other.ProviderUri;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Provider = input.ReadString();
                break;
              }
              case 18: {
                ProviderUri = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Provider = input.ReadString();
                break;
              }
              case 18: {
                ProviderUri = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Payment options the place accepts.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class PaymentOptions : pb::IMessage<PaymentOptions>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PaymentOptions> _parser = new pb::MessageParser<PaymentOptions>(() => new PaymentOptions());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PaymentOptions> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Maps.Places.V1.Place.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PaymentOptions() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PaymentOptions(PaymentOptions other) : this() {
          _hasBits0 = other._hasBits0;
          acceptsCreditCards_ = other.acceptsCreditCards_;
          acceptsDebitCards_ = other.acceptsDebitCards_;
          acceptsCashOnly_ = other.acceptsCashOnly_;
          acceptsNfc_ = other.acceptsNfc_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PaymentOptions Clone() {
          return new PaymentOptions(this);
        }

        /// <summary>Field number for the "accepts_credit_cards" field.</summary>
        public const int AcceptsCreditCardsFieldNumber = 1;
        private readonly static bool AcceptsCreditCardsDefaultValue = false;

        private bool acceptsCreditCards_;
        /// <summary>
        /// Place accepts credit cards as payment.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool AcceptsCreditCards {
          get { if ((_hasBits0 & 1) != 0) { return acceptsCreditCards_; } else { return AcceptsCreditCardsDefaultValue; } }
          set {
            _hasBits0 |= 1;
            acceptsCreditCards_ = value;
          }
        }
        /// <summary>Gets whether the "accepts_credit_cards" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasAcceptsCreditCards {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "accepts_credit_cards" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearAcceptsCreditCards() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "accepts_debit_cards" field.</summary>
        public const int AcceptsDebitCardsFieldNumber = 2;
        private readonly static bool AcceptsDebitCardsDefaultValue = false;

        private bool acceptsDebitCards_;
        /// <summary>
        /// Place accepts debit cards as payment.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool AcceptsDebitCards {
          get { if ((_hasBits0 & 2) != 0) { return acceptsDebitCards_; } else { return AcceptsDebitCardsDefaultValue; } }
          set {
            _hasBits0 |= 2;
            acceptsDebitCards_ = value;
          }
        }
        /// <summary>Gets whether the "accepts_debit_cards" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasAcceptsDebitCards {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "accepts_debit_cards" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearAcceptsDebitCards() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "accepts_cash_only" field.</summary>
        public const int AcceptsCashOnlyFieldNumber = 3;
        private readonly static bool AcceptsCashOnlyDefaultValue = false;

        private bool acceptsCashOnly_;
        /// <summary>
        /// Place accepts cash only as payment. Places with this attribute may still
        /// accept other payment methods.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool AcceptsCashOnly {
          get { if ((_hasBits0 & 4) != 0) { return acceptsCashOnly_; } else { return AcceptsCashOnlyDefaultValue; } }
          set {
            _hasBits0 |= 4;
            acceptsCashOnly_ = value;
          }
        }
        /// <summary>Gets whether the "accepts_cash_only" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasAcceptsCashOnly {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "accepts_cash_only" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearAcceptsCashOnly() {
          _hasBits0 &= ~4;
        }

        /// <summary>Field number for the "accepts_nfc" field.</summary>
        public const int AcceptsNfcFieldNumber = 4;
        private readonly static bool AcceptsNfcDefaultValue = false;

        private bool acceptsNfc_;
        /// <summary>
        /// Place accepts NFC payments.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool AcceptsNfc {
          get { if ((_hasBits0 & 8) != 0) { return acceptsNfc_; } else { return AcceptsNfcDefaultValue; } }
          set {
            _hasBits0 |= 8;
            acceptsNfc_ = value;
          }
        }
        /// <summary>Gets whether the "accepts_nfc" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasAcceptsNfc {
          get { return (_hasBits0 & 8) != 0; }
        }
        /// <summary>Clears the value of the "accepts_nfc" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearAcceptsNfc() {
          _hasBits0 &= ~8;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PaymentOptions);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PaymentOptions other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (AcceptsCreditCards != other.AcceptsCreditCards) return false;
          if (AcceptsDebitCards != other.AcceptsDebitCards) return false;
          if (AcceptsCashOnly != other.AcceptsCashOnly) return false;
          if (AcceptsNfc != other.AcceptsNfc) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasAcceptsCreditCards) hash ^= AcceptsCreditCards.GetHashCode();
          if (HasAcceptsDebitCards) hash ^= AcceptsDebitCards.GetHashCode();
          if (HasAcceptsCashOnly) hash ^= AcceptsCashOnly.GetHashCode();
          if (HasAcceptsNfc) hash ^= AcceptsNfc.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasAcceptsCreditCards) {
            output.WriteRawTag(8);
            output.WriteBool(AcceptsCreditCards);
          }
          if (HasAcceptsDebitCards) {
            output.WriteRawTag(16);
            output.WriteBool(AcceptsDebitCards);
          }
          if (HasAcceptsCashOnly) {
            output.WriteRawTag(24);
            output.WriteBool(AcceptsCashOnly);
          }
          if (HasAcceptsNfc) {
            output.WriteRawTag(32);
            output.WriteBool(AcceptsNfc);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasAcceptsCreditCards) {
            output.WriteRawTag(8);
            output.WriteBool(AcceptsCreditCards);
          }
          if (HasAcceptsDebitCards) {
            output.WriteRawTag(16);
            output.WriteBool(AcceptsDebitCards);
          }
          if (HasAcceptsCashOnly) {
            output.WriteRawTag(24);
            output.WriteBool(AcceptsCashOnly);
          }
          if (HasAcceptsNfc) {
            output.WriteRawTag(32);
            output.WriteBool(AcceptsNfc);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasAcceptsCreditCards) {
            size += 1 + 1;
          }
          if (HasAcceptsDebitCards) {
            size += 1 + 1;
          }
          if (HasAcceptsCashOnly) {
            size += 1 + 1;
          }
          if (HasAcceptsNfc) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PaymentOptions other) {
          if (other == null) {
            return;
          }
          if (other.HasAcceptsCreditCards) {
            AcceptsCreditCards = other.AcceptsCreditCards;
          }
          if (other.HasAcceptsDebitCards) {
            AcceptsDebitCards = other.AcceptsDebitCards;
          }
          if (other.HasAcceptsCashOnly) {
            AcceptsCashOnly = other.AcceptsCashOnly;
          }
          if (other.HasAcceptsNfc) {
            AcceptsNfc = other.AcceptsNfc;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                AcceptsCreditCards = input.ReadBool();
                break;
              }
              case 16: {
                AcceptsDebitCards = input.ReadBool();
                break;
              }
              case 24: {
                AcceptsCashOnly = input.ReadBool();
                break;
              }
              case 32: {
                AcceptsNfc = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                AcceptsCreditCards = input.ReadBool();
                break;
              }
              case 16: {
                AcceptsDebitCards = input.ReadBool();
                break;
              }
              case 24: {
                AcceptsCashOnly = input.ReadBool();
                break;
              }
              case 32: {
                AcceptsNfc = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Information about parking options for the place. A parking lot could
      /// support more than one option at the same time.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class ParkingOptions : pb::IMessage<ParkingOptions>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ParkingOptions> _parser = new pb::MessageParser<ParkingOptions>(() => new ParkingOptions());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<ParkingOptions> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Maps.Places.V1.Place.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ParkingOptions() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ParkingOptions(ParkingOptions other) : this() {
          _hasBits0 = other._hasBits0;
          freeParkingLot_ = other.freeParkingLot_;
          paidParkingLot_ = other.paidParkingLot_;
          freeStreetParking_ = other.freeStreetParking_;
          paidStreetParking_ = other.paidStreetParking_;
          valetParking_ = other.valetParking_;
          freeGarageParking_ = other.freeGarageParking_;
          paidGarageParking_ = other.paidGarageParking_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ParkingOptions Clone() {
          return new ParkingOptions(this);
        }

        /// <summary>Field number for the "free_parking_lot" field.</summary>
        public const int FreeParkingLotFieldNumber = 1;
        private readonly static bool FreeParkingLotDefaultValue = false;

        private bool freeParkingLot_;
        /// <summary>
        /// Place offers free parking lots.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool FreeParkingLot {
          get { if ((_hasBits0 & 1) != 0) { return freeParkingLot_; } else { return FreeParkingLotDefaultValue; } }
          set {
            _hasBits0 |= 1;
            freeParkingLot_ = value;
          }
        }
        /// <summary>Gets whether the "free_parking_lot" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasFreeParkingLot {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "free_parking_lot" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearFreeParkingLot() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "paid_parking_lot" field.</summary>
        public const int PaidParkingLotFieldNumber = 2;
        private readonly static bool PaidParkingLotDefaultValue = false;

        private bool paidParkingLot_;
        /// <summary>
        /// Place offers paid parking lots.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool PaidParkingLot {
          get { if ((_hasBits0 & 2) != 0) { return paidParkingLot_; } else { return PaidParkingLotDefaultValue; } }
          set {
            _hasBits0 |= 2;
            paidParkingLot_ = value;
          }
        }
        /// <summary>Gets whether the "paid_parking_lot" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasPaidParkingLot {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "paid_parking_lot" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearPaidParkingLot() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "free_street_parking" field.</summary>
        public const int FreeStreetParkingFieldNumber = 3;
        private readonly static bool FreeStreetParkingDefaultValue = false;

        private bool freeStreetParking_;
        /// <summary>
        /// Place offers free street parking.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool FreeStreetParking {
          get { if ((_hasBits0 & 4) != 0) { return freeStreetParking_; } else { return FreeStreetParkingDefaultValue; } }
          set {
            _hasBits0 |= 4;
            freeStreetParking_ = value;
          }
        }
        /// <summary>Gets whether the "free_street_parking" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasFreeStreetParking {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "free_street_parking" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearFreeStreetParking() {
          _hasBits0 &= ~4;
        }

        /// <summary>Field number for the "paid_street_parking" field.</summary>
        public const int PaidStreetParkingFieldNumber = 4;
        private readonly static bool PaidStreetParkingDefaultValue = false;

        private bool paidStreetParking_;
        /// <summary>
        /// Place offers paid street parking.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool PaidStreetParking {
          get { if ((_hasBits0 & 8) != 0) { return paidStreetParking_; } else { return PaidStreetParkingDefaultValue; } }
          set {
            _hasBits0 |= 8;
            paidStreetParking_ = value;
          }
        }
        /// <summary>Gets whether the "paid_street_parking" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasPaidStreetParking {
          get { return (_hasBits0 & 8) != 0; }
        }
        /// <summary>Clears the value of the "paid_street_parking" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearPaidStreetParking() {
          _hasBits0 &= ~8;
        }

        /// <summary>Field number for the "valet_parking" field.</summary>
        public const int ValetParkingFieldNumber = 5;
        private readonly static bool ValetParkingDefaultValue = false;

        private bool valetParking_;
        /// <summary>
        /// Place offers valet parking.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool ValetParking {
          get { if ((_hasBits0 & 16) != 0) { return valetParking_; } else { return ValetParkingDefaultValue; } }
          set {
            _hasBits0 |= 16;
            valetParking_ = value;
          }
        }
        /// <summary>Gets whether the "valet_parking" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasValetParking {
          get { return (_hasBits0 & 16) != 0; }
        }
        /// <summary>Clears the value of the "valet_parking" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearValetParking() {
          _hasBits0 &= ~16;
        }

        /// <summary>Field number for the "free_garage_parking" field.</summary>
        public const int FreeGarageParkingFieldNumber = 6;
        private readonly static bool FreeGarageParkingDefaultValue = false;

        private bool freeGarageParking_;
        /// <summary>
        /// Place offers free garage parking.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool FreeGarageParking {
          get { if ((_hasBits0 & 32) != 0) { return freeGarageParking_; } else { return FreeGarageParkingDefaultValue; } }
          set {
            _hasBits0 |= 32;
            freeGarageParking_ = value;
          }
        }
        /// <summary>Gets whether the "free_garage_parking" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasFreeGarageParking {
          get { return (_hasBits0 & 32) != 0; }
        }
        /// <summary>Clears the value of the "free_garage_parking" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearFreeGarageParking() {
          _hasBits0 &= ~32;
        }

        /// <summary>Field number for the "paid_garage_parking" field.</summary>
        public const int PaidGarageParkingFieldNumber = 7;
        private readonly static bool PaidGarageParkingDefaultValue = false;

        private bool paidGarageParking_;
        /// <summary>
        /// Place offers paid garage parking.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool PaidGarageParking {
          get { if ((_hasBits0 & 64) != 0) { return paidGarageParking_; } else { return PaidGarageParkingDefaultValue; } }
          set {
            _hasBits0 |= 64;
            paidGarageParking_ = value;
          }
        }
        /// <summary>Gets whether the "paid_garage_parking" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasPaidGarageParking {
          get { return (_hasBits0 & 64) != 0; }
        }
        /// <summary>Clears the value of the "paid_garage_parking" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearPaidGarageParking() {
          _hasBits0 &= ~64;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as ParkingOptions);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(ParkingOptions other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (FreeParkingLot != other.FreeParkingLot) return false;
          if (PaidParkingLot != other.PaidParkingLot) return false;
          if (FreeStreetParking != other.FreeStreetParking) return false;
          if (PaidStreetParking != other.PaidStreetParking) return false;
          if (ValetParking != other.ValetParking) return false;
          if (FreeGarageParking != other.FreeGarageParking) return false;
          if (PaidGarageParking != other.PaidGarageParking) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasFreeParkingLot) hash ^= FreeParkingLot.GetHashCode();
          if (HasPaidParkingLot) hash ^= PaidParkingLot.GetHashCode();
          if (HasFreeStreetParking) hash ^= FreeStreetParking.GetHashCode();
          if (HasPaidStreetParking) hash ^= PaidStreetParking.GetHashCode();
          if (HasValetParking) hash ^= ValetParking.GetHashCode();
          if (HasFreeGarageParking) hash ^= FreeGarageParking.GetHashCode();
          if (HasPaidGarageParking) hash ^= PaidGarageParking.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasFreeParkingLot) {
            output.WriteRawTag(8);
            output.WriteBool(FreeParkingLot);
          }
          if (HasPaidParkingLot) {
            output.WriteRawTag(16);
            output.WriteBool(PaidParkingLot);
          }
          if (HasFreeStreetParking) {
            output.WriteRawTag(24);
            output.WriteBool(FreeStreetParking);
          }
          if (HasPaidStreetParking) {
            output.WriteRawTag(32);
            output.WriteBool(PaidStreetParking);
          }
          if (HasValetParking) {
            output.WriteRawTag(40);
            output.WriteBool(ValetParking);
          }
          if (HasFreeGarageParking) {
            output.WriteRawTag(48);
            output.WriteBool(FreeGarageParking);
          }
          if (HasPaidGarageParking) {
            output.WriteRawTag(56);
            output.WriteBool(PaidGarageParking);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasFreeParkingLot) {
            output.WriteRawTag(8);
            output.WriteBool(FreeParkingLot);
          }
          if (HasPaidParkingLot) {
            output.WriteRawTag(16);
            output.WriteBool(PaidParkingLot);
          }
          if (HasFreeStreetParking) {
            output.WriteRawTag(24);
            output.WriteBool(FreeStreetParking);
          }
          if (HasPaidStreetParking) {
            output.WriteRawTag(32);
            output.WriteBool(PaidStreetParking);
          }
          if (HasValetParking) {
            output.WriteRawTag(40);
            output.WriteBool(ValetParking);
          }
          if (HasFreeGarageParking) {
            output.WriteRawTag(48);
            output.WriteBool(FreeGarageParking);
          }
          if (HasPaidGarageParking) {
            output.WriteRawTag(56);
            output.WriteBool(PaidGarageParking);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasFreeParkingLot) {
            size += 1 + 1;
          }
          if (HasPaidParkingLot) {
            size += 1 + 1;
          }
          if (HasFreeStreetParking) {
            size += 1 + 1;
          }
          if (HasPaidStreetParking) {
            size += 1 + 1;
          }
          if (HasValetParking) {
            size += 1 + 1;
          }
          if (HasFreeGarageParking) {
            size += 1 + 1;
          }
          if (HasPaidGarageParking) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(ParkingOptions other) {
          if (other == null) {
            return;
          }
          if (other.HasFreeParkingLot) {
            FreeParkingLot = other.FreeParkingLot;
          }
          if (other.HasPaidParkingLot) {
            PaidParkingLot = other.PaidParkingLot;
          }
          if (other.HasFreeStreetParking) {
            FreeStreetParking = other.FreeStreetParking;
          }
          if (other.HasPaidStreetParking) {
            PaidStreetParking = other.PaidStreetParking;
          }
          if (other.HasValetParking) {
            ValetParking = other.ValetParking;
          }
          if (other.HasFreeGarageParking) {
            FreeGarageParking = other.FreeGarageParking;
          }
          if (other.HasPaidGarageParking) {
            PaidGarageParking = other.PaidGarageParking;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                FreeParkingLot = input.ReadBool();
                break;
              }
              case 16: {
                PaidParkingLot = input.ReadBool();
                break;
              }
              case 24: {
                FreeStreetParking = input.ReadBool();
                break;
              }
              case 32: {
                PaidStreetParking = input.ReadBool();
                break;
              }
              case 40: {
                ValetParking = input.ReadBool();
                break;
              }
              case 48: {
                FreeGarageParking = input.ReadBool();
                break;
              }
              case 56: {
                PaidGarageParking = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                FreeParkingLot = input.ReadBool();
                break;
              }
              case 16: {
                PaidParkingLot = input.ReadBool();
                break;
              }
              case 24: {
                FreeStreetParking = input.ReadBool();
                break;
              }
              case 32: {
                PaidStreetParking = input.ReadBool();
                break;
              }
              case 40: {
                ValetParking = input.ReadBool();
                break;
              }
              case 48: {
                FreeGarageParking = input.ReadBool();
                break;
              }
              case 56: {
                PaidGarageParking = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Sub-destinations are specific places associated with a main place. These
      /// provide more specific destinations for users who are searching within a
      /// large or complex place, like an airport, national park, university, or
      /// stadium. For example, sub-destinations at an airport might include
      /// associated terminals and parking lots. Sub-destinations return the place ID
      /// and place resource name, which can be used in subsequent Place Details
      /// (New) requests to fetch richer details, including the sub-destination's
      /// display name and location.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class SubDestination : pb::IMessage<SubDestination>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SubDestination> _parser = new pb::MessageParser<SubDestination>(() => new SubDestination());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<SubDestination> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Maps.Places.V1.Place.Descriptor.NestedTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SubDestination() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SubDestination(SubDestination other) : this() {
          name_ = other.name_;
          id_ = other.id_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SubDestination Clone() {
          return new SubDestination(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private string name_ = "";
        /// <summary>
        /// The resource name of the sub-destination.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 2;
        private string id_ = "";
        /// <summary>
        /// The place id of the sub-destination.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as SubDestination);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(SubDestination other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if (Id != other.Id) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (Id.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Id);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (Id.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Id);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(SubDestination other) {
          if (other == null) {
            return;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                Id = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                Id = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Information about the accessibility options a place offers.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class AccessibilityOptions : pb::IMessage<AccessibilityOptions>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<AccessibilityOptions> _parser = new pb::MessageParser<AccessibilityOptions>(() => new AccessibilityOptions());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<AccessibilityOptions> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Maps.Places.V1.Place.Descriptor.NestedTypes[7]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AccessibilityOptions() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AccessibilityOptions(AccessibilityOptions other) : this() {
          _hasBits0 = other._hasBits0;
          wheelchairAccessibleParking_ = other.wheelchairAccessibleParking_;
          wheelchairAccessibleEntrance_ = other.wheelchairAccessibleEntrance_;
          wheelchairAccessibleRestroom_ = other.wheelchairAccessibleRestroom_;
          wheelchairAccessibleSeating_ = other.wheelchairAccessibleSeating_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AccessibilityOptions Clone() {
          return new AccessibilityOptions(this);
        }

        /// <summary>Field number for the "wheelchair_accessible_parking" field.</summary>
        public const int WheelchairAccessibleParkingFieldNumber = 1;
        private readonly static bool WheelchairAccessibleParkingDefaultValue = false;

        private bool wheelchairAccessibleParking_;
        /// <summary>
        /// Place offers wheelchair accessible parking.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool WheelchairAccessibleParking {
          get { if ((_hasBits0 & 1) != 0) { return wheelchairAccessibleParking_; } else { return WheelchairAccessibleParkingDefaultValue; } }
          set {
            _hasBits0 |= 1;
            wheelchairAccessibleParking_ = value;
          }
        }
        /// <summary>Gets whether the "wheelchair_accessible_parking" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasWheelchairAccessibleParking {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "wheelchair_accessible_parking" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearWheelchairAccessibleParking() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "wheelchair_accessible_entrance" field.</summary>
        public const int WheelchairAccessibleEntranceFieldNumber = 2;
        private readonly static bool WheelchairAccessibleEntranceDefaultValue = false;

        private bool wheelchairAccessibleEntrance_;
        /// <summary>
        /// Places has wheelchair accessible entrance.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool WheelchairAccessibleEntrance {
          get { if ((_hasBits0 & 2) != 0) { return wheelchairAccessibleEntrance_; } else { return WheelchairAccessibleEntranceDefaultValue; } }
          set {
            _hasBits0 |= 2;
            wheelchairAccessibleEntrance_ = value;
          }
        }
        /// <summary>Gets whether the "wheelchair_accessible_entrance" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasWheelchairAccessibleEntrance {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "wheelchair_accessible_entrance" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearWheelchairAccessibleEntrance() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "wheelchair_accessible_restroom" field.</summary>
        public const int WheelchairAccessibleRestroomFieldNumber = 3;
        private readonly static bool WheelchairAccessibleRestroomDefaultValue = false;

        private bool wheelchairAccessibleRestroom_;
        /// <summary>
        /// Place has wheelchair accessible restroom.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool WheelchairAccessibleRestroom {
          get { if ((_hasBits0 & 4) != 0) { return wheelchairAccessibleRestroom_; } else { return WheelchairAccessibleRestroomDefaultValue; } }
          set {
            _hasBits0 |= 4;
            wheelchairAccessibleRestroom_ = value;
          }
        }
        /// <summary>Gets whether the "wheelchair_accessible_restroom" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasWheelchairAccessibleRestroom {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "wheelchair_accessible_restroom" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearWheelchairAccessibleRestroom() {
          _hasBits0 &= ~4;
        }

        /// <summary>Field number for the "wheelchair_accessible_seating" field.</summary>
        public const int WheelchairAccessibleSeatingFieldNumber = 4;
        private readonly static bool WheelchairAccessibleSeatingDefaultValue = false;

        private bool wheelchairAccessibleSeating_;
        /// <summary>
        /// Place has wheelchair accessible seating.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool WheelchairAccessibleSeating {
          get { if ((_hasBits0 & 8) != 0) { return wheelchairAccessibleSeating_; } else { return WheelchairAccessibleSeatingDefaultValue; } }
          set {
            _hasBits0 |= 8;
            wheelchairAccessibleSeating_ = value;
          }
        }
        /// <summary>Gets whether the "wheelchair_accessible_seating" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasWheelchairAccessibleSeating {
          get { return (_hasBits0 & 8) != 0; }
        }
        /// <summary>Clears the value of the "wheelchair_accessible_seating" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearWheelchairAccessibleSeating() {
          _hasBits0 &= ~8;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as AccessibilityOptions);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(AccessibilityOptions other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (WheelchairAccessibleParking != other.WheelchairAccessibleParking) return false;
          if (WheelchairAccessibleEntrance != other.WheelchairAccessibleEntrance) return false;
          if (WheelchairAccessibleRestroom != other.WheelchairAccessibleRestroom) return false;
          if (WheelchairAccessibleSeating != other.WheelchairAccessibleSeating) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasWheelchairAccessibleParking) hash ^= WheelchairAccessibleParking.GetHashCode();
          if (HasWheelchairAccessibleEntrance) hash ^= WheelchairAccessibleEntrance.GetHashCode();
          if (HasWheelchairAccessibleRestroom) hash ^= WheelchairAccessibleRestroom.GetHashCode();
          if (HasWheelchairAccessibleSeating) hash ^= WheelchairAccessibleSeating.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasWheelchairAccessibleParking) {
            output.WriteRawTag(8);
            output.WriteBool(WheelchairAccessibleParking);
          }
          if (HasWheelchairAccessibleEntrance) {
            output.WriteRawTag(16);
            output.WriteBool(WheelchairAccessibleEntrance);
          }
          if (HasWheelchairAccessibleRestroom) {
            output.WriteRawTag(24);
            output.WriteBool(WheelchairAccessibleRestroom);
          }
          if (HasWheelchairAccessibleSeating) {
            output.WriteRawTag(32);
            output.WriteBool(WheelchairAccessibleSeating);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasWheelchairAccessibleParking) {
            output.WriteRawTag(8);
            output.WriteBool(WheelchairAccessibleParking);
          }
          if (HasWheelchairAccessibleEntrance) {
            output.WriteRawTag(16);
            output.WriteBool(WheelchairAccessibleEntrance);
          }
          if (HasWheelchairAccessibleRestroom) {
            output.WriteRawTag(24);
            output.WriteBool(WheelchairAccessibleRestroom);
          }
          if (HasWheelchairAccessibleSeating) {
            output.WriteRawTag(32);
            output.WriteBool(WheelchairAccessibleSeating);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasWheelchairAccessibleParking) {
            size += 1 + 1;
          }
          if (HasWheelchairAccessibleEntrance) {
            size += 1 + 1;
          }
          if (HasWheelchairAccessibleRestroom) {
            size += 1 + 1;
          }
          if (HasWheelchairAccessibleSeating) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(AccessibilityOptions other) {
          if (other == null) {
            return;
          }
          if (other.HasWheelchairAccessibleParking) {
            WheelchairAccessibleParking = other.WheelchairAccessibleParking;
          }
          if (other.HasWheelchairAccessibleEntrance) {
            WheelchairAccessibleEntrance = other.WheelchairAccessibleEntrance;
          }
          if (other.HasWheelchairAccessibleRestroom) {
            WheelchairAccessibleRestroom = other.WheelchairAccessibleRestroom;
          }
          if (other.HasWheelchairAccessibleSeating) {
            WheelchairAccessibleSeating = other.WheelchairAccessibleSeating;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                WheelchairAccessibleParking = input.ReadBool();
                break;
              }
              case 16: {
                WheelchairAccessibleEntrance = input.ReadBool();
                break;
              }
              case 24: {
                WheelchairAccessibleRestroom = input.ReadBool();
                break;
              }
              case 32: {
                WheelchairAccessibleSeating = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                WheelchairAccessibleParking = input.ReadBool();
                break;
              }
              case 16: {
                WheelchairAccessibleEntrance = input.ReadBool();
                break;
              }
              case 24: {
                WheelchairAccessibleRestroom = input.ReadBool();
                break;
              }
              case 32: {
                WheelchairAccessibleSeating = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// AI-generated summary of the place.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class GenerativeSummary : pb::IMessage<GenerativeSummary>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<GenerativeSummary> _parser = new pb::MessageParser<GenerativeSummary>(() => new GenerativeSummary());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<GenerativeSummary> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Maps.Places.V1.Place.Descriptor.NestedTypes[8]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GenerativeSummary() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GenerativeSummary(GenerativeSummary other) : this() {
          overview_ = other.overview_ != null ? other.overview_.Clone() : null;
          overviewFlagContentUri_ = other.overviewFlagContentUri_;
          disclosureText_ = other.disclosureText_ != null ? other.disclosureText_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GenerativeSummary Clone() {
          return new GenerativeSummary(this);
        }

        /// <summary>Field number for the "overview" field.</summary>
        public const int OverviewFieldNumber = 1;
        private global::Google.Type.LocalizedText overview_;
        /// <summary>
        /// The overview of the place.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Type.LocalizedText Overview {
          get { return overview_; }
          set {
            overview_ = value;
          }
        }

        /// <summary>Field number for the "overview_flag_content_uri" field.</summary>
        public const int OverviewFlagContentUriFieldNumber = 4;
        private string overviewFlagContentUri_ = "";
        /// <summary>
        /// A link where users can flag a problem with the overview summary.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string OverviewFlagContentUri {
          get { return overviewFlagContentUri_; }
          set {
            overviewFlagContentUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "disclosure_text" field.</summary>
        public const int DisclosureTextFieldNumber = 6;
        private global::Google.Type.LocalizedText disclosureText_;
        /// <summary>
        /// The AI disclosure message "Summarized with Gemini"
        /// (and its localized variants). This will be in the language specified in
        /// the request if available.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Type.LocalizedText DisclosureText {
          get { return disclosureText_; }
          set {
            disclosureText_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as GenerativeSummary);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(GenerativeSummary other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Overview, other.Overview)) return false;
          if (OverviewFlagContentUri != other.OverviewFlagContentUri) return false;
          if (!object.Equals(DisclosureText, other.DisclosureText)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (overview_ != null) hash ^= Overview.GetHashCode();
          if (OverviewFlagContentUri.Length != 0) hash ^= OverviewFlagContentUri.GetHashCode();
          if (disclosureText_ != null) hash ^= DisclosureText.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (overview_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Overview);
          }
          if (OverviewFlagContentUri.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(OverviewFlagContentUri);
          }
          if (disclosureText_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(DisclosureText);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (overview_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Overview);
          }
          if (OverviewFlagContentUri.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(OverviewFlagContentUri);
          }
          if (disclosureText_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(DisclosureText);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (overview_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Overview);
          }
          if (OverviewFlagContentUri.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(OverviewFlagContentUri);
          }
          if (disclosureText_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(DisclosureText);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(GenerativeSummary other) {
          if (other == null) {
            return;
          }
          if (other.overview_ != null) {
            if (overview_ == null) {
              Overview = new global::Google.Type.LocalizedText();
            }
            Overview.MergeFrom(other.Overview);
          }
          if (other.OverviewFlagContentUri.Length != 0) {
            OverviewFlagContentUri = other.OverviewFlagContentUri;
          }
          if (other.disclosureText_ != null) {
            if (disclosureText_ == null) {
              DisclosureText = new global::Google.Type.LocalizedText();
            }
            DisclosureText.MergeFrom(other.DisclosureText);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (overview_ == null) {
                  Overview = new global::Google.Type.LocalizedText();
                }
                input.ReadMessage(Overview);
                break;
              }
              case 34: {
                OverviewFlagContentUri = input.ReadString();
                break;
              }
              case 50: {
                if (disclosureText_ == null) {
                  DisclosureText = new global::Google.Type.LocalizedText();
                }
                input.ReadMessage(DisclosureText);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (overview_ == null) {
                  Overview = new global::Google.Type.LocalizedText();
                }
                input.ReadMessage(Overview);
                break;
              }
              case 34: {
                OverviewFlagContentUri = input.ReadString();
                break;
              }
              case 50: {
                if (disclosureText_ == null) {
                  DisclosureText = new global::Google.Type.LocalizedText();
                }
                input.ReadMessage(DisclosureText);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Info about the place in which this place is located.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class ContainingPlace : pb::IMessage<ContainingPlace>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ContainingPlace> _parser = new pb::MessageParser<ContainingPlace>(() => new ContainingPlace());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<ContainingPlace> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Maps.Places.V1.Place.Descriptor.NestedTypes[9]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ContainingPlace() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ContainingPlace(ContainingPlace other) : this() {
          name_ = other.name_;
          id_ = other.id_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ContainingPlace Clone() {
          return new ContainingPlace(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private string name_ = "";
        /// <summary>
        /// The resource name of the place in which this place is located.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 2;
        private string id_ = "";
        /// <summary>
        /// The place id of the place in which this place is located.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as ContainingPlace);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(ContainingPlace other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if (Id != other.Id) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (Id.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Id);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (Id.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Id);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(ContainingPlace other) {
          if (other == null) {
            return;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                Id = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                Id = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// AI-generated summary of the place using user reviews.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class ReviewSummary : pb::IMessage<ReviewSummary>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ReviewSummary> _parser = new pb::MessageParser<ReviewSummary>(() => new ReviewSummary());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<ReviewSummary> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Maps.Places.V1.Place.Descriptor.NestedTypes[10]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ReviewSummary() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ReviewSummary(ReviewSummary other) : this() {
          text_ = other.text_ != null ? other.text_.Clone() : null;
          flagContentUri_ = other.flagContentUri_;
          disclosureText_ = other.disclosureText_ != null ? other.disclosureText_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ReviewSummary Clone() {
          return new ReviewSummary(this);
        }

        /// <summary>Field number for the "text" field.</summary>
        public const int TextFieldNumber = 1;
        private global::Google.Type.LocalizedText text_;
        /// <summary>
        /// The summary of user reviews.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Type.LocalizedText Text {
          get { return text_; }
          set {
            text_ = value;
          }
        }

        /// <summary>Field number for the "flag_content_uri" field.</summary>
        public const int FlagContentUriFieldNumber = 2;
        private string flagContentUri_ = "";
        /// <summary>
        /// A link where users can flag a problem with the summary.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string FlagContentUri {
          get { return flagContentUri_; }
          set {
            flagContentUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "disclosure_text" field.</summary>
        public const int DisclosureTextFieldNumber = 3;
        private global::Google.Type.LocalizedText disclosureText_;
        /// <summary>
        /// The AI disclosure message "Summarized with Gemini"
        /// (and its localized variants). This will be in the language specified in
        /// the request if available.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Type.LocalizedText DisclosureText {
          get { return disclosureText_; }
          set {
            disclosureText_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as ReviewSummary);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(ReviewSummary other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Text, other.Text)) return false;
          if (FlagContentUri != other.FlagContentUri) return false;
          if (!object.Equals(DisclosureText, other.DisclosureText)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (text_ != null) hash ^= Text.GetHashCode();
          if (FlagContentUri.Length != 0) hash ^= FlagContentUri.GetHashCode();
          if (disclosureText_ != null) hash ^= DisclosureText.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (text_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Text);
          }
          if (FlagContentUri.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(FlagContentUri);
          }
          if (disclosureText_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(DisclosureText);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (text_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Text);
          }
          if (FlagContentUri.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(FlagContentUri);
          }
          if (disclosureText_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(DisclosureText);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (text_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Text);
          }
          if (FlagContentUri.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(FlagContentUri);
          }
          if (disclosureText_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(DisclosureText);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(ReviewSummary other) {
          if (other == null) {
            return;
          }
          if (other.text_ != null) {
            if (text_ == null) {
              Text = new global::Google.Type.LocalizedText();
            }
            Text.MergeFrom(other.Text);
          }
          if (other.FlagContentUri.Length != 0) {
            FlagContentUri = other.FlagContentUri;
          }
          if (other.disclosureText_ != null) {
            if (disclosureText_ == null) {
              DisclosureText = new global::Google.Type.LocalizedText();
            }
            DisclosureText.MergeFrom(other.DisclosureText);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (text_ == null) {
                  Text = new global::Google.Type.LocalizedText();
                }
                input.ReadMessage(Text);
                break;
              }
              case 18: {
                FlagContentUri = input.ReadString();
                break;
              }
              case 26: {
                if (disclosureText_ == null) {
                  DisclosureText = new global::Google.Type.LocalizedText();
                }
                input.ReadMessage(DisclosureText);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (text_ == null) {
                  Text = new global::Google.Type.LocalizedText();
                }
                input.ReadMessage(Text);
                break;
              }
              case 18: {
                FlagContentUri = input.ReadString();
                break;
              }
              case 26: {
                if (disclosureText_ == null) {
                  DisclosureText = new global::Google.Type.LocalizedText();
                }
                input.ReadMessage(DisclosureText);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// The summary of amenities near the EV charging station. This only applies to
      /// places with type `electric_vehicle_charging_station`. The `overview` field
      /// is guaranteed to be provided while the other fields are optional.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class EvChargeAmenitySummary : pb::IMessage<EvChargeAmenitySummary>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<EvChargeAmenitySummary> _parser = new pb::MessageParser<EvChargeAmenitySummary>(() => new EvChargeAmenitySummary());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<EvChargeAmenitySummary> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Maps.Places.V1.Place.Descriptor.NestedTypes[11]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public EvChargeAmenitySummary() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public EvChargeAmenitySummary(EvChargeAmenitySummary other) : this() {
          overview_ = other.overview_ != null ? other.overview_.Clone() : null;
          coffee_ = other.coffee_ != null ? other.coffee_.Clone() : null;
          restaurant_ = other.restaurant_ != null ? other.restaurant_.Clone() : null;
          store_ = other.store_ != null ? other.store_.Clone() : null;
          flagContentUri_ = other.flagContentUri_;
          disclosureText_ = other.disclosureText_ != null ? other.disclosureText_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public EvChargeAmenitySummary Clone() {
          return new EvChargeAmenitySummary(this);
        }

        /// <summary>Field number for the "overview" field.</summary>
        public const int OverviewFieldNumber = 1;
        private global::Google.Maps.Places.V1.ContentBlock overview_;
        /// <summary>
        /// An overview of the available amenities. This is guaranteed to be
        /// provided.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Maps.Places.V1.ContentBlock Overview {
          get { return overview_; }
          set {
            overview_ = value;
          }
        }

        /// <summary>Field number for the "coffee" field.</summary>
        public const int CoffeeFieldNumber = 2;
        private global::Google.Maps.Places.V1.ContentBlock coffee_;
        /// <summary>
        /// A summary of the nearby coffee options.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Maps.Places.V1.ContentBlock Coffee {
          get { return coffee_; }
          set {
            coffee_ = value;
          }
        }

        /// <summary>Field number for the "restaurant" field.</summary>
        public const int RestaurantFieldNumber = 3;
        private global::Google.Maps.Places.V1.ContentBlock restaurant_;
        /// <summary>
        /// A summary of the nearby restaurants.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Maps.Places.V1.ContentBlock Restaurant {
          get { return restaurant_; }
          set {
            restaurant_ = value;
          }
        }

        /// <summary>Field number for the "store" field.</summary>
        public const int StoreFieldNumber = 4;
        private global::Google.Maps.Places.V1.ContentBlock store_;
        /// <summary>
        /// A summary of the nearby gas stations.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Maps.Places.V1.ContentBlock Store {
          get { return store_; }
          set {
            store_ = value;
          }
        }

        /// <summary>Field number for the "flag_content_uri" field.</summary>
        public const int FlagContentUriFieldNumber = 5;
        private string flagContentUri_ = "";
        /// <summary>
        /// A link where users can flag a problem with the summary.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string FlagContentUri {
          get { return flagContentUri_; }
          set {
            flagContentUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "disclosure_text" field.</summary>
        public const int DisclosureTextFieldNumber = 6;
        private global::Google.Type.LocalizedText disclosureText_;
        /// <summary>
        /// The AI disclosure message "Summarized with Gemini"
        /// (and its localized variants). This will be in the language specified in
        /// the request if available.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Type.LocalizedText DisclosureText {
          get { return disclosureText_; }
          set {
            disclosureText_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as EvChargeAmenitySummary);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(EvChargeAmenitySummary other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Overview, other.Overview)) return false;
          if (!object.Equals(Coffee, other.Coffee)) return false;
          if (!object.Equals(Restaurant, other.Restaurant)) return false;
          if (!object.Equals(Store, other.Store)) return false;
          if (FlagContentUri != other.FlagContentUri) return false;
          if (!object.Equals(DisclosureText, other.DisclosureText)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (overview_ != null) hash ^= Overview.GetHashCode();
          if (coffee_ != null) hash ^= Coffee.GetHashCode();
          if (restaurant_ != null) hash ^= Restaurant.GetHashCode();
          if (store_ != null) hash ^= Store.GetHashCode();
          if (FlagContentUri.Length != 0) hash ^= FlagContentUri.GetHashCode();
          if (disclosureText_ != null) hash ^= DisclosureText.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (overview_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Overview);
          }
          if (coffee_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Coffee);
          }
          if (restaurant_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Restaurant);
          }
          if (store_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(Store);
          }
          if (FlagContentUri.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(FlagContentUri);
          }
          if (disclosureText_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(DisclosureText);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (overview_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Overview);
          }
          if (coffee_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Coffee);
          }
          if (restaurant_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Restaurant);
          }
          if (store_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(Store);
          }
          if (FlagContentUri.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(FlagContentUri);
          }
          if (disclosureText_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(DisclosureText);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (overview_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Overview);
          }
          if (coffee_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Coffee);
          }
          if (restaurant_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Restaurant);
          }
          if (store_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Store);
          }
          if (FlagContentUri.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(FlagContentUri);
          }
          if (disclosureText_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(DisclosureText);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(EvChargeAmenitySummary other) {
          if (other == null) {
            return;
          }
          if (other.overview_ != null) {
            if (overview_ == null) {
              Overview = new global::Google.Maps.Places.V1.ContentBlock();
            }
            Overview.MergeFrom(other.Overview);
          }
          if (other.coffee_ != null) {
            if (coffee_ == null) {
              Coffee = new global::Google.Maps.Places.V1.ContentBlock();
            }
            Coffee.MergeFrom(other.Coffee);
          }
          if (other.restaurant_ != null) {
            if (restaurant_ == null) {
              Restaurant = new global::Google.Maps.Places.V1.ContentBlock();
            }
            Restaurant.MergeFrom(other.Restaurant);
          }
          if (other.store_ != null) {
            if (store_ == null) {
              Store = new global::Google.Maps.Places.V1.ContentBlock();
            }
            Store.MergeFrom(other.Store);
          }
          if (other.FlagContentUri.Length != 0) {
            FlagContentUri = other.FlagContentUri;
          }
          if (other.disclosureText_ != null) {
            if (disclosureText_ == null) {
              DisclosureText = new global::Google.Type.LocalizedText();
            }
            DisclosureText.MergeFrom(other.DisclosureText);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (overview_ == null) {
                  Overview = new global::Google.Maps.Places.V1.ContentBlock();
                }
                input.ReadMessage(Overview);
                break;
              }
              case 18: {
                if (coffee_ == null) {
                  Coffee = new global::Google.Maps.Places.V1.ContentBlock();
                }
                input.ReadMessage(Coffee);
                break;
              }
              case 26: {
                if (restaurant_ == null) {
                  Restaurant = new global::Google.Maps.Places.V1.ContentBlock();
                }
                input.ReadMessage(Restaurant);
                break;
              }
              case 34: {
                if (store_ == null) {
                  Store = new global::Google.Maps.Places.V1.ContentBlock();
                }
                input.ReadMessage(Store);
                break;
              }
              case 42: {
                FlagContentUri = input.ReadString();
                break;
              }
              case 50: {
                if (disclosureText_ == null) {
                  DisclosureText = new global::Google.Type.LocalizedText();
                }
                input.ReadMessage(DisclosureText);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (overview_ == null) {
                  Overview = new global::Google.Maps.Places.V1.ContentBlock();
                }
                input.ReadMessage(Overview);
                break;
              }
              case 18: {
                if (coffee_ == null) {
                  Coffee = new global::Google.Maps.Places.V1.ContentBlock();
                }
                input.ReadMessage(Coffee);
                break;
              }
              case 26: {
                if (restaurant_ == null) {
                  Restaurant = new global::Google.Maps.Places.V1.ContentBlock();
                }
                input.ReadMessage(Restaurant);
                break;
              }
              case 34: {
                if (store_ == null) {
                  Store = new global::Google.Maps.Places.V1.ContentBlock();
                }
                input.ReadMessage(Store);
                break;
              }
              case 42: {
                FlagContentUri = input.ReadString();
                break;
              }
              case 50: {
                if (disclosureText_ == null) {
                  DisclosureText = new global::Google.Type.LocalizedText();
                }
                input.ReadMessage(DisclosureText);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// A summary of points of interest near the place.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class NeighborhoodSummary : pb::IMessage<NeighborhoodSummary>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<NeighborhoodSummary> _parser = new pb::MessageParser<NeighborhoodSummary>(() => new NeighborhoodSummary());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<NeighborhoodSummary> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Maps.Places.V1.Place.Descriptor.NestedTypes[12]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public NeighborhoodSummary() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public NeighborhoodSummary(NeighborhoodSummary other) : this() {
          overview_ = other.overview_ != null ? other.overview_.Clone() : null;
          description_ = other.description_ != null ? other.description_.Clone() : null;
          flagContentUri_ = other.flagContentUri_;
          disclosureText_ = other.disclosureText_ != null ? other.disclosureText_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public NeighborhoodSummary Clone() {
          return new NeighborhoodSummary(this);
        }

        /// <summary>Field number for the "overview" field.</summary>
        public const int OverviewFieldNumber = 1;
        private global::Google.Maps.Places.V1.ContentBlock overview_;
        /// <summary>
        /// An overview summary of the neighborhood.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Maps.Places.V1.ContentBlock Overview {
          get { return overview_; }
          set {
            overview_ = value;
          }
        }

        /// <summary>Field number for the "description" field.</summary>
        public const int DescriptionFieldNumber = 2;
        private global::Google.Maps.Places.V1.ContentBlock description_;
        /// <summary>
        /// A detailed description of the neighborhood.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Maps.Places.V1.ContentBlock Description {
          get { return description_; }
          set {
            description_ = value;
          }
        }

        /// <summary>Field number for the "flag_content_uri" field.</summary>
        public const int FlagContentUriFieldNumber = 3;
        private string flagContentUri_ = "";
        /// <summary>
        /// A link where users can flag a problem with the summary.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string FlagContentUri {
          get { return flagContentUri_; }
          set {
            flagContentUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "disclosure_text" field.</summary>
        public const int DisclosureTextFieldNumber = 4;
        private global::Google.Type.LocalizedText disclosureText_;
        /// <summary>
        /// The AI disclosure message "Summarized with Gemini"
        /// (and its localized variants). This will be in the language specified in
        /// the request if available.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Type.LocalizedText DisclosureText {
          get { return disclosureText_; }
          set {
            disclosureText_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as NeighborhoodSummary);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(NeighborhoodSummary other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Overview, other.Overview)) return false;
          if (!object.Equals(Description, other.Description)) return false;
          if (FlagContentUri != other.FlagContentUri) return false;
          if (!object.Equals(DisclosureText, other.DisclosureText)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (overview_ != null) hash ^= Overview.GetHashCode();
          if (description_ != null) hash ^= Description.GetHashCode();
          if (FlagContentUri.Length != 0) hash ^= FlagContentUri.GetHashCode();
          if (disclosureText_ != null) hash ^= DisclosureText.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (overview_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Overview);
          }
          if (description_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Description);
          }
          if (FlagContentUri.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(FlagContentUri);
          }
          if (disclosureText_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(DisclosureText);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (overview_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Overview);
          }
          if (description_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Description);
          }
          if (FlagContentUri.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(FlagContentUri);
          }
          if (disclosureText_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(DisclosureText);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (overview_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Overview);
          }
          if (description_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Description);
          }
          if (FlagContentUri.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(FlagContentUri);
          }
          if (disclosureText_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(DisclosureText);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(NeighborhoodSummary other) {
          if (other == null) {
            return;
          }
          if (other.overview_ != null) {
            if (overview_ == null) {
              Overview = new global::Google.Maps.Places.V1.ContentBlock();
            }
            Overview.MergeFrom(other.Overview);
          }
          if (other.description_ != null) {
            if (description_ == null) {
              Description = new global::Google.Maps.Places.V1.ContentBlock();
            }
            Description.MergeFrom(other.Description);
          }
          if (other.FlagContentUri.Length != 0) {
            FlagContentUri = other.FlagContentUri;
          }
          if (other.disclosureText_ != null) {
            if (disclosureText_ == null) {
              DisclosureText = new global::Google.Type.LocalizedText();
            }
            DisclosureText.MergeFrom(other.DisclosureText);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (overview_ == null) {
                  Overview = new global::Google.Maps.Places.V1.ContentBlock();
                }
                input.ReadMessage(Overview);
                break;
              }
              case 18: {
                if (description_ == null) {
                  Description = new global::Google.Maps.Places.V1.ContentBlock();
                }
                input.ReadMessage(Description);
                break;
              }
              case 26: {
                FlagContentUri = input.ReadString();
                break;
              }
              case 34: {
                if (disclosureText_ == null) {
                  DisclosureText = new global::Google.Type.LocalizedText();
                }
                input.ReadMessage(DisclosureText);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (overview_ == null) {
                  Overview = new global::Google.Maps.Places.V1.ContentBlock();
                }
                input.ReadMessage(Overview);
                break;
              }
              case 18: {
                if (description_ == null) {
                  Description = new global::Google.Maps.Places.V1.ContentBlock();
                }
                input.ReadMessage(Description);
                break;
              }
              case 26: {
                FlagContentUri = input.ReadString();
                break;
              }
              case 34: {
                if (disclosureText_ == null) {
                  DisclosureText = new global::Google.Type.LocalizedText();
                }
                input.ReadMessage(DisclosureText);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
