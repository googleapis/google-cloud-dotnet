// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/maps/places/v1/address_descriptor.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Maps.Places.V1 {

  /// <summary>Holder for reflection information generated from google/maps/places/v1/address_descriptor.proto</summary>
  public static partial class AddressDescriptorReflection {

    #region Descriptor
    /// <summary>File descriptor for google/maps/places/v1/address_descriptor.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AddressDescriptorReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci5nb29nbGUvbWFwcy9wbGFjZXMvdjEvYWRkcmVzc19kZXNjcmlwdG9yLnBy",
            "b3RvEhVnb29nbGUubWFwcy5wbGFjZXMudjEaGWdvb2dsZS9hcGkvcmVzb3Vy",
            "Y2UucHJvdG8aIGdvb2dsZS90eXBlL2xvY2FsaXplZF90ZXh0LnByb3RvIpYH",
            "ChFBZGRyZXNzRGVzY3JpcHRvchJECglsYW5kbWFya3MYASADKAsyMS5nb29n",
            "bGUubWFwcy5wbGFjZXMudjEuQWRkcmVzc0Rlc2NyaXB0b3IuTGFuZG1hcmsS",
            "PAoFYXJlYXMYAiADKAsyLS5nb29nbGUubWFwcy5wbGFjZXMudjEuQWRkcmVz",
            "c0Rlc2NyaXB0b3IuQXJlYRreAwoITGFuZG1hcmsSLgoEbmFtZRgBIAEoCUIg",
            "+kEdChtwbGFjZXMuZ29vZ2xlYXBpcy5jb20vUGxhY2USEAoIcGxhY2VfaWQY",
            "AiABKAkSMAoMZGlzcGxheV9uYW1lGAMgASgLMhouZ29vZ2xlLnR5cGUuTG9j",
            "YWxpemVkVGV4dBINCgV0eXBlcxgEIAMoCRJjChRzcGF0aWFsX3JlbGF0aW9u",
            "c2hpcBgFIAEoDjJFLmdvb2dsZS5tYXBzLnBsYWNlcy52MS5BZGRyZXNzRGVz",
            "Y3JpcHRvci5MYW5kbWFyay5TcGF0aWFsUmVsYXRpb25zaGlwEiUKHXN0cmFp",
            "Z2h0X2xpbmVfZGlzdGFuY2VfbWV0ZXJzGAYgASgCEiMKFnRyYXZlbF9kaXN0",
            "YW5jZV9tZXRlcnMYByABKAJIAIgBASKCAQoTU3BhdGlhbFJlbGF0aW9uc2hp",
            "cBIICgRORUFSEAASCgoGV0lUSElOEAESCgoGQkVTSURFEAISEwoPQUNST1NT",
            "X1RIRV9ST0FEEAMSEQoNRE9XTl9USEVfUk9BRBAEEhUKEUFST1VORF9USEVf",
            "Q09STkVSEAUSCgoGQkVISU5EEAZCGQoXX3RyYXZlbF9kaXN0YW5jZV9tZXRl",
            "cnMamwIKBEFyZWESLgoEbmFtZRgBIAEoCUIg+kEdChtwbGFjZXMuZ29vZ2xl",
            "YXBpcy5jb20vUGxhY2USEAoIcGxhY2VfaWQYAiABKAkSMAoMZGlzcGxheV9u",
            "YW1lGAMgASgLMhouZ29vZ2xlLnR5cGUuTG9jYWxpemVkVGV4dBJOCgtjb250",
            "YWlubWVudBgEIAEoDjI5Lmdvb2dsZS5tYXBzLnBsYWNlcy52MS5BZGRyZXNz",
            "RGVzY3JpcHRvci5BcmVhLkNvbnRhaW5tZW50Ik8KC0NvbnRhaW5tZW50EhsK",
            "F0NPTlRBSU5NRU5UX1VOU1BFQ0lGSUVEEAASCgoGV0lUSElOEAESDQoJT1VU",
            "U0tJUlRTEAISCAoETkVBUhADQqcBChljb20uZ29vZ2xlLm1hcHMucGxhY2Vz",
            "LnYxQhZBZGRyZXNzRGVzY3JpcHRvclByb3RvUAFaN2Nsb3VkLmdvb2dsZS5j",
            "b20vZ28vbWFwcy9wbGFjZXMvYXBpdjEvcGxhY2VzcGI7cGxhY2VzcGKiAgZH",
            "TVBTVjGqAhVHb29nbGUuTWFwcy5QbGFjZXMuVjHKAhVHb29nbGVcTWFwc1xQ",
            "bGFjZXNcVjFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.ResourceReflection.Descriptor, global::Google.Type.LocalizedTextReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Maps.Places.V1.AddressDescriptor), global::Google.Maps.Places.V1.AddressDescriptor.Parser, new[]{ "Landmarks", "Areas" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Maps.Places.V1.AddressDescriptor.Types.Landmark), global::Google.Maps.Places.V1.AddressDescriptor.Types.Landmark.Parser, new[]{ "Name", "PlaceId", "DisplayName", "Types_", "SpatialRelationship", "StraightLineDistanceMeters", "TravelDistanceMeters" }, new[]{ "TravelDistanceMeters" }, new[]{ typeof(global::Google.Maps.Places.V1.AddressDescriptor.Types.Landmark.Types.SpatialRelationship) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Maps.Places.V1.AddressDescriptor.Types.Area), global::Google.Maps.Places.V1.AddressDescriptor.Types.Area.Parser, new[]{ "Name", "PlaceId", "DisplayName", "Containment" }, null, new[]{ typeof(global::Google.Maps.Places.V1.AddressDescriptor.Types.Area.Types.Containment) }, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A relational description of a location. Includes a ranked set of nearby
  /// landmarks and precise containing areas and their relationship to the target
  /// location.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AddressDescriptor : pb::IMessage<AddressDescriptor>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AddressDescriptor> _parser = new pb::MessageParser<AddressDescriptor>(() => new AddressDescriptor());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AddressDescriptor> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Maps.Places.V1.AddressDescriptorReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AddressDescriptor() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AddressDescriptor(AddressDescriptor other) : this() {
      landmarks_ = other.landmarks_.Clone();
      areas_ = other.areas_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AddressDescriptor Clone() {
      return new AddressDescriptor(this);
    }

    /// <summary>Field number for the "landmarks" field.</summary>
    public const int LandmarksFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Maps.Places.V1.AddressDescriptor.Types.Landmark> _repeated_landmarks_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Maps.Places.V1.AddressDescriptor.Types.Landmark.Parser);
    private readonly pbc::RepeatedField<global::Google.Maps.Places.V1.AddressDescriptor.Types.Landmark> landmarks_ = new pbc::RepeatedField<global::Google.Maps.Places.V1.AddressDescriptor.Types.Landmark>();
    /// <summary>
    /// A ranked list of nearby landmarks. The most recognizable and nearby
    /// landmarks are ranked first.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Maps.Places.V1.AddressDescriptor.Types.Landmark> Landmarks {
      get { return landmarks_; }
    }

    /// <summary>Field number for the "areas" field.</summary>
    public const int AreasFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Maps.Places.V1.AddressDescriptor.Types.Area> _repeated_areas_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Maps.Places.V1.AddressDescriptor.Types.Area.Parser);
    private readonly pbc::RepeatedField<global::Google.Maps.Places.V1.AddressDescriptor.Types.Area> areas_ = new pbc::RepeatedField<global::Google.Maps.Places.V1.AddressDescriptor.Types.Area>();
    /// <summary>
    /// A ranked list of containing or adjacent areas. The most recognizable and
    /// precise areas are ranked first.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Maps.Places.V1.AddressDescriptor.Types.Area> Areas {
      get { return areas_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AddressDescriptor);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AddressDescriptor other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!landmarks_.Equals(other.landmarks_)) return false;
      if(!areas_.Equals(other.areas_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= landmarks_.GetHashCode();
      hash ^= areas_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      landmarks_.WriteTo(output, _repeated_landmarks_codec);
      areas_.WriteTo(output, _repeated_areas_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      landmarks_.WriteTo(ref output, _repeated_landmarks_codec);
      areas_.WriteTo(ref output, _repeated_areas_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += landmarks_.CalculateSize(_repeated_landmarks_codec);
      size += areas_.CalculateSize(_repeated_areas_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AddressDescriptor other) {
      if (other == null) {
        return;
      }
      landmarks_.Add(other.landmarks_);
      areas_.Add(other.areas_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            landmarks_.AddEntriesFrom(input, _repeated_landmarks_codec);
            break;
          }
          case 18: {
            areas_.AddEntriesFrom(input, _repeated_areas_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            landmarks_.AddEntriesFrom(ref input, _repeated_landmarks_codec);
            break;
          }
          case 18: {
            areas_.AddEntriesFrom(ref input, _repeated_areas_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the AddressDescriptor message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Basic landmark information and the landmark's relationship with the
      /// target location.
      ///
      /// Landmarks are prominent places that can be used to describe a location.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Landmark : pb::IMessage<Landmark>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Landmark> _parser = new pb::MessageParser<Landmark>(() => new Landmark());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Landmark> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Maps.Places.V1.AddressDescriptor.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Landmark() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Landmark(Landmark other) : this() {
          _hasBits0 = other._hasBits0;
          name_ = other.name_;
          placeId_ = other.placeId_;
          displayName_ = other.displayName_ != null ? other.displayName_.Clone() : null;
          types_ = other.types_.Clone();
          spatialRelationship_ = other.spatialRelationship_;
          straightLineDistanceMeters_ = other.straightLineDistanceMeters_;
          travelDistanceMeters_ = other.travelDistanceMeters_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Landmark Clone() {
          return new Landmark(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private string name_ = "";
        /// <summary>
        /// The landmark's resource name.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "place_id" field.</summary>
        public const int PlaceIdFieldNumber = 2;
        private string placeId_ = "";
        /// <summary>
        /// The landmark's place id.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string PlaceId {
          get { return placeId_; }
          set {
            placeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "display_name" field.</summary>
        public const int DisplayNameFieldNumber = 3;
        private global::Google.Type.LocalizedText displayName_;
        /// <summary>
        /// The landmark's display name.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Type.LocalizedText DisplayName {
          get { return displayName_; }
          set {
            displayName_ = value;
          }
        }

        /// <summary>Field number for the "types" field.</summary>
        public const int Types_FieldNumber = 4;
        private static readonly pb::FieldCodec<string> _repeated_types_codec
            = pb::FieldCodec.ForString(34);
        private readonly pbc::RepeatedField<string> types_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// A set of type tags for this landmark. For a complete list of possible
        /// values, see
        /// https://developers.google.com/maps/documentation/places/web-service/place-types.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> Types_ {
          get { return types_; }
        }

        /// <summary>Field number for the "spatial_relationship" field.</summary>
        public const int SpatialRelationshipFieldNumber = 5;
        private global::Google.Maps.Places.V1.AddressDescriptor.Types.Landmark.Types.SpatialRelationship spatialRelationship_ = global::Google.Maps.Places.V1.AddressDescriptor.Types.Landmark.Types.SpatialRelationship.Near;
        /// <summary>
        /// Defines the spatial relationship between the target location and the
        /// landmark.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Maps.Places.V1.AddressDescriptor.Types.Landmark.Types.SpatialRelationship SpatialRelationship {
          get { return spatialRelationship_; }
          set {
            spatialRelationship_ = value;
          }
        }

        /// <summary>Field number for the "straight_line_distance_meters" field.</summary>
        public const int StraightLineDistanceMetersFieldNumber = 6;
        private float straightLineDistanceMeters_;
        /// <summary>
        /// The straight line distance, in meters, between the center point of the
        /// target and the center point of the landmark. In some situations, this
        /// value can be longer than `travel_distance_meters`.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float StraightLineDistanceMeters {
          get { return straightLineDistanceMeters_; }
          set {
            straightLineDistanceMeters_ = value;
          }
        }

        /// <summary>Field number for the "travel_distance_meters" field.</summary>
        public const int TravelDistanceMetersFieldNumber = 7;
        private readonly static float TravelDistanceMetersDefaultValue = 0F;

        private float travelDistanceMeters_;
        /// <summary>
        /// The travel distance, in meters, along the road network from the target to
        /// the landmark, if known. This value does not take into account the mode of
        /// transportation, such as walking, driving, or biking.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float TravelDistanceMeters {
          get { if ((_hasBits0 & 1) != 0) { return travelDistanceMeters_; } else { return TravelDistanceMetersDefaultValue; } }
          set {
            _hasBits0 |= 1;
            travelDistanceMeters_ = value;
          }
        }
        /// <summary>Gets whether the "travel_distance_meters" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasTravelDistanceMeters {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "travel_distance_meters" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearTravelDistanceMeters() {
          _hasBits0 &= ~1;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Landmark);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Landmark other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if (PlaceId != other.PlaceId) return false;
          if (!object.Equals(DisplayName, other.DisplayName)) return false;
          if(!types_.Equals(other.types_)) return false;
          if (SpatialRelationship != other.SpatialRelationship) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(StraightLineDistanceMeters, other.StraightLineDistanceMeters)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TravelDistanceMeters, other.TravelDistanceMeters)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (PlaceId.Length != 0) hash ^= PlaceId.GetHashCode();
          if (displayName_ != null) hash ^= DisplayName.GetHashCode();
          hash ^= types_.GetHashCode();
          if (SpatialRelationship != global::Google.Maps.Places.V1.AddressDescriptor.Types.Landmark.Types.SpatialRelationship.Near) hash ^= SpatialRelationship.GetHashCode();
          if (StraightLineDistanceMeters != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(StraightLineDistanceMeters);
          if (HasTravelDistanceMeters) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TravelDistanceMeters);
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (PlaceId.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(PlaceId);
          }
          if (displayName_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(DisplayName);
          }
          types_.WriteTo(output, _repeated_types_codec);
          if (SpatialRelationship != global::Google.Maps.Places.V1.AddressDescriptor.Types.Landmark.Types.SpatialRelationship.Near) {
            output.WriteRawTag(40);
            output.WriteEnum((int) SpatialRelationship);
          }
          if (StraightLineDistanceMeters != 0F) {
            output.WriteRawTag(53);
            output.WriteFloat(StraightLineDistanceMeters);
          }
          if (HasTravelDistanceMeters) {
            output.WriteRawTag(61);
            output.WriteFloat(TravelDistanceMeters);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (PlaceId.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(PlaceId);
          }
          if (displayName_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(DisplayName);
          }
          types_.WriteTo(ref output, _repeated_types_codec);
          if (SpatialRelationship != global::Google.Maps.Places.V1.AddressDescriptor.Types.Landmark.Types.SpatialRelationship.Near) {
            output.WriteRawTag(40);
            output.WriteEnum((int) SpatialRelationship);
          }
          if (StraightLineDistanceMeters != 0F) {
            output.WriteRawTag(53);
            output.WriteFloat(StraightLineDistanceMeters);
          }
          if (HasTravelDistanceMeters) {
            output.WriteRawTag(61);
            output.WriteFloat(TravelDistanceMeters);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (PlaceId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(PlaceId);
          }
          if (displayName_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(DisplayName);
          }
          size += types_.CalculateSize(_repeated_types_codec);
          if (SpatialRelationship != global::Google.Maps.Places.V1.AddressDescriptor.Types.Landmark.Types.SpatialRelationship.Near) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SpatialRelationship);
          }
          if (StraightLineDistanceMeters != 0F) {
            size += 1 + 4;
          }
          if (HasTravelDistanceMeters) {
            size += 1 + 4;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Landmark other) {
          if (other == null) {
            return;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.PlaceId.Length != 0) {
            PlaceId = other.PlaceId;
          }
          if (other.displayName_ != null) {
            if (displayName_ == null) {
              DisplayName = new global::Google.Type.LocalizedText();
            }
            DisplayName.MergeFrom(other.DisplayName);
          }
          types_.Add(other.types_);
          if (other.SpatialRelationship != global::Google.Maps.Places.V1.AddressDescriptor.Types.Landmark.Types.SpatialRelationship.Near) {
            SpatialRelationship = other.SpatialRelationship;
          }
          if (other.StraightLineDistanceMeters != 0F) {
            StraightLineDistanceMeters = other.StraightLineDistanceMeters;
          }
          if (other.HasTravelDistanceMeters) {
            TravelDistanceMeters = other.TravelDistanceMeters;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                PlaceId = input.ReadString();
                break;
              }
              case 26: {
                if (displayName_ == null) {
                  DisplayName = new global::Google.Type.LocalizedText();
                }
                input.ReadMessage(DisplayName);
                break;
              }
              case 34: {
                types_.AddEntriesFrom(input, _repeated_types_codec);
                break;
              }
              case 40: {
                SpatialRelationship = (global::Google.Maps.Places.V1.AddressDescriptor.Types.Landmark.Types.SpatialRelationship) input.ReadEnum();
                break;
              }
              case 53: {
                StraightLineDistanceMeters = input.ReadFloat();
                break;
              }
              case 61: {
                TravelDistanceMeters = input.ReadFloat();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                PlaceId = input.ReadString();
                break;
              }
              case 26: {
                if (displayName_ == null) {
                  DisplayName = new global::Google.Type.LocalizedText();
                }
                input.ReadMessage(DisplayName);
                break;
              }
              case 34: {
                types_.AddEntriesFrom(ref input, _repeated_types_codec);
                break;
              }
              case 40: {
                SpatialRelationship = (global::Google.Maps.Places.V1.AddressDescriptor.Types.Landmark.Types.SpatialRelationship) input.ReadEnum();
                break;
              }
              case 53: {
                StraightLineDistanceMeters = input.ReadFloat();
                break;
              }
              case 61: {
                TravelDistanceMeters = input.ReadFloat();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Landmark message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          /// <summary>
          /// Defines the spatial relationship between the target location and the
          /// landmark.
          /// </summary>
          public enum SpatialRelationship {
            /// <summary>
            /// This is the default relationship when nothing more specific below
            /// applies.
            /// </summary>
            [pbr::OriginalName("NEAR")] Near = 0,
            /// <summary>
            /// The landmark has a spatial geometry and the target is within its
            /// bounds.
            /// </summary>
            [pbr::OriginalName("WITHIN")] Within = 1,
            /// <summary>
            /// The target is directly adjacent to the landmark.
            /// </summary>
            [pbr::OriginalName("BESIDE")] Beside = 2,
            /// <summary>
            /// The target is directly opposite the landmark on the other side of the
            /// road.
            /// </summary>
            [pbr::OriginalName("ACROSS_THE_ROAD")] AcrossTheRoad = 3,
            /// <summary>
            /// On the same route as the landmark but not besides or across.
            /// </summary>
            [pbr::OriginalName("DOWN_THE_ROAD")] DownTheRoad = 4,
            /// <summary>
            /// Not on the same route as the landmark but a single turn away.
            /// </summary>
            [pbr::OriginalName("AROUND_THE_CORNER")] AroundTheCorner = 5,
            /// <summary>
            /// Close to the landmark's structure but further away from its street
            /// entrances.
            /// </summary>
            [pbr::OriginalName("BEHIND")] Behind = 6,
          }

        }
        #endregion

      }

      /// <summary>
      /// Area information and the area's relationship with the target location.
      ///
      /// Areas includes precise sublocality, neighborhoods, and large compounds that
      /// are useful for describing a location.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Area : pb::IMessage<Area>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Area> _parser = new pb::MessageParser<Area>(() => new Area());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Area> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Maps.Places.V1.AddressDescriptor.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Area() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Area(Area other) : this() {
          name_ = other.name_;
          placeId_ = other.placeId_;
          displayName_ = other.displayName_ != null ? other.displayName_.Clone() : null;
          containment_ = other.containment_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Area Clone() {
          return new Area(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private string name_ = "";
        /// <summary>
        /// The area's resource name.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "place_id" field.</summary>
        public const int PlaceIdFieldNumber = 2;
        private string placeId_ = "";
        /// <summary>
        /// The area's place id.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string PlaceId {
          get { return placeId_; }
          set {
            placeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "display_name" field.</summary>
        public const int DisplayNameFieldNumber = 3;
        private global::Google.Type.LocalizedText displayName_;
        /// <summary>
        /// The area's display name.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Type.LocalizedText DisplayName {
          get { return displayName_; }
          set {
            displayName_ = value;
          }
        }

        /// <summary>Field number for the "containment" field.</summary>
        public const int ContainmentFieldNumber = 4;
        private global::Google.Maps.Places.V1.AddressDescriptor.Types.Area.Types.Containment containment_ = global::Google.Maps.Places.V1.AddressDescriptor.Types.Area.Types.Containment.Unspecified;
        /// <summary>
        /// Defines the spatial relationship between the target location and the
        /// area.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Maps.Places.V1.AddressDescriptor.Types.Area.Types.Containment Containment {
          get { return containment_; }
          set {
            containment_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Area);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Area other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if (PlaceId != other.PlaceId) return false;
          if (!object.Equals(DisplayName, other.DisplayName)) return false;
          if (Containment != other.Containment) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (PlaceId.Length != 0) hash ^= PlaceId.GetHashCode();
          if (displayName_ != null) hash ^= DisplayName.GetHashCode();
          if (Containment != global::Google.Maps.Places.V1.AddressDescriptor.Types.Area.Types.Containment.Unspecified) hash ^= Containment.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (PlaceId.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(PlaceId);
          }
          if (displayName_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(DisplayName);
          }
          if (Containment != global::Google.Maps.Places.V1.AddressDescriptor.Types.Area.Types.Containment.Unspecified) {
            output.WriteRawTag(32);
            output.WriteEnum((int) Containment);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (PlaceId.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(PlaceId);
          }
          if (displayName_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(DisplayName);
          }
          if (Containment != global::Google.Maps.Places.V1.AddressDescriptor.Types.Area.Types.Containment.Unspecified) {
            output.WriteRawTag(32);
            output.WriteEnum((int) Containment);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (PlaceId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(PlaceId);
          }
          if (displayName_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(DisplayName);
          }
          if (Containment != global::Google.Maps.Places.V1.AddressDescriptor.Types.Area.Types.Containment.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Containment);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Area other) {
          if (other == null) {
            return;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.PlaceId.Length != 0) {
            PlaceId = other.PlaceId;
          }
          if (other.displayName_ != null) {
            if (displayName_ == null) {
              DisplayName = new global::Google.Type.LocalizedText();
            }
            DisplayName.MergeFrom(other.DisplayName);
          }
          if (other.Containment != global::Google.Maps.Places.V1.AddressDescriptor.Types.Area.Types.Containment.Unspecified) {
            Containment = other.Containment;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                PlaceId = input.ReadString();
                break;
              }
              case 26: {
                if (displayName_ == null) {
                  DisplayName = new global::Google.Type.LocalizedText();
                }
                input.ReadMessage(DisplayName);
                break;
              }
              case 32: {
                Containment = (global::Google.Maps.Places.V1.AddressDescriptor.Types.Area.Types.Containment) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                PlaceId = input.ReadString();
                break;
              }
              case 26: {
                if (displayName_ == null) {
                  DisplayName = new global::Google.Type.LocalizedText();
                }
                input.ReadMessage(DisplayName);
                break;
              }
              case 32: {
                Containment = (global::Google.Maps.Places.V1.AddressDescriptor.Types.Area.Types.Containment) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Area message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          /// <summary>
          /// Defines the spatial relationship between the target location and the
          /// area.
          /// </summary>
          public enum Containment {
            /// <summary>
            /// The containment is unspecified.
            /// </summary>
            [pbr::OriginalName("CONTAINMENT_UNSPECIFIED")] Unspecified = 0,
            /// <summary>
            /// The target location is within the area region, close to the
            /// center.
            /// </summary>
            [pbr::OriginalName("WITHIN")] Within = 1,
            /// <summary>
            /// The target location is within the area region, close to the edge.
            /// </summary>
            [pbr::OriginalName("OUTSKIRTS")] Outskirts = 2,
            /// <summary>
            /// The target location is outside the area region, but close by.
            /// </summary>
            [pbr::OriginalName("NEAR")] Near = 3,
          }

        }
        #endregion

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
