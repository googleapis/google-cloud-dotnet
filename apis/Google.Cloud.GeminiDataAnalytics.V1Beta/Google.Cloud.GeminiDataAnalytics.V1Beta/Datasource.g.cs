// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/geminidataanalytics/v1beta/datasource.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.GeminiDataAnalytics.V1Beta {

  /// <summary>Holder for reflection information generated from google/cloud/geminidataanalytics/v1beta/datasource.proto</summary>
  public static partial class DatasourceReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/geminidataanalytics/v1beta/datasource.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DatasourceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cjhnb29nbGUvY2xvdWQvZ2VtaW5pZGF0YWFuYWx5dGljcy92MWJldGEvZGF0",
            "YXNvdXJjZS5wcm90bxInZ29vZ2xlLmNsb3VkLmdlbWluaWRhdGFhbmFseXRp",
            "Y3MudjFiZXRhGh9nb29nbGUvYXBpL2ZpZWxkX2JlaGF2aW9yLnByb3RvGjln",
            "b29nbGUvY2xvdWQvZ2VtaW5pZGF0YWFuYWx5dGljcy92MWJldGEvY3JlZGVu",
            "dGlhbHMucHJvdG8inwIKFERhdGFzb3VyY2VSZWZlcmVuY2VzEk4KAmJxGAEg",
            "ASgLMkAuZ29vZ2xlLmNsb3VkLmdlbWluaWRhdGFhbmFseXRpY3MudjFiZXRh",
            "LkJpZ1F1ZXJ5VGFibGVSZWZlcmVuY2VzSAASVQoGc3R1ZGlvGAIgASgLMkMu",
            "Z29vZ2xlLmNsb3VkLmdlbWluaWRhdGFhbmFseXRpY3MudjFiZXRhLlN0dWRp",
            "b0RhdGFzb3VyY2VSZWZlcmVuY2VzSAASUgoGbG9va2VyGAMgASgLMkAuZ29v",
            "Z2xlLmNsb3VkLmdlbWluaWRhdGFhbmFseXRpY3MudjFiZXRhLkxvb2tlckV4",
            "cGxvcmVSZWZlcmVuY2VzSABCDAoKcmVmZXJlbmNlcyJ5ChdCaWdRdWVyeVRh",
            "YmxlUmVmZXJlbmNlcxJeChB0YWJsZV9yZWZlcmVuY2VzGAEgAygLMj8uZ29v",
            "Z2xlLmNsb3VkLmdlbWluaWRhdGFhbmFseXRpY3MudjFiZXRhLkJpZ1F1ZXJ5",
            "VGFibGVSZWZlcmVuY2VCA+BBAiKnAQoWQmlnUXVlcnlUYWJsZVJlZmVyZW5j",
            "ZRIXCgpwcm9qZWN0X2lkGAEgASgJQgPgQQISFwoKZGF0YXNldF9pZBgDIAEo",
            "CUID4EECEhUKCHRhYmxlX2lkGAQgASgJQgPgQQISRAoGc2NoZW1hGAYgASgL",
            "Mi8uZ29vZ2xlLmNsb3VkLmdlbWluaWRhdGFhbmFseXRpY3MudjFiZXRhLlNj",
            "aGVtYUID4EEBInsKGlN0dWRpb0RhdGFzb3VyY2VSZWZlcmVuY2VzEl0KEXN0",
            "dWRpb19yZWZlcmVuY2VzGAIgAygLMkIuZ29vZ2xlLmNsb3VkLmdlbWluaWRh",
            "dGFhbmFseXRpY3MudjFiZXRhLlN0dWRpb0RhdGFzb3VyY2VSZWZlcmVuY2Ui",
            "NwoZU3R1ZGlvRGF0YXNvdXJjZVJlZmVyZW5jZRIaCg1kYXRhc291cmNlX2lk",
            "GAEgASgJQgPgQQIiywEKF0xvb2tlckV4cGxvcmVSZWZlcmVuY2VzEmAKEmV4",
            "cGxvcmVfcmVmZXJlbmNlcxgBIAMoCzI/Lmdvb2dsZS5jbG91ZC5nZW1pbmlk",
            "YXRhYW5hbHl0aWNzLnYxYmV0YS5Mb29rZXJFeHBsb3JlUmVmZXJlbmNlQgPg",
            "QQISTgoLY3JlZGVudGlhbHMYAiABKAsyNC5nb29nbGUuY2xvdWQuZ2VtaW5p",
            "ZGF0YWFuYWx5dGljcy52MWJldGEuQ3JlZGVudGlhbHNCA+BBASKmAgoWTG9v",
            "a2VyRXhwbG9yZVJlZmVyZW5jZRIdChNsb29rZXJfaW5zdGFuY2VfdXJpGAkg",
            "ASgJSAASagoccHJpdmF0ZV9sb29rZXJfaW5zdGFuY2VfaW5mbxgKIAEoCzJC",
            "Lmdvb2dsZS5jbG91ZC5nZW1pbmlkYXRhYW5hbHl0aWNzLnYxYmV0YS5Qcml2",
            "YXRlTG9va2VySW5zdGFuY2VJbmZvSAASGQoMbG9va21sX21vZGVsGAQgASgJ",
            "QgPgQQISFAoHZXhwbG9yZRgFIAEoCUID4EECEkQKBnNjaGVtYRgIIAEoCzIv",
            "Lmdvb2dsZS5jbG91ZC5nZW1pbmlkYXRhYW5hbHl0aWNzLnYxYmV0YS5TY2hl",
            "bWFCA+BBAUIKCghpbnN0YW5jZSJXChlQcml2YXRlTG9va2VySW5zdGFuY2VJ",
            "bmZvEhoKEmxvb2tlcl9pbnN0YW5jZV9pZBgBIAEoCRIeChZzZXJ2aWNlX2Rp",
            "cmVjdG9yeV9uYW1lGAIgASgJIskCCgpEYXRhc291cmNlEmMKGGJpZ3F1ZXJ5",
            "X3RhYmxlX3JlZmVyZW5jZRgBIAEoCzI/Lmdvb2dsZS5jbG91ZC5nZW1pbmlk",
            "YXRhYW5hbHl0aWNzLnYxYmV0YS5CaWdRdWVyeVRhYmxlUmVmZXJlbmNlSAAS",
            "HgoUc3R1ZGlvX2RhdGFzb3VyY2VfaWQYAiABKAlIABJjChhsb29rZXJfZXhw",
            "bG9yZV9yZWZlcmVuY2UYBCABKAsyPy5nb29nbGUuY2xvdWQuZ2VtaW5pZGF0",
            "YWFuYWx5dGljcy52MWJldGEuTG9va2VyRXhwbG9yZVJlZmVyZW5jZUgAEkQK",
            "BnNjaGVtYRgHIAEoCzIvLmdvb2dsZS5jbG91ZC5nZW1pbmlkYXRhYW5hbHl0",
            "aWNzLnYxYmV0YS5TY2hlbWFCA+BBAUILCglyZWZlcmVuY2Ui9wEKBlNjaGVt",
            "YRJDCgZmaWVsZHMYASADKAsyLi5nb29nbGUuY2xvdWQuZ2VtaW5pZGF0YWFu",
            "YWx5dGljcy52MWJldGEuRmllbGRCA+BBARIYCgtkZXNjcmlwdGlvbhgCIAEo",
            "CUID4EEBEhUKCHN5bm9ueW1zGAMgAygJQgPgQQESEQoEdGFncxgEIAMoCUID",
            "4EEBEhkKDGRpc3BsYXlfbmFtZRgFIAEoCUID4EEBEkkKB2ZpbHRlcnMYBiAD",
            "KAsyMy5nb29nbGUuY2xvdWQuZ2VtaW5pZGF0YWFuYWx5dGljcy52MWJldGEu",
            "RGF0YUZpbHRlckID4EEBIpkCCgVGaWVsZBIRCgRuYW1lGAEgASgJQgPgQQES",
            "EQoEdHlwZRgCIAEoCUID4EEBEhgKC2Rlc2NyaXB0aW9uGAMgASgJQgPgQQES",
            "EQoEbW9kZRgEIAEoCUID4EEBEhUKCHN5bm9ueW1zGAYgAygJQgPgQQESEQoE",
            "dGFncxgHIAMoCUID4EEBEhkKDGRpc3BsYXlfbmFtZRgIIAEoCUID4EEBEkYK",
            "CXN1YmZpZWxkcxgJIAMoCzIuLmdvb2dsZS5jbG91ZC5nZW1pbmlkYXRhYW5h",
            "bHl0aWNzLnYxYmV0YS5GaWVsZEID4EEBEhUKCGNhdGVnb3J5GAogASgJQgPg",
            "QQESGQoMdmFsdWVfZm9ybWF0GAsgASgJQgPgQQEigAEKCkRhdGFGaWx0ZXIS",
            "EgoFZmllbGQYASABKAlCA+BBARISCgV2YWx1ZRgCIAEoCUID4EEBEkoKBHR5",
            "cGUYAyABKA4yNy5nb29nbGUuY2xvdWQuZ2VtaW5pZGF0YWFuYWx5dGljcy52",
            "MWJldGEuRGF0YUZpbHRlclR5cGVCA+BBASpFCg5EYXRhRmlsdGVyVHlwZRIg",
            "ChxEQVRBX0ZJTFRFUl9UWVBFX1VOU1BFQ0lGSUVEEAASEQoNQUxXQVlTX0ZJ",
            "TFRFUhABQqACCitjb20uZ29vZ2xlLmNsb3VkLmdlbWluaWRhdGFhbmFseXRp",
            "Y3MudjFiZXRhQg9EYXRhc291cmNlUHJvdG9QAVpdY2xvdWQuZ29vZ2xlLmNv",
            "bS9nby9nZW1pbmlkYXRhYW5hbHl0aWNzL2FwaXYxYmV0YS9nZW1pbmlkYXRh",
            "YW5hbHl0aWNzcGI7Z2VtaW5pZGF0YWFuYWx5dGljc3BiqgInR29vZ2xlLkNs",
            "b3VkLkdlbWluaURhdGFBbmFseXRpY3MuVjFCZXRhygInR29vZ2xlXENsb3Vk",
            "XEdlbWluaURhdGFBbmFseXRpY3NcVjFiZXRh6gIqR29vZ2xlOjpDbG91ZDo6",
            "R2VtaW5pRGF0YUFuYWx5dGljczo6VjFiZXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Cloud.GeminiDataAnalytics.V1Beta.CredentialsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Google.Cloud.GeminiDataAnalytics.V1Beta.DataFilterType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.GeminiDataAnalytics.V1Beta.DatasourceReferences), global::Google.Cloud.GeminiDataAnalytics.V1Beta.DatasourceReferences.Parser, new[]{ "Bq", "Studio", "Looker" }, new[]{ "References" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.GeminiDataAnalytics.V1Beta.BigQueryTableReferences), global::Google.Cloud.GeminiDataAnalytics.V1Beta.BigQueryTableReferences.Parser, new[]{ "TableReferences" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.GeminiDataAnalytics.V1Beta.BigQueryTableReference), global::Google.Cloud.GeminiDataAnalytics.V1Beta.BigQueryTableReference.Parser, new[]{ "ProjectId", "DatasetId", "TableId", "Schema" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.GeminiDataAnalytics.V1Beta.StudioDatasourceReferences), global::Google.Cloud.GeminiDataAnalytics.V1Beta.StudioDatasourceReferences.Parser, new[]{ "StudioReferences" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.GeminiDataAnalytics.V1Beta.StudioDatasourceReference), global::Google.Cloud.GeminiDataAnalytics.V1Beta.StudioDatasourceReference.Parser, new[]{ "DatasourceId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.GeminiDataAnalytics.V1Beta.LookerExploreReferences), global::Google.Cloud.GeminiDataAnalytics.V1Beta.LookerExploreReferences.Parser, new[]{ "ExploreReferences", "Credentials" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.GeminiDataAnalytics.V1Beta.LookerExploreReference), global::Google.Cloud.GeminiDataAnalytics.V1Beta.LookerExploreReference.Parser, new[]{ "LookerInstanceUri", "PrivateLookerInstanceInfo", "LookmlModel", "Explore", "Schema" }, new[]{ "Instance" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.GeminiDataAnalytics.V1Beta.PrivateLookerInstanceInfo), global::Google.Cloud.GeminiDataAnalytics.V1Beta.PrivateLookerInstanceInfo.Parser, new[]{ "LookerInstanceId", "ServiceDirectoryName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.GeminiDataAnalytics.V1Beta.Datasource), global::Google.Cloud.GeminiDataAnalytics.V1Beta.Datasource.Parser, new[]{ "BigqueryTableReference", "StudioDatasourceId", "LookerExploreReference", "Schema" }, new[]{ "Reference" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.GeminiDataAnalytics.V1Beta.Schema), global::Google.Cloud.GeminiDataAnalytics.V1Beta.Schema.Parser, new[]{ "Fields", "Description", "Synonyms", "Tags", "DisplayName", "Filters" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.GeminiDataAnalytics.V1Beta.Field), global::Google.Cloud.GeminiDataAnalytics.V1Beta.Field.Parser, new[]{ "Name", "Type", "Description", "Mode", "Synonyms", "Tags", "DisplayName", "Subfields", "Category", "ValueFormat" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.GeminiDataAnalytics.V1Beta.DataFilter), global::Google.Cloud.GeminiDataAnalytics.V1Beta.DataFilter.Parser, new[]{ "Field", "Value", "Type" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// The type of filter present on a datasource, such as ALWAYS_FILTER.
  /// </summary>
  public enum DataFilterType {
    /// <summary>
    /// The filter type was not specified.
    /// </summary>
    [pbr::OriginalName("DATA_FILTER_TYPE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// A filter that the user configures, and any queries to the Explore will
    /// always apply this filter by default. Currently only used for Looker data
    /// sources.
    /// </summary>
    [pbr::OriginalName("ALWAYS_FILTER")] AlwaysFilter = 1,
  }

  #endregion

  #region Messages
  /// <summary>
  /// A collection of references to datasources.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DatasourceReferences : pb::IMessage<DatasourceReferences>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DatasourceReferences> _parser = new pb::MessageParser<DatasourceReferences>(() => new DatasourceReferences());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DatasourceReferences> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.GeminiDataAnalytics.V1Beta.DatasourceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DatasourceReferences() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DatasourceReferences(DatasourceReferences other) : this() {
      switch (other.ReferencesCase) {
        case ReferencesOneofCase.Bq:
          Bq = other.Bq.Clone();
          break;
        case ReferencesOneofCase.Studio:
          Studio = other.Studio.Clone();
          break;
        case ReferencesOneofCase.Looker:
          Looker = other.Looker.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DatasourceReferences Clone() {
      return new DatasourceReferences(this);
    }

    /// <summary>Field number for the "bq" field.</summary>
    public const int BqFieldNumber = 1;
    /// <summary>
    /// References to BigQuery tables.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.GeminiDataAnalytics.V1Beta.BigQueryTableReferences Bq {
      get { return referencesCase_ == ReferencesOneofCase.Bq ? (global::Google.Cloud.GeminiDataAnalytics.V1Beta.BigQueryTableReferences) references_ : null; }
      set {
        references_ = value;
        referencesCase_ = value == null ? ReferencesOneofCase.None : ReferencesOneofCase.Bq;
      }
    }

    /// <summary>Field number for the "studio" field.</summary>
    public const int StudioFieldNumber = 2;
    /// <summary>
    /// References to Looker Studio datasources.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.GeminiDataAnalytics.V1Beta.StudioDatasourceReferences Studio {
      get { return referencesCase_ == ReferencesOneofCase.Studio ? (global::Google.Cloud.GeminiDataAnalytics.V1Beta.StudioDatasourceReferences) references_ : null; }
      set {
        references_ = value;
        referencesCase_ = value == null ? ReferencesOneofCase.None : ReferencesOneofCase.Studio;
      }
    }

    /// <summary>Field number for the "looker" field.</summary>
    public const int LookerFieldNumber = 3;
    /// <summary>
    /// References to Looker Explores.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.GeminiDataAnalytics.V1Beta.LookerExploreReferences Looker {
      get { return referencesCase_ == ReferencesOneofCase.Looker ? (global::Google.Cloud.GeminiDataAnalytics.V1Beta.LookerExploreReferences) references_ : null; }
      set {
        references_ = value;
        referencesCase_ = value == null ? ReferencesOneofCase.None : ReferencesOneofCase.Looker;
      }
    }

    private object references_;
    /// <summary>Enum of possible cases for the "references" oneof.</summary>
    public enum ReferencesOneofCase {
      None = 0,
      Bq = 1,
      Studio = 2,
      Looker = 3,
    }
    private ReferencesOneofCase referencesCase_ = ReferencesOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReferencesOneofCase ReferencesCase {
      get { return referencesCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReferences() {
      referencesCase_ = ReferencesOneofCase.None;
      references_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DatasourceReferences);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DatasourceReferences other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Bq, other.Bq)) return false;
      if (!object.Equals(Studio, other.Studio)) return false;
      if (!object.Equals(Looker, other.Looker)) return false;
      if (ReferencesCase != other.ReferencesCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (referencesCase_ == ReferencesOneofCase.Bq) hash ^= Bq.GetHashCode();
      if (referencesCase_ == ReferencesOneofCase.Studio) hash ^= Studio.GetHashCode();
      if (referencesCase_ == ReferencesOneofCase.Looker) hash ^= Looker.GetHashCode();
      hash ^= (int) referencesCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (referencesCase_ == ReferencesOneofCase.Bq) {
        output.WriteRawTag(10);
        output.WriteMessage(Bq);
      }
      if (referencesCase_ == ReferencesOneofCase.Studio) {
        output.WriteRawTag(18);
        output.WriteMessage(Studio);
      }
      if (referencesCase_ == ReferencesOneofCase.Looker) {
        output.WriteRawTag(26);
        output.WriteMessage(Looker);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (referencesCase_ == ReferencesOneofCase.Bq) {
        output.WriteRawTag(10);
        output.WriteMessage(Bq);
      }
      if (referencesCase_ == ReferencesOneofCase.Studio) {
        output.WriteRawTag(18);
        output.WriteMessage(Studio);
      }
      if (referencesCase_ == ReferencesOneofCase.Looker) {
        output.WriteRawTag(26);
        output.WriteMessage(Looker);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (referencesCase_ == ReferencesOneofCase.Bq) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bq);
      }
      if (referencesCase_ == ReferencesOneofCase.Studio) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Studio);
      }
      if (referencesCase_ == ReferencesOneofCase.Looker) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Looker);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DatasourceReferences other) {
      if (other == null) {
        return;
      }
      switch (other.ReferencesCase) {
        case ReferencesOneofCase.Bq:
          if (Bq == null) {
            Bq = new global::Google.Cloud.GeminiDataAnalytics.V1Beta.BigQueryTableReferences();
          }
          Bq.MergeFrom(other.Bq);
          break;
        case ReferencesOneofCase.Studio:
          if (Studio == null) {
            Studio = new global::Google.Cloud.GeminiDataAnalytics.V1Beta.StudioDatasourceReferences();
          }
          Studio.MergeFrom(other.Studio);
          break;
        case ReferencesOneofCase.Looker:
          if (Looker == null) {
            Looker = new global::Google.Cloud.GeminiDataAnalytics.V1Beta.LookerExploreReferences();
          }
          Looker.MergeFrom(other.Looker);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Google.Cloud.GeminiDataAnalytics.V1Beta.BigQueryTableReferences subBuilder = new global::Google.Cloud.GeminiDataAnalytics.V1Beta.BigQueryTableReferences();
            if (referencesCase_ == ReferencesOneofCase.Bq) {
              subBuilder.MergeFrom(Bq);
            }
            input.ReadMessage(subBuilder);
            Bq = subBuilder;
            break;
          }
          case 18: {
            global::Google.Cloud.GeminiDataAnalytics.V1Beta.StudioDatasourceReferences subBuilder = new global::Google.Cloud.GeminiDataAnalytics.V1Beta.StudioDatasourceReferences();
            if (referencesCase_ == ReferencesOneofCase.Studio) {
              subBuilder.MergeFrom(Studio);
            }
            input.ReadMessage(subBuilder);
            Studio = subBuilder;
            break;
          }
          case 26: {
            global::Google.Cloud.GeminiDataAnalytics.V1Beta.LookerExploreReferences subBuilder = new global::Google.Cloud.GeminiDataAnalytics.V1Beta.LookerExploreReferences();
            if (referencesCase_ == ReferencesOneofCase.Looker) {
              subBuilder.MergeFrom(Looker);
            }
            input.ReadMessage(subBuilder);
            Looker = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Google.Cloud.GeminiDataAnalytics.V1Beta.BigQueryTableReferences subBuilder = new global::Google.Cloud.GeminiDataAnalytics.V1Beta.BigQueryTableReferences();
            if (referencesCase_ == ReferencesOneofCase.Bq) {
              subBuilder.MergeFrom(Bq);
            }
            input.ReadMessage(subBuilder);
            Bq = subBuilder;
            break;
          }
          case 18: {
            global::Google.Cloud.GeminiDataAnalytics.V1Beta.StudioDatasourceReferences subBuilder = new global::Google.Cloud.GeminiDataAnalytics.V1Beta.StudioDatasourceReferences();
            if (referencesCase_ == ReferencesOneofCase.Studio) {
              subBuilder.MergeFrom(Studio);
            }
            input.ReadMessage(subBuilder);
            Studio = subBuilder;
            break;
          }
          case 26: {
            global::Google.Cloud.GeminiDataAnalytics.V1Beta.LookerExploreReferences subBuilder = new global::Google.Cloud.GeminiDataAnalytics.V1Beta.LookerExploreReferences();
            if (referencesCase_ == ReferencesOneofCase.Looker) {
              subBuilder.MergeFrom(Looker);
            }
            input.ReadMessage(subBuilder);
            Looker = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message representing references to BigQuery tables.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class BigQueryTableReferences : pb::IMessage<BigQueryTableReferences>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BigQueryTableReferences> _parser = new pb::MessageParser<BigQueryTableReferences>(() => new BigQueryTableReferences());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BigQueryTableReferences> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.GeminiDataAnalytics.V1Beta.DatasourceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BigQueryTableReferences() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BigQueryTableReferences(BigQueryTableReferences other) : this() {
      tableReferences_ = other.tableReferences_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BigQueryTableReferences Clone() {
      return new BigQueryTableReferences(this);
    }

    /// <summary>Field number for the "table_references" field.</summary>
    public const int TableReferencesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.GeminiDataAnalytics.V1Beta.BigQueryTableReference> _repeated_tableReferences_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.GeminiDataAnalytics.V1Beta.BigQueryTableReference.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.GeminiDataAnalytics.V1Beta.BigQueryTableReference> tableReferences_ = new pbc::RepeatedField<global::Google.Cloud.GeminiDataAnalytics.V1Beta.BigQueryTableReference>();
    /// <summary>
    /// Required. References to BigQuery tables.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.GeminiDataAnalytics.V1Beta.BigQueryTableReference> TableReferences {
      get { return tableReferences_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BigQueryTableReferences);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BigQueryTableReferences other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!tableReferences_.Equals(other.tableReferences_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= tableReferences_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      tableReferences_.WriteTo(output, _repeated_tableReferences_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      tableReferences_.WriteTo(ref output, _repeated_tableReferences_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += tableReferences_.CalculateSize(_repeated_tableReferences_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BigQueryTableReferences other) {
      if (other == null) {
        return;
      }
      tableReferences_.Add(other.tableReferences_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            tableReferences_.AddEntriesFrom(input, _repeated_tableReferences_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            tableReferences_.AddEntriesFrom(ref input, _repeated_tableReferences_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message representing a reference to a single BigQuery table.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class BigQueryTableReference : pb::IMessage<BigQueryTableReference>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BigQueryTableReference> _parser = new pb::MessageParser<BigQueryTableReference>(() => new BigQueryTableReference());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BigQueryTableReference> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.GeminiDataAnalytics.V1Beta.DatasourceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BigQueryTableReference() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BigQueryTableReference(BigQueryTableReference other) : this() {
      projectId_ = other.projectId_;
      datasetId_ = other.datasetId_;
      tableId_ = other.tableId_;
      schema_ = other.schema_ != null ? other.schema_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BigQueryTableReference Clone() {
      return new BigQueryTableReference(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Required. The project that the table belongs to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dataset_id" field.</summary>
    public const int DatasetIdFieldNumber = 3;
    private string datasetId_ = "";
    /// <summary>
    /// Required. The dataset that the table belongs to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DatasetId {
      get { return datasetId_; }
      set {
        datasetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "table_id" field.</summary>
    public const int TableIdFieldNumber = 4;
    private string tableId_ = "";
    /// <summary>
    /// Required. The table id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TableId {
      get { return tableId_; }
      set {
        tableId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "schema" field.</summary>
    public const int SchemaFieldNumber = 6;
    private global::Google.Cloud.GeminiDataAnalytics.V1Beta.Schema schema_;
    /// <summary>
    /// Optional. The schema of the datasource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.GeminiDataAnalytics.V1Beta.Schema Schema {
      get { return schema_; }
      set {
        schema_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BigQueryTableReference);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BigQueryTableReference other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (DatasetId != other.DatasetId) return false;
      if (TableId != other.TableId) return false;
      if (!object.Equals(Schema, other.Schema)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (DatasetId.Length != 0) hash ^= DatasetId.GetHashCode();
      if (TableId.Length != 0) hash ^= TableId.GetHashCode();
      if (schema_ != null) hash ^= Schema.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (DatasetId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DatasetId);
      }
      if (TableId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TableId);
      }
      if (schema_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Schema);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (DatasetId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DatasetId);
      }
      if (TableId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TableId);
      }
      if (schema_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Schema);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (DatasetId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DatasetId);
      }
      if (TableId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableId);
      }
      if (schema_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Schema);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BigQueryTableReference other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.DatasetId.Length != 0) {
        DatasetId = other.DatasetId;
      }
      if (other.TableId.Length != 0) {
        TableId = other.TableId;
      }
      if (other.schema_ != null) {
        if (schema_ == null) {
          Schema = new global::Google.Cloud.GeminiDataAnalytics.V1Beta.Schema();
        }
        Schema.MergeFrom(other.Schema);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 26: {
            DatasetId = input.ReadString();
            break;
          }
          case 34: {
            TableId = input.ReadString();
            break;
          }
          case 50: {
            if (schema_ == null) {
              Schema = new global::Google.Cloud.GeminiDataAnalytics.V1Beta.Schema();
            }
            input.ReadMessage(Schema);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 26: {
            DatasetId = input.ReadString();
            break;
          }
          case 34: {
            TableId = input.ReadString();
            break;
          }
          case 50: {
            if (schema_ == null) {
              Schema = new global::Google.Cloud.GeminiDataAnalytics.V1Beta.Schema();
            }
            input.ReadMessage(Schema);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message representing references to Looker Studio datasources.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class StudioDatasourceReferences : pb::IMessage<StudioDatasourceReferences>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StudioDatasourceReferences> _parser = new pb::MessageParser<StudioDatasourceReferences>(() => new StudioDatasourceReferences());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StudioDatasourceReferences> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.GeminiDataAnalytics.V1Beta.DatasourceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StudioDatasourceReferences() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StudioDatasourceReferences(StudioDatasourceReferences other) : this() {
      studioReferences_ = other.studioReferences_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StudioDatasourceReferences Clone() {
      return new StudioDatasourceReferences(this);
    }

    /// <summary>Field number for the "studio_references" field.</summary>
    public const int StudioReferencesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Cloud.GeminiDataAnalytics.V1Beta.StudioDatasourceReference> _repeated_studioReferences_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Cloud.GeminiDataAnalytics.V1Beta.StudioDatasourceReference.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.GeminiDataAnalytics.V1Beta.StudioDatasourceReference> studioReferences_ = new pbc::RepeatedField<global::Google.Cloud.GeminiDataAnalytics.V1Beta.StudioDatasourceReference>();
    /// <summary>
    /// The references to the studio datasources.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.GeminiDataAnalytics.V1Beta.StudioDatasourceReference> StudioReferences {
      get { return studioReferences_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StudioDatasourceReferences);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StudioDatasourceReferences other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!studioReferences_.Equals(other.studioReferences_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= studioReferences_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      studioReferences_.WriteTo(output, _repeated_studioReferences_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      studioReferences_.WriteTo(ref output, _repeated_studioReferences_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += studioReferences_.CalculateSize(_repeated_studioReferences_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StudioDatasourceReferences other) {
      if (other == null) {
        return;
      }
      studioReferences_.Add(other.studioReferences_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            studioReferences_.AddEntriesFrom(input, _repeated_studioReferences_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            studioReferences_.AddEntriesFrom(ref input, _repeated_studioReferences_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message representing a reference to a single Looker Studio datasource.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class StudioDatasourceReference : pb::IMessage<StudioDatasourceReference>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StudioDatasourceReference> _parser = new pb::MessageParser<StudioDatasourceReference>(() => new StudioDatasourceReference());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StudioDatasourceReference> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.GeminiDataAnalytics.V1Beta.DatasourceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StudioDatasourceReference() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StudioDatasourceReference(StudioDatasourceReference other) : this() {
      datasourceId_ = other.datasourceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StudioDatasourceReference Clone() {
      return new StudioDatasourceReference(this);
    }

    /// <summary>Field number for the "datasource_id" field.</summary>
    public const int DatasourceIdFieldNumber = 1;
    private string datasourceId_ = "";
    /// <summary>
    /// Required. The id of the datasource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DatasourceId {
      get { return datasourceId_; }
      set {
        datasourceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StudioDatasourceReference);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StudioDatasourceReference other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DatasourceId != other.DatasourceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (DatasourceId.Length != 0) hash ^= DatasourceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DatasourceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DatasourceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DatasourceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DatasourceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (DatasourceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DatasourceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StudioDatasourceReference other) {
      if (other == null) {
        return;
      }
      if (other.DatasourceId.Length != 0) {
        DatasourceId = other.DatasourceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DatasourceId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DatasourceId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message representing references to Looker explores.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LookerExploreReferences : pb::IMessage<LookerExploreReferences>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LookerExploreReferences> _parser = new pb::MessageParser<LookerExploreReferences>(() => new LookerExploreReferences());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LookerExploreReferences> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.GeminiDataAnalytics.V1Beta.DatasourceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LookerExploreReferences() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LookerExploreReferences(LookerExploreReferences other) : this() {
      exploreReferences_ = other.exploreReferences_.Clone();
      credentials_ = other.credentials_ != null ? other.credentials_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LookerExploreReferences Clone() {
      return new LookerExploreReferences(this);
    }

    /// <summary>Field number for the "explore_references" field.</summary>
    public const int ExploreReferencesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.GeminiDataAnalytics.V1Beta.LookerExploreReference> _repeated_exploreReferences_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.GeminiDataAnalytics.V1Beta.LookerExploreReference.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.GeminiDataAnalytics.V1Beta.LookerExploreReference> exploreReferences_ = new pbc::RepeatedField<global::Google.Cloud.GeminiDataAnalytics.V1Beta.LookerExploreReference>();
    /// <summary>
    /// Required. References to Looker explores.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.GeminiDataAnalytics.V1Beta.LookerExploreReference> ExploreReferences {
      get { return exploreReferences_; }
    }

    /// <summary>Field number for the "credentials" field.</summary>
    public const int CredentialsFieldNumber = 2;
    private global::Google.Cloud.GeminiDataAnalytics.V1Beta.Credentials credentials_;
    /// <summary>
    /// Optional. The credentials to use when calling the Looker API.
    ///
    /// Currently supports both OAuth token and API key-based credentials, as
    /// described in
    /// [Authentication with an
    /// SDK](https://cloud.google.com/looker/docs/api-auth#authentication_with_an_sdk).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.GeminiDataAnalytics.V1Beta.Credentials Credentials {
      get { return credentials_; }
      set {
        credentials_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LookerExploreReferences);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LookerExploreReferences other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!exploreReferences_.Equals(other.exploreReferences_)) return false;
      if (!object.Equals(Credentials, other.Credentials)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= exploreReferences_.GetHashCode();
      if (credentials_ != null) hash ^= Credentials.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      exploreReferences_.WriteTo(output, _repeated_exploreReferences_codec);
      if (credentials_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Credentials);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      exploreReferences_.WriteTo(ref output, _repeated_exploreReferences_codec);
      if (credentials_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Credentials);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += exploreReferences_.CalculateSize(_repeated_exploreReferences_codec);
      if (credentials_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Credentials);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LookerExploreReferences other) {
      if (other == null) {
        return;
      }
      exploreReferences_.Add(other.exploreReferences_);
      if (other.credentials_ != null) {
        if (credentials_ == null) {
          Credentials = new global::Google.Cloud.GeminiDataAnalytics.V1Beta.Credentials();
        }
        Credentials.MergeFrom(other.Credentials);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            exploreReferences_.AddEntriesFrom(input, _repeated_exploreReferences_codec);
            break;
          }
          case 18: {
            if (credentials_ == null) {
              Credentials = new global::Google.Cloud.GeminiDataAnalytics.V1Beta.Credentials();
            }
            input.ReadMessage(Credentials);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            exploreReferences_.AddEntriesFrom(ref input, _repeated_exploreReferences_codec);
            break;
          }
          case 18: {
            if (credentials_ == null) {
              Credentials = new global::Google.Cloud.GeminiDataAnalytics.V1Beta.Credentials();
            }
            input.ReadMessage(Credentials);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message representing a reference to a single Looker explore.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LookerExploreReference : pb::IMessage<LookerExploreReference>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LookerExploreReference> _parser = new pb::MessageParser<LookerExploreReference>(() => new LookerExploreReference());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LookerExploreReference> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.GeminiDataAnalytics.V1Beta.DatasourceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LookerExploreReference() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LookerExploreReference(LookerExploreReference other) : this() {
      lookmlModel_ = other.lookmlModel_;
      explore_ = other.explore_;
      schema_ = other.schema_ != null ? other.schema_.Clone() : null;
      switch (other.InstanceCase) {
        case InstanceOneofCase.LookerInstanceUri:
          LookerInstanceUri = other.LookerInstanceUri;
          break;
        case InstanceOneofCase.PrivateLookerInstanceInfo:
          PrivateLookerInstanceInfo = other.PrivateLookerInstanceInfo.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LookerExploreReference Clone() {
      return new LookerExploreReference(this);
    }

    /// <summary>Field number for the "looker_instance_uri" field.</summary>
    public const int LookerInstanceUriFieldNumber = 9;
    /// <summary>
    /// Required. The base url of the Looker instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LookerInstanceUri {
      get { return HasLookerInstanceUri ? (string) instance_ : ""; }
      set {
        instance_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        instanceCase_ = InstanceOneofCase.LookerInstanceUri;
      }
    }
    /// <summary>Gets whether the "looker_instance_uri" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLookerInstanceUri {
      get { return instanceCase_ == InstanceOneofCase.LookerInstanceUri; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "looker_instance_uri" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLookerInstanceUri() {
      if (HasLookerInstanceUri) {
        ClearInstance();
      }
    }

    /// <summary>Field number for the "private_looker_instance_info" field.</summary>
    public const int PrivateLookerInstanceInfoFieldNumber = 10;
    /// <summary>
    /// Private Looker instance info.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.GeminiDataAnalytics.V1Beta.PrivateLookerInstanceInfo PrivateLookerInstanceInfo {
      get { return instanceCase_ == InstanceOneofCase.PrivateLookerInstanceInfo ? (global::Google.Cloud.GeminiDataAnalytics.V1Beta.PrivateLookerInstanceInfo) instance_ : null; }
      set {
        instance_ = value;
        instanceCase_ = value == null ? InstanceOneofCase.None : InstanceOneofCase.PrivateLookerInstanceInfo;
      }
    }

    /// <summary>Field number for the "lookml_model" field.</summary>
    public const int LookmlModelFieldNumber = 4;
    private string lookmlModel_ = "";
    /// <summary>
    /// Required. Looker model, as outlined in
    /// [Major LookML
    /// structures](https://cloud.google.com/looker/docs/lookml-terms-and-concepts#major_lookml_structures).
    /// Name of the LookML model.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LookmlModel {
      get { return lookmlModel_; }
      set {
        lookmlModel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "explore" field.</summary>
    public const int ExploreFieldNumber = 5;
    private string explore_ = "";
    /// <summary>
    /// Required. Looker Explore, as outlined in
    /// [Major LookML
    /// structures](https://cloud.google.com/looker/docs/lookml-terms-and-concepts#major_lookml_structures).
    /// Name of the LookML Explore.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Explore {
      get { return explore_; }
      set {
        explore_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "schema" field.</summary>
    public const int SchemaFieldNumber = 8;
    private global::Google.Cloud.GeminiDataAnalytics.V1Beta.Schema schema_;
    /// <summary>
    /// Optional. The schema of the datasource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.GeminiDataAnalytics.V1Beta.Schema Schema {
      get { return schema_; }
      set {
        schema_ = value;
      }
    }

    private object instance_;
    /// <summary>Enum of possible cases for the "instance" oneof.</summary>
    public enum InstanceOneofCase {
      None = 0,
      LookerInstanceUri = 9,
      PrivateLookerInstanceInfo = 10,
    }
    private InstanceOneofCase instanceCase_ = InstanceOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InstanceOneofCase InstanceCase {
      get { return instanceCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInstance() {
      instanceCase_ = InstanceOneofCase.None;
      instance_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LookerExploreReference);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LookerExploreReference other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LookerInstanceUri != other.LookerInstanceUri) return false;
      if (!object.Equals(PrivateLookerInstanceInfo, other.PrivateLookerInstanceInfo)) return false;
      if (LookmlModel != other.LookmlModel) return false;
      if (Explore != other.Explore) return false;
      if (!object.Equals(Schema, other.Schema)) return false;
      if (InstanceCase != other.InstanceCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLookerInstanceUri) hash ^= LookerInstanceUri.GetHashCode();
      if (instanceCase_ == InstanceOneofCase.PrivateLookerInstanceInfo) hash ^= PrivateLookerInstanceInfo.GetHashCode();
      if (LookmlModel.Length != 0) hash ^= LookmlModel.GetHashCode();
      if (Explore.Length != 0) hash ^= Explore.GetHashCode();
      if (schema_ != null) hash ^= Schema.GetHashCode();
      hash ^= (int) instanceCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LookmlModel.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(LookmlModel);
      }
      if (Explore.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Explore);
      }
      if (schema_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Schema);
      }
      if (HasLookerInstanceUri) {
        output.WriteRawTag(74);
        output.WriteString(LookerInstanceUri);
      }
      if (instanceCase_ == InstanceOneofCase.PrivateLookerInstanceInfo) {
        output.WriteRawTag(82);
        output.WriteMessage(PrivateLookerInstanceInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LookmlModel.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(LookmlModel);
      }
      if (Explore.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Explore);
      }
      if (schema_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Schema);
      }
      if (HasLookerInstanceUri) {
        output.WriteRawTag(74);
        output.WriteString(LookerInstanceUri);
      }
      if (instanceCase_ == InstanceOneofCase.PrivateLookerInstanceInfo) {
        output.WriteRawTag(82);
        output.WriteMessage(PrivateLookerInstanceInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasLookerInstanceUri) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LookerInstanceUri);
      }
      if (instanceCase_ == InstanceOneofCase.PrivateLookerInstanceInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PrivateLookerInstanceInfo);
      }
      if (LookmlModel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LookmlModel);
      }
      if (Explore.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Explore);
      }
      if (schema_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Schema);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LookerExploreReference other) {
      if (other == null) {
        return;
      }
      if (other.LookmlModel.Length != 0) {
        LookmlModel = other.LookmlModel;
      }
      if (other.Explore.Length != 0) {
        Explore = other.Explore;
      }
      if (other.schema_ != null) {
        if (schema_ == null) {
          Schema = new global::Google.Cloud.GeminiDataAnalytics.V1Beta.Schema();
        }
        Schema.MergeFrom(other.Schema);
      }
      switch (other.InstanceCase) {
        case InstanceOneofCase.LookerInstanceUri:
          LookerInstanceUri = other.LookerInstanceUri;
          break;
        case InstanceOneofCase.PrivateLookerInstanceInfo:
          if (PrivateLookerInstanceInfo == null) {
            PrivateLookerInstanceInfo = new global::Google.Cloud.GeminiDataAnalytics.V1Beta.PrivateLookerInstanceInfo();
          }
          PrivateLookerInstanceInfo.MergeFrom(other.PrivateLookerInstanceInfo);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 34: {
            LookmlModel = input.ReadString();
            break;
          }
          case 42: {
            Explore = input.ReadString();
            break;
          }
          case 66: {
            if (schema_ == null) {
              Schema = new global::Google.Cloud.GeminiDataAnalytics.V1Beta.Schema();
            }
            input.ReadMessage(Schema);
            break;
          }
          case 74: {
            LookerInstanceUri = input.ReadString();
            break;
          }
          case 82: {
            global::Google.Cloud.GeminiDataAnalytics.V1Beta.PrivateLookerInstanceInfo subBuilder = new global::Google.Cloud.GeminiDataAnalytics.V1Beta.PrivateLookerInstanceInfo();
            if (instanceCase_ == InstanceOneofCase.PrivateLookerInstanceInfo) {
              subBuilder.MergeFrom(PrivateLookerInstanceInfo);
            }
            input.ReadMessage(subBuilder);
            PrivateLookerInstanceInfo = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 34: {
            LookmlModel = input.ReadString();
            break;
          }
          case 42: {
            Explore = input.ReadString();
            break;
          }
          case 66: {
            if (schema_ == null) {
              Schema = new global::Google.Cloud.GeminiDataAnalytics.V1Beta.Schema();
            }
            input.ReadMessage(Schema);
            break;
          }
          case 74: {
            LookerInstanceUri = input.ReadString();
            break;
          }
          case 82: {
            global::Google.Cloud.GeminiDataAnalytics.V1Beta.PrivateLookerInstanceInfo subBuilder = new global::Google.Cloud.GeminiDataAnalytics.V1Beta.PrivateLookerInstanceInfo();
            if (instanceCase_ == InstanceOneofCase.PrivateLookerInstanceInfo) {
              subBuilder.MergeFrom(PrivateLookerInstanceInfo);
            }
            input.ReadMessage(subBuilder);
            PrivateLookerInstanceInfo = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message representing a private Looker instance info required if the Looker
  /// instance is behind a private network.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PrivateLookerInstanceInfo : pb::IMessage<PrivateLookerInstanceInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PrivateLookerInstanceInfo> _parser = new pb::MessageParser<PrivateLookerInstanceInfo>(() => new PrivateLookerInstanceInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PrivateLookerInstanceInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.GeminiDataAnalytics.V1Beta.DatasourceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PrivateLookerInstanceInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PrivateLookerInstanceInfo(PrivateLookerInstanceInfo other) : this() {
      lookerInstanceId_ = other.lookerInstanceId_;
      serviceDirectoryName_ = other.serviceDirectoryName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PrivateLookerInstanceInfo Clone() {
      return new PrivateLookerInstanceInfo(this);
    }

    /// <summary>Field number for the "looker_instance_id" field.</summary>
    public const int LookerInstanceIdFieldNumber = 1;
    private string lookerInstanceId_ = "";
    /// <summary>
    /// The Looker instance id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LookerInstanceId {
      get { return lookerInstanceId_; }
      set {
        lookerInstanceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "service_directory_name" field.</summary>
    public const int ServiceDirectoryNameFieldNumber = 2;
    private string serviceDirectoryName_ = "";
    /// <summary>
    /// The service directory name of the Looker instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ServiceDirectoryName {
      get { return serviceDirectoryName_; }
      set {
        serviceDirectoryName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PrivateLookerInstanceInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PrivateLookerInstanceInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LookerInstanceId != other.LookerInstanceId) return false;
      if (ServiceDirectoryName != other.ServiceDirectoryName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (LookerInstanceId.Length != 0) hash ^= LookerInstanceId.GetHashCode();
      if (ServiceDirectoryName.Length != 0) hash ^= ServiceDirectoryName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LookerInstanceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LookerInstanceId);
      }
      if (ServiceDirectoryName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ServiceDirectoryName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LookerInstanceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LookerInstanceId);
      }
      if (ServiceDirectoryName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ServiceDirectoryName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (LookerInstanceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LookerInstanceId);
      }
      if (ServiceDirectoryName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceDirectoryName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PrivateLookerInstanceInfo other) {
      if (other == null) {
        return;
      }
      if (other.LookerInstanceId.Length != 0) {
        LookerInstanceId = other.LookerInstanceId;
      }
      if (other.ServiceDirectoryName.Length != 0) {
        ServiceDirectoryName = other.ServiceDirectoryName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LookerInstanceId = input.ReadString();
            break;
          }
          case 18: {
            ServiceDirectoryName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LookerInstanceId = input.ReadString();
            break;
          }
          case 18: {
            ServiceDirectoryName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A datasource that can be used to answer questions.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Datasource : pb::IMessage<Datasource>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Datasource> _parser = new pb::MessageParser<Datasource>(() => new Datasource());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Datasource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.GeminiDataAnalytics.V1Beta.DatasourceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Datasource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Datasource(Datasource other) : this() {
      schema_ = other.schema_ != null ? other.schema_.Clone() : null;
      switch (other.ReferenceCase) {
        case ReferenceOneofCase.BigqueryTableReference:
          BigqueryTableReference = other.BigqueryTableReference.Clone();
          break;
        case ReferenceOneofCase.StudioDatasourceId:
          StudioDatasourceId = other.StudioDatasourceId;
          break;
        case ReferenceOneofCase.LookerExploreReference:
          LookerExploreReference = other.LookerExploreReference.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Datasource Clone() {
      return new Datasource(this);
    }

    /// <summary>Field number for the "bigquery_table_reference" field.</summary>
    public const int BigqueryTableReferenceFieldNumber = 1;
    /// <summary>
    /// A reference to a BigQuery table.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.GeminiDataAnalytics.V1Beta.BigQueryTableReference BigqueryTableReference {
      get { return referenceCase_ == ReferenceOneofCase.BigqueryTableReference ? (global::Google.Cloud.GeminiDataAnalytics.V1Beta.BigQueryTableReference) reference_ : null; }
      set {
        reference_ = value;
        referenceCase_ = value == null ? ReferenceOneofCase.None : ReferenceOneofCase.BigqueryTableReference;
      }
    }

    /// <summary>Field number for the "studio_datasource_id" field.</summary>
    public const int StudioDatasourceIdFieldNumber = 2;
    /// <summary>
    /// A reference to a Looker Studio datasource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StudioDatasourceId {
      get { return HasStudioDatasourceId ? (string) reference_ : ""; }
      set {
        reference_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        referenceCase_ = ReferenceOneofCase.StudioDatasourceId;
      }
    }
    /// <summary>Gets whether the "studio_datasource_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStudioDatasourceId {
      get { return referenceCase_ == ReferenceOneofCase.StudioDatasourceId; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "studio_datasource_id" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStudioDatasourceId() {
      if (HasStudioDatasourceId) {
        ClearReference();
      }
    }

    /// <summary>Field number for the "looker_explore_reference" field.</summary>
    public const int LookerExploreReferenceFieldNumber = 4;
    /// <summary>
    /// A reference to a Looker explore.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.GeminiDataAnalytics.V1Beta.LookerExploreReference LookerExploreReference {
      get { return referenceCase_ == ReferenceOneofCase.LookerExploreReference ? (global::Google.Cloud.GeminiDataAnalytics.V1Beta.LookerExploreReference) reference_ : null; }
      set {
        reference_ = value;
        referenceCase_ = value == null ? ReferenceOneofCase.None : ReferenceOneofCase.LookerExploreReference;
      }
    }

    /// <summary>Field number for the "schema" field.</summary>
    public const int SchemaFieldNumber = 7;
    private global::Google.Cloud.GeminiDataAnalytics.V1Beta.Schema schema_;
    /// <summary>
    /// Optional. The schema of the datasource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.GeminiDataAnalytics.V1Beta.Schema Schema {
      get { return schema_; }
      set {
        schema_ = value;
      }
    }

    private object reference_;
    /// <summary>Enum of possible cases for the "reference" oneof.</summary>
    public enum ReferenceOneofCase {
      None = 0,
      BigqueryTableReference = 1,
      StudioDatasourceId = 2,
      LookerExploreReference = 4,
    }
    private ReferenceOneofCase referenceCase_ = ReferenceOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReferenceOneofCase ReferenceCase {
      get { return referenceCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReference() {
      referenceCase_ = ReferenceOneofCase.None;
      reference_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Datasource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Datasource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BigqueryTableReference, other.BigqueryTableReference)) return false;
      if (StudioDatasourceId != other.StudioDatasourceId) return false;
      if (!object.Equals(LookerExploreReference, other.LookerExploreReference)) return false;
      if (!object.Equals(Schema, other.Schema)) return false;
      if (ReferenceCase != other.ReferenceCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (referenceCase_ == ReferenceOneofCase.BigqueryTableReference) hash ^= BigqueryTableReference.GetHashCode();
      if (HasStudioDatasourceId) hash ^= StudioDatasourceId.GetHashCode();
      if (referenceCase_ == ReferenceOneofCase.LookerExploreReference) hash ^= LookerExploreReference.GetHashCode();
      if (schema_ != null) hash ^= Schema.GetHashCode();
      hash ^= (int) referenceCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (referenceCase_ == ReferenceOneofCase.BigqueryTableReference) {
        output.WriteRawTag(10);
        output.WriteMessage(BigqueryTableReference);
      }
      if (HasStudioDatasourceId) {
        output.WriteRawTag(18);
        output.WriteString(StudioDatasourceId);
      }
      if (referenceCase_ == ReferenceOneofCase.LookerExploreReference) {
        output.WriteRawTag(34);
        output.WriteMessage(LookerExploreReference);
      }
      if (schema_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Schema);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (referenceCase_ == ReferenceOneofCase.BigqueryTableReference) {
        output.WriteRawTag(10);
        output.WriteMessage(BigqueryTableReference);
      }
      if (HasStudioDatasourceId) {
        output.WriteRawTag(18);
        output.WriteString(StudioDatasourceId);
      }
      if (referenceCase_ == ReferenceOneofCase.LookerExploreReference) {
        output.WriteRawTag(34);
        output.WriteMessage(LookerExploreReference);
      }
      if (schema_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Schema);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (referenceCase_ == ReferenceOneofCase.BigqueryTableReference) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BigqueryTableReference);
      }
      if (HasStudioDatasourceId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StudioDatasourceId);
      }
      if (referenceCase_ == ReferenceOneofCase.LookerExploreReference) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LookerExploreReference);
      }
      if (schema_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Schema);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Datasource other) {
      if (other == null) {
        return;
      }
      if (other.schema_ != null) {
        if (schema_ == null) {
          Schema = new global::Google.Cloud.GeminiDataAnalytics.V1Beta.Schema();
        }
        Schema.MergeFrom(other.Schema);
      }
      switch (other.ReferenceCase) {
        case ReferenceOneofCase.BigqueryTableReference:
          if (BigqueryTableReference == null) {
            BigqueryTableReference = new global::Google.Cloud.GeminiDataAnalytics.V1Beta.BigQueryTableReference();
          }
          BigqueryTableReference.MergeFrom(other.BigqueryTableReference);
          break;
        case ReferenceOneofCase.StudioDatasourceId:
          StudioDatasourceId = other.StudioDatasourceId;
          break;
        case ReferenceOneofCase.LookerExploreReference:
          if (LookerExploreReference == null) {
            LookerExploreReference = new global::Google.Cloud.GeminiDataAnalytics.V1Beta.LookerExploreReference();
          }
          LookerExploreReference.MergeFrom(other.LookerExploreReference);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Google.Cloud.GeminiDataAnalytics.V1Beta.BigQueryTableReference subBuilder = new global::Google.Cloud.GeminiDataAnalytics.V1Beta.BigQueryTableReference();
            if (referenceCase_ == ReferenceOneofCase.BigqueryTableReference) {
              subBuilder.MergeFrom(BigqueryTableReference);
            }
            input.ReadMessage(subBuilder);
            BigqueryTableReference = subBuilder;
            break;
          }
          case 18: {
            StudioDatasourceId = input.ReadString();
            break;
          }
          case 34: {
            global::Google.Cloud.GeminiDataAnalytics.V1Beta.LookerExploreReference subBuilder = new global::Google.Cloud.GeminiDataAnalytics.V1Beta.LookerExploreReference();
            if (referenceCase_ == ReferenceOneofCase.LookerExploreReference) {
              subBuilder.MergeFrom(LookerExploreReference);
            }
            input.ReadMessage(subBuilder);
            LookerExploreReference = subBuilder;
            break;
          }
          case 58: {
            if (schema_ == null) {
              Schema = new global::Google.Cloud.GeminiDataAnalytics.V1Beta.Schema();
            }
            input.ReadMessage(Schema);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Google.Cloud.GeminiDataAnalytics.V1Beta.BigQueryTableReference subBuilder = new global::Google.Cloud.GeminiDataAnalytics.V1Beta.BigQueryTableReference();
            if (referenceCase_ == ReferenceOneofCase.BigqueryTableReference) {
              subBuilder.MergeFrom(BigqueryTableReference);
            }
            input.ReadMessage(subBuilder);
            BigqueryTableReference = subBuilder;
            break;
          }
          case 18: {
            StudioDatasourceId = input.ReadString();
            break;
          }
          case 34: {
            global::Google.Cloud.GeminiDataAnalytics.V1Beta.LookerExploreReference subBuilder = new global::Google.Cloud.GeminiDataAnalytics.V1Beta.LookerExploreReference();
            if (referenceCase_ == ReferenceOneofCase.LookerExploreReference) {
              subBuilder.MergeFrom(LookerExploreReference);
            }
            input.ReadMessage(subBuilder);
            LookerExploreReference = subBuilder;
            break;
          }
          case 58: {
            if (schema_ == null) {
              Schema = new global::Google.Cloud.GeminiDataAnalytics.V1Beta.Schema();
            }
            input.ReadMessage(Schema);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The schema of a Datasource or QueryResult instance.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Schema : pb::IMessage<Schema>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Schema> _parser = new pb::MessageParser<Schema>(() => new Schema());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Schema> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.GeminiDataAnalytics.V1Beta.DatasourceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Schema() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Schema(Schema other) : this() {
      fields_ = other.fields_.Clone();
      description_ = other.description_;
      synonyms_ = other.synonyms_.Clone();
      tags_ = other.tags_.Clone();
      displayName_ = other.displayName_;
      filters_ = other.filters_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Schema Clone() {
      return new Schema(this);
    }

    /// <summary>Field number for the "fields" field.</summary>
    public const int FieldsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.GeminiDataAnalytics.V1Beta.Field> _repeated_fields_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.GeminiDataAnalytics.V1Beta.Field.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.GeminiDataAnalytics.V1Beta.Field> fields_ = new pbc::RepeatedField<global::Google.Cloud.GeminiDataAnalytics.V1Beta.Field>();
    /// <summary>
    /// Optional. The fields in the schema.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.GeminiDataAnalytics.V1Beta.Field> Fields {
      get { return fields_; }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    /// <summary>
    /// Optional. A textual description of the table's content and purpose.
    /// For example: "Contains information about customer orders in our e-commerce
    /// store."
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "synonyms" field.</summary>
    public const int SynonymsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_synonyms_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> synonyms_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Optional. A list of alternative names or synonyms that can be used to refer
    /// to the table. For example: ["sales", "orders", "purchases"]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Synonyms {
      get { return synonyms_; }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_tags_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> tags_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Optional. A list of tags or keywords associated with the table, used for
    /// categorization. For example: ["transaction", "revenue", "customer_data"]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 5;
    private string displayName_ = "";
    /// <summary>
    /// Optional. Table display_name (same as label in
    /// cloud/data_analytics/anarres/data/looker/proto/model_explore.proto), not
    /// required, currently only Looker has this field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filters" field.</summary>
    public const int FiltersFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Google.Cloud.GeminiDataAnalytics.V1Beta.DataFilter> _repeated_filters_codec
        = pb::FieldCodec.ForMessage(50, global::Google.Cloud.GeminiDataAnalytics.V1Beta.DataFilter.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.GeminiDataAnalytics.V1Beta.DataFilter> filters_ = new pbc::RepeatedField<global::Google.Cloud.GeminiDataAnalytics.V1Beta.DataFilter>();
    /// <summary>
    /// Optional. The filters on the datasource's underlying data. Currently only
    /// used for Looker data sources.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.GeminiDataAnalytics.V1Beta.DataFilter> Filters {
      get { return filters_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Schema);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Schema other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!fields_.Equals(other.fields_)) return false;
      if (Description != other.Description) return false;
      if(!synonyms_.Equals(other.synonyms_)) return false;
      if(!tags_.Equals(other.tags_)) return false;
      if (DisplayName != other.DisplayName) return false;
      if(!filters_.Equals(other.filters_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= fields_.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      hash ^= synonyms_.GetHashCode();
      hash ^= tags_.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      hash ^= filters_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      fields_.WriteTo(output, _repeated_fields_codec);
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      synonyms_.WriteTo(output, _repeated_synonyms_codec);
      tags_.WriteTo(output, _repeated_tags_codec);
      if (DisplayName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DisplayName);
      }
      filters_.WriteTo(output, _repeated_filters_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      fields_.WriteTo(ref output, _repeated_fields_codec);
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      synonyms_.WriteTo(ref output, _repeated_synonyms_codec);
      tags_.WriteTo(ref output, _repeated_tags_codec);
      if (DisplayName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DisplayName);
      }
      filters_.WriteTo(ref output, _repeated_filters_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += fields_.CalculateSize(_repeated_fields_codec);
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      size += synonyms_.CalculateSize(_repeated_synonyms_codec);
      size += tags_.CalculateSize(_repeated_tags_codec);
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      size += filters_.CalculateSize(_repeated_filters_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Schema other) {
      if (other == null) {
        return;
      }
      fields_.Add(other.fields_);
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      synonyms_.Add(other.synonyms_);
      tags_.Add(other.tags_);
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      filters_.Add(other.filters_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            fields_.AddEntriesFrom(input, _repeated_fields_codec);
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            synonyms_.AddEntriesFrom(input, _repeated_synonyms_codec);
            break;
          }
          case 34: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
          case 42: {
            DisplayName = input.ReadString();
            break;
          }
          case 50: {
            filters_.AddEntriesFrom(input, _repeated_filters_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            fields_.AddEntriesFrom(ref input, _repeated_fields_codec);
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            synonyms_.AddEntriesFrom(ref input, _repeated_synonyms_codec);
            break;
          }
          case 34: {
            tags_.AddEntriesFrom(ref input, _repeated_tags_codec);
            break;
          }
          case 42: {
            DisplayName = input.ReadString();
            break;
          }
          case 50: {
            filters_.AddEntriesFrom(ref input, _repeated_filters_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A field in a schema.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Field : pb::IMessage<Field>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Field> _parser = new pb::MessageParser<Field>(() => new Field());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Field> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.GeminiDataAnalytics.V1Beta.DatasourceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Field() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Field(Field other) : this() {
      name_ = other.name_;
      type_ = other.type_;
      description_ = other.description_;
      mode_ = other.mode_;
      synonyms_ = other.synonyms_.Clone();
      tags_ = other.tags_.Clone();
      displayName_ = other.displayName_;
      subfields_ = other.subfields_.Clone();
      category_ = other.category_;
      valueFormat_ = other.valueFormat_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Field Clone() {
      return new Field(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Optional. The name of the field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private string type_ = "";
    /// <summary>
    /// Optional. The type of the field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    /// <summary>
    /// Optional. A brief description of the field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mode" field.</summary>
    public const int ModeFieldNumber = 4;
    private string mode_ = "";
    /// <summary>
    /// Optional. The mode of the field (e.g., NULLABLE, REPEATED).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Mode {
      get { return mode_; }
      set {
        mode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "synonyms" field.</summary>
    public const int SynonymsFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_synonyms_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> synonyms_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Optional. A list of alternative names or synonyms that can be used to refer
    /// to this field. For example: ["id", "customerid", "cust_id"]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Synonyms {
      get { return synonyms_; }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _repeated_tags_codec
        = pb::FieldCodec.ForString(58);
    private readonly pbc::RepeatedField<string> tags_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Optional. A list of tags or keywords associated with the field, used for
    /// categorization. For example: ["identifier", "customer", "pii"]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 8;
    private string displayName_ = "";
    /// <summary>
    /// Optional. Field display_name (same as label in
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subfields" field.</summary>
    public const int SubfieldsFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Google.Cloud.GeminiDataAnalytics.V1Beta.Field> _repeated_subfields_codec
        = pb::FieldCodec.ForMessage(74, global::Google.Cloud.GeminiDataAnalytics.V1Beta.Field.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.GeminiDataAnalytics.V1Beta.Field> subfields_ = new pbc::RepeatedField<global::Google.Cloud.GeminiDataAnalytics.V1Beta.Field>();
    /// <summary>
    /// Optional. Recursive property for nested schema structures.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.GeminiDataAnalytics.V1Beta.Field> Subfields {
      get { return subfields_; }
    }

    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 10;
    private string category_ = "";
    /// <summary>
    /// Optional. Field category, not required, currently only useful for Looker.
    /// We are using a string to avoid depending on an external package and keep
    /// this package self-contained.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Category {
      get { return category_; }
      set {
        category_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value_format" field.</summary>
    public const int ValueFormatFieldNumber = 11;
    private string valueFormat_ = "";
    /// <summary>
    /// Optional. Looker only. Value format of the field.
    /// Ref:
    /// https://cloud.google.com/looker/docs/reference/param-field-value-format
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ValueFormat {
      get { return valueFormat_; }
      set {
        valueFormat_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Field);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Field other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Type != other.Type) return false;
      if (Description != other.Description) return false;
      if (Mode != other.Mode) return false;
      if(!synonyms_.Equals(other.synonyms_)) return false;
      if(!tags_.Equals(other.tags_)) return false;
      if (DisplayName != other.DisplayName) return false;
      if(!subfields_.Equals(other.subfields_)) return false;
      if (Category != other.Category) return false;
      if (ValueFormat != other.ValueFormat) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Mode.Length != 0) hash ^= Mode.GetHashCode();
      hash ^= synonyms_.GetHashCode();
      hash ^= tags_.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      hash ^= subfields_.GetHashCode();
      if (Category.Length != 0) hash ^= Category.GetHashCode();
      if (ValueFormat.Length != 0) hash ^= ValueFormat.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Type);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (Mode.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Mode);
      }
      synonyms_.WriteTo(output, _repeated_synonyms_codec);
      tags_.WriteTo(output, _repeated_tags_codec);
      if (DisplayName.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(DisplayName);
      }
      subfields_.WriteTo(output, _repeated_subfields_codec);
      if (Category.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Category);
      }
      if (ValueFormat.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ValueFormat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Type);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (Mode.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Mode);
      }
      synonyms_.WriteTo(ref output, _repeated_synonyms_codec);
      tags_.WriteTo(ref output, _repeated_tags_codec);
      if (DisplayName.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(DisplayName);
      }
      subfields_.WriteTo(ref output, _repeated_subfields_codec);
      if (Category.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Category);
      }
      if (ValueFormat.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ValueFormat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Mode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mode);
      }
      size += synonyms_.CalculateSize(_repeated_synonyms_codec);
      size += tags_.CalculateSize(_repeated_tags_codec);
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      size += subfields_.CalculateSize(_repeated_subfields_codec);
      if (Category.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Category);
      }
      if (ValueFormat.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ValueFormat);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Field other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Mode.Length != 0) {
        Mode = other.Mode;
      }
      synonyms_.Add(other.synonyms_);
      tags_.Add(other.tags_);
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      subfields_.Add(other.subfields_);
      if (other.Category.Length != 0) {
        Category = other.Category;
      }
      if (other.ValueFormat.Length != 0) {
        ValueFormat = other.ValueFormat;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Type = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            Mode = input.ReadString();
            break;
          }
          case 50: {
            synonyms_.AddEntriesFrom(input, _repeated_synonyms_codec);
            break;
          }
          case 58: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
          case 66: {
            DisplayName = input.ReadString();
            break;
          }
          case 74: {
            subfields_.AddEntriesFrom(input, _repeated_subfields_codec);
            break;
          }
          case 82: {
            Category = input.ReadString();
            break;
          }
          case 90: {
            ValueFormat = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Type = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            Mode = input.ReadString();
            break;
          }
          case 50: {
            synonyms_.AddEntriesFrom(ref input, _repeated_synonyms_codec);
            break;
          }
          case 58: {
            tags_.AddEntriesFrom(ref input, _repeated_tags_codec);
            break;
          }
          case 66: {
            DisplayName = input.ReadString();
            break;
          }
          case 74: {
            subfields_.AddEntriesFrom(ref input, _repeated_subfields_codec);
            break;
          }
          case 82: {
            Category = input.ReadString();
            break;
          }
          case 90: {
            ValueFormat = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A filter on a datasource's underlying data. Filter syntax documentation:
  /// https://cloud.google.com/looker/docs/filter-expressions
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DataFilter : pb::IMessage<DataFilter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DataFilter> _parser = new pb::MessageParser<DataFilter>(() => new DataFilter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DataFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.GeminiDataAnalytics.V1Beta.DatasourceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataFilter(DataFilter other) : this() {
      field_ = other.field_;
      value_ = other.value_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataFilter Clone() {
      return new DataFilter(this);
    }

    /// <summary>Field number for the "field" field.</summary>
    public const int FieldFieldNumber = 1;
    private string field_ = "";
    /// <summary>
    /// Optional. The field to filter on. For example: ["event_date",
    /// "customer_id", "product_category"]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Field {
      get { return field_; }
      set {
        field_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private string value_ = "";
    /// <summary>
    /// Optional. The default value used for this filter if the filter is not
    /// overridden in a query. For example: ["after 2024-01-01", "123", "-fashion"]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private global::Google.Cloud.GeminiDataAnalytics.V1Beta.DataFilterType type_ = global::Google.Cloud.GeminiDataAnalytics.V1Beta.DataFilterType.Unspecified;
    /// <summary>
    /// Optional. The type of filter present on a datasource, such as
    /// ALWAYS_FILTER.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.GeminiDataAnalytics.V1Beta.DataFilterType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DataFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DataFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Field != other.Field) return false;
      if (Value != other.Value) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Field.Length != 0) hash ^= Field.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (Type != global::Google.Cloud.GeminiDataAnalytics.V1Beta.DataFilterType.Unspecified) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Field.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Field);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (Type != global::Google.Cloud.GeminiDataAnalytics.V1Beta.DataFilterType.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Field.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Field);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (Type != global::Google.Cloud.GeminiDataAnalytics.V1Beta.DataFilterType.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Field.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Field);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (Type != global::Google.Cloud.GeminiDataAnalytics.V1Beta.DataFilterType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DataFilter other) {
      if (other == null) {
        return;
      }
      if (other.Field.Length != 0) {
        Field = other.Field;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      if (other.Type != global::Google.Cloud.GeminiDataAnalytics.V1Beta.DataFilterType.Unspecified) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Field = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
          case 24: {
            Type = (global::Google.Cloud.GeminiDataAnalytics.V1Beta.DataFilterType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Field = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
          case 24: {
            Type = (global::Google.Cloud.GeminiDataAnalytics.V1Beta.DataFilterType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
