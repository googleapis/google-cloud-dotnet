// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/netapp/v1/volume.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.NetApp.V1 {

  /// <summary>Holder for reflection information generated from google/cloud/netapp/v1/volume.proto</summary>
  public static partial class VolumeReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/netapp/v1/volume.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static VolumeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNnb29nbGUvY2xvdWQvbmV0YXBwL3YxL3ZvbHVtZS5wcm90bxIWZ29vZ2xl",
            "LmNsb3VkLm5ldGFwcC52MRofZ29vZ2xlL2FwaS9maWVsZF9iZWhhdmlvci5w",
            "cm90bxobZ29vZ2xlL2FwaS9maWVsZF9pbmZvLnByb3RvGhlnb29nbGUvYXBp",
            "L3Jlc291cmNlLnByb3RvGiNnb29nbGUvY2xvdWQvbmV0YXBwL3YxL2NvbW1v",
            "bi5wcm90bxogZ29vZ2xlL3Byb3RvYnVmL2ZpZWxkX21hc2sucHJvdG8aH2dv",
            "b2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8ikwEKEkxpc3RWb2x1bWVz",
            "UmVxdWVzdBI0CgZwYXJlbnQYASABKAlCJOBBAvpBHhIcbmV0YXBwLmdvb2ds",
            "ZWFwaXMuY29tL1ZvbHVtZRIRCglwYWdlX3NpemUYAiABKAUSEgoKcGFnZV90",
            "b2tlbhgDIAEoCRIOCgZmaWx0ZXIYBCABKAkSEAoIb3JkZXJfYnkYBSABKAki",
            "dAoTTGlzdFZvbHVtZXNSZXNwb25zZRIvCgd2b2x1bWVzGAEgAygLMh4uZ29v",
            "Z2xlLmNsb3VkLm5ldGFwcC52MS5Wb2x1bWUSFwoPbmV4dF9wYWdlX3Rva2Vu",
            "GAIgASgJEhMKC3VucmVhY2hhYmxlGAMgAygJIkYKEEdldFZvbHVtZVJlcXVl",
            "c3QSMgoEbmFtZRgBIAEoCUIk4EEC+kEeChxuZXRhcHAuZ29vZ2xlYXBpcy5j",
            "b20vVm9sdW1lIpgBChNDcmVhdGVWb2x1bWVSZXF1ZXN0EjQKBnBhcmVudBgB",
            "IAEoCUIk4EEC+kEeEhxuZXRhcHAuZ29vZ2xlYXBpcy5jb20vVm9sdW1lEhYK",
            "CXZvbHVtZV9pZBgCIAEoCUID4EECEjMKBnZvbHVtZRgDIAEoCzIeLmdvb2ds",
            "ZS5jbG91ZC5uZXRhcHAudjEuVm9sdW1lQgPgQQIigAEKE1VwZGF0ZVZvbHVt",
            "ZVJlcXVlc3QSNAoLdXBkYXRlX21hc2sYASABKAsyGi5nb29nbGUucHJvdG9i",
            "dWYuRmllbGRNYXNrQgPgQQISMwoGdm9sdW1lGAIgASgLMh4uZ29vZ2xlLmNs",
            "b3VkLm5ldGFwcC52MS5Wb2x1bWVCA+BBAiJYChNEZWxldGVWb2x1bWVSZXF1",
            "ZXN0EjIKBG5hbWUYASABKAlCJOBBAvpBHgocbmV0YXBwLmdvb2dsZWFwaXMu",
            "Y29tL1ZvbHVtZRINCgVmb3JjZRgCIAEoCCJjChNSZXZlcnRWb2x1bWVSZXF1",
            "ZXN0EjIKBG5hbWUYASABKAlCJOBBAvpBHgocbmV0YXBwLmdvb2dsZWFwaXMu",
            "Y29tL1ZvbHVtZRIYCgtzbmFwc2hvdF9pZBgCIAEoCUID4EECIpERCgZWb2x1",
            "bWUSEQoEbmFtZRgBIAEoCUID4EEIEjgKBXN0YXRlGAIgASgOMiQuZ29vZ2xl",
            "LmNsb3VkLm5ldGFwcC52MS5Wb2x1bWUuU3RhdGVCA+BBAxIaCg1zdGF0ZV9k",
            "ZXRhaWxzGAMgASgJQgPgQQMSNAoLY3JlYXRlX3RpbWUYBCABKAsyGi5nb29n",
            "bGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMSFwoKc2hhcmVfbmFtZRgFIAEo",
            "CUID4EECEhYKCXBzYV9yYW5nZRgGIAEoCUID4EEDEj8KDHN0b3JhZ2VfcG9v",
            "bBgHIAEoCUIp4EEC+kEjCiFuZXRhcHAuZ29vZ2xlYXBpcy5jb20vU3RvcmFn",
            "ZVBvb2wSNwoHbmV0d29yaxgIIAEoCUIm4EED+kEgCh5jb21wdXRlLmdvb2ds",
            "ZWFwaXMuY29tL05ldHdvcmsSQAoNc2VydmljZV9sZXZlbBgJIAEoDjIkLmdv",
            "b2dsZS5jbG91ZC5uZXRhcHAudjEuU2VydmljZUxldmVsQgPgQQMSGQoMY2Fw",
            "YWNpdHlfZ2liGAogASgDQgPgQQISQAoNZXhwb3J0X3BvbGljeRgLIAEoCzIk",
            "Lmdvb2dsZS5jbG91ZC5uZXRhcHAudjEuRXhwb3J0UG9saWN5QgPgQQESOQoJ",
            "cHJvdG9jb2xzGAwgAygOMiEuZ29vZ2xlLmNsb3VkLm5ldGFwcC52MS5Qcm90",
            "b2NvbHNCA+BBAhI+CgxzbWJfc2V0dGluZ3MYDSADKA4yIy5nb29nbGUuY2xv",
            "dWQubmV0YXBwLnYxLlNNQlNldHRpbmdzQgPgQQESPwoNbW91bnRfb3B0aW9u",
            "cxgOIAMoCzIjLmdvb2dsZS5jbG91ZC5uZXRhcHAudjEuTW91bnRPcHRpb25C",
            "A+BBAxIdChB1bml4X3Blcm1pc3Npb25zGA8gASgJQgPgQQESPwoGbGFiZWxz",
            "GBAgAygLMiouZ29vZ2xlLmNsb3VkLm5ldGFwcC52MS5Wb2x1bWUuTGFiZWxz",
            "RW50cnlCA+BBARIYCgtkZXNjcmlwdGlvbhgRIAEoCUID4EEBEkQKD3NuYXBz",
            "aG90X3BvbGljeRgSIAEoCzImLmdvb2dsZS5jbG91ZC5uZXRhcHAudjEuU25h",
            "cHNob3RQb2xpY3lCA+BBARIZCgxzbmFwX3Jlc2VydmUYEyABKAFCA+BBARIf",
            "ChJzbmFwc2hvdF9kaXJlY3RvcnkYFCABKAhCA+BBARIVCgh1c2VkX2dpYhgV",
            "IAEoA0ID4EEDEkIKDnNlY3VyaXR5X3N0eWxlGBYgASgOMiUuZ29vZ2xlLmNs",
            "b3VkLm5ldGFwcC52MS5TZWN1cml0eVN0eWxlQgPgQQESHQoQa2VyYmVyb3Nf",
            "ZW5hYmxlZBgXIAEoCEID4EEBEhkKDGxkYXBfZW5hYmxlZBgYIAEoCEID4EED",
            "EkcKEGFjdGl2ZV9kaXJlY3RvcnkYGSABKAlCLeBBA/pBJwolbmV0YXBwLmdv",
            "b2dsZWFwaXMuY29tL0FjdGl2ZURpcmVjdG9yeRJKChJyZXN0b3JlX3BhcmFt",
            "ZXRlcnMYGiABKAsyKS5nb29nbGUuY2xvdWQubmV0YXBwLnYxLlJlc3RvcmVQ",
            "YXJhbWV0ZXJzQgPgQQESOwoKa21zX2NvbmZpZxgbIAEoCUIn4EED+kEhCh9u",
            "ZXRhcHAuZ29vZ2xlYXBpcy5jb20vS21zQ29uZmlnEkQKD2VuY3J5cHRpb25f",
            "dHlwZRgcIAEoDjImLmdvb2dsZS5jbG91ZC5uZXRhcHAudjEuRW5jcnlwdGlv",
            "blR5cGVCA+BBAxIcCg9oYXNfcmVwbGljYXRpb24YHSABKAhCA+BBAxJACg1i",
            "YWNrdXBfY29uZmlnGB4gASgLMiQuZ29vZ2xlLmNsb3VkLm5ldGFwcC52MS5C",
            "YWNrdXBDb25maWdIAIgBARJJChJyZXN0cmljdGVkX2FjdGlvbnMYHyADKA4y",
            "KC5nb29nbGUuY2xvdWQubmV0YXBwLnYxLlJlc3RyaWN0ZWRBY3Rpb25CA+BB",
            "ARIbCg5sYXJnZV9jYXBhY2l0eRggIAEoCEID4EEBEh8KEm11bHRpcGxlX2Vu",
            "ZHBvaW50cxghIAEoCEID4EEBEkIKDnRpZXJpbmdfcG9saWN5GCIgASgLMiUu",
            "Z29vZ2xlLmNsb3VkLm5ldGFwcC52MS5UaWVyaW5nUG9saWN5SAGIAQESGQoM",
            "cmVwbGljYV96b25lGCQgASgJQgPgQQMSEQoEem9uZRglIAEoCUID4EEDEh8K",
            "EmNvbGRfdGllcl9zaXplX2dpYhgnIAEoA0ID4EEDEl8KHWh5YnJpZF9yZXBs",
            "aWNhdGlvbl9wYXJhbWV0ZXJzGCggASgLMjMuZ29vZ2xlLmNsb3VkLm5ldGFw",
            "cC52MS5IeWJyaWRSZXBsaWNhdGlvblBhcmFtZXRlcnNCA+BBARotCgtMYWJl",
            "bHNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIpkBCgVT",
            "dGF0ZRIVChFTVEFURV9VTlNQRUNJRklFRBAAEgkKBVJFQURZEAESDAoIQ1JF",
            "QVRJTkcQAhIMCghERUxFVElORxADEgwKCFVQREFUSU5HEAQSDQoJUkVTVE9S",
            "SU5HEAUSDAoIRElTQUJMRUQQBhIJCgVFUlJPUhAHEg0KCVBSRVBBUklORxAI",
            "Eg0KCVJFQURfT05MWRAJOmzqQWkKHG5ldGFwcC5nb29nbGVhcGlzLmNvbS9W",
            "b2x1bWUSOHByb2plY3RzL3twcm9qZWN0fS9sb2NhdGlvbnMve2xvY2F0aW9u",
            "fS92b2x1bWVzL3t2b2x1bWV9Kgd2b2x1bWVzMgZ2b2x1bWVCEAoOX2JhY2t1",
            "cF9jb25maWdCEQoPX3RpZXJpbmdfcG9saWN5IlIKDEV4cG9ydFBvbGljeRJC",
            "CgVydWxlcxgBIAMoCzIuLmdvb2dsZS5jbG91ZC5uZXRhcHAudjEuU2ltcGxl",
            "RXhwb3J0UG9saWN5UnVsZUID4EECIvwEChZTaW1wbGVFeHBvcnRQb2xpY3lS",
            "dWxlEhwKD2FsbG93ZWRfY2xpZW50cxgBIAEoCUgAiAEBEhwKD2hhc19yb290",
            "X2FjY2VzcxgCIAEoCUgBiAEBEjwKC2FjY2Vzc190eXBlGAMgASgOMiIuZ29v",
            "Z2xlLmNsb3VkLm5ldGFwcC52MS5BY2Nlc3NUeXBlSAKIAQESEgoFbmZzdjMY",
            "BCABKAhIA4gBARISCgVuZnN2NBgFIAEoCEgEiAEBEiEKFGtlcmJlcm9zXzVf",
            "cmVhZF9vbmx5GAYgASgISAWIAQESIgoVa2VyYmVyb3NfNV9yZWFkX3dyaXRl",
            "GAcgASgISAaIAQESIgoVa2VyYmVyb3NfNWlfcmVhZF9vbmx5GAggASgISAeI",
            "AQESIwoWa2VyYmVyb3NfNWlfcmVhZF93cml0ZRgJIAEoCEgIiAEBEiIKFWtl",
            "cmJlcm9zXzVwX3JlYWRfb25seRgKIAEoCEgJiAEBEiMKFmtlcmJlcm9zXzVw",
            "X3JlYWRfd3JpdGUYCyABKAhICogBAUISChBfYWxsb3dlZF9jbGllbnRzQhIK",
            "EF9oYXNfcm9vdF9hY2Nlc3NCDgoMX2FjY2Vzc190eXBlQggKBl9uZnN2M0II",
            "CgZfbmZzdjRCFwoVX2tlcmJlcm9zXzVfcmVhZF9vbmx5QhgKFl9rZXJiZXJv",
            "c181X3JlYWRfd3JpdGVCGAoWX2tlcmJlcm9zXzVpX3JlYWRfb25seUIZChdf",
            "a2VyYmVyb3NfNWlfcmVhZF93cml0ZUIYChZfa2VyYmVyb3NfNXBfcmVhZF9v",
            "bmx5QhkKF19rZXJiZXJvc181cF9yZWFkX3dyaXRlIpoDCg5TbmFwc2hvdFBv",
            "bGljeRIUCgdlbmFibGVkGAEgASgISACIAQESRAoPaG91cmx5X3NjaGVkdWxl",
            "GAIgASgLMiYuZ29vZ2xlLmNsb3VkLm5ldGFwcC52MS5Ib3VybHlTY2hlZHVs",
            "ZUgBiAEBEkIKDmRhaWx5X3NjaGVkdWxlGAMgASgLMiUuZ29vZ2xlLmNsb3Vk",
            "Lm5ldGFwcC52MS5EYWlseVNjaGVkdWxlSAKIAQESRAoPd2Vla2x5X3NjaGVk",
            "dWxlGAQgASgLMiYuZ29vZ2xlLmNsb3VkLm5ldGFwcC52MS5XZWVrbHlTY2hl",
            "ZHVsZUgDiAEBEkYKEG1vbnRobHlfc2NoZWR1bGUYBSABKAsyJy5nb29nbGUu",
            "Y2xvdWQubmV0YXBwLnYxLk1vbnRobHlTY2hlZHVsZUgEiAEBQgoKCF9lbmFi",
            "bGVkQhIKEF9ob3VybHlfc2NoZWR1bGVCEQoPX2RhaWx5X3NjaGVkdWxlQhIK",
            "EF93ZWVrbHlfc2NoZWR1bGVCEwoRX21vbnRobHlfc2NoZWR1bGUiZgoOSG91",
            "cmx5U2NoZWR1bGUSHgoRc25hcHNob3RzX3RvX2tlZXAYASABKAFIAIgBARIT",
            "CgZtaW51dGUYAiABKAFIAYgBAUIUChJfc25hcHNob3RzX3RvX2tlZXBCCQoH",
            "X21pbnV0ZSKBAQoNRGFpbHlTY2hlZHVsZRIeChFzbmFwc2hvdHNfdG9fa2Vl",
            "cBgBIAEoAUgAiAEBEhMKBm1pbnV0ZRgCIAEoAUgBiAEBEhEKBGhvdXIYAyAB",
            "KAFIAogBAUIUChJfc25hcHNob3RzX3RvX2tlZXBCCQoHX21pbnV0ZUIHCgVf",
            "aG91ciKcAQoOV2Vla2x5U2NoZWR1bGUSHgoRc25hcHNob3RzX3RvX2tlZXAY",
            "ASABKAFIAIgBARITCgZtaW51dGUYAiABKAFIAYgBARIRCgRob3VyGAMgASgB",
            "SAKIAQESEAoDZGF5GAQgASgJSAOIAQFCFAoSX3NuYXBzaG90c190b19rZWVw",
            "QgkKB19taW51dGVCBwoFX2hvdXJCBgoEX2RheSKxAQoPTW9udGhseVNjaGVk",
            "dWxlEh4KEXNuYXBzaG90c190b19rZWVwGAEgASgBSACIAQESEwoGbWludXRl",
            "GAIgASgBSAGIAQESEQoEaG91chgDIAEoAUgCiAEBEhoKDWRheXNfb2ZfbW9u",
            "dGgYBCABKAlIA4gBAUIUChJfc25hcHNob3RzX3RvX2tlZXBCCQoHX21pbnV0",
            "ZUIHCgVfaG91ckIQCg5fZGF5c19vZl9tb250aCJ9CgtNb3VudE9wdGlvbhIO",
            "CgZleHBvcnQYASABKAkSEwoLZXhwb3J0X2Z1bGwYAiABKAkSMwoIcHJvdG9j",
            "b2wYAyABKA4yIS5nb29nbGUuY2xvdWQubmV0YXBwLnYxLlByb3RvY29scxIU",
            "CgxpbnN0cnVjdGlvbnMYBCABKAkiUQoRUmVzdG9yZVBhcmFtZXRlcnMSGQoP",
            "c291cmNlX3NuYXBzaG90GAEgASgJSAASFwoNc291cmNlX2JhY2t1cBgCIAEo",
            "CUgAQggKBnNvdXJjZSKaAgoMQmFja3VwQ29uZmlnEkMKD2JhY2t1cF9wb2xp",
            "Y2llcxgBIAMoCUIq4EEB+kEkCiJuZXRhcHAuZ29vZ2xlYXBpcy5jb20vQmFj",
            "a3VwUG9saWN5Ej8KDGJhY2t1cF92YXVsdBgCIAEoCUIp4EEB+kEjCiFuZXRh",
            "cHAuZ29vZ2xlYXBpcy5jb20vQmFja3VwVmF1bHQSKgoYc2NoZWR1bGVkX2Jh",
            "Y2t1cF9lbmFibGVkGAMgASgIQgPgQQFIAIgBARIkChJiYWNrdXBfY2hhaW5f",
            "Ynl0ZXMYBCABKANCA+BBA0gBiAEBQhsKGV9zY2hlZHVsZWRfYmFja3VwX2Vu",
            "YWJsZWRCFQoTX2JhY2t1cF9jaGFpbl9ieXRlcyL5AQoNVGllcmluZ1BvbGlj",
            "eRJPCgt0aWVyX2FjdGlvbhgBIAEoDjIwLmdvb2dsZS5jbG91ZC5uZXRhcHAu",
            "djEuVGllcmluZ1BvbGljeS5UaWVyQWN0aW9uQgPgQQFIAIgBARIoChZjb29s",
            "aW5nX3RocmVzaG9sZF9kYXlzGAIgASgFQgPgQQFIAYgBASJCCgpUaWVyQWN0",
            "aW9uEhsKF1RJRVJfQUNUSU9OX1VOU1BFQ0lGSUVEEAASCwoHRU5BQkxFRBAB",
            "EgoKBlBBVVNFRBACQg4KDF90aWVyX2FjdGlvbkIZChdfY29vbGluZ190aHJl",
            "c2hvbGRfZGF5cyKWAwobSHlicmlkUmVwbGljYXRpb25QYXJhbWV0ZXJzEj4K",
            "C3JlcGxpY2F0aW9uGAEgASgJQingQQL6QSMKIW5ldGFwcC5nb29nbGVhcGlz",
            "LmNvbS9SZXBsaWNhdGlvbhIdChBwZWVyX3ZvbHVtZV9uYW1lGAIgASgJQgPg",
            "QQISHgoRcGVlcl9jbHVzdGVyX25hbWUYAyABKAlCA+BBAhIaCg1wZWVyX3N2",
            "bV9uYW1lGAQgASgJQgPgQQISHgoRcGVlcl9pcF9hZGRyZXNzZXMYBSADKAlC",
            "A+BBAhIdChBjbHVzdGVyX2xvY2F0aW9uGAYgASgJQgPgQQESGAoLZGVzY3Jp",
            "cHRpb24YByABKAlCA+BBARJUCgZsYWJlbHMYCCADKAsyPy5nb29nbGUuY2xv",
            "dWQubmV0YXBwLnYxLkh5YnJpZFJlcGxpY2F0aW9uUGFyYW1ldGVycy5MYWJl",
            "bHNFbnRyeUID4EEBGi0KC0xhYmVsc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2",
            "YWx1ZRgCIAEoCToCOAEqRQoJUHJvdG9jb2xzEhkKFVBST1RPQ09MU19VTlNQ",
            "RUNJRklFRBAAEgkKBU5GU1YzEAESCQoFTkZTVjQQAhIHCgNTTUIQAypXCgpB",
            "Y2Nlc3NUeXBlEhsKF0FDQ0VTU19UWVBFX1VOU1BFQ0lGSUVEEAASDQoJUkVB",
            "RF9PTkxZEAESDgoKUkVBRF9XUklURRACEg0KCVJFQURfTk9ORRADKugBCgtT",
            "TUJTZXR0aW5ncxIcChhTTUJfU0VUVElOR1NfVU5TUEVDSUZJRUQQABIQCgxF",
            "TkNSWVBUX0RBVEEQARINCglCUk9XU0FCTEUQAhIRCg1DSEFOR0VfTk9USUZZ",
            "EAMSEQoNTk9OX0JST1dTQUJMRRAEEgsKB09QTE9DS1MQBRIRCg1TSE9XX1NO",
            "QVBTSE9UEAYSGgoWU0hPV19QUkVWSU9VU19WRVJTSU9OUxAHEhwKGEFDQ0VT",
            "U19CQVNFRF9FTlVNRVJBVElPThAIEhoKFkNPTlRJTlVPVVNMWV9BVkFJTEFC",
            "TEUQCSpDCg1TZWN1cml0eVN0eWxlEh4KGlNFQ1VSSVRZX1NUWUxFX1VOU1BF",
            "Q0lGSUVEEAASCAoETlRGUxABEggKBFVOSVgQAipBChBSZXN0cmljdGVkQWN0",
            "aW9uEiEKHVJFU1RSSUNURURfQUNUSU9OX1VOU1BFQ0lGSUVEEAASCgoGREVM",
            "RVRFEAFCrQEKGmNvbS5nb29nbGUuY2xvdWQubmV0YXBwLnYxQgtWb2x1bWVQ",
            "cm90b1ABWjJjbG91ZC5nb29nbGUuY29tL2dvL25ldGFwcC9hcGl2MS9uZXRh",
            "cHBwYjtuZXRhcHBwYqoCFkdvb2dsZS5DbG91ZC5OZXRBcHAuVjHKAhZHb29n",
            "bGVcQ2xvdWRcTmV0QXBwXFYx6gIZR29vZ2xlOjpDbG91ZDo6TmV0QXBwOjpW",
            "MWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.FieldInfoReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Cloud.NetApp.V1.CommonReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.FieldMaskReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Google.Cloud.NetApp.V1.Protocols), typeof(global::Google.Cloud.NetApp.V1.AccessType), typeof(global::Google.Cloud.NetApp.V1.SMBSettings), typeof(global::Google.Cloud.NetApp.V1.SecurityStyle), typeof(global::Google.Cloud.NetApp.V1.RestrictedAction), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.NetApp.V1.ListVolumesRequest), global::Google.Cloud.NetApp.V1.ListVolumesRequest.Parser, new[]{ "Parent", "PageSize", "PageToken", "Filter", "OrderBy" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.NetApp.V1.ListVolumesResponse), global::Google.Cloud.NetApp.V1.ListVolumesResponse.Parser, new[]{ "Volumes", "NextPageToken", "Unreachable" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.NetApp.V1.GetVolumeRequest), global::Google.Cloud.NetApp.V1.GetVolumeRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.NetApp.V1.CreateVolumeRequest), global::Google.Cloud.NetApp.V1.CreateVolumeRequest.Parser, new[]{ "Parent", "VolumeId", "Volume" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.NetApp.V1.UpdateVolumeRequest), global::Google.Cloud.NetApp.V1.UpdateVolumeRequest.Parser, new[]{ "UpdateMask", "Volume" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.NetApp.V1.DeleteVolumeRequest), global::Google.Cloud.NetApp.V1.DeleteVolumeRequest.Parser, new[]{ "Name", "Force" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.NetApp.V1.RevertVolumeRequest), global::Google.Cloud.NetApp.V1.RevertVolumeRequest.Parser, new[]{ "Name", "SnapshotId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.NetApp.V1.Volume), global::Google.Cloud.NetApp.V1.Volume.Parser, new[]{ "Name", "State", "StateDetails", "CreateTime", "ShareName", "PsaRange", "StoragePool", "Network", "ServiceLevel", "CapacityGib", "ExportPolicy", "Protocols", "SmbSettings", "MountOptions", "UnixPermissions", "Labels", "Description", "SnapshotPolicy", "SnapReserve", "SnapshotDirectory", "UsedGib", "SecurityStyle", "KerberosEnabled", "LdapEnabled", "ActiveDirectory", "RestoreParameters", "KmsConfig", "EncryptionType", "HasReplication", "BackupConfig", "RestrictedActions", "LargeCapacity", "MultipleEndpoints", "TieringPolicy", "ReplicaZone", "Zone", "ColdTierSizeGib", "HybridReplicationParameters" }, new[]{ "BackupConfig", "TieringPolicy" }, new[]{ typeof(global::Google.Cloud.NetApp.V1.Volume.Types.State) }, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.NetApp.V1.ExportPolicy), global::Google.Cloud.NetApp.V1.ExportPolicy.Parser, new[]{ "Rules" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.NetApp.V1.SimpleExportPolicyRule), global::Google.Cloud.NetApp.V1.SimpleExportPolicyRule.Parser, new[]{ "AllowedClients", "HasRootAccess", "AccessType", "Nfsv3", "Nfsv4", "Kerberos5ReadOnly", "Kerberos5ReadWrite", "Kerberos5IReadOnly", "Kerberos5IReadWrite", "Kerberos5PReadOnly", "Kerberos5PReadWrite" }, new[]{ "AllowedClients", "HasRootAccess", "AccessType", "Nfsv3", "Nfsv4", "Kerberos5ReadOnly", "Kerberos5ReadWrite", "Kerberos5IReadOnly", "Kerberos5IReadWrite", "Kerberos5PReadOnly", "Kerberos5PReadWrite" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.NetApp.V1.SnapshotPolicy), global::Google.Cloud.NetApp.V1.SnapshotPolicy.Parser, new[]{ "Enabled", "HourlySchedule", "DailySchedule", "WeeklySchedule", "MonthlySchedule" }, new[]{ "Enabled", "HourlySchedule", "DailySchedule", "WeeklySchedule", "MonthlySchedule" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.NetApp.V1.HourlySchedule), global::Google.Cloud.NetApp.V1.HourlySchedule.Parser, new[]{ "SnapshotsToKeep", "Minute" }, new[]{ "SnapshotsToKeep", "Minute" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.NetApp.V1.DailySchedule), global::Google.Cloud.NetApp.V1.DailySchedule.Parser, new[]{ "SnapshotsToKeep", "Minute", "Hour" }, new[]{ "SnapshotsToKeep", "Minute", "Hour" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.NetApp.V1.WeeklySchedule), global::Google.Cloud.NetApp.V1.WeeklySchedule.Parser, new[]{ "SnapshotsToKeep", "Minute", "Hour", "Day" }, new[]{ "SnapshotsToKeep", "Minute", "Hour", "Day" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.NetApp.V1.MonthlySchedule), global::Google.Cloud.NetApp.V1.MonthlySchedule.Parser, new[]{ "SnapshotsToKeep", "Minute", "Hour", "DaysOfMonth" }, new[]{ "SnapshotsToKeep", "Minute", "Hour", "DaysOfMonth" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.NetApp.V1.MountOption), global::Google.Cloud.NetApp.V1.MountOption.Parser, new[]{ "Export", "ExportFull", "Protocol", "Instructions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.NetApp.V1.RestoreParameters), global::Google.Cloud.NetApp.V1.RestoreParameters.Parser, new[]{ "SourceSnapshot", "SourceBackup" }, new[]{ "Source" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.NetApp.V1.BackupConfig), global::Google.Cloud.NetApp.V1.BackupConfig.Parser, new[]{ "BackupPolicies", "BackupVault", "ScheduledBackupEnabled", "BackupChainBytes" }, new[]{ "ScheduledBackupEnabled", "BackupChainBytes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.NetApp.V1.TieringPolicy), global::Google.Cloud.NetApp.V1.TieringPolicy.Parser, new[]{ "TierAction", "CoolingThresholdDays" }, new[]{ "TierAction", "CoolingThresholdDays" }, new[]{ typeof(global::Google.Cloud.NetApp.V1.TieringPolicy.Types.TierAction) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.NetApp.V1.HybridReplicationParameters), global::Google.Cloud.NetApp.V1.HybridReplicationParameters.Parser, new[]{ "Replication", "PeerVolumeName", "PeerClusterName", "PeerSvmName", "PeerIpAddresses", "ClusterLocation", "Description", "Labels" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Protocols is an enum of all the supported network protocols for a volume.
  /// </summary>
  public enum Protocols {
    /// <summary>
    /// Unspecified protocol
    /// </summary>
    [pbr::OriginalName("PROTOCOLS_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// NFS V3 protocol
    /// </summary>
    [pbr::OriginalName("NFSV3")] Nfsv3 = 1,
    /// <summary>
    /// NFS V4 protocol
    /// </summary>
    [pbr::OriginalName("NFSV4")] Nfsv4 = 2,
    /// <summary>
    /// SMB protocol
    /// </summary>
    [pbr::OriginalName("SMB")] Smb = 3,
  }

  /// <summary>
  /// AccessType is an enum of all the supported access types for a volume.
  /// </summary>
  public enum AccessType {
    /// <summary>
    /// Unspecified Access Type
    /// </summary>
    [pbr::OriginalName("ACCESS_TYPE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Read Only
    /// </summary>
    [pbr::OriginalName("READ_ONLY")] ReadOnly = 1,
    /// <summary>
    /// Read Write
    /// </summary>
    [pbr::OriginalName("READ_WRITE")] ReadWrite = 2,
    /// <summary>
    /// None
    /// </summary>
    [pbr::OriginalName("READ_NONE")] ReadNone = 3,
  }

  /// <summary>
  /// SMBSettings
  /// Modifies the behaviour of a SMB volume.
  /// </summary>
  public enum SMBSettings {
    /// <summary>
    /// Unspecified default option
    /// </summary>
    [pbr::OriginalName("SMB_SETTINGS_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// SMB setting encrypt data
    /// </summary>
    [pbr::OriginalName("ENCRYPT_DATA")] EncryptData = 1,
    /// <summary>
    /// SMB setting browsable
    /// </summary>
    [pbr::OriginalName("BROWSABLE")] Browsable = 2,
    /// <summary>
    /// SMB setting notify change
    /// </summary>
    [pbr::OriginalName("CHANGE_NOTIFY")] ChangeNotify = 3,
    /// <summary>
    /// SMB setting not to notify change
    /// </summary>
    [pbr::OriginalName("NON_BROWSABLE")] NonBrowsable = 4,
    /// <summary>
    /// SMB setting oplocks
    /// </summary>
    [pbr::OriginalName("OPLOCKS")] Oplocks = 5,
    /// <summary>
    /// SMB setting to show snapshots
    /// </summary>
    [pbr::OriginalName("SHOW_SNAPSHOT")] ShowSnapshot = 6,
    /// <summary>
    /// SMB setting to show previous versions
    /// </summary>
    [pbr::OriginalName("SHOW_PREVIOUS_VERSIONS")] ShowPreviousVersions = 7,
    /// <summary>
    /// SMB setting to access volume based on enumerartion
    /// </summary>
    [pbr::OriginalName("ACCESS_BASED_ENUMERATION")] AccessBasedEnumeration = 8,
    /// <summary>
    /// Continuously available enumeration
    /// </summary>
    [pbr::OriginalName("CONTINUOUSLY_AVAILABLE")] ContinuouslyAvailable = 9,
  }

  /// <summary>
  /// The security style of the volume, can be either UNIX or NTFS.
  /// </summary>
  public enum SecurityStyle {
    /// <summary>
    /// SecurityStyle is unspecified
    /// </summary>
    [pbr::OriginalName("SECURITY_STYLE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// SecurityStyle uses NTFS
    /// </summary>
    [pbr::OriginalName("NTFS")] Ntfs = 1,
    /// <summary>
    /// SecurityStyle uses UNIX
    /// </summary>
    [pbr::OriginalName("UNIX")] Unix = 2,
  }

  /// <summary>
  /// Actions to be restricted for a volume.
  /// </summary>
  public enum RestrictedAction {
    /// <summary>
    /// Unspecified restricted action
    /// </summary>
    [pbr::OriginalName("RESTRICTED_ACTION_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Prevent volume from being deleted when mounted.
    /// </summary>
    [pbr::OriginalName("DELETE")] Delete = 1,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Message for requesting list of Volumes
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ListVolumesRequest : pb::IMessage<ListVolumesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListVolumesRequest> _parser = new pb::MessageParser<ListVolumesRequest>(() => new ListVolumesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ListVolumesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.NetApp.V1.VolumeReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListVolumesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListVolumesRequest(ListVolumesRequest other) : this() {
      parent_ = other.parent_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      filter_ = other.filter_;
      orderBy_ = other.orderBy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListVolumesRequest Clone() {
      return new ListVolumesRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. Parent value for ListVolumesRequest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private int pageSize_;
    /// <summary>
    /// Requested page size. Server may return fewer items than requested.
    /// If unspecified, the server will pick an appropriate default.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 3;
    private string pageToken_ = "";
    /// <summary>
    /// A token identifying a page of results the server should return.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 4;
    private string filter_ = "";
    /// <summary>
    /// Filtering results
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_by" field.</summary>
    public const int OrderByFieldNumber = 5;
    private string orderBy_ = "";
    /// <summary>
    /// Hint for how to order the results
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OrderBy {
      get { return orderBy_; }
      set {
        orderBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ListVolumesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ListVolumesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      if (Filter != other.Filter) return false;
      if (OrderBy != other.OrderBy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (OrderBy.Length != 0) hash ^= OrderBy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Filter);
      }
      if (OrderBy.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(OrderBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Filter);
      }
      if (OrderBy.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(OrderBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (OrderBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderBy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ListVolumesRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      if (other.OrderBy.Length != 0) {
        OrderBy = other.OrderBy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 34: {
            Filter = input.ReadString();
            break;
          }
          case 42: {
            OrderBy = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 34: {
            Filter = input.ReadString();
            break;
          }
          case 42: {
            OrderBy = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message for response to listing Volumes
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ListVolumesResponse : pb::IMessage<ListVolumesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListVolumesResponse> _parser = new pb::MessageParser<ListVolumesResponse>(() => new ListVolumesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ListVolumesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.NetApp.V1.VolumeReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListVolumesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListVolumesResponse(ListVolumesResponse other) : this() {
      volumes_ = other.volumes_.Clone();
      nextPageToken_ = other.nextPageToken_;
      unreachable_ = other.unreachable_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListVolumesResponse Clone() {
      return new ListVolumesResponse(this);
    }

    /// <summary>Field number for the "volumes" field.</summary>
    public const int VolumesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.NetApp.V1.Volume> _repeated_volumes_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.NetApp.V1.Volume.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.NetApp.V1.Volume> volumes_ = new pbc::RepeatedField<global::Google.Cloud.NetApp.V1.Volume>();
    /// <summary>
    /// The list of Volume
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.NetApp.V1.Volume> Volumes {
      get { return volumes_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// A token identifying a page of results the server should return.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unreachable" field.</summary>
    public const int UnreachableFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_unreachable_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> unreachable_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Locations that could not be reached.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Unreachable {
      get { return unreachable_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ListVolumesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ListVolumesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!volumes_.Equals(other.volumes_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      if(!unreachable_.Equals(other.unreachable_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= volumes_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      hash ^= unreachable_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      volumes_.WriteTo(output, _repeated_volumes_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      unreachable_.WriteTo(output, _repeated_unreachable_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      volumes_.WriteTo(ref output, _repeated_volumes_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      unreachable_.WriteTo(ref output, _repeated_unreachable_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += volumes_.CalculateSize(_repeated_volumes_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      size += unreachable_.CalculateSize(_repeated_unreachable_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ListVolumesResponse other) {
      if (other == null) {
        return;
      }
      volumes_.Add(other.volumes_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      unreachable_.Add(other.unreachable_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            volumes_.AddEntriesFrom(input, _repeated_volumes_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
          case 26: {
            unreachable_.AddEntriesFrom(input, _repeated_unreachable_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            volumes_.AddEntriesFrom(ref input, _repeated_volumes_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
          case 26: {
            unreachable_.AddEntriesFrom(ref input, _repeated_unreachable_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message for getting a Volume
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetVolumeRequest : pb::IMessage<GetVolumeRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetVolumeRequest> _parser = new pb::MessageParser<GetVolumeRequest>(() => new GetVolumeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetVolumeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.NetApp.V1.VolumeReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetVolumeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetVolumeRequest(GetVolumeRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetVolumeRequest Clone() {
      return new GetVolumeRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. Name of the volume
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetVolumeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetVolumeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetVolumeRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message for creating a Volume
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreateVolumeRequest : pb::IMessage<CreateVolumeRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateVolumeRequest> _parser = new pb::MessageParser<CreateVolumeRequest>(() => new CreateVolumeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateVolumeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.NetApp.V1.VolumeReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateVolumeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateVolumeRequest(CreateVolumeRequest other) : this() {
      parent_ = other.parent_;
      volumeId_ = other.volumeId_;
      volume_ = other.volume_ != null ? other.volume_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateVolumeRequest Clone() {
      return new CreateVolumeRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. Value for parent.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "volume_id" field.</summary>
    public const int VolumeIdFieldNumber = 2;
    private string volumeId_ = "";
    /// <summary>
    /// Required. Id of the requesting volume. Must be unique within the parent
    /// resource. Must contain only letters, numbers and hyphen, with the first
    /// character a letter, the last a letter or a number,
    /// and a 63 character maximum.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VolumeId {
      get { return volumeId_; }
      set {
        volumeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "volume" field.</summary>
    public const int VolumeFieldNumber = 3;
    private global::Google.Cloud.NetApp.V1.Volume volume_;
    /// <summary>
    /// Required. The volume being created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.NetApp.V1.Volume Volume {
      get { return volume_; }
      set {
        volume_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateVolumeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateVolumeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (VolumeId != other.VolumeId) return false;
      if (!object.Equals(Volume, other.Volume)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (VolumeId.Length != 0) hash ^= VolumeId.GetHashCode();
      if (volume_ != null) hash ^= Volume.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (VolumeId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(VolumeId);
      }
      if (volume_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Volume);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (VolumeId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(VolumeId);
      }
      if (volume_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Volume);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (VolumeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VolumeId);
      }
      if (volume_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Volume);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateVolumeRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.VolumeId.Length != 0) {
        VolumeId = other.VolumeId;
      }
      if (other.volume_ != null) {
        if (volume_ == null) {
          Volume = new global::Google.Cloud.NetApp.V1.Volume();
        }
        Volume.MergeFrom(other.Volume);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            VolumeId = input.ReadString();
            break;
          }
          case 26: {
            if (volume_ == null) {
              Volume = new global::Google.Cloud.NetApp.V1.Volume();
            }
            input.ReadMessage(Volume);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            VolumeId = input.ReadString();
            break;
          }
          case 26: {
            if (volume_ == null) {
              Volume = new global::Google.Cloud.NetApp.V1.Volume();
            }
            input.ReadMessage(Volume);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message for updating a Volume
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UpdateVolumeRequest : pb::IMessage<UpdateVolumeRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateVolumeRequest> _parser = new pb::MessageParser<UpdateVolumeRequest>(() => new UpdateVolumeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpdateVolumeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.NetApp.V1.VolumeReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateVolumeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateVolumeRequest(UpdateVolumeRequest other) : this() {
      updateMask_ = other.updateMask_ != null ? other.updateMask_.Clone() : null;
      volume_ = other.volume_ != null ? other.volume_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateVolumeRequest Clone() {
      return new UpdateVolumeRequest(this);
    }

    /// <summary>Field number for the "update_mask" field.</summary>
    public const int UpdateMaskFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.FieldMask updateMask_;
    /// <summary>
    /// Required. Field mask is used to specify the fields to be overwritten in the
    /// Volume resource by the update.
    /// The fields specified in the update_mask are relative to the resource, not
    /// the full request. A field will be overwritten if it is in the mask. If the
    /// user does not provide a mask then all fields will be overwritten.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.FieldMask UpdateMask {
      get { return updateMask_; }
      set {
        updateMask_ = value;
      }
    }

    /// <summary>Field number for the "volume" field.</summary>
    public const int VolumeFieldNumber = 2;
    private global::Google.Cloud.NetApp.V1.Volume volume_;
    /// <summary>
    /// Required. The volume being updated
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.NetApp.V1.Volume Volume {
      get { return volume_; }
      set {
        volume_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpdateVolumeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpdateVolumeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UpdateMask, other.UpdateMask)) return false;
      if (!object.Equals(Volume, other.Volume)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (updateMask_ != null) hash ^= UpdateMask.GetHashCode();
      if (volume_ != null) hash ^= Volume.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (updateMask_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UpdateMask);
      }
      if (volume_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Volume);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (updateMask_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UpdateMask);
      }
      if (volume_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Volume);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (updateMask_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateMask);
      }
      if (volume_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Volume);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpdateVolumeRequest other) {
      if (other == null) {
        return;
      }
      if (other.updateMask_ != null) {
        if (updateMask_ == null) {
          UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
        }
        UpdateMask.MergeFrom(other.UpdateMask);
      }
      if (other.volume_ != null) {
        if (volume_ == null) {
          Volume = new global::Google.Cloud.NetApp.V1.Volume();
        }
        Volume.MergeFrom(other.Volume);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
          case 18: {
            if (volume_ == null) {
              Volume = new global::Google.Cloud.NetApp.V1.Volume();
            }
            input.ReadMessage(Volume);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
          case 18: {
            if (volume_ == null) {
              Volume = new global::Google.Cloud.NetApp.V1.Volume();
            }
            input.ReadMessage(Volume);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message for deleting a Volume
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DeleteVolumeRequest : pb::IMessage<DeleteVolumeRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteVolumeRequest> _parser = new pb::MessageParser<DeleteVolumeRequest>(() => new DeleteVolumeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeleteVolumeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.NetApp.V1.VolumeReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteVolumeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteVolumeRequest(DeleteVolumeRequest other) : this() {
      name_ = other.name_;
      force_ = other.force_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteVolumeRequest Clone() {
      return new DeleteVolumeRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. Name of the volume
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "force" field.</summary>
    public const int ForceFieldNumber = 2;
    private bool force_;
    /// <summary>
    /// If this field is set as true, CCFE will not block the volume resource
    /// deletion even if it has any snapshots resource. (Otherwise, the request
    /// will only work if the volume has no snapshots.)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Force {
      get { return force_; }
      set {
        force_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeleteVolumeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeleteVolumeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Force != other.Force) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Force != false) hash ^= Force.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Force != false) {
        output.WriteRawTag(16);
        output.WriteBool(Force);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Force != false) {
        output.WriteRawTag(16);
        output.WriteBool(Force);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Force != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeleteVolumeRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Force != false) {
        Force = other.Force;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Force = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Force = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// RevertVolumeRequest reverts the given volume to the specified snapshot.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class RevertVolumeRequest : pb::IMessage<RevertVolumeRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RevertVolumeRequest> _parser = new pb::MessageParser<RevertVolumeRequest>(() => new RevertVolumeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RevertVolumeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.NetApp.V1.VolumeReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RevertVolumeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RevertVolumeRequest(RevertVolumeRequest other) : this() {
      name_ = other.name_;
      snapshotId_ = other.snapshotId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RevertVolumeRequest Clone() {
      return new RevertVolumeRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The resource name of the volume, in the format of
    /// projects/{project_id}/locations/{location}/volumes/{volume_id}.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "snapshot_id" field.</summary>
    public const int SnapshotIdFieldNumber = 2;
    private string snapshotId_ = "";
    /// <summary>
    /// Required. The snapshot resource ID, in the format 'my-snapshot', where the
    /// specified ID is the {snapshot_id} of the fully qualified name like
    /// projects/{project_id}/locations/{location_id}/volumes/{volume_id}/snapshots/{snapshot_id}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SnapshotId {
      get { return snapshotId_; }
      set {
        snapshotId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RevertVolumeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RevertVolumeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (SnapshotId != other.SnapshotId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (SnapshotId.Length != 0) hash ^= SnapshotId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (SnapshotId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SnapshotId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (SnapshotId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SnapshotId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (SnapshotId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SnapshotId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RevertVolumeRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.SnapshotId.Length != 0) {
        SnapshotId = other.SnapshotId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            SnapshotId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            SnapshotId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Volume provides a filesystem that you can mount.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Volume : pb::IMessage<Volume>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Volume> _parser = new pb::MessageParser<Volume>(() => new Volume());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Volume> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.NetApp.V1.VolumeReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Volume() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Volume(Volume other) : this() {
      name_ = other.name_;
      state_ = other.state_;
      stateDetails_ = other.stateDetails_;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      shareName_ = other.shareName_;
      psaRange_ = other.psaRange_;
      storagePool_ = other.storagePool_;
      network_ = other.network_;
      serviceLevel_ = other.serviceLevel_;
      capacityGib_ = other.capacityGib_;
      exportPolicy_ = other.exportPolicy_ != null ? other.exportPolicy_.Clone() : null;
      protocols_ = other.protocols_.Clone();
      smbSettings_ = other.smbSettings_.Clone();
      mountOptions_ = other.mountOptions_.Clone();
      unixPermissions_ = other.unixPermissions_;
      labels_ = other.labels_.Clone();
      description_ = other.description_;
      snapshotPolicy_ = other.snapshotPolicy_ != null ? other.snapshotPolicy_.Clone() : null;
      snapReserve_ = other.snapReserve_;
      snapshotDirectory_ = other.snapshotDirectory_;
      usedGib_ = other.usedGib_;
      securityStyle_ = other.securityStyle_;
      kerberosEnabled_ = other.kerberosEnabled_;
      ldapEnabled_ = other.ldapEnabled_;
      activeDirectory_ = other.activeDirectory_;
      restoreParameters_ = other.restoreParameters_ != null ? other.restoreParameters_.Clone() : null;
      kmsConfig_ = other.kmsConfig_;
      encryptionType_ = other.encryptionType_;
      hasReplication_ = other.hasReplication_;
      backupConfig_ = other.backupConfig_ != null ? other.backupConfig_.Clone() : null;
      restrictedActions_ = other.restrictedActions_.Clone();
      largeCapacity_ = other.largeCapacity_;
      multipleEndpoints_ = other.multipleEndpoints_;
      tieringPolicy_ = other.tieringPolicy_ != null ? other.tieringPolicy_.Clone() : null;
      replicaZone_ = other.replicaZone_;
      zone_ = other.zone_;
      coldTierSizeGib_ = other.coldTierSizeGib_;
      hybridReplicationParameters_ = other.hybridReplicationParameters_ != null ? other.hybridReplicationParameters_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Volume Clone() {
      return new Volume(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Identifier. Name of the volume
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    private global::Google.Cloud.NetApp.V1.Volume.Types.State state_ = global::Google.Cloud.NetApp.V1.Volume.Types.State.Unspecified;
    /// <summary>
    /// Output only. State of the volume
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.NetApp.V1.Volume.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "state_details" field.</summary>
    public const int StateDetailsFieldNumber = 3;
    private string stateDetails_ = "";
    /// <summary>
    /// Output only. State details of the volume
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StateDetails {
      get { return stateDetails_; }
      set {
        stateDetails_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. Create time of the volume
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "share_name" field.</summary>
    public const int ShareNameFieldNumber = 5;
    private string shareName_ = "";
    /// <summary>
    /// Required. Share name of the volume
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ShareName {
      get { return shareName_; }
      set {
        shareName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "psa_range" field.</summary>
    public const int PsaRangeFieldNumber = 6;
    private string psaRange_ = "";
    /// <summary>
    /// Output only. This field is not implemented. The values provided in this
    /// field are ignored.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PsaRange {
      get { return psaRange_; }
      set {
        psaRange_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "storage_pool" field.</summary>
    public const int StoragePoolFieldNumber = 7;
    private string storagePool_ = "";
    /// <summary>
    /// Required. StoragePool name of the volume
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StoragePool {
      get { return storagePool_; }
      set {
        storagePool_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "network" field.</summary>
    public const int NetworkFieldNumber = 8;
    private string network_ = "";
    /// <summary>
    /// Output only. VPC Network name.
    /// Format: projects/{project}/global/networks/{network}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Network {
      get { return network_; }
      set {
        network_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "service_level" field.</summary>
    public const int ServiceLevelFieldNumber = 9;
    private global::Google.Cloud.NetApp.V1.ServiceLevel serviceLevel_ = global::Google.Cloud.NetApp.V1.ServiceLevel.Unspecified;
    /// <summary>
    /// Output only. Service level of the volume
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.NetApp.V1.ServiceLevel ServiceLevel {
      get { return serviceLevel_; }
      set {
        serviceLevel_ = value;
      }
    }

    /// <summary>Field number for the "capacity_gib" field.</summary>
    public const int CapacityGibFieldNumber = 10;
    private long capacityGib_;
    /// <summary>
    /// Required. Capacity in GIB of the volume
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CapacityGib {
      get { return capacityGib_; }
      set {
        capacityGib_ = value;
      }
    }

    /// <summary>Field number for the "export_policy" field.</summary>
    public const int ExportPolicyFieldNumber = 11;
    private global::Google.Cloud.NetApp.V1.ExportPolicy exportPolicy_;
    /// <summary>
    /// Optional. Export policy of the volume
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.NetApp.V1.ExportPolicy ExportPolicy {
      get { return exportPolicy_; }
      set {
        exportPolicy_ = value;
      }
    }

    /// <summary>Field number for the "protocols" field.</summary>
    public const int ProtocolsFieldNumber = 12;
    private static readonly pb::FieldCodec<global::Google.Cloud.NetApp.V1.Protocols> _repeated_protocols_codec
        = pb::FieldCodec.ForEnum(98, x => (int) x, x => (global::Google.Cloud.NetApp.V1.Protocols) x);
    private readonly pbc::RepeatedField<global::Google.Cloud.NetApp.V1.Protocols> protocols_ = new pbc::RepeatedField<global::Google.Cloud.NetApp.V1.Protocols>();
    /// <summary>
    /// Required. Protocols required for the volume
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.NetApp.V1.Protocols> Protocols {
      get { return protocols_; }
    }

    /// <summary>Field number for the "smb_settings" field.</summary>
    public const int SmbSettingsFieldNumber = 13;
    private static readonly pb::FieldCodec<global::Google.Cloud.NetApp.V1.SMBSettings> _repeated_smbSettings_codec
        = pb::FieldCodec.ForEnum(106, x => (int) x, x => (global::Google.Cloud.NetApp.V1.SMBSettings) x);
    private readonly pbc::RepeatedField<global::Google.Cloud.NetApp.V1.SMBSettings> smbSettings_ = new pbc::RepeatedField<global::Google.Cloud.NetApp.V1.SMBSettings>();
    /// <summary>
    /// Optional. SMB share settings for the volume.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.NetApp.V1.SMBSettings> SmbSettings {
      get { return smbSettings_; }
    }

    /// <summary>Field number for the "mount_options" field.</summary>
    public const int MountOptionsFieldNumber = 14;
    private static readonly pb::FieldCodec<global::Google.Cloud.NetApp.V1.MountOption> _repeated_mountOptions_codec
        = pb::FieldCodec.ForMessage(114, global::Google.Cloud.NetApp.V1.MountOption.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.NetApp.V1.MountOption> mountOptions_ = new pbc::RepeatedField<global::Google.Cloud.NetApp.V1.MountOption>();
    /// <summary>
    /// Output only. Mount options of this volume
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.NetApp.V1.MountOption> MountOptions {
      get { return mountOptions_; }
    }

    /// <summary>Field number for the "unix_permissions" field.</summary>
    public const int UnixPermissionsFieldNumber = 15;
    private string unixPermissions_ = "";
    /// <summary>
    /// Optional. Default unix style permission (e.g. 777) the mount point will be
    /// created with. Applicable for NFS protocol types only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UnixPermissions {
      get { return unixPermissions_; }
      set {
        unixPermissions_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 16;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 130);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Optional. Labels as key value pairs
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 17;
    private string description_ = "";
    /// <summary>
    /// Optional. Description of the volume
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "snapshot_policy" field.</summary>
    public const int SnapshotPolicyFieldNumber = 18;
    private global::Google.Cloud.NetApp.V1.SnapshotPolicy snapshotPolicy_;
    /// <summary>
    /// Optional. SnapshotPolicy for a volume.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.NetApp.V1.SnapshotPolicy SnapshotPolicy {
      get { return snapshotPolicy_; }
      set {
        snapshotPolicy_ = value;
      }
    }

    /// <summary>Field number for the "snap_reserve" field.</summary>
    public const int SnapReserveFieldNumber = 19;
    private double snapReserve_;
    /// <summary>
    /// Optional. Snap_reserve specifies percentage of volume storage reserved for
    /// snapshot storage. Default is 0 percent.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double SnapReserve {
      get { return snapReserve_; }
      set {
        snapReserve_ = value;
      }
    }

    /// <summary>Field number for the "snapshot_directory" field.</summary>
    public const int SnapshotDirectoryFieldNumber = 20;
    private bool snapshotDirectory_;
    /// <summary>
    /// Optional. Snapshot_directory if enabled (true) the volume will contain a
    /// read-only .snapshot directory which provides access to each of the volume's
    /// snapshots.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SnapshotDirectory {
      get { return snapshotDirectory_; }
      set {
        snapshotDirectory_ = value;
      }
    }

    /// <summary>Field number for the "used_gib" field.</summary>
    public const int UsedGibFieldNumber = 21;
    private long usedGib_;
    /// <summary>
    /// Output only. Used capacity in GIB of the volume. This is computed
    /// periodically and it does not represent the realtime usage.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long UsedGib {
      get { return usedGib_; }
      set {
        usedGib_ = value;
      }
    }

    /// <summary>Field number for the "security_style" field.</summary>
    public const int SecurityStyleFieldNumber = 22;
    private global::Google.Cloud.NetApp.V1.SecurityStyle securityStyle_ = global::Google.Cloud.NetApp.V1.SecurityStyle.Unspecified;
    /// <summary>
    /// Optional. Security Style of the Volume
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.NetApp.V1.SecurityStyle SecurityStyle {
      get { return securityStyle_; }
      set {
        securityStyle_ = value;
      }
    }

    /// <summary>Field number for the "kerberos_enabled" field.</summary>
    public const int KerberosEnabledFieldNumber = 23;
    private bool kerberosEnabled_;
    /// <summary>
    /// Optional. Flag indicating if the volume is a kerberos volume or not, export
    /// policy rules control kerberos security modes (krb5, krb5i, krb5p).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool KerberosEnabled {
      get { return kerberosEnabled_; }
      set {
        kerberosEnabled_ = value;
      }
    }

    /// <summary>Field number for the "ldap_enabled" field.</summary>
    public const int LdapEnabledFieldNumber = 24;
    private bool ldapEnabled_;
    /// <summary>
    /// Output only. Flag indicating if the volume is NFS LDAP enabled or not.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool LdapEnabled {
      get { return ldapEnabled_; }
      set {
        ldapEnabled_ = value;
      }
    }

    /// <summary>Field number for the "active_directory" field.</summary>
    public const int ActiveDirectoryFieldNumber = 25;
    private string activeDirectory_ = "";
    /// <summary>
    /// Output only. Specifies the ActiveDirectory name of a SMB volume.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ActiveDirectory {
      get { return activeDirectory_; }
      set {
        activeDirectory_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "restore_parameters" field.</summary>
    public const int RestoreParametersFieldNumber = 26;
    private global::Google.Cloud.NetApp.V1.RestoreParameters restoreParameters_;
    /// <summary>
    /// Optional. Specifies the source of the volume to be created from.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.NetApp.V1.RestoreParameters RestoreParameters {
      get { return restoreParameters_; }
      set {
        restoreParameters_ = value;
      }
    }

    /// <summary>Field number for the "kms_config" field.</summary>
    public const int KmsConfigFieldNumber = 27;
    private string kmsConfig_ = "";
    /// <summary>
    /// Output only. Specifies the KMS config to be used for volume encryption.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string KmsConfig {
      get { return kmsConfig_; }
      set {
        kmsConfig_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "encryption_type" field.</summary>
    public const int EncryptionTypeFieldNumber = 28;
    private global::Google.Cloud.NetApp.V1.EncryptionType encryptionType_ = global::Google.Cloud.NetApp.V1.EncryptionType.Unspecified;
    /// <summary>
    /// Output only. Specified the current volume encryption key source.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.NetApp.V1.EncryptionType EncryptionType {
      get { return encryptionType_; }
      set {
        encryptionType_ = value;
      }
    }

    /// <summary>Field number for the "has_replication" field.</summary>
    public const int HasReplicationFieldNumber = 29;
    private bool hasReplication_;
    /// <summary>
    /// Output only. Indicates whether the volume is part of a replication
    /// relationship.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReplication {
      get { return hasReplication_; }
      set {
        hasReplication_ = value;
      }
    }

    /// <summary>Field number for the "backup_config" field.</summary>
    public const int BackupConfigFieldNumber = 30;
    private global::Google.Cloud.NetApp.V1.BackupConfig backupConfig_;
    /// <summary>
    /// BackupConfig of the volume.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.NetApp.V1.BackupConfig BackupConfig {
      get { return backupConfig_; }
      set {
        backupConfig_ = value;
      }
    }

    /// <summary>Field number for the "restricted_actions" field.</summary>
    public const int RestrictedActionsFieldNumber = 31;
    private static readonly pb::FieldCodec<global::Google.Cloud.NetApp.V1.RestrictedAction> _repeated_restrictedActions_codec
        = pb::FieldCodec.ForEnum(250, x => (int) x, x => (global::Google.Cloud.NetApp.V1.RestrictedAction) x);
    private readonly pbc::RepeatedField<global::Google.Cloud.NetApp.V1.RestrictedAction> restrictedActions_ = new pbc::RepeatedField<global::Google.Cloud.NetApp.V1.RestrictedAction>();
    /// <summary>
    /// Optional. List of actions that are restricted on this volume.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.NetApp.V1.RestrictedAction> RestrictedActions {
      get { return restrictedActions_; }
    }

    /// <summary>Field number for the "large_capacity" field.</summary>
    public const int LargeCapacityFieldNumber = 32;
    private bool largeCapacity_;
    /// <summary>
    /// Optional. Flag indicating if the volume will be a large capacity volume or
    /// a regular volume.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool LargeCapacity {
      get { return largeCapacity_; }
      set {
        largeCapacity_ = value;
      }
    }

    /// <summary>Field number for the "multiple_endpoints" field.</summary>
    public const int MultipleEndpointsFieldNumber = 33;
    private bool multipleEndpoints_;
    /// <summary>
    /// Optional. Flag indicating if the volume will have an IP address per node
    /// for volumes supporting multiple IP endpoints. Only the volume with
    /// large_capacity will be allowed to have multiple endpoints.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool MultipleEndpoints {
      get { return multipleEndpoints_; }
      set {
        multipleEndpoints_ = value;
      }
    }

    /// <summary>Field number for the "tiering_policy" field.</summary>
    public const int TieringPolicyFieldNumber = 34;
    private global::Google.Cloud.NetApp.V1.TieringPolicy tieringPolicy_;
    /// <summary>
    /// Tiering policy for the volume.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.NetApp.V1.TieringPolicy TieringPolicy {
      get { return tieringPolicy_; }
      set {
        tieringPolicy_ = value;
      }
    }

    /// <summary>Field number for the "replica_zone" field.</summary>
    public const int ReplicaZoneFieldNumber = 36;
    private string replicaZone_ = "";
    /// <summary>
    /// Output only. Specifies the replica zone for regional volume.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ReplicaZone {
      get { return replicaZone_; }
      set {
        replicaZone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 37;
    private string zone_ = "";
    /// <summary>
    /// Output only. Specifies the active zone for regional volume.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cold_tier_size_gib" field.</summary>
    public const int ColdTierSizeGibFieldNumber = 39;
    private long coldTierSizeGib_;
    /// <summary>
    /// Output only. Size of the volume cold tier data in GiB.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ColdTierSizeGib {
      get { return coldTierSizeGib_; }
      set {
        coldTierSizeGib_ = value;
      }
    }

    /// <summary>Field number for the "hybrid_replication_parameters" field.</summary>
    public const int HybridReplicationParametersFieldNumber = 40;
    private global::Google.Cloud.NetApp.V1.HybridReplicationParameters hybridReplicationParameters_;
    /// <summary>
    /// Optional. The Hybrid Replication parameters for the volume.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.NetApp.V1.HybridReplicationParameters HybridReplicationParameters {
      get { return hybridReplicationParameters_; }
      set {
        hybridReplicationParameters_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Volume);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Volume other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (State != other.State) return false;
      if (StateDetails != other.StateDetails) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (ShareName != other.ShareName) return false;
      if (PsaRange != other.PsaRange) return false;
      if (StoragePool != other.StoragePool) return false;
      if (Network != other.Network) return false;
      if (ServiceLevel != other.ServiceLevel) return false;
      if (CapacityGib != other.CapacityGib) return false;
      if (!object.Equals(ExportPolicy, other.ExportPolicy)) return false;
      if(!protocols_.Equals(other.protocols_)) return false;
      if(!smbSettings_.Equals(other.smbSettings_)) return false;
      if(!mountOptions_.Equals(other.mountOptions_)) return false;
      if (UnixPermissions != other.UnixPermissions) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(SnapshotPolicy, other.SnapshotPolicy)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(SnapReserve, other.SnapReserve)) return false;
      if (SnapshotDirectory != other.SnapshotDirectory) return false;
      if (UsedGib != other.UsedGib) return false;
      if (SecurityStyle != other.SecurityStyle) return false;
      if (KerberosEnabled != other.KerberosEnabled) return false;
      if (LdapEnabled != other.LdapEnabled) return false;
      if (ActiveDirectory != other.ActiveDirectory) return false;
      if (!object.Equals(RestoreParameters, other.RestoreParameters)) return false;
      if (KmsConfig != other.KmsConfig) return false;
      if (EncryptionType != other.EncryptionType) return false;
      if (HasReplication != other.HasReplication) return false;
      if (!object.Equals(BackupConfig, other.BackupConfig)) return false;
      if(!restrictedActions_.Equals(other.restrictedActions_)) return false;
      if (LargeCapacity != other.LargeCapacity) return false;
      if (MultipleEndpoints != other.MultipleEndpoints) return false;
      if (!object.Equals(TieringPolicy, other.TieringPolicy)) return false;
      if (ReplicaZone != other.ReplicaZone) return false;
      if (Zone != other.Zone) return false;
      if (ColdTierSizeGib != other.ColdTierSizeGib) return false;
      if (!object.Equals(HybridReplicationParameters, other.HybridReplicationParameters)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (State != global::Google.Cloud.NetApp.V1.Volume.Types.State.Unspecified) hash ^= State.GetHashCode();
      if (StateDetails.Length != 0) hash ^= StateDetails.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (ShareName.Length != 0) hash ^= ShareName.GetHashCode();
      if (PsaRange.Length != 0) hash ^= PsaRange.GetHashCode();
      if (StoragePool.Length != 0) hash ^= StoragePool.GetHashCode();
      if (Network.Length != 0) hash ^= Network.GetHashCode();
      if (ServiceLevel != global::Google.Cloud.NetApp.V1.ServiceLevel.Unspecified) hash ^= ServiceLevel.GetHashCode();
      if (CapacityGib != 0L) hash ^= CapacityGib.GetHashCode();
      if (exportPolicy_ != null) hash ^= ExportPolicy.GetHashCode();
      hash ^= protocols_.GetHashCode();
      hash ^= smbSettings_.GetHashCode();
      hash ^= mountOptions_.GetHashCode();
      if (UnixPermissions.Length != 0) hash ^= UnixPermissions.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (snapshotPolicy_ != null) hash ^= SnapshotPolicy.GetHashCode();
      if (SnapReserve != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(SnapReserve);
      if (SnapshotDirectory != false) hash ^= SnapshotDirectory.GetHashCode();
      if (UsedGib != 0L) hash ^= UsedGib.GetHashCode();
      if (SecurityStyle != global::Google.Cloud.NetApp.V1.SecurityStyle.Unspecified) hash ^= SecurityStyle.GetHashCode();
      if (KerberosEnabled != false) hash ^= KerberosEnabled.GetHashCode();
      if (LdapEnabled != false) hash ^= LdapEnabled.GetHashCode();
      if (ActiveDirectory.Length != 0) hash ^= ActiveDirectory.GetHashCode();
      if (restoreParameters_ != null) hash ^= RestoreParameters.GetHashCode();
      if (KmsConfig.Length != 0) hash ^= KmsConfig.GetHashCode();
      if (EncryptionType != global::Google.Cloud.NetApp.V1.EncryptionType.Unspecified) hash ^= EncryptionType.GetHashCode();
      if (HasReplication != false) hash ^= HasReplication.GetHashCode();
      if (backupConfig_ != null) hash ^= BackupConfig.GetHashCode();
      hash ^= restrictedActions_.GetHashCode();
      if (LargeCapacity != false) hash ^= LargeCapacity.GetHashCode();
      if (MultipleEndpoints != false) hash ^= MultipleEndpoints.GetHashCode();
      if (tieringPolicy_ != null) hash ^= TieringPolicy.GetHashCode();
      if (ReplicaZone.Length != 0) hash ^= ReplicaZone.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ColdTierSizeGib != 0L) hash ^= ColdTierSizeGib.GetHashCode();
      if (hybridReplicationParameters_ != null) hash ^= HybridReplicationParameters.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (State != global::Google.Cloud.NetApp.V1.Volume.Types.State.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) State);
      }
      if (StateDetails.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(StateDetails);
      }
      if (createTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CreateTime);
      }
      if (ShareName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ShareName);
      }
      if (PsaRange.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PsaRange);
      }
      if (StoragePool.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(StoragePool);
      }
      if (Network.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Network);
      }
      if (ServiceLevel != global::Google.Cloud.NetApp.V1.ServiceLevel.Unspecified) {
        output.WriteRawTag(72);
        output.WriteEnum((int) ServiceLevel);
      }
      if (CapacityGib != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(CapacityGib);
      }
      if (exportPolicy_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(ExportPolicy);
      }
      protocols_.WriteTo(output, _repeated_protocols_codec);
      smbSettings_.WriteTo(output, _repeated_smbSettings_codec);
      mountOptions_.WriteTo(output, _repeated_mountOptions_codec);
      if (UnixPermissions.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(UnixPermissions);
      }
      labels_.WriteTo(output, _map_labels_codec);
      if (Description.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(Description);
      }
      if (snapshotPolicy_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(SnapshotPolicy);
      }
      if (SnapReserve != 0D) {
        output.WriteRawTag(153, 1);
        output.WriteDouble(SnapReserve);
      }
      if (SnapshotDirectory != false) {
        output.WriteRawTag(160, 1);
        output.WriteBool(SnapshotDirectory);
      }
      if (UsedGib != 0L) {
        output.WriteRawTag(168, 1);
        output.WriteInt64(UsedGib);
      }
      if (SecurityStyle != global::Google.Cloud.NetApp.V1.SecurityStyle.Unspecified) {
        output.WriteRawTag(176, 1);
        output.WriteEnum((int) SecurityStyle);
      }
      if (KerberosEnabled != false) {
        output.WriteRawTag(184, 1);
        output.WriteBool(KerberosEnabled);
      }
      if (LdapEnabled != false) {
        output.WriteRawTag(192, 1);
        output.WriteBool(LdapEnabled);
      }
      if (ActiveDirectory.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(ActiveDirectory);
      }
      if (restoreParameters_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(RestoreParameters);
      }
      if (KmsConfig.Length != 0) {
        output.WriteRawTag(218, 1);
        output.WriteString(KmsConfig);
      }
      if (EncryptionType != global::Google.Cloud.NetApp.V1.EncryptionType.Unspecified) {
        output.WriteRawTag(224, 1);
        output.WriteEnum((int) EncryptionType);
      }
      if (HasReplication != false) {
        output.WriteRawTag(232, 1);
        output.WriteBool(HasReplication);
      }
      if (backupConfig_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(BackupConfig);
      }
      restrictedActions_.WriteTo(output, _repeated_restrictedActions_codec);
      if (LargeCapacity != false) {
        output.WriteRawTag(128, 2);
        output.WriteBool(LargeCapacity);
      }
      if (MultipleEndpoints != false) {
        output.WriteRawTag(136, 2);
        output.WriteBool(MultipleEndpoints);
      }
      if (tieringPolicy_ != null) {
        output.WriteRawTag(146, 2);
        output.WriteMessage(TieringPolicy);
      }
      if (ReplicaZone.Length != 0) {
        output.WriteRawTag(162, 2);
        output.WriteString(ReplicaZone);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(170, 2);
        output.WriteString(Zone);
      }
      if (ColdTierSizeGib != 0L) {
        output.WriteRawTag(184, 2);
        output.WriteInt64(ColdTierSizeGib);
      }
      if (hybridReplicationParameters_ != null) {
        output.WriteRawTag(194, 2);
        output.WriteMessage(HybridReplicationParameters);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (State != global::Google.Cloud.NetApp.V1.Volume.Types.State.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) State);
      }
      if (StateDetails.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(StateDetails);
      }
      if (createTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CreateTime);
      }
      if (ShareName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ShareName);
      }
      if (PsaRange.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PsaRange);
      }
      if (StoragePool.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(StoragePool);
      }
      if (Network.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Network);
      }
      if (ServiceLevel != global::Google.Cloud.NetApp.V1.ServiceLevel.Unspecified) {
        output.WriteRawTag(72);
        output.WriteEnum((int) ServiceLevel);
      }
      if (CapacityGib != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(CapacityGib);
      }
      if (exportPolicy_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(ExportPolicy);
      }
      protocols_.WriteTo(ref output, _repeated_protocols_codec);
      smbSettings_.WriteTo(ref output, _repeated_smbSettings_codec);
      mountOptions_.WriteTo(ref output, _repeated_mountOptions_codec);
      if (UnixPermissions.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(UnixPermissions);
      }
      labels_.WriteTo(ref output, _map_labels_codec);
      if (Description.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(Description);
      }
      if (snapshotPolicy_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(SnapshotPolicy);
      }
      if (SnapReserve != 0D) {
        output.WriteRawTag(153, 1);
        output.WriteDouble(SnapReserve);
      }
      if (SnapshotDirectory != false) {
        output.WriteRawTag(160, 1);
        output.WriteBool(SnapshotDirectory);
      }
      if (UsedGib != 0L) {
        output.WriteRawTag(168, 1);
        output.WriteInt64(UsedGib);
      }
      if (SecurityStyle != global::Google.Cloud.NetApp.V1.SecurityStyle.Unspecified) {
        output.WriteRawTag(176, 1);
        output.WriteEnum((int) SecurityStyle);
      }
      if (KerberosEnabled != false) {
        output.WriteRawTag(184, 1);
        output.WriteBool(KerberosEnabled);
      }
      if (LdapEnabled != false) {
        output.WriteRawTag(192, 1);
        output.WriteBool(LdapEnabled);
      }
      if (ActiveDirectory.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(ActiveDirectory);
      }
      if (restoreParameters_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(RestoreParameters);
      }
      if (KmsConfig.Length != 0) {
        output.WriteRawTag(218, 1);
        output.WriteString(KmsConfig);
      }
      if (EncryptionType != global::Google.Cloud.NetApp.V1.EncryptionType.Unspecified) {
        output.WriteRawTag(224, 1);
        output.WriteEnum((int) EncryptionType);
      }
      if (HasReplication != false) {
        output.WriteRawTag(232, 1);
        output.WriteBool(HasReplication);
      }
      if (backupConfig_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(BackupConfig);
      }
      restrictedActions_.WriteTo(ref output, _repeated_restrictedActions_codec);
      if (LargeCapacity != false) {
        output.WriteRawTag(128, 2);
        output.WriteBool(LargeCapacity);
      }
      if (MultipleEndpoints != false) {
        output.WriteRawTag(136, 2);
        output.WriteBool(MultipleEndpoints);
      }
      if (tieringPolicy_ != null) {
        output.WriteRawTag(146, 2);
        output.WriteMessage(TieringPolicy);
      }
      if (ReplicaZone.Length != 0) {
        output.WriteRawTag(162, 2);
        output.WriteString(ReplicaZone);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(170, 2);
        output.WriteString(Zone);
      }
      if (ColdTierSizeGib != 0L) {
        output.WriteRawTag(184, 2);
        output.WriteInt64(ColdTierSizeGib);
      }
      if (hybridReplicationParameters_ != null) {
        output.WriteRawTag(194, 2);
        output.WriteMessage(HybridReplicationParameters);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (State != global::Google.Cloud.NetApp.V1.Volume.Types.State.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (StateDetails.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StateDetails);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (ShareName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShareName);
      }
      if (PsaRange.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PsaRange);
      }
      if (StoragePool.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StoragePool);
      }
      if (Network.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Network);
      }
      if (ServiceLevel != global::Google.Cloud.NetApp.V1.ServiceLevel.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ServiceLevel);
      }
      if (CapacityGib != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CapacityGib);
      }
      if (exportPolicy_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExportPolicy);
      }
      size += protocols_.CalculateSize(_repeated_protocols_codec);
      size += smbSettings_.CalculateSize(_repeated_smbSettings_codec);
      size += mountOptions_.CalculateSize(_repeated_mountOptions_codec);
      if (UnixPermissions.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnixPermissions);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      if (Description.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (snapshotPolicy_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SnapshotPolicy);
      }
      if (SnapReserve != 0D) {
        size += 2 + 8;
      }
      if (SnapshotDirectory != false) {
        size += 2 + 1;
      }
      if (UsedGib != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(UsedGib);
      }
      if (SecurityStyle != global::Google.Cloud.NetApp.V1.SecurityStyle.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SecurityStyle);
      }
      if (KerberosEnabled != false) {
        size += 2 + 1;
      }
      if (LdapEnabled != false) {
        size += 2 + 1;
      }
      if (ActiveDirectory.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ActiveDirectory);
      }
      if (restoreParameters_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RestoreParameters);
      }
      if (KmsConfig.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(KmsConfig);
      }
      if (EncryptionType != global::Google.Cloud.NetApp.V1.EncryptionType.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) EncryptionType);
      }
      if (HasReplication != false) {
        size += 2 + 1;
      }
      if (backupConfig_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BackupConfig);
      }
      size += restrictedActions_.CalculateSize(_repeated_restrictedActions_codec);
      if (LargeCapacity != false) {
        size += 2 + 1;
      }
      if (MultipleEndpoints != false) {
        size += 2 + 1;
      }
      if (tieringPolicy_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TieringPolicy);
      }
      if (ReplicaZone.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ReplicaZone);
      }
      if (Zone.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ColdTierSizeGib != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(ColdTierSizeGib);
      }
      if (hybridReplicationParameters_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(HybridReplicationParameters);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Volume other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.State != global::Google.Cloud.NetApp.V1.Volume.Types.State.Unspecified) {
        State = other.State;
      }
      if (other.StateDetails.Length != 0) {
        StateDetails = other.StateDetails;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.ShareName.Length != 0) {
        ShareName = other.ShareName;
      }
      if (other.PsaRange.Length != 0) {
        PsaRange = other.PsaRange;
      }
      if (other.StoragePool.Length != 0) {
        StoragePool = other.StoragePool;
      }
      if (other.Network.Length != 0) {
        Network = other.Network;
      }
      if (other.ServiceLevel != global::Google.Cloud.NetApp.V1.ServiceLevel.Unspecified) {
        ServiceLevel = other.ServiceLevel;
      }
      if (other.CapacityGib != 0L) {
        CapacityGib = other.CapacityGib;
      }
      if (other.exportPolicy_ != null) {
        if (exportPolicy_ == null) {
          ExportPolicy = new global::Google.Cloud.NetApp.V1.ExportPolicy();
        }
        ExportPolicy.MergeFrom(other.ExportPolicy);
      }
      protocols_.Add(other.protocols_);
      smbSettings_.Add(other.smbSettings_);
      mountOptions_.Add(other.mountOptions_);
      if (other.UnixPermissions.Length != 0) {
        UnixPermissions = other.UnixPermissions;
      }
      labels_.MergeFrom(other.labels_);
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.snapshotPolicy_ != null) {
        if (snapshotPolicy_ == null) {
          SnapshotPolicy = new global::Google.Cloud.NetApp.V1.SnapshotPolicy();
        }
        SnapshotPolicy.MergeFrom(other.SnapshotPolicy);
      }
      if (other.SnapReserve != 0D) {
        SnapReserve = other.SnapReserve;
      }
      if (other.SnapshotDirectory != false) {
        SnapshotDirectory = other.SnapshotDirectory;
      }
      if (other.UsedGib != 0L) {
        UsedGib = other.UsedGib;
      }
      if (other.SecurityStyle != global::Google.Cloud.NetApp.V1.SecurityStyle.Unspecified) {
        SecurityStyle = other.SecurityStyle;
      }
      if (other.KerberosEnabled != false) {
        KerberosEnabled = other.KerberosEnabled;
      }
      if (other.LdapEnabled != false) {
        LdapEnabled = other.LdapEnabled;
      }
      if (other.ActiveDirectory.Length != 0) {
        ActiveDirectory = other.ActiveDirectory;
      }
      if (other.restoreParameters_ != null) {
        if (restoreParameters_ == null) {
          RestoreParameters = new global::Google.Cloud.NetApp.V1.RestoreParameters();
        }
        RestoreParameters.MergeFrom(other.RestoreParameters);
      }
      if (other.KmsConfig.Length != 0) {
        KmsConfig = other.KmsConfig;
      }
      if (other.EncryptionType != global::Google.Cloud.NetApp.V1.EncryptionType.Unspecified) {
        EncryptionType = other.EncryptionType;
      }
      if (other.HasReplication != false) {
        HasReplication = other.HasReplication;
      }
      if (other.backupConfig_ != null) {
        if (backupConfig_ == null) {
          BackupConfig = new global::Google.Cloud.NetApp.V1.BackupConfig();
        }
        BackupConfig.MergeFrom(other.BackupConfig);
      }
      restrictedActions_.Add(other.restrictedActions_);
      if (other.LargeCapacity != false) {
        LargeCapacity = other.LargeCapacity;
      }
      if (other.MultipleEndpoints != false) {
        MultipleEndpoints = other.MultipleEndpoints;
      }
      if (other.tieringPolicy_ != null) {
        if (tieringPolicy_ == null) {
          TieringPolicy = new global::Google.Cloud.NetApp.V1.TieringPolicy();
        }
        TieringPolicy.MergeFrom(other.TieringPolicy);
      }
      if (other.ReplicaZone.Length != 0) {
        ReplicaZone = other.ReplicaZone;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ColdTierSizeGib != 0L) {
        ColdTierSizeGib = other.ColdTierSizeGib;
      }
      if (other.hybridReplicationParameters_ != null) {
        if (hybridReplicationParameters_ == null) {
          HybridReplicationParameters = new global::Google.Cloud.NetApp.V1.HybridReplicationParameters();
        }
        HybridReplicationParameters.MergeFrom(other.HybridReplicationParameters);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            State = (global::Google.Cloud.NetApp.V1.Volume.Types.State) input.ReadEnum();
            break;
          }
          case 26: {
            StateDetails = input.ReadString();
            break;
          }
          case 34: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 42: {
            ShareName = input.ReadString();
            break;
          }
          case 50: {
            PsaRange = input.ReadString();
            break;
          }
          case 58: {
            StoragePool = input.ReadString();
            break;
          }
          case 66: {
            Network = input.ReadString();
            break;
          }
          case 72: {
            ServiceLevel = (global::Google.Cloud.NetApp.V1.ServiceLevel) input.ReadEnum();
            break;
          }
          case 80: {
            CapacityGib = input.ReadInt64();
            break;
          }
          case 90: {
            if (exportPolicy_ == null) {
              ExportPolicy = new global::Google.Cloud.NetApp.V1.ExportPolicy();
            }
            input.ReadMessage(ExportPolicy);
            break;
          }
          case 98:
          case 96: {
            protocols_.AddEntriesFrom(input, _repeated_protocols_codec);
            break;
          }
          case 106:
          case 104: {
            smbSettings_.AddEntriesFrom(input, _repeated_smbSettings_codec);
            break;
          }
          case 114: {
            mountOptions_.AddEntriesFrom(input, _repeated_mountOptions_codec);
            break;
          }
          case 122: {
            UnixPermissions = input.ReadString();
            break;
          }
          case 130: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 138: {
            Description = input.ReadString();
            break;
          }
          case 146: {
            if (snapshotPolicy_ == null) {
              SnapshotPolicy = new global::Google.Cloud.NetApp.V1.SnapshotPolicy();
            }
            input.ReadMessage(SnapshotPolicy);
            break;
          }
          case 153: {
            SnapReserve = input.ReadDouble();
            break;
          }
          case 160: {
            SnapshotDirectory = input.ReadBool();
            break;
          }
          case 168: {
            UsedGib = input.ReadInt64();
            break;
          }
          case 176: {
            SecurityStyle = (global::Google.Cloud.NetApp.V1.SecurityStyle) input.ReadEnum();
            break;
          }
          case 184: {
            KerberosEnabled = input.ReadBool();
            break;
          }
          case 192: {
            LdapEnabled = input.ReadBool();
            break;
          }
          case 202: {
            ActiveDirectory = input.ReadString();
            break;
          }
          case 210: {
            if (restoreParameters_ == null) {
              RestoreParameters = new global::Google.Cloud.NetApp.V1.RestoreParameters();
            }
            input.ReadMessage(RestoreParameters);
            break;
          }
          case 218: {
            KmsConfig = input.ReadString();
            break;
          }
          case 224: {
            EncryptionType = (global::Google.Cloud.NetApp.V1.EncryptionType) input.ReadEnum();
            break;
          }
          case 232: {
            HasReplication = input.ReadBool();
            break;
          }
          case 242: {
            if (backupConfig_ == null) {
              BackupConfig = new global::Google.Cloud.NetApp.V1.BackupConfig();
            }
            input.ReadMessage(BackupConfig);
            break;
          }
          case 250:
          case 248: {
            restrictedActions_.AddEntriesFrom(input, _repeated_restrictedActions_codec);
            break;
          }
          case 256: {
            LargeCapacity = input.ReadBool();
            break;
          }
          case 264: {
            MultipleEndpoints = input.ReadBool();
            break;
          }
          case 274: {
            if (tieringPolicy_ == null) {
              TieringPolicy = new global::Google.Cloud.NetApp.V1.TieringPolicy();
            }
            input.ReadMessage(TieringPolicy);
            break;
          }
          case 290: {
            ReplicaZone = input.ReadString();
            break;
          }
          case 298: {
            Zone = input.ReadString();
            break;
          }
          case 312: {
            ColdTierSizeGib = input.ReadInt64();
            break;
          }
          case 322: {
            if (hybridReplicationParameters_ == null) {
              HybridReplicationParameters = new global::Google.Cloud.NetApp.V1.HybridReplicationParameters();
            }
            input.ReadMessage(HybridReplicationParameters);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            State = (global::Google.Cloud.NetApp.V1.Volume.Types.State) input.ReadEnum();
            break;
          }
          case 26: {
            StateDetails = input.ReadString();
            break;
          }
          case 34: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 42: {
            ShareName = input.ReadString();
            break;
          }
          case 50: {
            PsaRange = input.ReadString();
            break;
          }
          case 58: {
            StoragePool = input.ReadString();
            break;
          }
          case 66: {
            Network = input.ReadString();
            break;
          }
          case 72: {
            ServiceLevel = (global::Google.Cloud.NetApp.V1.ServiceLevel) input.ReadEnum();
            break;
          }
          case 80: {
            CapacityGib = input.ReadInt64();
            break;
          }
          case 90: {
            if (exportPolicy_ == null) {
              ExportPolicy = new global::Google.Cloud.NetApp.V1.ExportPolicy();
            }
            input.ReadMessage(ExportPolicy);
            break;
          }
          case 98:
          case 96: {
            protocols_.AddEntriesFrom(ref input, _repeated_protocols_codec);
            break;
          }
          case 106:
          case 104: {
            smbSettings_.AddEntriesFrom(ref input, _repeated_smbSettings_codec);
            break;
          }
          case 114: {
            mountOptions_.AddEntriesFrom(ref input, _repeated_mountOptions_codec);
            break;
          }
          case 122: {
            UnixPermissions = input.ReadString();
            break;
          }
          case 130: {
            labels_.AddEntriesFrom(ref input, _map_labels_codec);
            break;
          }
          case 138: {
            Description = input.ReadString();
            break;
          }
          case 146: {
            if (snapshotPolicy_ == null) {
              SnapshotPolicy = new global::Google.Cloud.NetApp.V1.SnapshotPolicy();
            }
            input.ReadMessage(SnapshotPolicy);
            break;
          }
          case 153: {
            SnapReserve = input.ReadDouble();
            break;
          }
          case 160: {
            SnapshotDirectory = input.ReadBool();
            break;
          }
          case 168: {
            UsedGib = input.ReadInt64();
            break;
          }
          case 176: {
            SecurityStyle = (global::Google.Cloud.NetApp.V1.SecurityStyle) input.ReadEnum();
            break;
          }
          case 184: {
            KerberosEnabled = input.ReadBool();
            break;
          }
          case 192: {
            LdapEnabled = input.ReadBool();
            break;
          }
          case 202: {
            ActiveDirectory = input.ReadString();
            break;
          }
          case 210: {
            if (restoreParameters_ == null) {
              RestoreParameters = new global::Google.Cloud.NetApp.V1.RestoreParameters();
            }
            input.ReadMessage(RestoreParameters);
            break;
          }
          case 218: {
            KmsConfig = input.ReadString();
            break;
          }
          case 224: {
            EncryptionType = (global::Google.Cloud.NetApp.V1.EncryptionType) input.ReadEnum();
            break;
          }
          case 232: {
            HasReplication = input.ReadBool();
            break;
          }
          case 242: {
            if (backupConfig_ == null) {
              BackupConfig = new global::Google.Cloud.NetApp.V1.BackupConfig();
            }
            input.ReadMessage(BackupConfig);
            break;
          }
          case 250:
          case 248: {
            restrictedActions_.AddEntriesFrom(ref input, _repeated_restrictedActions_codec);
            break;
          }
          case 256: {
            LargeCapacity = input.ReadBool();
            break;
          }
          case 264: {
            MultipleEndpoints = input.ReadBool();
            break;
          }
          case 274: {
            if (tieringPolicy_ == null) {
              TieringPolicy = new global::Google.Cloud.NetApp.V1.TieringPolicy();
            }
            input.ReadMessage(TieringPolicy);
            break;
          }
          case 290: {
            ReplicaZone = input.ReadString();
            break;
          }
          case 298: {
            Zone = input.ReadString();
            break;
          }
          case 312: {
            ColdTierSizeGib = input.ReadInt64();
            break;
          }
          case 322: {
            if (hybridReplicationParameters_ == null) {
              HybridReplicationParameters = new global::Google.Cloud.NetApp.V1.HybridReplicationParameters();
            }
            input.ReadMessage(HybridReplicationParameters);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Volume message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// The volume states
      /// </summary>
      public enum State {
        /// <summary>
        /// Unspecified Volume State
        /// </summary>
        [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Volume State is Ready
        /// </summary>
        [pbr::OriginalName("READY")] Ready = 1,
        /// <summary>
        /// Volume State is Creating
        /// </summary>
        [pbr::OriginalName("CREATING")] Creating = 2,
        /// <summary>
        /// Volume State is Deleting
        /// </summary>
        [pbr::OriginalName("DELETING")] Deleting = 3,
        /// <summary>
        /// Volume State is Updating
        /// </summary>
        [pbr::OriginalName("UPDATING")] Updating = 4,
        /// <summary>
        /// Volume State is Restoring
        /// </summary>
        [pbr::OriginalName("RESTORING")] Restoring = 5,
        /// <summary>
        /// Volume State is Disabled
        /// </summary>
        [pbr::OriginalName("DISABLED")] Disabled = 6,
        /// <summary>
        /// Volume State is Error
        /// </summary>
        [pbr::OriginalName("ERROR")] Error = 7,
        /// <summary>
        /// Volume State is Preparing. Note that this is different from CREATING
        /// where CREATING means the volume is being created, while PREPARING means
        /// the volume is created and now being prepared for the replication.
        /// </summary>
        [pbr::OriginalName("PREPARING")] Preparing = 8,
        /// <summary>
        /// Volume State is Read Only
        /// </summary>
        [pbr::OriginalName("READ_ONLY")] ReadOnly = 9,
      }

    }
    #endregion

  }

  /// <summary>
  /// Defines the export policy for the volume.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ExportPolicy : pb::IMessage<ExportPolicy>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExportPolicy> _parser = new pb::MessageParser<ExportPolicy>(() => new ExportPolicy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ExportPolicy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.NetApp.V1.VolumeReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExportPolicy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExportPolicy(ExportPolicy other) : this() {
      rules_ = other.rules_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExportPolicy Clone() {
      return new ExportPolicy(this);
    }

    /// <summary>Field number for the "rules" field.</summary>
    public const int RulesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.NetApp.V1.SimpleExportPolicyRule> _repeated_rules_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.NetApp.V1.SimpleExportPolicyRule.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.NetApp.V1.SimpleExportPolicyRule> rules_ = new pbc::RepeatedField<global::Google.Cloud.NetApp.V1.SimpleExportPolicyRule>();
    /// <summary>
    /// Required. List of export policy rules
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.NetApp.V1.SimpleExportPolicyRule> Rules {
      get { return rules_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ExportPolicy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ExportPolicy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!rules_.Equals(other.rules_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= rules_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      rules_.WriteTo(output, _repeated_rules_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      rules_.WriteTo(ref output, _repeated_rules_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += rules_.CalculateSize(_repeated_rules_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ExportPolicy other) {
      if (other == null) {
        return;
      }
      rules_.Add(other.rules_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            rules_.AddEntriesFrom(input, _repeated_rules_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            rules_.AddEntriesFrom(ref input, _repeated_rules_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// An export policy rule describing various export options.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SimpleExportPolicyRule : pb::IMessage<SimpleExportPolicyRule>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SimpleExportPolicyRule> _parser = new pb::MessageParser<SimpleExportPolicyRule>(() => new SimpleExportPolicyRule());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SimpleExportPolicyRule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.NetApp.V1.VolumeReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SimpleExportPolicyRule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SimpleExportPolicyRule(SimpleExportPolicyRule other) : this() {
      _hasBits0 = other._hasBits0;
      allowedClients_ = other.allowedClients_;
      hasRootAccess_ = other.hasRootAccess_;
      accessType_ = other.accessType_;
      nfsv3_ = other.nfsv3_;
      nfsv4_ = other.nfsv4_;
      kerberos5ReadOnly_ = other.kerberos5ReadOnly_;
      kerberos5ReadWrite_ = other.kerberos5ReadWrite_;
      kerberos5IReadOnly_ = other.kerberos5IReadOnly_;
      kerberos5IReadWrite_ = other.kerberos5IReadWrite_;
      kerberos5PReadOnly_ = other.kerberos5PReadOnly_;
      kerberos5PReadWrite_ = other.kerberos5PReadWrite_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SimpleExportPolicyRule Clone() {
      return new SimpleExportPolicyRule(this);
    }

    /// <summary>Field number for the "allowed_clients" field.</summary>
    public const int AllowedClientsFieldNumber = 1;
    private readonly static string AllowedClientsDefaultValue = "";

    private string allowedClients_;
    /// <summary>
    /// Comma separated list of allowed clients IP addresses
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AllowedClients {
      get { return allowedClients_ ?? AllowedClientsDefaultValue; }
      set {
        allowedClients_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "allowed_clients" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAllowedClients {
      get { return allowedClients_ != null; }
    }
    /// <summary>Clears the value of the "allowed_clients" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAllowedClients() {
      allowedClients_ = null;
    }

    /// <summary>Field number for the "has_root_access" field.</summary>
    public const int HasRootAccessFieldNumber = 2;
    private readonly static string HasRootAccessDefaultValue = "";

    private string hasRootAccess_;
    /// <summary>
    /// Whether Unix root access will be granted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HasRootAccess {
      get { return hasRootAccess_ ?? HasRootAccessDefaultValue; }
      set {
        hasRootAccess_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "has_root_access" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHasRootAccess {
      get { return hasRootAccess_ != null; }
    }
    /// <summary>Clears the value of the "has_root_access" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHasRootAccess() {
      hasRootAccess_ = null;
    }

    /// <summary>Field number for the "access_type" field.</summary>
    public const int AccessTypeFieldNumber = 3;
    private readonly static global::Google.Cloud.NetApp.V1.AccessType AccessTypeDefaultValue = global::Google.Cloud.NetApp.V1.AccessType.Unspecified;

    private global::Google.Cloud.NetApp.V1.AccessType accessType_;
    /// <summary>
    /// Access type (ReadWrite, ReadOnly, None)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.NetApp.V1.AccessType AccessType {
      get { if ((_hasBits0 & 1) != 0) { return accessType_; } else { return AccessTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        accessType_ = value;
      }
    }
    /// <summary>Gets whether the "access_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAccessType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "access_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAccessType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "nfsv3" field.</summary>
    public const int Nfsv3FieldNumber = 4;
    private readonly static bool Nfsv3DefaultValue = false;

    private bool nfsv3_;
    /// <summary>
    /// NFS V3 protocol.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Nfsv3 {
      get { if ((_hasBits0 & 2) != 0) { return nfsv3_; } else { return Nfsv3DefaultValue; } }
      set {
        _hasBits0 |= 2;
        nfsv3_ = value;
      }
    }
    /// <summary>Gets whether the "nfsv3" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNfsv3 {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "nfsv3" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNfsv3() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "nfsv4" field.</summary>
    public const int Nfsv4FieldNumber = 5;
    private readonly static bool Nfsv4DefaultValue = false;

    private bool nfsv4_;
    /// <summary>
    /// NFS V4 protocol.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Nfsv4 {
      get { if ((_hasBits0 & 4) != 0) { return nfsv4_; } else { return Nfsv4DefaultValue; } }
      set {
        _hasBits0 |= 4;
        nfsv4_ = value;
      }
    }
    /// <summary>Gets whether the "nfsv4" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNfsv4 {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "nfsv4" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNfsv4() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "kerberos_5_read_only" field.</summary>
    public const int Kerberos5ReadOnlyFieldNumber = 6;
    private readonly static bool Kerberos5ReadOnlyDefaultValue = false;

    private bool kerberos5ReadOnly_;
    /// <summary>
    /// If enabled (true) the rule defines a read only access for clients matching
    /// the 'allowedClients' specification. It enables nfs clients to mount using
    /// 'authentication' kerberos security mode.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Kerberos5ReadOnly {
      get { if ((_hasBits0 & 8) != 0) { return kerberos5ReadOnly_; } else { return Kerberos5ReadOnlyDefaultValue; } }
      set {
        _hasBits0 |= 8;
        kerberos5ReadOnly_ = value;
      }
    }
    /// <summary>Gets whether the "kerberos_5_read_only" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasKerberos5ReadOnly {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "kerberos_5_read_only" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearKerberos5ReadOnly() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "kerberos_5_read_write" field.</summary>
    public const int Kerberos5ReadWriteFieldNumber = 7;
    private readonly static bool Kerberos5ReadWriteDefaultValue = false;

    private bool kerberos5ReadWrite_;
    /// <summary>
    /// If enabled (true) the rule defines read and write access for clients
    /// matching the 'allowedClients' specification. It enables nfs clients to
    /// mount using 'authentication' kerberos security mode. The
    /// 'kerberos5ReadOnly' value be ignored if this is enabled.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Kerberos5ReadWrite {
      get { if ((_hasBits0 & 16) != 0) { return kerberos5ReadWrite_; } else { return Kerberos5ReadWriteDefaultValue; } }
      set {
        _hasBits0 |= 16;
        kerberos5ReadWrite_ = value;
      }
    }
    /// <summary>Gets whether the "kerberos_5_read_write" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasKerberos5ReadWrite {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "kerberos_5_read_write" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearKerberos5ReadWrite() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "kerberos_5i_read_only" field.</summary>
    public const int Kerberos5IReadOnlyFieldNumber = 8;
    private readonly static bool Kerberos5IReadOnlyDefaultValue = false;

    private bool kerberos5IReadOnly_;
    /// <summary>
    /// If enabled (true) the rule defines a read only access for clients matching
    /// the 'allowedClients' specification. It enables nfs clients to mount using
    /// 'integrity' kerberos security mode.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Kerberos5IReadOnly {
      get { if ((_hasBits0 & 32) != 0) { return kerberos5IReadOnly_; } else { return Kerberos5IReadOnlyDefaultValue; } }
      set {
        _hasBits0 |= 32;
        kerberos5IReadOnly_ = value;
      }
    }
    /// <summary>Gets whether the "kerberos_5i_read_only" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasKerberos5IReadOnly {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "kerberos_5i_read_only" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearKerberos5IReadOnly() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "kerberos_5i_read_write" field.</summary>
    public const int Kerberos5IReadWriteFieldNumber = 9;
    private readonly static bool Kerberos5IReadWriteDefaultValue = false;

    private bool kerberos5IReadWrite_;
    /// <summary>
    /// If enabled (true) the rule defines read and write access for clients
    /// matching the 'allowedClients' specification. It enables nfs clients to
    /// mount using 'integrity' kerberos security mode. The 'kerberos5iReadOnly'
    /// value be ignored if this is enabled.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Kerberos5IReadWrite {
      get { if ((_hasBits0 & 64) != 0) { return kerberos5IReadWrite_; } else { return Kerberos5IReadWriteDefaultValue; } }
      set {
        _hasBits0 |= 64;
        kerberos5IReadWrite_ = value;
      }
    }
    /// <summary>Gets whether the "kerberos_5i_read_write" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasKerberos5IReadWrite {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "kerberos_5i_read_write" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearKerberos5IReadWrite() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "kerberos_5p_read_only" field.</summary>
    public const int Kerberos5PReadOnlyFieldNumber = 10;
    private readonly static bool Kerberos5PReadOnlyDefaultValue = false;

    private bool kerberos5PReadOnly_;
    /// <summary>
    /// If enabled (true) the rule defines a read only access for clients matching
    /// the 'allowedClients' specification. It enables nfs clients to mount using
    /// 'privacy' kerberos security mode.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Kerberos5PReadOnly {
      get { if ((_hasBits0 & 128) != 0) { return kerberos5PReadOnly_; } else { return Kerberos5PReadOnlyDefaultValue; } }
      set {
        _hasBits0 |= 128;
        kerberos5PReadOnly_ = value;
      }
    }
    /// <summary>Gets whether the "kerberos_5p_read_only" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasKerberos5PReadOnly {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "kerberos_5p_read_only" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearKerberos5PReadOnly() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "kerberos_5p_read_write" field.</summary>
    public const int Kerberos5PReadWriteFieldNumber = 11;
    private readonly static bool Kerberos5PReadWriteDefaultValue = false;

    private bool kerberos5PReadWrite_;
    /// <summary>
    /// If enabled (true) the rule defines read and write access for clients
    /// matching the 'allowedClients' specification. It enables nfs clients to
    /// mount using 'privacy' kerberos security mode. The 'kerberos5pReadOnly'
    /// value be ignored if this is enabled.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Kerberos5PReadWrite {
      get { if ((_hasBits0 & 256) != 0) { return kerberos5PReadWrite_; } else { return Kerberos5PReadWriteDefaultValue; } }
      set {
        _hasBits0 |= 256;
        kerberos5PReadWrite_ = value;
      }
    }
    /// <summary>Gets whether the "kerberos_5p_read_write" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasKerberos5PReadWrite {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "kerberos_5p_read_write" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearKerberos5PReadWrite() {
      _hasBits0 &= ~256;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SimpleExportPolicyRule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SimpleExportPolicyRule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AllowedClients != other.AllowedClients) return false;
      if (HasRootAccess != other.HasRootAccess) return false;
      if (AccessType != other.AccessType) return false;
      if (Nfsv3 != other.Nfsv3) return false;
      if (Nfsv4 != other.Nfsv4) return false;
      if (Kerberos5ReadOnly != other.Kerberos5ReadOnly) return false;
      if (Kerberos5ReadWrite != other.Kerberos5ReadWrite) return false;
      if (Kerberos5IReadOnly != other.Kerberos5IReadOnly) return false;
      if (Kerberos5IReadWrite != other.Kerberos5IReadWrite) return false;
      if (Kerberos5PReadOnly != other.Kerberos5PReadOnly) return false;
      if (Kerberos5PReadWrite != other.Kerberos5PReadWrite) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAllowedClients) hash ^= AllowedClients.GetHashCode();
      if (HasHasRootAccess) hash ^= HasRootAccess.GetHashCode();
      if (HasAccessType) hash ^= AccessType.GetHashCode();
      if (HasNfsv3) hash ^= Nfsv3.GetHashCode();
      if (HasNfsv4) hash ^= Nfsv4.GetHashCode();
      if (HasKerberos5ReadOnly) hash ^= Kerberos5ReadOnly.GetHashCode();
      if (HasKerberos5ReadWrite) hash ^= Kerberos5ReadWrite.GetHashCode();
      if (HasKerberos5IReadOnly) hash ^= Kerberos5IReadOnly.GetHashCode();
      if (HasKerberos5IReadWrite) hash ^= Kerberos5IReadWrite.GetHashCode();
      if (HasKerberos5PReadOnly) hash ^= Kerberos5PReadOnly.GetHashCode();
      if (HasKerberos5PReadWrite) hash ^= Kerberos5PReadWrite.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAllowedClients) {
        output.WriteRawTag(10);
        output.WriteString(AllowedClients);
      }
      if (HasHasRootAccess) {
        output.WriteRawTag(18);
        output.WriteString(HasRootAccess);
      }
      if (HasAccessType) {
        output.WriteRawTag(24);
        output.WriteEnum((int) AccessType);
      }
      if (HasNfsv3) {
        output.WriteRawTag(32);
        output.WriteBool(Nfsv3);
      }
      if (HasNfsv4) {
        output.WriteRawTag(40);
        output.WriteBool(Nfsv4);
      }
      if (HasKerberos5ReadOnly) {
        output.WriteRawTag(48);
        output.WriteBool(Kerberos5ReadOnly);
      }
      if (HasKerberos5ReadWrite) {
        output.WriteRawTag(56);
        output.WriteBool(Kerberos5ReadWrite);
      }
      if (HasKerberos5IReadOnly) {
        output.WriteRawTag(64);
        output.WriteBool(Kerberos5IReadOnly);
      }
      if (HasKerberos5IReadWrite) {
        output.WriteRawTag(72);
        output.WriteBool(Kerberos5IReadWrite);
      }
      if (HasKerberos5PReadOnly) {
        output.WriteRawTag(80);
        output.WriteBool(Kerberos5PReadOnly);
      }
      if (HasKerberos5PReadWrite) {
        output.WriteRawTag(88);
        output.WriteBool(Kerberos5PReadWrite);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAllowedClients) {
        output.WriteRawTag(10);
        output.WriteString(AllowedClients);
      }
      if (HasHasRootAccess) {
        output.WriteRawTag(18);
        output.WriteString(HasRootAccess);
      }
      if (HasAccessType) {
        output.WriteRawTag(24);
        output.WriteEnum((int) AccessType);
      }
      if (HasNfsv3) {
        output.WriteRawTag(32);
        output.WriteBool(Nfsv3);
      }
      if (HasNfsv4) {
        output.WriteRawTag(40);
        output.WriteBool(Nfsv4);
      }
      if (HasKerberos5ReadOnly) {
        output.WriteRawTag(48);
        output.WriteBool(Kerberos5ReadOnly);
      }
      if (HasKerberos5ReadWrite) {
        output.WriteRawTag(56);
        output.WriteBool(Kerberos5ReadWrite);
      }
      if (HasKerberos5IReadOnly) {
        output.WriteRawTag(64);
        output.WriteBool(Kerberos5IReadOnly);
      }
      if (HasKerberos5IReadWrite) {
        output.WriteRawTag(72);
        output.WriteBool(Kerberos5IReadWrite);
      }
      if (HasKerberos5PReadOnly) {
        output.WriteRawTag(80);
        output.WriteBool(Kerberos5PReadOnly);
      }
      if (HasKerberos5PReadWrite) {
        output.WriteRawTag(88);
        output.WriteBool(Kerberos5PReadWrite);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAllowedClients) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AllowedClients);
      }
      if (HasHasRootAccess) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HasRootAccess);
      }
      if (HasAccessType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AccessType);
      }
      if (HasNfsv3) {
        size += 1 + 1;
      }
      if (HasNfsv4) {
        size += 1 + 1;
      }
      if (HasKerberos5ReadOnly) {
        size += 1 + 1;
      }
      if (HasKerberos5ReadWrite) {
        size += 1 + 1;
      }
      if (HasKerberos5IReadOnly) {
        size += 1 + 1;
      }
      if (HasKerberos5IReadWrite) {
        size += 1 + 1;
      }
      if (HasKerberos5PReadOnly) {
        size += 1 + 1;
      }
      if (HasKerberos5PReadWrite) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SimpleExportPolicyRule other) {
      if (other == null) {
        return;
      }
      if (other.HasAllowedClients) {
        AllowedClients = other.AllowedClients;
      }
      if (other.HasHasRootAccess) {
        HasRootAccess = other.HasRootAccess;
      }
      if (other.HasAccessType) {
        AccessType = other.AccessType;
      }
      if (other.HasNfsv3) {
        Nfsv3 = other.Nfsv3;
      }
      if (other.HasNfsv4) {
        Nfsv4 = other.Nfsv4;
      }
      if (other.HasKerberos5ReadOnly) {
        Kerberos5ReadOnly = other.Kerberos5ReadOnly;
      }
      if (other.HasKerberos5ReadWrite) {
        Kerberos5ReadWrite = other.Kerberos5ReadWrite;
      }
      if (other.HasKerberos5IReadOnly) {
        Kerberos5IReadOnly = other.Kerberos5IReadOnly;
      }
      if (other.HasKerberos5IReadWrite) {
        Kerberos5IReadWrite = other.Kerberos5IReadWrite;
      }
      if (other.HasKerberos5PReadOnly) {
        Kerberos5PReadOnly = other.Kerberos5PReadOnly;
      }
      if (other.HasKerberos5PReadWrite) {
        Kerberos5PReadWrite = other.Kerberos5PReadWrite;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AllowedClients = input.ReadString();
            break;
          }
          case 18: {
            HasRootAccess = input.ReadString();
            break;
          }
          case 24: {
            AccessType = (global::Google.Cloud.NetApp.V1.AccessType) input.ReadEnum();
            break;
          }
          case 32: {
            Nfsv3 = input.ReadBool();
            break;
          }
          case 40: {
            Nfsv4 = input.ReadBool();
            break;
          }
          case 48: {
            Kerberos5ReadOnly = input.ReadBool();
            break;
          }
          case 56: {
            Kerberos5ReadWrite = input.ReadBool();
            break;
          }
          case 64: {
            Kerberos5IReadOnly = input.ReadBool();
            break;
          }
          case 72: {
            Kerberos5IReadWrite = input.ReadBool();
            break;
          }
          case 80: {
            Kerberos5PReadOnly = input.ReadBool();
            break;
          }
          case 88: {
            Kerberos5PReadWrite = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            AllowedClients = input.ReadString();
            break;
          }
          case 18: {
            HasRootAccess = input.ReadString();
            break;
          }
          case 24: {
            AccessType = (global::Google.Cloud.NetApp.V1.AccessType) input.ReadEnum();
            break;
          }
          case 32: {
            Nfsv3 = input.ReadBool();
            break;
          }
          case 40: {
            Nfsv4 = input.ReadBool();
            break;
          }
          case 48: {
            Kerberos5ReadOnly = input.ReadBool();
            break;
          }
          case 56: {
            Kerberos5ReadWrite = input.ReadBool();
            break;
          }
          case 64: {
            Kerberos5IReadOnly = input.ReadBool();
            break;
          }
          case 72: {
            Kerberos5IReadWrite = input.ReadBool();
            break;
          }
          case 80: {
            Kerberos5PReadOnly = input.ReadBool();
            break;
          }
          case 88: {
            Kerberos5PReadWrite = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Snapshot Policy for a volume.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SnapshotPolicy : pb::IMessage<SnapshotPolicy>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SnapshotPolicy> _parser = new pb::MessageParser<SnapshotPolicy>(() => new SnapshotPolicy());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SnapshotPolicy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.NetApp.V1.VolumeReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SnapshotPolicy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SnapshotPolicy(SnapshotPolicy other) : this() {
      _hasBits0 = other._hasBits0;
      enabled_ = other.enabled_;
      hourlySchedule_ = other.hourlySchedule_ != null ? other.hourlySchedule_.Clone() : null;
      dailySchedule_ = other.dailySchedule_ != null ? other.dailySchedule_.Clone() : null;
      weeklySchedule_ = other.weeklySchedule_ != null ? other.weeklySchedule_.Clone() : null;
      monthlySchedule_ = other.monthlySchedule_ != null ? other.monthlySchedule_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SnapshotPolicy Clone() {
      return new SnapshotPolicy(this);
    }

    /// <summary>Field number for the "enabled" field.</summary>
    public const int EnabledFieldNumber = 1;
    private readonly static bool EnabledDefaultValue = false;

    private bool enabled_;
    /// <summary>
    /// If enabled, make snapshots automatically according to the schedules.
    /// Default is false.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Enabled {
      get { if ((_hasBits0 & 1) != 0) { return enabled_; } else { return EnabledDefaultValue; } }
      set {
        _hasBits0 |= 1;
        enabled_ = value;
      }
    }
    /// <summary>Gets whether the "enabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnabled {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "enabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnabled() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "hourly_schedule" field.</summary>
    public const int HourlyScheduleFieldNumber = 2;
    private global::Google.Cloud.NetApp.V1.HourlySchedule hourlySchedule_;
    /// <summary>
    /// Hourly schedule policy.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.NetApp.V1.HourlySchedule HourlySchedule {
      get { return hourlySchedule_; }
      set {
        hourlySchedule_ = value;
      }
    }

    /// <summary>Field number for the "daily_schedule" field.</summary>
    public const int DailyScheduleFieldNumber = 3;
    private global::Google.Cloud.NetApp.V1.DailySchedule dailySchedule_;
    /// <summary>
    /// Daily schedule policy.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.NetApp.V1.DailySchedule DailySchedule {
      get { return dailySchedule_; }
      set {
        dailySchedule_ = value;
      }
    }

    /// <summary>Field number for the "weekly_schedule" field.</summary>
    public const int WeeklyScheduleFieldNumber = 4;
    private global::Google.Cloud.NetApp.V1.WeeklySchedule weeklySchedule_;
    /// <summary>
    /// Weekly schedule policy.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.NetApp.V1.WeeklySchedule WeeklySchedule {
      get { return weeklySchedule_; }
      set {
        weeklySchedule_ = value;
      }
    }

    /// <summary>Field number for the "monthly_schedule" field.</summary>
    public const int MonthlyScheduleFieldNumber = 5;
    private global::Google.Cloud.NetApp.V1.MonthlySchedule monthlySchedule_;
    /// <summary>
    /// Monthly schedule policy.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.NetApp.V1.MonthlySchedule MonthlySchedule {
      get { return monthlySchedule_; }
      set {
        monthlySchedule_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SnapshotPolicy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SnapshotPolicy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Enabled != other.Enabled) return false;
      if (!object.Equals(HourlySchedule, other.HourlySchedule)) return false;
      if (!object.Equals(DailySchedule, other.DailySchedule)) return false;
      if (!object.Equals(WeeklySchedule, other.WeeklySchedule)) return false;
      if (!object.Equals(MonthlySchedule, other.MonthlySchedule)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasEnabled) hash ^= Enabled.GetHashCode();
      if (hourlySchedule_ != null) hash ^= HourlySchedule.GetHashCode();
      if (dailySchedule_ != null) hash ^= DailySchedule.GetHashCode();
      if (weeklySchedule_ != null) hash ^= WeeklySchedule.GetHashCode();
      if (monthlySchedule_ != null) hash ^= MonthlySchedule.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasEnabled) {
        output.WriteRawTag(8);
        output.WriteBool(Enabled);
      }
      if (hourlySchedule_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(HourlySchedule);
      }
      if (dailySchedule_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DailySchedule);
      }
      if (weeklySchedule_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(WeeklySchedule);
      }
      if (monthlySchedule_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(MonthlySchedule);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasEnabled) {
        output.WriteRawTag(8);
        output.WriteBool(Enabled);
      }
      if (hourlySchedule_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(HourlySchedule);
      }
      if (dailySchedule_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DailySchedule);
      }
      if (weeklySchedule_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(WeeklySchedule);
      }
      if (monthlySchedule_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(MonthlySchedule);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasEnabled) {
        size += 1 + 1;
      }
      if (hourlySchedule_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HourlySchedule);
      }
      if (dailySchedule_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DailySchedule);
      }
      if (weeklySchedule_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WeeklySchedule);
      }
      if (monthlySchedule_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MonthlySchedule);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SnapshotPolicy other) {
      if (other == null) {
        return;
      }
      if (other.HasEnabled) {
        Enabled = other.Enabled;
      }
      if (other.hourlySchedule_ != null) {
        if (hourlySchedule_ == null) {
          HourlySchedule = new global::Google.Cloud.NetApp.V1.HourlySchedule();
        }
        HourlySchedule.MergeFrom(other.HourlySchedule);
      }
      if (other.dailySchedule_ != null) {
        if (dailySchedule_ == null) {
          DailySchedule = new global::Google.Cloud.NetApp.V1.DailySchedule();
        }
        DailySchedule.MergeFrom(other.DailySchedule);
      }
      if (other.weeklySchedule_ != null) {
        if (weeklySchedule_ == null) {
          WeeklySchedule = new global::Google.Cloud.NetApp.V1.WeeklySchedule();
        }
        WeeklySchedule.MergeFrom(other.WeeklySchedule);
      }
      if (other.monthlySchedule_ != null) {
        if (monthlySchedule_ == null) {
          MonthlySchedule = new global::Google.Cloud.NetApp.V1.MonthlySchedule();
        }
        MonthlySchedule.MergeFrom(other.MonthlySchedule);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Enabled = input.ReadBool();
            break;
          }
          case 18: {
            if (hourlySchedule_ == null) {
              HourlySchedule = new global::Google.Cloud.NetApp.V1.HourlySchedule();
            }
            input.ReadMessage(HourlySchedule);
            break;
          }
          case 26: {
            if (dailySchedule_ == null) {
              DailySchedule = new global::Google.Cloud.NetApp.V1.DailySchedule();
            }
            input.ReadMessage(DailySchedule);
            break;
          }
          case 34: {
            if (weeklySchedule_ == null) {
              WeeklySchedule = new global::Google.Cloud.NetApp.V1.WeeklySchedule();
            }
            input.ReadMessage(WeeklySchedule);
            break;
          }
          case 42: {
            if (monthlySchedule_ == null) {
              MonthlySchedule = new global::Google.Cloud.NetApp.V1.MonthlySchedule();
            }
            input.ReadMessage(MonthlySchedule);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Enabled = input.ReadBool();
            break;
          }
          case 18: {
            if (hourlySchedule_ == null) {
              HourlySchedule = new global::Google.Cloud.NetApp.V1.HourlySchedule();
            }
            input.ReadMessage(HourlySchedule);
            break;
          }
          case 26: {
            if (dailySchedule_ == null) {
              DailySchedule = new global::Google.Cloud.NetApp.V1.DailySchedule();
            }
            input.ReadMessage(DailySchedule);
            break;
          }
          case 34: {
            if (weeklySchedule_ == null) {
              WeeklySchedule = new global::Google.Cloud.NetApp.V1.WeeklySchedule();
            }
            input.ReadMessage(WeeklySchedule);
            break;
          }
          case 42: {
            if (monthlySchedule_ == null) {
              MonthlySchedule = new global::Google.Cloud.NetApp.V1.MonthlySchedule();
            }
            input.ReadMessage(MonthlySchedule);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Make a snapshot every hour e.g. at 04:00, 05:00, 06:00.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class HourlySchedule : pb::IMessage<HourlySchedule>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HourlySchedule> _parser = new pb::MessageParser<HourlySchedule>(() => new HourlySchedule());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<HourlySchedule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.NetApp.V1.VolumeReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HourlySchedule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HourlySchedule(HourlySchedule other) : this() {
      _hasBits0 = other._hasBits0;
      snapshotsToKeep_ = other.snapshotsToKeep_;
      minute_ = other.minute_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HourlySchedule Clone() {
      return new HourlySchedule(this);
    }

    /// <summary>Field number for the "snapshots_to_keep" field.</summary>
    public const int SnapshotsToKeepFieldNumber = 1;
    private readonly static double SnapshotsToKeepDefaultValue = 0D;

    private double snapshotsToKeep_;
    /// <summary>
    /// The maximum number of Snapshots to keep for the hourly schedule
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double SnapshotsToKeep {
      get { if ((_hasBits0 & 1) != 0) { return snapshotsToKeep_; } else { return SnapshotsToKeepDefaultValue; } }
      set {
        _hasBits0 |= 1;
        snapshotsToKeep_ = value;
      }
    }
    /// <summary>Gets whether the "snapshots_to_keep" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSnapshotsToKeep {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "snapshots_to_keep" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSnapshotsToKeep() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "minute" field.</summary>
    public const int MinuteFieldNumber = 2;
    private readonly static double MinuteDefaultValue = 0D;

    private double minute_;
    /// <summary>
    /// Set the minute of the hour to start the snapshot (0-59), defaults to the
    /// top of the hour (0).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Minute {
      get { if ((_hasBits0 & 2) != 0) { return minute_; } else { return MinuteDefaultValue; } }
      set {
        _hasBits0 |= 2;
        minute_ = value;
      }
    }
    /// <summary>Gets whether the "minute" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMinute {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "minute" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMinute() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as HourlySchedule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(HourlySchedule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(SnapshotsToKeep, other.SnapshotsToKeep)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Minute, other.Minute)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSnapshotsToKeep) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(SnapshotsToKeep);
      if (HasMinute) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Minute);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSnapshotsToKeep) {
        output.WriteRawTag(9);
        output.WriteDouble(SnapshotsToKeep);
      }
      if (HasMinute) {
        output.WriteRawTag(17);
        output.WriteDouble(Minute);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSnapshotsToKeep) {
        output.WriteRawTag(9);
        output.WriteDouble(SnapshotsToKeep);
      }
      if (HasMinute) {
        output.WriteRawTag(17);
        output.WriteDouble(Minute);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSnapshotsToKeep) {
        size += 1 + 8;
      }
      if (HasMinute) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(HourlySchedule other) {
      if (other == null) {
        return;
      }
      if (other.HasSnapshotsToKeep) {
        SnapshotsToKeep = other.SnapshotsToKeep;
      }
      if (other.HasMinute) {
        Minute = other.Minute;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            SnapshotsToKeep = input.ReadDouble();
            break;
          }
          case 17: {
            Minute = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            SnapshotsToKeep = input.ReadDouble();
            break;
          }
          case 17: {
            Minute = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Make a snapshot every day e.g. at 04:00, 05:20, 23:50
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DailySchedule : pb::IMessage<DailySchedule>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DailySchedule> _parser = new pb::MessageParser<DailySchedule>(() => new DailySchedule());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DailySchedule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.NetApp.V1.VolumeReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DailySchedule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DailySchedule(DailySchedule other) : this() {
      _hasBits0 = other._hasBits0;
      snapshotsToKeep_ = other.snapshotsToKeep_;
      minute_ = other.minute_;
      hour_ = other.hour_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DailySchedule Clone() {
      return new DailySchedule(this);
    }

    /// <summary>Field number for the "snapshots_to_keep" field.</summary>
    public const int SnapshotsToKeepFieldNumber = 1;
    private readonly static double SnapshotsToKeepDefaultValue = 0D;

    private double snapshotsToKeep_;
    /// <summary>
    /// The maximum number of Snapshots to keep for the hourly schedule
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double SnapshotsToKeep {
      get { if ((_hasBits0 & 1) != 0) { return snapshotsToKeep_; } else { return SnapshotsToKeepDefaultValue; } }
      set {
        _hasBits0 |= 1;
        snapshotsToKeep_ = value;
      }
    }
    /// <summary>Gets whether the "snapshots_to_keep" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSnapshotsToKeep {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "snapshots_to_keep" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSnapshotsToKeep() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "minute" field.</summary>
    public const int MinuteFieldNumber = 2;
    private readonly static double MinuteDefaultValue = 0D;

    private double minute_;
    /// <summary>
    /// Set the minute of the hour to start the snapshot (0-59), defaults to the
    /// top of the hour (0).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Minute {
      get { if ((_hasBits0 & 2) != 0) { return minute_; } else { return MinuteDefaultValue; } }
      set {
        _hasBits0 |= 2;
        minute_ = value;
      }
    }
    /// <summary>Gets whether the "minute" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMinute {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "minute" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMinute() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "hour" field.</summary>
    public const int HourFieldNumber = 3;
    private readonly static double HourDefaultValue = 0D;

    private double hour_;
    /// <summary>
    /// Set the hour to start the snapshot (0-23), defaults to midnight (0).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Hour {
      get { if ((_hasBits0 & 4) != 0) { return hour_; } else { return HourDefaultValue; } }
      set {
        _hasBits0 |= 4;
        hour_ = value;
      }
    }
    /// <summary>Gets whether the "hour" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHour {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "hour" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHour() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DailySchedule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DailySchedule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(SnapshotsToKeep, other.SnapshotsToKeep)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Minute, other.Minute)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Hour, other.Hour)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSnapshotsToKeep) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(SnapshotsToKeep);
      if (HasMinute) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Minute);
      if (HasHour) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Hour);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSnapshotsToKeep) {
        output.WriteRawTag(9);
        output.WriteDouble(SnapshotsToKeep);
      }
      if (HasMinute) {
        output.WriteRawTag(17);
        output.WriteDouble(Minute);
      }
      if (HasHour) {
        output.WriteRawTag(25);
        output.WriteDouble(Hour);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSnapshotsToKeep) {
        output.WriteRawTag(9);
        output.WriteDouble(SnapshotsToKeep);
      }
      if (HasMinute) {
        output.WriteRawTag(17);
        output.WriteDouble(Minute);
      }
      if (HasHour) {
        output.WriteRawTag(25);
        output.WriteDouble(Hour);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSnapshotsToKeep) {
        size += 1 + 8;
      }
      if (HasMinute) {
        size += 1 + 8;
      }
      if (HasHour) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DailySchedule other) {
      if (other == null) {
        return;
      }
      if (other.HasSnapshotsToKeep) {
        SnapshotsToKeep = other.SnapshotsToKeep;
      }
      if (other.HasMinute) {
        Minute = other.Minute;
      }
      if (other.HasHour) {
        Hour = other.Hour;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            SnapshotsToKeep = input.ReadDouble();
            break;
          }
          case 17: {
            Minute = input.ReadDouble();
            break;
          }
          case 25: {
            Hour = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            SnapshotsToKeep = input.ReadDouble();
            break;
          }
          case 17: {
            Minute = input.ReadDouble();
            break;
          }
          case 25: {
            Hour = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Make a snapshot every week e.g. at Monday 04:00, Wednesday 05:20, Sunday
  /// 23:50
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class WeeklySchedule : pb::IMessage<WeeklySchedule>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WeeklySchedule> _parser = new pb::MessageParser<WeeklySchedule>(() => new WeeklySchedule());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WeeklySchedule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.NetApp.V1.VolumeReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WeeklySchedule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WeeklySchedule(WeeklySchedule other) : this() {
      _hasBits0 = other._hasBits0;
      snapshotsToKeep_ = other.snapshotsToKeep_;
      minute_ = other.minute_;
      hour_ = other.hour_;
      day_ = other.day_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WeeklySchedule Clone() {
      return new WeeklySchedule(this);
    }

    /// <summary>Field number for the "snapshots_to_keep" field.</summary>
    public const int SnapshotsToKeepFieldNumber = 1;
    private readonly static double SnapshotsToKeepDefaultValue = 0D;

    private double snapshotsToKeep_;
    /// <summary>
    /// The maximum number of Snapshots to keep for the hourly schedule
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double SnapshotsToKeep {
      get { if ((_hasBits0 & 1) != 0) { return snapshotsToKeep_; } else { return SnapshotsToKeepDefaultValue; } }
      set {
        _hasBits0 |= 1;
        snapshotsToKeep_ = value;
      }
    }
    /// <summary>Gets whether the "snapshots_to_keep" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSnapshotsToKeep {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "snapshots_to_keep" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSnapshotsToKeep() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "minute" field.</summary>
    public const int MinuteFieldNumber = 2;
    private readonly static double MinuteDefaultValue = 0D;

    private double minute_;
    /// <summary>
    /// Set the minute of the hour to start the snapshot (0-59), defaults to the
    /// top of the hour (0).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Minute {
      get { if ((_hasBits0 & 2) != 0) { return minute_; } else { return MinuteDefaultValue; } }
      set {
        _hasBits0 |= 2;
        minute_ = value;
      }
    }
    /// <summary>Gets whether the "minute" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMinute {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "minute" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMinute() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "hour" field.</summary>
    public const int HourFieldNumber = 3;
    private readonly static double HourDefaultValue = 0D;

    private double hour_;
    /// <summary>
    /// Set the hour to start the snapshot (0-23), defaults to midnight (0).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Hour {
      get { if ((_hasBits0 & 4) != 0) { return hour_; } else { return HourDefaultValue; } }
      set {
        _hasBits0 |= 4;
        hour_ = value;
      }
    }
    /// <summary>Gets whether the "hour" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHour {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "hour" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHour() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "day" field.</summary>
    public const int DayFieldNumber = 4;
    private readonly static string DayDefaultValue = "";

    private string day_;
    /// <summary>
    /// Set the day or days of the week to make a snapshot. Accepts a comma
    /// separated days of the week. Defaults to 'Sunday'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Day {
      get { return day_ ?? DayDefaultValue; }
      set {
        day_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "day" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDay {
      get { return day_ != null; }
    }
    /// <summary>Clears the value of the "day" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDay() {
      day_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WeeklySchedule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WeeklySchedule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(SnapshotsToKeep, other.SnapshotsToKeep)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Minute, other.Minute)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Hour, other.Hour)) return false;
      if (Day != other.Day) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSnapshotsToKeep) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(SnapshotsToKeep);
      if (HasMinute) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Minute);
      if (HasHour) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Hour);
      if (HasDay) hash ^= Day.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSnapshotsToKeep) {
        output.WriteRawTag(9);
        output.WriteDouble(SnapshotsToKeep);
      }
      if (HasMinute) {
        output.WriteRawTag(17);
        output.WriteDouble(Minute);
      }
      if (HasHour) {
        output.WriteRawTag(25);
        output.WriteDouble(Hour);
      }
      if (HasDay) {
        output.WriteRawTag(34);
        output.WriteString(Day);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSnapshotsToKeep) {
        output.WriteRawTag(9);
        output.WriteDouble(SnapshotsToKeep);
      }
      if (HasMinute) {
        output.WriteRawTag(17);
        output.WriteDouble(Minute);
      }
      if (HasHour) {
        output.WriteRawTag(25);
        output.WriteDouble(Hour);
      }
      if (HasDay) {
        output.WriteRawTag(34);
        output.WriteString(Day);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSnapshotsToKeep) {
        size += 1 + 8;
      }
      if (HasMinute) {
        size += 1 + 8;
      }
      if (HasHour) {
        size += 1 + 8;
      }
      if (HasDay) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Day);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WeeklySchedule other) {
      if (other == null) {
        return;
      }
      if (other.HasSnapshotsToKeep) {
        SnapshotsToKeep = other.SnapshotsToKeep;
      }
      if (other.HasMinute) {
        Minute = other.Minute;
      }
      if (other.HasHour) {
        Hour = other.Hour;
      }
      if (other.HasDay) {
        Day = other.Day;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            SnapshotsToKeep = input.ReadDouble();
            break;
          }
          case 17: {
            Minute = input.ReadDouble();
            break;
          }
          case 25: {
            Hour = input.ReadDouble();
            break;
          }
          case 34: {
            Day = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            SnapshotsToKeep = input.ReadDouble();
            break;
          }
          case 17: {
            Minute = input.ReadDouble();
            break;
          }
          case 25: {
            Hour = input.ReadDouble();
            break;
          }
          case 34: {
            Day = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Make a snapshot once a month e.g. at 2nd 04:00, 7th 05:20, 24th 23:50
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class MonthlySchedule : pb::IMessage<MonthlySchedule>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MonthlySchedule> _parser = new pb::MessageParser<MonthlySchedule>(() => new MonthlySchedule());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MonthlySchedule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.NetApp.V1.VolumeReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MonthlySchedule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MonthlySchedule(MonthlySchedule other) : this() {
      _hasBits0 = other._hasBits0;
      snapshotsToKeep_ = other.snapshotsToKeep_;
      minute_ = other.minute_;
      hour_ = other.hour_;
      daysOfMonth_ = other.daysOfMonth_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MonthlySchedule Clone() {
      return new MonthlySchedule(this);
    }

    /// <summary>Field number for the "snapshots_to_keep" field.</summary>
    public const int SnapshotsToKeepFieldNumber = 1;
    private readonly static double SnapshotsToKeepDefaultValue = 0D;

    private double snapshotsToKeep_;
    /// <summary>
    /// The maximum number of Snapshots to keep for the hourly schedule
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double SnapshotsToKeep {
      get { if ((_hasBits0 & 1) != 0) { return snapshotsToKeep_; } else { return SnapshotsToKeepDefaultValue; } }
      set {
        _hasBits0 |= 1;
        snapshotsToKeep_ = value;
      }
    }
    /// <summary>Gets whether the "snapshots_to_keep" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSnapshotsToKeep {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "snapshots_to_keep" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSnapshotsToKeep() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "minute" field.</summary>
    public const int MinuteFieldNumber = 2;
    private readonly static double MinuteDefaultValue = 0D;

    private double minute_;
    /// <summary>
    /// Set the minute of the hour to start the snapshot (0-59), defaults to the
    /// top of the hour (0).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Minute {
      get { if ((_hasBits0 & 2) != 0) { return minute_; } else { return MinuteDefaultValue; } }
      set {
        _hasBits0 |= 2;
        minute_ = value;
      }
    }
    /// <summary>Gets whether the "minute" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMinute {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "minute" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMinute() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "hour" field.</summary>
    public const int HourFieldNumber = 3;
    private readonly static double HourDefaultValue = 0D;

    private double hour_;
    /// <summary>
    /// Set the hour to start the snapshot (0-23), defaults to midnight (0).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Hour {
      get { if ((_hasBits0 & 4) != 0) { return hour_; } else { return HourDefaultValue; } }
      set {
        _hasBits0 |= 4;
        hour_ = value;
      }
    }
    /// <summary>Gets whether the "hour" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHour {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "hour" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHour() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "days_of_month" field.</summary>
    public const int DaysOfMonthFieldNumber = 4;
    private readonly static string DaysOfMonthDefaultValue = "";

    private string daysOfMonth_;
    /// <summary>
    /// Set the day or days of the month to make a snapshot (1-31). Accepts a
    /// comma separated number of days. Defaults to '1'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DaysOfMonth {
      get { return daysOfMonth_ ?? DaysOfMonthDefaultValue; }
      set {
        daysOfMonth_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "days_of_month" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDaysOfMonth {
      get { return daysOfMonth_ != null; }
    }
    /// <summary>Clears the value of the "days_of_month" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDaysOfMonth() {
      daysOfMonth_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MonthlySchedule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MonthlySchedule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(SnapshotsToKeep, other.SnapshotsToKeep)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Minute, other.Minute)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Hour, other.Hour)) return false;
      if (DaysOfMonth != other.DaysOfMonth) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSnapshotsToKeep) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(SnapshotsToKeep);
      if (HasMinute) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Minute);
      if (HasHour) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Hour);
      if (HasDaysOfMonth) hash ^= DaysOfMonth.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSnapshotsToKeep) {
        output.WriteRawTag(9);
        output.WriteDouble(SnapshotsToKeep);
      }
      if (HasMinute) {
        output.WriteRawTag(17);
        output.WriteDouble(Minute);
      }
      if (HasHour) {
        output.WriteRawTag(25);
        output.WriteDouble(Hour);
      }
      if (HasDaysOfMonth) {
        output.WriteRawTag(34);
        output.WriteString(DaysOfMonth);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSnapshotsToKeep) {
        output.WriteRawTag(9);
        output.WriteDouble(SnapshotsToKeep);
      }
      if (HasMinute) {
        output.WriteRawTag(17);
        output.WriteDouble(Minute);
      }
      if (HasHour) {
        output.WriteRawTag(25);
        output.WriteDouble(Hour);
      }
      if (HasDaysOfMonth) {
        output.WriteRawTag(34);
        output.WriteString(DaysOfMonth);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSnapshotsToKeep) {
        size += 1 + 8;
      }
      if (HasMinute) {
        size += 1 + 8;
      }
      if (HasHour) {
        size += 1 + 8;
      }
      if (HasDaysOfMonth) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DaysOfMonth);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MonthlySchedule other) {
      if (other == null) {
        return;
      }
      if (other.HasSnapshotsToKeep) {
        SnapshotsToKeep = other.SnapshotsToKeep;
      }
      if (other.HasMinute) {
        Minute = other.Minute;
      }
      if (other.HasHour) {
        Hour = other.Hour;
      }
      if (other.HasDaysOfMonth) {
        DaysOfMonth = other.DaysOfMonth;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            SnapshotsToKeep = input.ReadDouble();
            break;
          }
          case 17: {
            Minute = input.ReadDouble();
            break;
          }
          case 25: {
            Hour = input.ReadDouble();
            break;
          }
          case 34: {
            DaysOfMonth = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            SnapshotsToKeep = input.ReadDouble();
            break;
          }
          case 17: {
            Minute = input.ReadDouble();
            break;
          }
          case 25: {
            Hour = input.ReadDouble();
            break;
          }
          case 34: {
            DaysOfMonth = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// View only mount options for a volume.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class MountOption : pb::IMessage<MountOption>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MountOption> _parser = new pb::MessageParser<MountOption>(() => new MountOption());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MountOption> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.NetApp.V1.VolumeReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MountOption() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MountOption(MountOption other) : this() {
      export_ = other.export_;
      exportFull_ = other.exportFull_;
      protocol_ = other.protocol_;
      instructions_ = other.instructions_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MountOption Clone() {
      return new MountOption(this);
    }

    /// <summary>Field number for the "export" field.</summary>
    public const int ExportFieldNumber = 1;
    private string export_ = "";
    /// <summary>
    /// Export string
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Export {
      get { return export_; }
      set {
        export_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "export_full" field.</summary>
    public const int ExportFullFieldNumber = 2;
    private string exportFull_ = "";
    /// <summary>
    /// Full export string
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ExportFull {
      get { return exportFull_; }
      set {
        exportFull_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "protocol" field.</summary>
    public const int ProtocolFieldNumber = 3;
    private global::Google.Cloud.NetApp.V1.Protocols protocol_ = global::Google.Cloud.NetApp.V1.Protocols.Unspecified;
    /// <summary>
    /// Protocol to mount with.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.NetApp.V1.Protocols Protocol {
      get { return protocol_; }
      set {
        protocol_ = value;
      }
    }

    /// <summary>Field number for the "instructions" field.</summary>
    public const int InstructionsFieldNumber = 4;
    private string instructions_ = "";
    /// <summary>
    /// Instructions for mounting
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Instructions {
      get { return instructions_; }
      set {
        instructions_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MountOption);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MountOption other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Export != other.Export) return false;
      if (ExportFull != other.ExportFull) return false;
      if (Protocol != other.Protocol) return false;
      if (Instructions != other.Instructions) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Export.Length != 0) hash ^= Export.GetHashCode();
      if (ExportFull.Length != 0) hash ^= ExportFull.GetHashCode();
      if (Protocol != global::Google.Cloud.NetApp.V1.Protocols.Unspecified) hash ^= Protocol.GetHashCode();
      if (Instructions.Length != 0) hash ^= Instructions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Export.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Export);
      }
      if (ExportFull.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ExportFull);
      }
      if (Protocol != global::Google.Cloud.NetApp.V1.Protocols.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Protocol);
      }
      if (Instructions.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Instructions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Export.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Export);
      }
      if (ExportFull.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ExportFull);
      }
      if (Protocol != global::Google.Cloud.NetApp.V1.Protocols.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Protocol);
      }
      if (Instructions.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Instructions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Export.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Export);
      }
      if (ExportFull.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExportFull);
      }
      if (Protocol != global::Google.Cloud.NetApp.V1.Protocols.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Protocol);
      }
      if (Instructions.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Instructions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MountOption other) {
      if (other == null) {
        return;
      }
      if (other.Export.Length != 0) {
        Export = other.Export;
      }
      if (other.ExportFull.Length != 0) {
        ExportFull = other.ExportFull;
      }
      if (other.Protocol != global::Google.Cloud.NetApp.V1.Protocols.Unspecified) {
        Protocol = other.Protocol;
      }
      if (other.Instructions.Length != 0) {
        Instructions = other.Instructions;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Export = input.ReadString();
            break;
          }
          case 18: {
            ExportFull = input.ReadString();
            break;
          }
          case 24: {
            Protocol = (global::Google.Cloud.NetApp.V1.Protocols) input.ReadEnum();
            break;
          }
          case 34: {
            Instructions = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Export = input.ReadString();
            break;
          }
          case 18: {
            ExportFull = input.ReadString();
            break;
          }
          case 24: {
            Protocol = (global::Google.Cloud.NetApp.V1.Protocols) input.ReadEnum();
            break;
          }
          case 34: {
            Instructions = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The RestoreParameters if volume is created from a snapshot or backup.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class RestoreParameters : pb::IMessage<RestoreParameters>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RestoreParameters> _parser = new pb::MessageParser<RestoreParameters>(() => new RestoreParameters());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RestoreParameters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.NetApp.V1.VolumeReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RestoreParameters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RestoreParameters(RestoreParameters other) : this() {
      switch (other.SourceCase) {
        case SourceOneofCase.SourceSnapshot:
          SourceSnapshot = other.SourceSnapshot;
          break;
        case SourceOneofCase.SourceBackup:
          SourceBackup = other.SourceBackup;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RestoreParameters Clone() {
      return new RestoreParameters(this);
    }

    /// <summary>Field number for the "source_snapshot" field.</summary>
    public const int SourceSnapshotFieldNumber = 1;
    /// <summary>
    /// Full name of the snapshot resource.
    /// Format:
    /// projects/{project}/locations/{location}/volumes/{volume}/snapshots/{snapshot}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SourceSnapshot {
      get { return HasSourceSnapshot ? (string) source_ : ""; }
      set {
        source_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        sourceCase_ = SourceOneofCase.SourceSnapshot;
      }
    }
    /// <summary>Gets whether the "source_snapshot" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSourceSnapshot {
      get { return sourceCase_ == SourceOneofCase.SourceSnapshot; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "source_snapshot" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSourceSnapshot() {
      if (HasSourceSnapshot) {
        ClearSource();
      }
    }

    /// <summary>Field number for the "source_backup" field.</summary>
    public const int SourceBackupFieldNumber = 2;
    /// <summary>
    /// Full name of the backup resource.
    /// Format:
    /// projects/{project}/locations/{location}/backupVaults/{backup_vault_id}/backups/{backup_id}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SourceBackup {
      get { return HasSourceBackup ? (string) source_ : ""; }
      set {
        source_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        sourceCase_ = SourceOneofCase.SourceBackup;
      }
    }
    /// <summary>Gets whether the "source_backup" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSourceBackup {
      get { return sourceCase_ == SourceOneofCase.SourceBackup; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "source_backup" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSourceBackup() {
      if (HasSourceBackup) {
        ClearSource();
      }
    }

    private object source_;
    /// <summary>Enum of possible cases for the "source" oneof.</summary>
    public enum SourceOneofCase {
      None = 0,
      SourceSnapshot = 1,
      SourceBackup = 2,
    }
    private SourceOneofCase sourceCase_ = SourceOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SourceOneofCase SourceCase {
      get { return sourceCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSource() {
      sourceCase_ = SourceOneofCase.None;
      source_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RestoreParameters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RestoreParameters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SourceSnapshot != other.SourceSnapshot) return false;
      if (SourceBackup != other.SourceBackup) return false;
      if (SourceCase != other.SourceCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSourceSnapshot) hash ^= SourceSnapshot.GetHashCode();
      if (HasSourceBackup) hash ^= SourceBackup.GetHashCode();
      hash ^= (int) sourceCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSourceSnapshot) {
        output.WriteRawTag(10);
        output.WriteString(SourceSnapshot);
      }
      if (HasSourceBackup) {
        output.WriteRawTag(18);
        output.WriteString(SourceBackup);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSourceSnapshot) {
        output.WriteRawTag(10);
        output.WriteString(SourceSnapshot);
      }
      if (HasSourceBackup) {
        output.WriteRawTag(18);
        output.WriteString(SourceBackup);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSourceSnapshot) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceSnapshot);
      }
      if (HasSourceBackup) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceBackup);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RestoreParameters other) {
      if (other == null) {
        return;
      }
      switch (other.SourceCase) {
        case SourceOneofCase.SourceSnapshot:
          SourceSnapshot = other.SourceSnapshot;
          break;
        case SourceOneofCase.SourceBackup:
          SourceBackup = other.SourceBackup;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SourceSnapshot = input.ReadString();
            break;
          }
          case 18: {
            SourceBackup = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SourceSnapshot = input.ReadString();
            break;
          }
          case 18: {
            SourceBackup = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// BackupConfig contains backup related config on a volume.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class BackupConfig : pb::IMessage<BackupConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BackupConfig> _parser = new pb::MessageParser<BackupConfig>(() => new BackupConfig());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BackupConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.NetApp.V1.VolumeReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BackupConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BackupConfig(BackupConfig other) : this() {
      _hasBits0 = other._hasBits0;
      backupPolicies_ = other.backupPolicies_.Clone();
      backupVault_ = other.backupVault_;
      scheduledBackupEnabled_ = other.scheduledBackupEnabled_;
      backupChainBytes_ = other.backupChainBytes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BackupConfig Clone() {
      return new BackupConfig(this);
    }

    /// <summary>Field number for the "backup_policies" field.</summary>
    public const int BackupPoliciesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_backupPolicies_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> backupPolicies_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Optional. When specified, schedule backups will be created based on the
    /// policy configuration.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> BackupPolicies {
      get { return backupPolicies_; }
    }

    /// <summary>Field number for the "backup_vault" field.</summary>
    public const int BackupVaultFieldNumber = 2;
    private string backupVault_ = "";
    /// <summary>
    /// Optional. Name of backup vault.
    /// Format:
    /// projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BackupVault {
      get { return backupVault_; }
      set {
        backupVault_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "scheduled_backup_enabled" field.</summary>
    public const int ScheduledBackupEnabledFieldNumber = 3;
    private readonly static bool ScheduledBackupEnabledDefaultValue = false;

    private bool scheduledBackupEnabled_;
    /// <summary>
    /// Optional. When set to true, scheduled backup is enabled on the volume.
    /// This field should be nil when there's no backup policy attached.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ScheduledBackupEnabled {
      get { if ((_hasBits0 & 1) != 0) { return scheduledBackupEnabled_; } else { return ScheduledBackupEnabledDefaultValue; } }
      set {
        _hasBits0 |= 1;
        scheduledBackupEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "scheduled_backup_enabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScheduledBackupEnabled {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "scheduled_backup_enabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScheduledBackupEnabled() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "backup_chain_bytes" field.</summary>
    public const int BackupChainBytesFieldNumber = 4;
    private readonly static long BackupChainBytesDefaultValue = 0L;

    private long backupChainBytes_;
    /// <summary>
    /// Output only. Total size of all backups in a chain in bytes = baseline
    /// backup size + sum(incremental backup size).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long BackupChainBytes {
      get { if ((_hasBits0 & 2) != 0) { return backupChainBytes_; } else { return BackupChainBytesDefaultValue; } }
      set {
        _hasBits0 |= 2;
        backupChainBytes_ = value;
      }
    }
    /// <summary>Gets whether the "backup_chain_bytes" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBackupChainBytes {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "backup_chain_bytes" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBackupChainBytes() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BackupConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BackupConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!backupPolicies_.Equals(other.backupPolicies_)) return false;
      if (BackupVault != other.BackupVault) return false;
      if (ScheduledBackupEnabled != other.ScheduledBackupEnabled) return false;
      if (BackupChainBytes != other.BackupChainBytes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= backupPolicies_.GetHashCode();
      if (BackupVault.Length != 0) hash ^= BackupVault.GetHashCode();
      if (HasScheduledBackupEnabled) hash ^= ScheduledBackupEnabled.GetHashCode();
      if (HasBackupChainBytes) hash ^= BackupChainBytes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      backupPolicies_.WriteTo(output, _repeated_backupPolicies_codec);
      if (BackupVault.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BackupVault);
      }
      if (HasScheduledBackupEnabled) {
        output.WriteRawTag(24);
        output.WriteBool(ScheduledBackupEnabled);
      }
      if (HasBackupChainBytes) {
        output.WriteRawTag(32);
        output.WriteInt64(BackupChainBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      backupPolicies_.WriteTo(ref output, _repeated_backupPolicies_codec);
      if (BackupVault.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BackupVault);
      }
      if (HasScheduledBackupEnabled) {
        output.WriteRawTag(24);
        output.WriteBool(ScheduledBackupEnabled);
      }
      if (HasBackupChainBytes) {
        output.WriteRawTag(32);
        output.WriteInt64(BackupChainBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += backupPolicies_.CalculateSize(_repeated_backupPolicies_codec);
      if (BackupVault.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BackupVault);
      }
      if (HasScheduledBackupEnabled) {
        size += 1 + 1;
      }
      if (HasBackupChainBytes) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BackupChainBytes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BackupConfig other) {
      if (other == null) {
        return;
      }
      backupPolicies_.Add(other.backupPolicies_);
      if (other.BackupVault.Length != 0) {
        BackupVault = other.BackupVault;
      }
      if (other.HasScheduledBackupEnabled) {
        ScheduledBackupEnabled = other.ScheduledBackupEnabled;
      }
      if (other.HasBackupChainBytes) {
        BackupChainBytes = other.BackupChainBytes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            backupPolicies_.AddEntriesFrom(input, _repeated_backupPolicies_codec);
            break;
          }
          case 18: {
            BackupVault = input.ReadString();
            break;
          }
          case 24: {
            ScheduledBackupEnabled = input.ReadBool();
            break;
          }
          case 32: {
            BackupChainBytes = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            backupPolicies_.AddEntriesFrom(ref input, _repeated_backupPolicies_codec);
            break;
          }
          case 18: {
            BackupVault = input.ReadString();
            break;
          }
          case 24: {
            ScheduledBackupEnabled = input.ReadBool();
            break;
          }
          case 32: {
            BackupChainBytes = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Defines tiering policy for the volume.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TieringPolicy : pb::IMessage<TieringPolicy>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TieringPolicy> _parser = new pb::MessageParser<TieringPolicy>(() => new TieringPolicy());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TieringPolicy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.NetApp.V1.VolumeReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TieringPolicy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TieringPolicy(TieringPolicy other) : this() {
      _hasBits0 = other._hasBits0;
      tierAction_ = other.tierAction_;
      coolingThresholdDays_ = other.coolingThresholdDays_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TieringPolicy Clone() {
      return new TieringPolicy(this);
    }

    /// <summary>Field number for the "tier_action" field.</summary>
    public const int TierActionFieldNumber = 1;
    private readonly static global::Google.Cloud.NetApp.V1.TieringPolicy.Types.TierAction TierActionDefaultValue = global::Google.Cloud.NetApp.V1.TieringPolicy.Types.TierAction.Unspecified;

    private global::Google.Cloud.NetApp.V1.TieringPolicy.Types.TierAction tierAction_;
    /// <summary>
    /// Optional. Flag indicating if the volume has tiering policy enable/pause.
    /// Default is PAUSED.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.NetApp.V1.TieringPolicy.Types.TierAction TierAction {
      get { if ((_hasBits0 & 1) != 0) { return tierAction_; } else { return TierActionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        tierAction_ = value;
      }
    }
    /// <summary>Gets whether the "tier_action" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTierAction {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "tier_action" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTierAction() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "cooling_threshold_days" field.</summary>
    public const int CoolingThresholdDaysFieldNumber = 2;
    private readonly static int CoolingThresholdDaysDefaultValue = 0;

    private int coolingThresholdDays_;
    /// <summary>
    /// Optional. Time in days to mark the volume's data block as cold and make it
    /// eligible for tiering, can be range from 7-183. Default is 31.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CoolingThresholdDays {
      get { if ((_hasBits0 & 2) != 0) { return coolingThresholdDays_; } else { return CoolingThresholdDaysDefaultValue; } }
      set {
        _hasBits0 |= 2;
        coolingThresholdDays_ = value;
      }
    }
    /// <summary>Gets whether the "cooling_threshold_days" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCoolingThresholdDays {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "cooling_threshold_days" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCoolingThresholdDays() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TieringPolicy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TieringPolicy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TierAction != other.TierAction) return false;
      if (CoolingThresholdDays != other.CoolingThresholdDays) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTierAction) hash ^= TierAction.GetHashCode();
      if (HasCoolingThresholdDays) hash ^= CoolingThresholdDays.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasTierAction) {
        output.WriteRawTag(8);
        output.WriteEnum((int) TierAction);
      }
      if (HasCoolingThresholdDays) {
        output.WriteRawTag(16);
        output.WriteInt32(CoolingThresholdDays);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTierAction) {
        output.WriteRawTag(8);
        output.WriteEnum((int) TierAction);
      }
      if (HasCoolingThresholdDays) {
        output.WriteRawTag(16);
        output.WriteInt32(CoolingThresholdDays);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasTierAction) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TierAction);
      }
      if (HasCoolingThresholdDays) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CoolingThresholdDays);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TieringPolicy other) {
      if (other == null) {
        return;
      }
      if (other.HasTierAction) {
        TierAction = other.TierAction;
      }
      if (other.HasCoolingThresholdDays) {
        CoolingThresholdDays = other.CoolingThresholdDays;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TierAction = (global::Google.Cloud.NetApp.V1.TieringPolicy.Types.TierAction) input.ReadEnum();
            break;
          }
          case 16: {
            CoolingThresholdDays = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TierAction = (global::Google.Cloud.NetApp.V1.TieringPolicy.Types.TierAction) input.ReadEnum();
            break;
          }
          case 16: {
            CoolingThresholdDays = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the TieringPolicy message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Tier action for the volume.
      /// </summary>
      public enum TierAction {
        /// <summary>
        /// Unspecified.
        /// </summary>
        [pbr::OriginalName("TIER_ACTION_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// When tiering is enabled, new cold data will be tiered.
        /// </summary>
        [pbr::OriginalName("ENABLED")] Enabled = 1,
        /// <summary>
        /// When paused, tiering won't be performed on new data. Existing data stays
        /// tiered until accessed.
        /// </summary>
        [pbr::OriginalName("PAUSED")] Paused = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// The Hybrid Replication parameters for the volume.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class HybridReplicationParameters : pb::IMessage<HybridReplicationParameters>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HybridReplicationParameters> _parser = new pb::MessageParser<HybridReplicationParameters>(() => new HybridReplicationParameters());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<HybridReplicationParameters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.NetApp.V1.VolumeReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HybridReplicationParameters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HybridReplicationParameters(HybridReplicationParameters other) : this() {
      replication_ = other.replication_;
      peerVolumeName_ = other.peerVolumeName_;
      peerClusterName_ = other.peerClusterName_;
      peerSvmName_ = other.peerSvmName_;
      peerIpAddresses_ = other.peerIpAddresses_.Clone();
      clusterLocation_ = other.clusterLocation_;
      description_ = other.description_;
      labels_ = other.labels_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HybridReplicationParameters Clone() {
      return new HybridReplicationParameters(this);
    }

    /// <summary>Field number for the "replication" field.</summary>
    public const int ReplicationFieldNumber = 1;
    private string replication_ = "";
    /// <summary>
    /// Required. Desired name for the replication of this volume.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Replication {
      get { return replication_; }
      set {
        replication_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "peer_volume_name" field.</summary>
    public const int PeerVolumeNameFieldNumber = 2;
    private string peerVolumeName_ = "";
    /// <summary>
    /// Required. Name of the user's local source volume to be peered with the
    /// destination volume.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PeerVolumeName {
      get { return peerVolumeName_; }
      set {
        peerVolumeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "peer_cluster_name" field.</summary>
    public const int PeerClusterNameFieldNumber = 3;
    private string peerClusterName_ = "";
    /// <summary>
    /// Required. Name of the user's local source cluster to be peered with the
    /// destination cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PeerClusterName {
      get { return peerClusterName_; }
      set {
        peerClusterName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "peer_svm_name" field.</summary>
    public const int PeerSvmNameFieldNumber = 4;
    private string peerSvmName_ = "";
    /// <summary>
    /// Required. Name of the user's local source vserver svm to be peered with the
    /// destination vserver svm.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PeerSvmName {
      get { return peerSvmName_; }
      set {
        peerSvmName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "peer_ip_addresses" field.</summary>
    public const int PeerIpAddressesFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_peerIpAddresses_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> peerIpAddresses_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Required. List of node ip addresses to be peered with.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> PeerIpAddresses {
      get { return peerIpAddresses_; }
    }

    /// <summary>Field number for the "cluster_location" field.</summary>
    public const int ClusterLocationFieldNumber = 6;
    private string clusterLocation_ = "";
    /// <summary>
    /// Optional. Name of source cluster location associated with the Hybrid
    /// replication. This is a free-form field for the display purpose only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClusterLocation {
      get { return clusterLocation_; }
      set {
        clusterLocation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 7;
    private string description_ = "";
    /// <summary>
    /// Optional. Description of the replication.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 8;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 66);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Optional. Labels to be added to the replication as the key value pairs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as HybridReplicationParameters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(HybridReplicationParameters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Replication != other.Replication) return false;
      if (PeerVolumeName != other.PeerVolumeName) return false;
      if (PeerClusterName != other.PeerClusterName) return false;
      if (PeerSvmName != other.PeerSvmName) return false;
      if(!peerIpAddresses_.Equals(other.peerIpAddresses_)) return false;
      if (ClusterLocation != other.ClusterLocation) return false;
      if (Description != other.Description) return false;
      if (!Labels.Equals(other.Labels)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Replication.Length != 0) hash ^= Replication.GetHashCode();
      if (PeerVolumeName.Length != 0) hash ^= PeerVolumeName.GetHashCode();
      if (PeerClusterName.Length != 0) hash ^= PeerClusterName.GetHashCode();
      if (PeerSvmName.Length != 0) hash ^= PeerSvmName.GetHashCode();
      hash ^= peerIpAddresses_.GetHashCode();
      if (ClusterLocation.Length != 0) hash ^= ClusterLocation.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Replication.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Replication);
      }
      if (PeerVolumeName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PeerVolumeName);
      }
      if (PeerClusterName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PeerClusterName);
      }
      if (PeerSvmName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PeerSvmName);
      }
      peerIpAddresses_.WriteTo(output, _repeated_peerIpAddresses_codec);
      if (ClusterLocation.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ClusterLocation);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Description);
      }
      labels_.WriteTo(output, _map_labels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Replication.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Replication);
      }
      if (PeerVolumeName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PeerVolumeName);
      }
      if (PeerClusterName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PeerClusterName);
      }
      if (PeerSvmName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PeerSvmName);
      }
      peerIpAddresses_.WriteTo(ref output, _repeated_peerIpAddresses_codec);
      if (ClusterLocation.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ClusterLocation);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Description);
      }
      labels_.WriteTo(ref output, _map_labels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Replication.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Replication);
      }
      if (PeerVolumeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PeerVolumeName);
      }
      if (PeerClusterName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PeerClusterName);
      }
      if (PeerSvmName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PeerSvmName);
      }
      size += peerIpAddresses_.CalculateSize(_repeated_peerIpAddresses_codec);
      if (ClusterLocation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterLocation);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(HybridReplicationParameters other) {
      if (other == null) {
        return;
      }
      if (other.Replication.Length != 0) {
        Replication = other.Replication;
      }
      if (other.PeerVolumeName.Length != 0) {
        PeerVolumeName = other.PeerVolumeName;
      }
      if (other.PeerClusterName.Length != 0) {
        PeerClusterName = other.PeerClusterName;
      }
      if (other.PeerSvmName.Length != 0) {
        PeerSvmName = other.PeerSvmName;
      }
      peerIpAddresses_.Add(other.peerIpAddresses_);
      if (other.ClusterLocation.Length != 0) {
        ClusterLocation = other.ClusterLocation;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      labels_.MergeFrom(other.labels_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Replication = input.ReadString();
            break;
          }
          case 18: {
            PeerVolumeName = input.ReadString();
            break;
          }
          case 26: {
            PeerClusterName = input.ReadString();
            break;
          }
          case 34: {
            PeerSvmName = input.ReadString();
            break;
          }
          case 42: {
            peerIpAddresses_.AddEntriesFrom(input, _repeated_peerIpAddresses_codec);
            break;
          }
          case 50: {
            ClusterLocation = input.ReadString();
            break;
          }
          case 58: {
            Description = input.ReadString();
            break;
          }
          case 66: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Replication = input.ReadString();
            break;
          }
          case 18: {
            PeerVolumeName = input.ReadString();
            break;
          }
          case 26: {
            PeerClusterName = input.ReadString();
            break;
          }
          case 34: {
            PeerSvmName = input.ReadString();
            break;
          }
          case 42: {
            peerIpAddresses_.AddEntriesFrom(ref input, _repeated_peerIpAddresses_codec);
            break;
          }
          case 50: {
            ClusterLocation = input.ReadString();
            break;
          }
          case 58: {
            Description = input.ReadString();
            break;
          }
          case 66: {
            labels_.AddEntriesFrom(ref input, _map_labels_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
