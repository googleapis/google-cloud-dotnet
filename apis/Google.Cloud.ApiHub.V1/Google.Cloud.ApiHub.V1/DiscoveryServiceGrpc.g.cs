// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/apihub/v1/discovery_service.proto
// </auto-generated>
// Original file comments:
// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.ApiHub.V1 {
  /// <summary>
  /// This service exposes methods used to manage DiscoveredApiObservations
  /// and DiscoveredApiOperations.
  /// </summary>
  public static partial class ApiHubDiscovery
  {
    static readonly string __ServiceName = "google.cloud.apihub.v1.ApiHubDiscovery";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.ListDiscoveredApiObservationsRequest> __Marshaller_google_cloud_apihub_v1_ListDiscoveredApiObservationsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.ListDiscoveredApiObservationsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.ListDiscoveredApiObservationsResponse> __Marshaller_google_cloud_apihub_v1_ListDiscoveredApiObservationsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.ListDiscoveredApiObservationsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.GetDiscoveredApiObservationRequest> __Marshaller_google_cloud_apihub_v1_GetDiscoveredApiObservationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.GetDiscoveredApiObservationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.DiscoveredApiObservation> __Marshaller_google_cloud_apihub_v1_DiscoveredApiObservation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.DiscoveredApiObservation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.ListDiscoveredApiOperationsRequest> __Marshaller_google_cloud_apihub_v1_ListDiscoveredApiOperationsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.ListDiscoveredApiOperationsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.ListDiscoveredApiOperationsResponse> __Marshaller_google_cloud_apihub_v1_ListDiscoveredApiOperationsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.ListDiscoveredApiOperationsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.GetDiscoveredApiOperationRequest> __Marshaller_google_cloud_apihub_v1_GetDiscoveredApiOperationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.GetDiscoveredApiOperationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.DiscoveredApiOperation> __Marshaller_google_cloud_apihub_v1_DiscoveredApiOperation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.DiscoveredApiOperation.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiHub.V1.ListDiscoveredApiObservationsRequest, global::Google.Cloud.ApiHub.V1.ListDiscoveredApiObservationsResponse> __Method_ListDiscoveredApiObservations = new grpc::Method<global::Google.Cloud.ApiHub.V1.ListDiscoveredApiObservationsRequest, global::Google.Cloud.ApiHub.V1.ListDiscoveredApiObservationsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListDiscoveredApiObservations",
        __Marshaller_google_cloud_apihub_v1_ListDiscoveredApiObservationsRequest,
        __Marshaller_google_cloud_apihub_v1_ListDiscoveredApiObservationsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiHub.V1.GetDiscoveredApiObservationRequest, global::Google.Cloud.ApiHub.V1.DiscoveredApiObservation> __Method_GetDiscoveredApiObservation = new grpc::Method<global::Google.Cloud.ApiHub.V1.GetDiscoveredApiObservationRequest, global::Google.Cloud.ApiHub.V1.DiscoveredApiObservation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDiscoveredApiObservation",
        __Marshaller_google_cloud_apihub_v1_GetDiscoveredApiObservationRequest,
        __Marshaller_google_cloud_apihub_v1_DiscoveredApiObservation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiHub.V1.ListDiscoveredApiOperationsRequest, global::Google.Cloud.ApiHub.V1.ListDiscoveredApiOperationsResponse> __Method_ListDiscoveredApiOperations = new grpc::Method<global::Google.Cloud.ApiHub.V1.ListDiscoveredApiOperationsRequest, global::Google.Cloud.ApiHub.V1.ListDiscoveredApiOperationsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListDiscoveredApiOperations",
        __Marshaller_google_cloud_apihub_v1_ListDiscoveredApiOperationsRequest,
        __Marshaller_google_cloud_apihub_v1_ListDiscoveredApiOperationsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiHub.V1.GetDiscoveredApiOperationRequest, global::Google.Cloud.ApiHub.V1.DiscoveredApiOperation> __Method_GetDiscoveredApiOperation = new grpc::Method<global::Google.Cloud.ApiHub.V1.GetDiscoveredApiOperationRequest, global::Google.Cloud.ApiHub.V1.DiscoveredApiOperation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDiscoveredApiOperation",
        __Marshaller_google_cloud_apihub_v1_GetDiscoveredApiOperationRequest,
        __Marshaller_google_cloud_apihub_v1_DiscoveredApiOperation);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.ApiHub.V1.DiscoveryServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of ApiHubDiscovery</summary>
    [grpc::BindServiceMethod(typeof(ApiHubDiscovery), "BindService")]
    public abstract partial class ApiHubDiscoveryBase
    {
      /// <summary>
      /// Lists all the DiscoveredAPIObservations in a given project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ApiHub.V1.ListDiscoveredApiObservationsResponse> ListDiscoveredApiObservations(global::Google.Cloud.ApiHub.V1.ListDiscoveredApiObservationsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a DiscoveredAPIObservation in a given project, location and
      /// ApiObservation.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ApiHub.V1.DiscoveredApiObservation> GetDiscoveredApiObservation(global::Google.Cloud.ApiHub.V1.GetDiscoveredApiObservationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists all the DiscoveredAPIOperations in a given project, location and
      /// ApiObservation.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ApiHub.V1.ListDiscoveredApiOperationsResponse> ListDiscoveredApiOperations(global::Google.Cloud.ApiHub.V1.ListDiscoveredApiOperationsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a DiscoveredAPIOperation in a given project, location,
      /// ApiObservation and ApiOperation.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ApiHub.V1.DiscoveredApiOperation> GetDiscoveredApiOperation(global::Google.Cloud.ApiHub.V1.GetDiscoveredApiOperationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for ApiHubDiscovery</summary>
    public partial class ApiHubDiscoveryClient : grpc::ClientBase<ApiHubDiscoveryClient>
    {
      /// <summary>Creates a new client for ApiHubDiscovery</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ApiHubDiscoveryClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ApiHubDiscovery that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ApiHubDiscoveryClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ApiHubDiscoveryClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ApiHubDiscoveryClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Lists all the DiscoveredAPIObservations in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.ListDiscoveredApiObservationsResponse ListDiscoveredApiObservations(global::Google.Cloud.ApiHub.V1.ListDiscoveredApiObservationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDiscoveredApiObservations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all the DiscoveredAPIObservations in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.ListDiscoveredApiObservationsResponse ListDiscoveredApiObservations(global::Google.Cloud.ApiHub.V1.ListDiscoveredApiObservationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListDiscoveredApiObservations, null, options, request);
      }
      /// <summary>
      /// Lists all the DiscoveredAPIObservations in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.ListDiscoveredApiObservationsResponse> ListDiscoveredApiObservationsAsync(global::Google.Cloud.ApiHub.V1.ListDiscoveredApiObservationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDiscoveredApiObservationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all the DiscoveredAPIObservations in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.ListDiscoveredApiObservationsResponse> ListDiscoveredApiObservationsAsync(global::Google.Cloud.ApiHub.V1.ListDiscoveredApiObservationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListDiscoveredApiObservations, null, options, request);
      }
      /// <summary>
      /// Gets a DiscoveredAPIObservation in a given project, location and
      /// ApiObservation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.DiscoveredApiObservation GetDiscoveredApiObservation(global::Google.Cloud.ApiHub.V1.GetDiscoveredApiObservationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDiscoveredApiObservation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a DiscoveredAPIObservation in a given project, location and
      /// ApiObservation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.DiscoveredApiObservation GetDiscoveredApiObservation(global::Google.Cloud.ApiHub.V1.GetDiscoveredApiObservationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDiscoveredApiObservation, null, options, request);
      }
      /// <summary>
      /// Gets a DiscoveredAPIObservation in a given project, location and
      /// ApiObservation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.DiscoveredApiObservation> GetDiscoveredApiObservationAsync(global::Google.Cloud.ApiHub.V1.GetDiscoveredApiObservationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDiscoveredApiObservationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a DiscoveredAPIObservation in a given project, location and
      /// ApiObservation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.DiscoveredApiObservation> GetDiscoveredApiObservationAsync(global::Google.Cloud.ApiHub.V1.GetDiscoveredApiObservationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDiscoveredApiObservation, null, options, request);
      }
      /// <summary>
      /// Lists all the DiscoveredAPIOperations in a given project, location and
      /// ApiObservation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.ListDiscoveredApiOperationsResponse ListDiscoveredApiOperations(global::Google.Cloud.ApiHub.V1.ListDiscoveredApiOperationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDiscoveredApiOperations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all the DiscoveredAPIOperations in a given project, location and
      /// ApiObservation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.ListDiscoveredApiOperationsResponse ListDiscoveredApiOperations(global::Google.Cloud.ApiHub.V1.ListDiscoveredApiOperationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListDiscoveredApiOperations, null, options, request);
      }
      /// <summary>
      /// Lists all the DiscoveredAPIOperations in a given project, location and
      /// ApiObservation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.ListDiscoveredApiOperationsResponse> ListDiscoveredApiOperationsAsync(global::Google.Cloud.ApiHub.V1.ListDiscoveredApiOperationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDiscoveredApiOperationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all the DiscoveredAPIOperations in a given project, location and
      /// ApiObservation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.ListDiscoveredApiOperationsResponse> ListDiscoveredApiOperationsAsync(global::Google.Cloud.ApiHub.V1.ListDiscoveredApiOperationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListDiscoveredApiOperations, null, options, request);
      }
      /// <summary>
      /// Gets a DiscoveredAPIOperation in a given project, location,
      /// ApiObservation and ApiOperation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.DiscoveredApiOperation GetDiscoveredApiOperation(global::Google.Cloud.ApiHub.V1.GetDiscoveredApiOperationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDiscoveredApiOperation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a DiscoveredAPIOperation in a given project, location,
      /// ApiObservation and ApiOperation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.DiscoveredApiOperation GetDiscoveredApiOperation(global::Google.Cloud.ApiHub.V1.GetDiscoveredApiOperationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDiscoveredApiOperation, null, options, request);
      }
      /// <summary>
      /// Gets a DiscoveredAPIOperation in a given project, location,
      /// ApiObservation and ApiOperation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.DiscoveredApiOperation> GetDiscoveredApiOperationAsync(global::Google.Cloud.ApiHub.V1.GetDiscoveredApiOperationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDiscoveredApiOperationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a DiscoveredAPIOperation in a given project, location,
      /// ApiObservation and ApiOperation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.DiscoveredApiOperation> GetDiscoveredApiOperationAsync(global::Google.Cloud.ApiHub.V1.GetDiscoveredApiOperationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDiscoveredApiOperation, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override ApiHubDiscoveryClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ApiHubDiscoveryClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(ApiHubDiscoveryBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ListDiscoveredApiObservations, serviceImpl.ListDiscoveredApiObservations)
          .AddMethod(__Method_GetDiscoveredApiObservation, serviceImpl.GetDiscoveredApiObservation)
          .AddMethod(__Method_ListDiscoveredApiOperations, serviceImpl.ListDiscoveredApiOperations)
          .AddMethod(__Method_GetDiscoveredApiOperation, serviceImpl.GetDiscoveredApiOperation).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ApiHubDiscoveryBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_ListDiscoveredApiObservations, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiHub.V1.ListDiscoveredApiObservationsRequest, global::Google.Cloud.ApiHub.V1.ListDiscoveredApiObservationsResponse>(serviceImpl.ListDiscoveredApiObservations));
      serviceBinder.AddMethod(__Method_GetDiscoveredApiObservation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiHub.V1.GetDiscoveredApiObservationRequest, global::Google.Cloud.ApiHub.V1.DiscoveredApiObservation>(serviceImpl.GetDiscoveredApiObservation));
      serviceBinder.AddMethod(__Method_ListDiscoveredApiOperations, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiHub.V1.ListDiscoveredApiOperationsRequest, global::Google.Cloud.ApiHub.V1.ListDiscoveredApiOperationsResponse>(serviceImpl.ListDiscoveredApiOperations));
      serviceBinder.AddMethod(__Method_GetDiscoveredApiOperation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiHub.V1.GetDiscoveredApiOperationRequest, global::Google.Cloud.ApiHub.V1.DiscoveredApiOperation>(serviceImpl.GetDiscoveredApiOperation));
    }

  }
}
#endregion
