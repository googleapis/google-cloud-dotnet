// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/analytics/admin/v1alpha/analytics_admin.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Analytics.Admin.V1Alpha {
  /// <summary>
  /// Service Interface for the Google Analytics Admin API.
  /// </summary>
  public static partial class AnalyticsAdminService
  {
    static readonly string __ServiceName = "google.analytics.admin.v1alpha.AnalyticsAdminService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.GetAccountRequest> __Marshaller_google_analytics_admin_v1alpha_GetAccountRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.GetAccountRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.Account> __Marshaller_google_analytics_admin_v1alpha_Account = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.Account.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListAccountsRequest> __Marshaller_google_analytics_admin_v1alpha_ListAccountsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListAccountsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListAccountsResponse> __Marshaller_google_analytics_admin_v1alpha_ListAccountsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListAccountsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.DeleteAccountRequest> __Marshaller_google_analytics_admin_v1alpha_DeleteAccountRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.DeleteAccountRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.UpdateAccountRequest> __Marshaller_google_analytics_admin_v1alpha_UpdateAccountRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.UpdateAccountRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ProvisionAccountTicketRequest> __Marshaller_google_analytics_admin_v1alpha_ProvisionAccountTicketRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ProvisionAccountTicketRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ProvisionAccountTicketResponse> __Marshaller_google_analytics_admin_v1alpha_ProvisionAccountTicketResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ProvisionAccountTicketResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListAccountSummariesRequest> __Marshaller_google_analytics_admin_v1alpha_ListAccountSummariesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListAccountSummariesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListAccountSummariesResponse> __Marshaller_google_analytics_admin_v1alpha_ListAccountSummariesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListAccountSummariesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.GetPropertyRequest> __Marshaller_google_analytics_admin_v1alpha_GetPropertyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.GetPropertyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.Property> __Marshaller_google_analytics_admin_v1alpha_Property = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.Property.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListPropertiesRequest> __Marshaller_google_analytics_admin_v1alpha_ListPropertiesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListPropertiesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListPropertiesResponse> __Marshaller_google_analytics_admin_v1alpha_ListPropertiesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListPropertiesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.CreatePropertyRequest> __Marshaller_google_analytics_admin_v1alpha_CreatePropertyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.CreatePropertyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.DeletePropertyRequest> __Marshaller_google_analytics_admin_v1alpha_DeletePropertyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.DeletePropertyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.UpdatePropertyRequest> __Marshaller_google_analytics_admin_v1alpha_UpdatePropertyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.UpdatePropertyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.CreateFirebaseLinkRequest> __Marshaller_google_analytics_admin_v1alpha_CreateFirebaseLinkRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.CreateFirebaseLinkRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.FirebaseLink> __Marshaller_google_analytics_admin_v1alpha_FirebaseLink = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.FirebaseLink.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.DeleteFirebaseLinkRequest> __Marshaller_google_analytics_admin_v1alpha_DeleteFirebaseLinkRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.DeleteFirebaseLinkRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListFirebaseLinksRequest> __Marshaller_google_analytics_admin_v1alpha_ListFirebaseLinksRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListFirebaseLinksRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListFirebaseLinksResponse> __Marshaller_google_analytics_admin_v1alpha_ListFirebaseLinksResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListFirebaseLinksResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.GetGlobalSiteTagRequest> __Marshaller_google_analytics_admin_v1alpha_GetGlobalSiteTagRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.GetGlobalSiteTagRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.GlobalSiteTag> __Marshaller_google_analytics_admin_v1alpha_GlobalSiteTag = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.GlobalSiteTag.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.CreateGoogleAdsLinkRequest> __Marshaller_google_analytics_admin_v1alpha_CreateGoogleAdsLinkRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.CreateGoogleAdsLinkRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.GoogleAdsLink> __Marshaller_google_analytics_admin_v1alpha_GoogleAdsLink = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.GoogleAdsLink.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.UpdateGoogleAdsLinkRequest> __Marshaller_google_analytics_admin_v1alpha_UpdateGoogleAdsLinkRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.UpdateGoogleAdsLinkRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.DeleteGoogleAdsLinkRequest> __Marshaller_google_analytics_admin_v1alpha_DeleteGoogleAdsLinkRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.DeleteGoogleAdsLinkRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListGoogleAdsLinksRequest> __Marshaller_google_analytics_admin_v1alpha_ListGoogleAdsLinksRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListGoogleAdsLinksRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListGoogleAdsLinksResponse> __Marshaller_google_analytics_admin_v1alpha_ListGoogleAdsLinksResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListGoogleAdsLinksResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.GetDataSharingSettingsRequest> __Marshaller_google_analytics_admin_v1alpha_GetDataSharingSettingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.GetDataSharingSettingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.DataSharingSettings> __Marshaller_google_analytics_admin_v1alpha_DataSharingSettings = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.DataSharingSettings.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.GetMeasurementProtocolSecretRequest> __Marshaller_google_analytics_admin_v1alpha_GetMeasurementProtocolSecretRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.GetMeasurementProtocolSecretRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.MeasurementProtocolSecret> __Marshaller_google_analytics_admin_v1alpha_MeasurementProtocolSecret = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.MeasurementProtocolSecret.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListMeasurementProtocolSecretsRequest> __Marshaller_google_analytics_admin_v1alpha_ListMeasurementProtocolSecretsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListMeasurementProtocolSecretsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListMeasurementProtocolSecretsResponse> __Marshaller_google_analytics_admin_v1alpha_ListMeasurementProtocolSecretsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListMeasurementProtocolSecretsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.CreateMeasurementProtocolSecretRequest> __Marshaller_google_analytics_admin_v1alpha_CreateMeasurementProtocolSecretRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.CreateMeasurementProtocolSecretRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.DeleteMeasurementProtocolSecretRequest> __Marshaller_google_analytics_admin_v1alpha_DeleteMeasurementProtocolSecretRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.DeleteMeasurementProtocolSecretRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.UpdateMeasurementProtocolSecretRequest> __Marshaller_google_analytics_admin_v1alpha_UpdateMeasurementProtocolSecretRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.UpdateMeasurementProtocolSecretRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.AcknowledgeUserDataCollectionRequest> __Marshaller_google_analytics_admin_v1alpha_AcknowledgeUserDataCollectionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.AcknowledgeUserDataCollectionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.AcknowledgeUserDataCollectionResponse> __Marshaller_google_analytics_admin_v1alpha_AcknowledgeUserDataCollectionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.AcknowledgeUserDataCollectionResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.GetSKAdNetworkConversionValueSchemaRequest> __Marshaller_google_analytics_admin_v1alpha_GetSKAdNetworkConversionValueSchemaRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.GetSKAdNetworkConversionValueSchemaRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.SKAdNetworkConversionValueSchema> __Marshaller_google_analytics_admin_v1alpha_SKAdNetworkConversionValueSchema = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.SKAdNetworkConversionValueSchema.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.CreateSKAdNetworkConversionValueSchemaRequest> __Marshaller_google_analytics_admin_v1alpha_CreateSKAdNetworkConversionValueSchemaRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.CreateSKAdNetworkConversionValueSchemaRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.DeleteSKAdNetworkConversionValueSchemaRequest> __Marshaller_google_analytics_admin_v1alpha_DeleteSKAdNetworkConversionValueSchemaRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.DeleteSKAdNetworkConversionValueSchemaRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.UpdateSKAdNetworkConversionValueSchemaRequest> __Marshaller_google_analytics_admin_v1alpha_UpdateSKAdNetworkConversionValueSchemaRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.UpdateSKAdNetworkConversionValueSchemaRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListSKAdNetworkConversionValueSchemasRequest> __Marshaller_google_analytics_admin_v1alpha_ListSKAdNetworkConversionValueSchemasRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListSKAdNetworkConversionValueSchemasRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListSKAdNetworkConversionValueSchemasResponse> __Marshaller_google_analytics_admin_v1alpha_ListSKAdNetworkConversionValueSchemasResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListSKAdNetworkConversionValueSchemasResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.SearchChangeHistoryEventsRequest> __Marshaller_google_analytics_admin_v1alpha_SearchChangeHistoryEventsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.SearchChangeHistoryEventsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.SearchChangeHistoryEventsResponse> __Marshaller_google_analytics_admin_v1alpha_SearchChangeHistoryEventsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.SearchChangeHistoryEventsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.GetGoogleSignalsSettingsRequest> __Marshaller_google_analytics_admin_v1alpha_GetGoogleSignalsSettingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.GetGoogleSignalsSettingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.GoogleSignalsSettings> __Marshaller_google_analytics_admin_v1alpha_GoogleSignalsSettings = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.GoogleSignalsSettings.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.UpdateGoogleSignalsSettingsRequest> __Marshaller_google_analytics_admin_v1alpha_UpdateGoogleSignalsSettingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.UpdateGoogleSignalsSettingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.CreateConversionEventRequest> __Marshaller_google_analytics_admin_v1alpha_CreateConversionEventRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.CreateConversionEventRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ConversionEvent> __Marshaller_google_analytics_admin_v1alpha_ConversionEvent = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ConversionEvent.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.UpdateConversionEventRequest> __Marshaller_google_analytics_admin_v1alpha_UpdateConversionEventRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.UpdateConversionEventRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.GetConversionEventRequest> __Marshaller_google_analytics_admin_v1alpha_GetConversionEventRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.GetConversionEventRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.DeleteConversionEventRequest> __Marshaller_google_analytics_admin_v1alpha_DeleteConversionEventRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.DeleteConversionEventRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListConversionEventsRequest> __Marshaller_google_analytics_admin_v1alpha_ListConversionEventsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListConversionEventsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListConversionEventsResponse> __Marshaller_google_analytics_admin_v1alpha_ListConversionEventsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListConversionEventsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.CreateKeyEventRequest> __Marshaller_google_analytics_admin_v1alpha_CreateKeyEventRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.CreateKeyEventRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.KeyEvent> __Marshaller_google_analytics_admin_v1alpha_KeyEvent = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.KeyEvent.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.UpdateKeyEventRequest> __Marshaller_google_analytics_admin_v1alpha_UpdateKeyEventRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.UpdateKeyEventRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.GetKeyEventRequest> __Marshaller_google_analytics_admin_v1alpha_GetKeyEventRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.GetKeyEventRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.DeleteKeyEventRequest> __Marshaller_google_analytics_admin_v1alpha_DeleteKeyEventRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.DeleteKeyEventRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListKeyEventsRequest> __Marshaller_google_analytics_admin_v1alpha_ListKeyEventsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListKeyEventsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListKeyEventsResponse> __Marshaller_google_analytics_admin_v1alpha_ListKeyEventsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListKeyEventsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.GetDisplayVideo360AdvertiserLinkRequest> __Marshaller_google_analytics_admin_v1alpha_GetDisplayVideo360AdvertiserLinkRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.GetDisplayVideo360AdvertiserLinkRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLink> __Marshaller_google_analytics_admin_v1alpha_DisplayVideo360AdvertiserLink = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLink.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListDisplayVideo360AdvertiserLinksRequest> __Marshaller_google_analytics_admin_v1alpha_ListDisplayVideo360AdvertiserLinksRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListDisplayVideo360AdvertiserLinksRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListDisplayVideo360AdvertiserLinksResponse> __Marshaller_google_analytics_admin_v1alpha_ListDisplayVideo360AdvertiserLinksResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListDisplayVideo360AdvertiserLinksResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.CreateDisplayVideo360AdvertiserLinkRequest> __Marshaller_google_analytics_admin_v1alpha_CreateDisplayVideo360AdvertiserLinkRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.CreateDisplayVideo360AdvertiserLinkRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.DeleteDisplayVideo360AdvertiserLinkRequest> __Marshaller_google_analytics_admin_v1alpha_DeleteDisplayVideo360AdvertiserLinkRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.DeleteDisplayVideo360AdvertiserLinkRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.UpdateDisplayVideo360AdvertiserLinkRequest> __Marshaller_google_analytics_admin_v1alpha_UpdateDisplayVideo360AdvertiserLinkRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.UpdateDisplayVideo360AdvertiserLinkRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.GetDisplayVideo360AdvertiserLinkProposalRequest> __Marshaller_google_analytics_admin_v1alpha_GetDisplayVideo360AdvertiserLinkProposalRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.GetDisplayVideo360AdvertiserLinkProposalRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLinkProposal> __Marshaller_google_analytics_admin_v1alpha_DisplayVideo360AdvertiserLinkProposal = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLinkProposal.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListDisplayVideo360AdvertiserLinkProposalsRequest> __Marshaller_google_analytics_admin_v1alpha_ListDisplayVideo360AdvertiserLinkProposalsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListDisplayVideo360AdvertiserLinkProposalsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListDisplayVideo360AdvertiserLinkProposalsResponse> __Marshaller_google_analytics_admin_v1alpha_ListDisplayVideo360AdvertiserLinkProposalsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListDisplayVideo360AdvertiserLinkProposalsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.CreateDisplayVideo360AdvertiserLinkProposalRequest> __Marshaller_google_analytics_admin_v1alpha_CreateDisplayVideo360AdvertiserLinkProposalRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.CreateDisplayVideo360AdvertiserLinkProposalRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.DeleteDisplayVideo360AdvertiserLinkProposalRequest> __Marshaller_google_analytics_admin_v1alpha_DeleteDisplayVideo360AdvertiserLinkProposalRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.DeleteDisplayVideo360AdvertiserLinkProposalRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ApproveDisplayVideo360AdvertiserLinkProposalRequest> __Marshaller_google_analytics_admin_v1alpha_ApproveDisplayVideo360AdvertiserLinkProposalRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ApproveDisplayVideo360AdvertiserLinkProposalRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ApproveDisplayVideo360AdvertiserLinkProposalResponse> __Marshaller_google_analytics_admin_v1alpha_ApproveDisplayVideo360AdvertiserLinkProposalResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ApproveDisplayVideo360AdvertiserLinkProposalResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.CancelDisplayVideo360AdvertiserLinkProposalRequest> __Marshaller_google_analytics_admin_v1alpha_CancelDisplayVideo360AdvertiserLinkProposalRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.CancelDisplayVideo360AdvertiserLinkProposalRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.CreateCustomDimensionRequest> __Marshaller_google_analytics_admin_v1alpha_CreateCustomDimensionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.CreateCustomDimensionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.CustomDimension> __Marshaller_google_analytics_admin_v1alpha_CustomDimension = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.CustomDimension.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.UpdateCustomDimensionRequest> __Marshaller_google_analytics_admin_v1alpha_UpdateCustomDimensionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.UpdateCustomDimensionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListCustomDimensionsRequest> __Marshaller_google_analytics_admin_v1alpha_ListCustomDimensionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListCustomDimensionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListCustomDimensionsResponse> __Marshaller_google_analytics_admin_v1alpha_ListCustomDimensionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListCustomDimensionsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ArchiveCustomDimensionRequest> __Marshaller_google_analytics_admin_v1alpha_ArchiveCustomDimensionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ArchiveCustomDimensionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.GetCustomDimensionRequest> __Marshaller_google_analytics_admin_v1alpha_GetCustomDimensionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.GetCustomDimensionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.CreateCustomMetricRequest> __Marshaller_google_analytics_admin_v1alpha_CreateCustomMetricRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.CreateCustomMetricRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.CustomMetric> __Marshaller_google_analytics_admin_v1alpha_CustomMetric = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.CustomMetric.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.UpdateCustomMetricRequest> __Marshaller_google_analytics_admin_v1alpha_UpdateCustomMetricRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.UpdateCustomMetricRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListCustomMetricsRequest> __Marshaller_google_analytics_admin_v1alpha_ListCustomMetricsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListCustomMetricsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListCustomMetricsResponse> __Marshaller_google_analytics_admin_v1alpha_ListCustomMetricsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListCustomMetricsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ArchiveCustomMetricRequest> __Marshaller_google_analytics_admin_v1alpha_ArchiveCustomMetricRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ArchiveCustomMetricRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.GetCustomMetricRequest> __Marshaller_google_analytics_admin_v1alpha_GetCustomMetricRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.GetCustomMetricRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.GetDataRetentionSettingsRequest> __Marshaller_google_analytics_admin_v1alpha_GetDataRetentionSettingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.GetDataRetentionSettingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.DataRetentionSettings> __Marshaller_google_analytics_admin_v1alpha_DataRetentionSettings = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.DataRetentionSettings.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.UpdateDataRetentionSettingsRequest> __Marshaller_google_analytics_admin_v1alpha_UpdateDataRetentionSettingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.UpdateDataRetentionSettingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.CreateDataStreamRequest> __Marshaller_google_analytics_admin_v1alpha_CreateDataStreamRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.CreateDataStreamRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.DataStream> __Marshaller_google_analytics_admin_v1alpha_DataStream = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.DataStream.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.DeleteDataStreamRequest> __Marshaller_google_analytics_admin_v1alpha_DeleteDataStreamRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.DeleteDataStreamRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.UpdateDataStreamRequest> __Marshaller_google_analytics_admin_v1alpha_UpdateDataStreamRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.UpdateDataStreamRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListDataStreamsRequest> __Marshaller_google_analytics_admin_v1alpha_ListDataStreamsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListDataStreamsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListDataStreamsResponse> __Marshaller_google_analytics_admin_v1alpha_ListDataStreamsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListDataStreamsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.GetDataStreamRequest> __Marshaller_google_analytics_admin_v1alpha_GetDataStreamRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.GetDataStreamRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.GetAudienceRequest> __Marshaller_google_analytics_admin_v1alpha_GetAudienceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.GetAudienceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.Audience> __Marshaller_google_analytics_admin_v1alpha_Audience = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.Audience.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListAudiencesRequest> __Marshaller_google_analytics_admin_v1alpha_ListAudiencesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListAudiencesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListAudiencesResponse> __Marshaller_google_analytics_admin_v1alpha_ListAudiencesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListAudiencesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.CreateAudienceRequest> __Marshaller_google_analytics_admin_v1alpha_CreateAudienceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.CreateAudienceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.UpdateAudienceRequest> __Marshaller_google_analytics_admin_v1alpha_UpdateAudienceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.UpdateAudienceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ArchiveAudienceRequest> __Marshaller_google_analytics_admin_v1alpha_ArchiveAudienceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ArchiveAudienceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.GetSearchAds360LinkRequest> __Marshaller_google_analytics_admin_v1alpha_GetSearchAds360LinkRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.GetSearchAds360LinkRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.SearchAds360Link> __Marshaller_google_analytics_admin_v1alpha_SearchAds360Link = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.SearchAds360Link.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListSearchAds360LinksRequest> __Marshaller_google_analytics_admin_v1alpha_ListSearchAds360LinksRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListSearchAds360LinksRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListSearchAds360LinksResponse> __Marshaller_google_analytics_admin_v1alpha_ListSearchAds360LinksResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListSearchAds360LinksResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.CreateSearchAds360LinkRequest> __Marshaller_google_analytics_admin_v1alpha_CreateSearchAds360LinkRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.CreateSearchAds360LinkRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.DeleteSearchAds360LinkRequest> __Marshaller_google_analytics_admin_v1alpha_DeleteSearchAds360LinkRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.DeleteSearchAds360LinkRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.UpdateSearchAds360LinkRequest> __Marshaller_google_analytics_admin_v1alpha_UpdateSearchAds360LinkRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.UpdateSearchAds360LinkRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.GetAttributionSettingsRequest> __Marshaller_google_analytics_admin_v1alpha_GetAttributionSettingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.GetAttributionSettingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.AttributionSettings> __Marshaller_google_analytics_admin_v1alpha_AttributionSettings = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.AttributionSettings.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.UpdateAttributionSettingsRequest> __Marshaller_google_analytics_admin_v1alpha_UpdateAttributionSettingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.UpdateAttributionSettingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.RunAccessReportRequest> __Marshaller_google_analytics_admin_v1alpha_RunAccessReportRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.RunAccessReportRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.RunAccessReportResponse> __Marshaller_google_analytics_admin_v1alpha_RunAccessReportResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.RunAccessReportResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.CreateAccessBindingRequest> __Marshaller_google_analytics_admin_v1alpha_CreateAccessBindingRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.CreateAccessBindingRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.AccessBinding> __Marshaller_google_analytics_admin_v1alpha_AccessBinding = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.AccessBinding.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.GetAccessBindingRequest> __Marshaller_google_analytics_admin_v1alpha_GetAccessBindingRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.GetAccessBindingRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.UpdateAccessBindingRequest> __Marshaller_google_analytics_admin_v1alpha_UpdateAccessBindingRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.UpdateAccessBindingRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.DeleteAccessBindingRequest> __Marshaller_google_analytics_admin_v1alpha_DeleteAccessBindingRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.DeleteAccessBindingRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListAccessBindingsRequest> __Marshaller_google_analytics_admin_v1alpha_ListAccessBindingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListAccessBindingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListAccessBindingsResponse> __Marshaller_google_analytics_admin_v1alpha_ListAccessBindingsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListAccessBindingsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.BatchCreateAccessBindingsRequest> __Marshaller_google_analytics_admin_v1alpha_BatchCreateAccessBindingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.BatchCreateAccessBindingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.BatchCreateAccessBindingsResponse> __Marshaller_google_analytics_admin_v1alpha_BatchCreateAccessBindingsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.BatchCreateAccessBindingsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.BatchGetAccessBindingsRequest> __Marshaller_google_analytics_admin_v1alpha_BatchGetAccessBindingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.BatchGetAccessBindingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.BatchGetAccessBindingsResponse> __Marshaller_google_analytics_admin_v1alpha_BatchGetAccessBindingsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.BatchGetAccessBindingsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.BatchUpdateAccessBindingsRequest> __Marshaller_google_analytics_admin_v1alpha_BatchUpdateAccessBindingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.BatchUpdateAccessBindingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.BatchUpdateAccessBindingsResponse> __Marshaller_google_analytics_admin_v1alpha_BatchUpdateAccessBindingsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.BatchUpdateAccessBindingsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.BatchDeleteAccessBindingsRequest> __Marshaller_google_analytics_admin_v1alpha_BatchDeleteAccessBindingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.BatchDeleteAccessBindingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.GetExpandedDataSetRequest> __Marshaller_google_analytics_admin_v1alpha_GetExpandedDataSetRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.GetExpandedDataSetRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ExpandedDataSet> __Marshaller_google_analytics_admin_v1alpha_ExpandedDataSet = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ExpandedDataSet.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListExpandedDataSetsRequest> __Marshaller_google_analytics_admin_v1alpha_ListExpandedDataSetsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListExpandedDataSetsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListExpandedDataSetsResponse> __Marshaller_google_analytics_admin_v1alpha_ListExpandedDataSetsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListExpandedDataSetsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.CreateExpandedDataSetRequest> __Marshaller_google_analytics_admin_v1alpha_CreateExpandedDataSetRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.CreateExpandedDataSetRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.UpdateExpandedDataSetRequest> __Marshaller_google_analytics_admin_v1alpha_UpdateExpandedDataSetRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.UpdateExpandedDataSetRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.DeleteExpandedDataSetRequest> __Marshaller_google_analytics_admin_v1alpha_DeleteExpandedDataSetRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.DeleteExpandedDataSetRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.GetChannelGroupRequest> __Marshaller_google_analytics_admin_v1alpha_GetChannelGroupRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.GetChannelGroupRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ChannelGroup> __Marshaller_google_analytics_admin_v1alpha_ChannelGroup = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ChannelGroup.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListChannelGroupsRequest> __Marshaller_google_analytics_admin_v1alpha_ListChannelGroupsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListChannelGroupsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListChannelGroupsResponse> __Marshaller_google_analytics_admin_v1alpha_ListChannelGroupsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListChannelGroupsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.CreateChannelGroupRequest> __Marshaller_google_analytics_admin_v1alpha_CreateChannelGroupRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.CreateChannelGroupRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.UpdateChannelGroupRequest> __Marshaller_google_analytics_admin_v1alpha_UpdateChannelGroupRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.UpdateChannelGroupRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.DeleteChannelGroupRequest> __Marshaller_google_analytics_admin_v1alpha_DeleteChannelGroupRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.DeleteChannelGroupRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.SetAutomatedGa4ConfigurationOptOutRequest> __Marshaller_google_analytics_admin_v1alpha_SetAutomatedGa4ConfigurationOptOutRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.SetAutomatedGa4ConfigurationOptOutRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.SetAutomatedGa4ConfigurationOptOutResponse> __Marshaller_google_analytics_admin_v1alpha_SetAutomatedGa4ConfigurationOptOutResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.SetAutomatedGa4ConfigurationOptOutResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.FetchAutomatedGa4ConfigurationOptOutRequest> __Marshaller_google_analytics_admin_v1alpha_FetchAutomatedGa4ConfigurationOptOutRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.FetchAutomatedGa4ConfigurationOptOutRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.FetchAutomatedGa4ConfigurationOptOutResponse> __Marshaller_google_analytics_admin_v1alpha_FetchAutomatedGa4ConfigurationOptOutResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.FetchAutomatedGa4ConfigurationOptOutResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.CreateBigQueryLinkRequest> __Marshaller_google_analytics_admin_v1alpha_CreateBigQueryLinkRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.CreateBigQueryLinkRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.BigQueryLink> __Marshaller_google_analytics_admin_v1alpha_BigQueryLink = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.BigQueryLink.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.GetBigQueryLinkRequest> __Marshaller_google_analytics_admin_v1alpha_GetBigQueryLinkRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.GetBigQueryLinkRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListBigQueryLinksRequest> __Marshaller_google_analytics_admin_v1alpha_ListBigQueryLinksRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListBigQueryLinksRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListBigQueryLinksResponse> __Marshaller_google_analytics_admin_v1alpha_ListBigQueryLinksResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListBigQueryLinksResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.DeleteBigQueryLinkRequest> __Marshaller_google_analytics_admin_v1alpha_DeleteBigQueryLinkRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.DeleteBigQueryLinkRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.UpdateBigQueryLinkRequest> __Marshaller_google_analytics_admin_v1alpha_UpdateBigQueryLinkRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.UpdateBigQueryLinkRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.GetEnhancedMeasurementSettingsRequest> __Marshaller_google_analytics_admin_v1alpha_GetEnhancedMeasurementSettingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.GetEnhancedMeasurementSettingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.EnhancedMeasurementSettings> __Marshaller_google_analytics_admin_v1alpha_EnhancedMeasurementSettings = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.EnhancedMeasurementSettings.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.UpdateEnhancedMeasurementSettingsRequest> __Marshaller_google_analytics_admin_v1alpha_UpdateEnhancedMeasurementSettingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.UpdateEnhancedMeasurementSettingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.CreateConnectedSiteTagRequest> __Marshaller_google_analytics_admin_v1alpha_CreateConnectedSiteTagRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.CreateConnectedSiteTagRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.CreateConnectedSiteTagResponse> __Marshaller_google_analytics_admin_v1alpha_CreateConnectedSiteTagResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.CreateConnectedSiteTagResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.DeleteConnectedSiteTagRequest> __Marshaller_google_analytics_admin_v1alpha_DeleteConnectedSiteTagRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.DeleteConnectedSiteTagRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListConnectedSiteTagsRequest> __Marshaller_google_analytics_admin_v1alpha_ListConnectedSiteTagsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListConnectedSiteTagsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListConnectedSiteTagsResponse> __Marshaller_google_analytics_admin_v1alpha_ListConnectedSiteTagsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListConnectedSiteTagsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.FetchConnectedGa4PropertyRequest> __Marshaller_google_analytics_admin_v1alpha_FetchConnectedGa4PropertyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.FetchConnectedGa4PropertyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.FetchConnectedGa4PropertyResponse> __Marshaller_google_analytics_admin_v1alpha_FetchConnectedGa4PropertyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.FetchConnectedGa4PropertyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.GetAdSenseLinkRequest> __Marshaller_google_analytics_admin_v1alpha_GetAdSenseLinkRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.GetAdSenseLinkRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.AdSenseLink> __Marshaller_google_analytics_admin_v1alpha_AdSenseLink = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.AdSenseLink.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.CreateAdSenseLinkRequest> __Marshaller_google_analytics_admin_v1alpha_CreateAdSenseLinkRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.CreateAdSenseLinkRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.DeleteAdSenseLinkRequest> __Marshaller_google_analytics_admin_v1alpha_DeleteAdSenseLinkRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.DeleteAdSenseLinkRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListAdSenseLinksRequest> __Marshaller_google_analytics_admin_v1alpha_ListAdSenseLinksRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListAdSenseLinksRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListAdSenseLinksResponse> __Marshaller_google_analytics_admin_v1alpha_ListAdSenseLinksResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListAdSenseLinksResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.GetEventCreateRuleRequest> __Marshaller_google_analytics_admin_v1alpha_GetEventCreateRuleRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.GetEventCreateRuleRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.EventCreateRule> __Marshaller_google_analytics_admin_v1alpha_EventCreateRule = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.EventCreateRule.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListEventCreateRulesRequest> __Marshaller_google_analytics_admin_v1alpha_ListEventCreateRulesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListEventCreateRulesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListEventCreateRulesResponse> __Marshaller_google_analytics_admin_v1alpha_ListEventCreateRulesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListEventCreateRulesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.CreateEventCreateRuleRequest> __Marshaller_google_analytics_admin_v1alpha_CreateEventCreateRuleRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.CreateEventCreateRuleRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.UpdateEventCreateRuleRequest> __Marshaller_google_analytics_admin_v1alpha_UpdateEventCreateRuleRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.UpdateEventCreateRuleRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.DeleteEventCreateRuleRequest> __Marshaller_google_analytics_admin_v1alpha_DeleteEventCreateRuleRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.DeleteEventCreateRuleRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.GetEventEditRuleRequest> __Marshaller_google_analytics_admin_v1alpha_GetEventEditRuleRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.GetEventEditRuleRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.EventEditRule> __Marshaller_google_analytics_admin_v1alpha_EventEditRule = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.EventEditRule.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListEventEditRulesRequest> __Marshaller_google_analytics_admin_v1alpha_ListEventEditRulesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListEventEditRulesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListEventEditRulesResponse> __Marshaller_google_analytics_admin_v1alpha_ListEventEditRulesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListEventEditRulesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.CreateEventEditRuleRequest> __Marshaller_google_analytics_admin_v1alpha_CreateEventEditRuleRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.CreateEventEditRuleRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.UpdateEventEditRuleRequest> __Marshaller_google_analytics_admin_v1alpha_UpdateEventEditRuleRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.UpdateEventEditRuleRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.DeleteEventEditRuleRequest> __Marshaller_google_analytics_admin_v1alpha_DeleteEventEditRuleRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.DeleteEventEditRuleRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ReorderEventEditRulesRequest> __Marshaller_google_analytics_admin_v1alpha_ReorderEventEditRulesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ReorderEventEditRulesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.UpdateDataRedactionSettingsRequest> __Marshaller_google_analytics_admin_v1alpha_UpdateDataRedactionSettingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.UpdateDataRedactionSettingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.DataRedactionSettings> __Marshaller_google_analytics_admin_v1alpha_DataRedactionSettings = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.DataRedactionSettings.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.GetDataRedactionSettingsRequest> __Marshaller_google_analytics_admin_v1alpha_GetDataRedactionSettingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.GetDataRedactionSettingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.GetCalculatedMetricRequest> __Marshaller_google_analytics_admin_v1alpha_GetCalculatedMetricRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.GetCalculatedMetricRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.CalculatedMetric> __Marshaller_google_analytics_admin_v1alpha_CalculatedMetric = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.CalculatedMetric.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.CreateCalculatedMetricRequest> __Marshaller_google_analytics_admin_v1alpha_CreateCalculatedMetricRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.CreateCalculatedMetricRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListCalculatedMetricsRequest> __Marshaller_google_analytics_admin_v1alpha_ListCalculatedMetricsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListCalculatedMetricsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListCalculatedMetricsResponse> __Marshaller_google_analytics_admin_v1alpha_ListCalculatedMetricsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListCalculatedMetricsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.UpdateCalculatedMetricRequest> __Marshaller_google_analytics_admin_v1alpha_UpdateCalculatedMetricRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.UpdateCalculatedMetricRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.DeleteCalculatedMetricRequest> __Marshaller_google_analytics_admin_v1alpha_DeleteCalculatedMetricRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.DeleteCalculatedMetricRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.CreateRollupPropertyRequest> __Marshaller_google_analytics_admin_v1alpha_CreateRollupPropertyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.CreateRollupPropertyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.CreateRollupPropertyResponse> __Marshaller_google_analytics_admin_v1alpha_CreateRollupPropertyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.CreateRollupPropertyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.GetRollupPropertySourceLinkRequest> __Marshaller_google_analytics_admin_v1alpha_GetRollupPropertySourceLinkRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.GetRollupPropertySourceLinkRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.RollupPropertySourceLink> __Marshaller_google_analytics_admin_v1alpha_RollupPropertySourceLink = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.RollupPropertySourceLink.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListRollupPropertySourceLinksRequest> __Marshaller_google_analytics_admin_v1alpha_ListRollupPropertySourceLinksRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListRollupPropertySourceLinksRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListRollupPropertySourceLinksResponse> __Marshaller_google_analytics_admin_v1alpha_ListRollupPropertySourceLinksResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListRollupPropertySourceLinksResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.CreateRollupPropertySourceLinkRequest> __Marshaller_google_analytics_admin_v1alpha_CreateRollupPropertySourceLinkRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.CreateRollupPropertySourceLinkRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.DeleteRollupPropertySourceLinkRequest> __Marshaller_google_analytics_admin_v1alpha_DeleteRollupPropertySourceLinkRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.DeleteRollupPropertySourceLinkRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ProvisionSubpropertyRequest> __Marshaller_google_analytics_admin_v1alpha_ProvisionSubpropertyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ProvisionSubpropertyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ProvisionSubpropertyResponse> __Marshaller_google_analytics_admin_v1alpha_ProvisionSubpropertyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ProvisionSubpropertyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.CreateSubpropertyEventFilterRequest> __Marshaller_google_analytics_admin_v1alpha_CreateSubpropertyEventFilterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.CreateSubpropertyEventFilterRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.SubpropertyEventFilter> __Marshaller_google_analytics_admin_v1alpha_SubpropertyEventFilter = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.SubpropertyEventFilter.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.GetSubpropertyEventFilterRequest> __Marshaller_google_analytics_admin_v1alpha_GetSubpropertyEventFilterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.GetSubpropertyEventFilterRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListSubpropertyEventFiltersRequest> __Marshaller_google_analytics_admin_v1alpha_ListSubpropertyEventFiltersRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListSubpropertyEventFiltersRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.ListSubpropertyEventFiltersResponse> __Marshaller_google_analytics_admin_v1alpha_ListSubpropertyEventFiltersResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.ListSubpropertyEventFiltersResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.UpdateSubpropertyEventFilterRequest> __Marshaller_google_analytics_admin_v1alpha_UpdateSubpropertyEventFilterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.UpdateSubpropertyEventFilterRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Alpha.DeleteSubpropertyEventFilterRequest> __Marshaller_google_analytics_admin_v1alpha_DeleteSubpropertyEventFilterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Alpha.DeleteSubpropertyEventFilterRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetAccountRequest, global::Google.Analytics.Admin.V1Alpha.Account> __Method_GetAccount = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetAccountRequest, global::Google.Analytics.Admin.V1Alpha.Account>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAccount",
        __Marshaller_google_analytics_admin_v1alpha_GetAccountRequest,
        __Marshaller_google_analytics_admin_v1alpha_Account);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListAccountsRequest, global::Google.Analytics.Admin.V1Alpha.ListAccountsResponse> __Method_ListAccounts = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListAccountsRequest, global::Google.Analytics.Admin.V1Alpha.ListAccountsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListAccounts",
        __Marshaller_google_analytics_admin_v1alpha_ListAccountsRequest,
        __Marshaller_google_analytics_admin_v1alpha_ListAccountsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeleteAccountRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteAccount = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeleteAccountRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteAccount",
        __Marshaller_google_analytics_admin_v1alpha_DeleteAccountRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateAccountRequest, global::Google.Analytics.Admin.V1Alpha.Account> __Method_UpdateAccount = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateAccountRequest, global::Google.Analytics.Admin.V1Alpha.Account>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateAccount",
        __Marshaller_google_analytics_admin_v1alpha_UpdateAccountRequest,
        __Marshaller_google_analytics_admin_v1alpha_Account);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.ProvisionAccountTicketRequest, global::Google.Analytics.Admin.V1Alpha.ProvisionAccountTicketResponse> __Method_ProvisionAccountTicket = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.ProvisionAccountTicketRequest, global::Google.Analytics.Admin.V1Alpha.ProvisionAccountTicketResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ProvisionAccountTicket",
        __Marshaller_google_analytics_admin_v1alpha_ProvisionAccountTicketRequest,
        __Marshaller_google_analytics_admin_v1alpha_ProvisionAccountTicketResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListAccountSummariesRequest, global::Google.Analytics.Admin.V1Alpha.ListAccountSummariesResponse> __Method_ListAccountSummaries = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListAccountSummariesRequest, global::Google.Analytics.Admin.V1Alpha.ListAccountSummariesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListAccountSummaries",
        __Marshaller_google_analytics_admin_v1alpha_ListAccountSummariesRequest,
        __Marshaller_google_analytics_admin_v1alpha_ListAccountSummariesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetPropertyRequest, global::Google.Analytics.Admin.V1Alpha.Property> __Method_GetProperty = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetPropertyRequest, global::Google.Analytics.Admin.V1Alpha.Property>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetProperty",
        __Marshaller_google_analytics_admin_v1alpha_GetPropertyRequest,
        __Marshaller_google_analytics_admin_v1alpha_Property);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListPropertiesRequest, global::Google.Analytics.Admin.V1Alpha.ListPropertiesResponse> __Method_ListProperties = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListPropertiesRequest, global::Google.Analytics.Admin.V1Alpha.ListPropertiesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListProperties",
        __Marshaller_google_analytics_admin_v1alpha_ListPropertiesRequest,
        __Marshaller_google_analytics_admin_v1alpha_ListPropertiesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreatePropertyRequest, global::Google.Analytics.Admin.V1Alpha.Property> __Method_CreateProperty = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreatePropertyRequest, global::Google.Analytics.Admin.V1Alpha.Property>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateProperty",
        __Marshaller_google_analytics_admin_v1alpha_CreatePropertyRequest,
        __Marshaller_google_analytics_admin_v1alpha_Property);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeletePropertyRequest, global::Google.Analytics.Admin.V1Alpha.Property> __Method_DeleteProperty = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeletePropertyRequest, global::Google.Analytics.Admin.V1Alpha.Property>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteProperty",
        __Marshaller_google_analytics_admin_v1alpha_DeletePropertyRequest,
        __Marshaller_google_analytics_admin_v1alpha_Property);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdatePropertyRequest, global::Google.Analytics.Admin.V1Alpha.Property> __Method_UpdateProperty = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdatePropertyRequest, global::Google.Analytics.Admin.V1Alpha.Property>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateProperty",
        __Marshaller_google_analytics_admin_v1alpha_UpdatePropertyRequest,
        __Marshaller_google_analytics_admin_v1alpha_Property);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateFirebaseLinkRequest, global::Google.Analytics.Admin.V1Alpha.FirebaseLink> __Method_CreateFirebaseLink = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateFirebaseLinkRequest, global::Google.Analytics.Admin.V1Alpha.FirebaseLink>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateFirebaseLink",
        __Marshaller_google_analytics_admin_v1alpha_CreateFirebaseLinkRequest,
        __Marshaller_google_analytics_admin_v1alpha_FirebaseLink);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeleteFirebaseLinkRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteFirebaseLink = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeleteFirebaseLinkRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteFirebaseLink",
        __Marshaller_google_analytics_admin_v1alpha_DeleteFirebaseLinkRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListFirebaseLinksRequest, global::Google.Analytics.Admin.V1Alpha.ListFirebaseLinksResponse> __Method_ListFirebaseLinks = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListFirebaseLinksRequest, global::Google.Analytics.Admin.V1Alpha.ListFirebaseLinksResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListFirebaseLinks",
        __Marshaller_google_analytics_admin_v1alpha_ListFirebaseLinksRequest,
        __Marshaller_google_analytics_admin_v1alpha_ListFirebaseLinksResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetGlobalSiteTagRequest, global::Google.Analytics.Admin.V1Alpha.GlobalSiteTag> __Method_GetGlobalSiteTag = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetGlobalSiteTagRequest, global::Google.Analytics.Admin.V1Alpha.GlobalSiteTag>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetGlobalSiteTag",
        __Marshaller_google_analytics_admin_v1alpha_GetGlobalSiteTagRequest,
        __Marshaller_google_analytics_admin_v1alpha_GlobalSiteTag);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateGoogleAdsLinkRequest, global::Google.Analytics.Admin.V1Alpha.GoogleAdsLink> __Method_CreateGoogleAdsLink = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateGoogleAdsLinkRequest, global::Google.Analytics.Admin.V1Alpha.GoogleAdsLink>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateGoogleAdsLink",
        __Marshaller_google_analytics_admin_v1alpha_CreateGoogleAdsLinkRequest,
        __Marshaller_google_analytics_admin_v1alpha_GoogleAdsLink);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateGoogleAdsLinkRequest, global::Google.Analytics.Admin.V1Alpha.GoogleAdsLink> __Method_UpdateGoogleAdsLink = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateGoogleAdsLinkRequest, global::Google.Analytics.Admin.V1Alpha.GoogleAdsLink>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateGoogleAdsLink",
        __Marshaller_google_analytics_admin_v1alpha_UpdateGoogleAdsLinkRequest,
        __Marshaller_google_analytics_admin_v1alpha_GoogleAdsLink);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeleteGoogleAdsLinkRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteGoogleAdsLink = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeleteGoogleAdsLinkRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteGoogleAdsLink",
        __Marshaller_google_analytics_admin_v1alpha_DeleteGoogleAdsLinkRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListGoogleAdsLinksRequest, global::Google.Analytics.Admin.V1Alpha.ListGoogleAdsLinksResponse> __Method_ListGoogleAdsLinks = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListGoogleAdsLinksRequest, global::Google.Analytics.Admin.V1Alpha.ListGoogleAdsLinksResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListGoogleAdsLinks",
        __Marshaller_google_analytics_admin_v1alpha_ListGoogleAdsLinksRequest,
        __Marshaller_google_analytics_admin_v1alpha_ListGoogleAdsLinksResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetDataSharingSettingsRequest, global::Google.Analytics.Admin.V1Alpha.DataSharingSettings> __Method_GetDataSharingSettings = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetDataSharingSettingsRequest, global::Google.Analytics.Admin.V1Alpha.DataSharingSettings>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDataSharingSettings",
        __Marshaller_google_analytics_admin_v1alpha_GetDataSharingSettingsRequest,
        __Marshaller_google_analytics_admin_v1alpha_DataSharingSettings);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetMeasurementProtocolSecretRequest, global::Google.Analytics.Admin.V1Alpha.MeasurementProtocolSecret> __Method_GetMeasurementProtocolSecret = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetMeasurementProtocolSecretRequest, global::Google.Analytics.Admin.V1Alpha.MeasurementProtocolSecret>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetMeasurementProtocolSecret",
        __Marshaller_google_analytics_admin_v1alpha_GetMeasurementProtocolSecretRequest,
        __Marshaller_google_analytics_admin_v1alpha_MeasurementProtocolSecret);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListMeasurementProtocolSecretsRequest, global::Google.Analytics.Admin.V1Alpha.ListMeasurementProtocolSecretsResponse> __Method_ListMeasurementProtocolSecrets = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListMeasurementProtocolSecretsRequest, global::Google.Analytics.Admin.V1Alpha.ListMeasurementProtocolSecretsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListMeasurementProtocolSecrets",
        __Marshaller_google_analytics_admin_v1alpha_ListMeasurementProtocolSecretsRequest,
        __Marshaller_google_analytics_admin_v1alpha_ListMeasurementProtocolSecretsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateMeasurementProtocolSecretRequest, global::Google.Analytics.Admin.V1Alpha.MeasurementProtocolSecret> __Method_CreateMeasurementProtocolSecret = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateMeasurementProtocolSecretRequest, global::Google.Analytics.Admin.V1Alpha.MeasurementProtocolSecret>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateMeasurementProtocolSecret",
        __Marshaller_google_analytics_admin_v1alpha_CreateMeasurementProtocolSecretRequest,
        __Marshaller_google_analytics_admin_v1alpha_MeasurementProtocolSecret);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeleteMeasurementProtocolSecretRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteMeasurementProtocolSecret = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeleteMeasurementProtocolSecretRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteMeasurementProtocolSecret",
        __Marshaller_google_analytics_admin_v1alpha_DeleteMeasurementProtocolSecretRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateMeasurementProtocolSecretRequest, global::Google.Analytics.Admin.V1Alpha.MeasurementProtocolSecret> __Method_UpdateMeasurementProtocolSecret = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateMeasurementProtocolSecretRequest, global::Google.Analytics.Admin.V1Alpha.MeasurementProtocolSecret>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateMeasurementProtocolSecret",
        __Marshaller_google_analytics_admin_v1alpha_UpdateMeasurementProtocolSecretRequest,
        __Marshaller_google_analytics_admin_v1alpha_MeasurementProtocolSecret);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.AcknowledgeUserDataCollectionRequest, global::Google.Analytics.Admin.V1Alpha.AcknowledgeUserDataCollectionResponse> __Method_AcknowledgeUserDataCollection = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.AcknowledgeUserDataCollectionRequest, global::Google.Analytics.Admin.V1Alpha.AcknowledgeUserDataCollectionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AcknowledgeUserDataCollection",
        __Marshaller_google_analytics_admin_v1alpha_AcknowledgeUserDataCollectionRequest,
        __Marshaller_google_analytics_admin_v1alpha_AcknowledgeUserDataCollectionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetSKAdNetworkConversionValueSchemaRequest, global::Google.Analytics.Admin.V1Alpha.SKAdNetworkConversionValueSchema> __Method_GetSKAdNetworkConversionValueSchema = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetSKAdNetworkConversionValueSchemaRequest, global::Google.Analytics.Admin.V1Alpha.SKAdNetworkConversionValueSchema>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSKAdNetworkConversionValueSchema",
        __Marshaller_google_analytics_admin_v1alpha_GetSKAdNetworkConversionValueSchemaRequest,
        __Marshaller_google_analytics_admin_v1alpha_SKAdNetworkConversionValueSchema);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateSKAdNetworkConversionValueSchemaRequest, global::Google.Analytics.Admin.V1Alpha.SKAdNetworkConversionValueSchema> __Method_CreateSKAdNetworkConversionValueSchema = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateSKAdNetworkConversionValueSchemaRequest, global::Google.Analytics.Admin.V1Alpha.SKAdNetworkConversionValueSchema>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateSKAdNetworkConversionValueSchema",
        __Marshaller_google_analytics_admin_v1alpha_CreateSKAdNetworkConversionValueSchemaRequest,
        __Marshaller_google_analytics_admin_v1alpha_SKAdNetworkConversionValueSchema);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeleteSKAdNetworkConversionValueSchemaRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteSKAdNetworkConversionValueSchema = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeleteSKAdNetworkConversionValueSchemaRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteSKAdNetworkConversionValueSchema",
        __Marshaller_google_analytics_admin_v1alpha_DeleteSKAdNetworkConversionValueSchemaRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateSKAdNetworkConversionValueSchemaRequest, global::Google.Analytics.Admin.V1Alpha.SKAdNetworkConversionValueSchema> __Method_UpdateSKAdNetworkConversionValueSchema = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateSKAdNetworkConversionValueSchemaRequest, global::Google.Analytics.Admin.V1Alpha.SKAdNetworkConversionValueSchema>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateSKAdNetworkConversionValueSchema",
        __Marshaller_google_analytics_admin_v1alpha_UpdateSKAdNetworkConversionValueSchemaRequest,
        __Marshaller_google_analytics_admin_v1alpha_SKAdNetworkConversionValueSchema);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListSKAdNetworkConversionValueSchemasRequest, global::Google.Analytics.Admin.V1Alpha.ListSKAdNetworkConversionValueSchemasResponse> __Method_ListSKAdNetworkConversionValueSchemas = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListSKAdNetworkConversionValueSchemasRequest, global::Google.Analytics.Admin.V1Alpha.ListSKAdNetworkConversionValueSchemasResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListSKAdNetworkConversionValueSchemas",
        __Marshaller_google_analytics_admin_v1alpha_ListSKAdNetworkConversionValueSchemasRequest,
        __Marshaller_google_analytics_admin_v1alpha_ListSKAdNetworkConversionValueSchemasResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.SearchChangeHistoryEventsRequest, global::Google.Analytics.Admin.V1Alpha.SearchChangeHistoryEventsResponse> __Method_SearchChangeHistoryEvents = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.SearchChangeHistoryEventsRequest, global::Google.Analytics.Admin.V1Alpha.SearchChangeHistoryEventsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SearchChangeHistoryEvents",
        __Marshaller_google_analytics_admin_v1alpha_SearchChangeHistoryEventsRequest,
        __Marshaller_google_analytics_admin_v1alpha_SearchChangeHistoryEventsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetGoogleSignalsSettingsRequest, global::Google.Analytics.Admin.V1Alpha.GoogleSignalsSettings> __Method_GetGoogleSignalsSettings = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetGoogleSignalsSettingsRequest, global::Google.Analytics.Admin.V1Alpha.GoogleSignalsSettings>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetGoogleSignalsSettings",
        __Marshaller_google_analytics_admin_v1alpha_GetGoogleSignalsSettingsRequest,
        __Marshaller_google_analytics_admin_v1alpha_GoogleSignalsSettings);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateGoogleSignalsSettingsRequest, global::Google.Analytics.Admin.V1Alpha.GoogleSignalsSettings> __Method_UpdateGoogleSignalsSettings = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateGoogleSignalsSettingsRequest, global::Google.Analytics.Admin.V1Alpha.GoogleSignalsSettings>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateGoogleSignalsSettings",
        __Marshaller_google_analytics_admin_v1alpha_UpdateGoogleSignalsSettingsRequest,
        __Marshaller_google_analytics_admin_v1alpha_GoogleSignalsSettings);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateConversionEventRequest, global::Google.Analytics.Admin.V1Alpha.ConversionEvent> __Method_CreateConversionEvent = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateConversionEventRequest, global::Google.Analytics.Admin.V1Alpha.ConversionEvent>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateConversionEvent",
        __Marshaller_google_analytics_admin_v1alpha_CreateConversionEventRequest,
        __Marshaller_google_analytics_admin_v1alpha_ConversionEvent);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateConversionEventRequest, global::Google.Analytics.Admin.V1Alpha.ConversionEvent> __Method_UpdateConversionEvent = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateConversionEventRequest, global::Google.Analytics.Admin.V1Alpha.ConversionEvent>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateConversionEvent",
        __Marshaller_google_analytics_admin_v1alpha_UpdateConversionEventRequest,
        __Marshaller_google_analytics_admin_v1alpha_ConversionEvent);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetConversionEventRequest, global::Google.Analytics.Admin.V1Alpha.ConversionEvent> __Method_GetConversionEvent = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetConversionEventRequest, global::Google.Analytics.Admin.V1Alpha.ConversionEvent>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetConversionEvent",
        __Marshaller_google_analytics_admin_v1alpha_GetConversionEventRequest,
        __Marshaller_google_analytics_admin_v1alpha_ConversionEvent);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeleteConversionEventRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteConversionEvent = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeleteConversionEventRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteConversionEvent",
        __Marshaller_google_analytics_admin_v1alpha_DeleteConversionEventRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListConversionEventsRequest, global::Google.Analytics.Admin.V1Alpha.ListConversionEventsResponse> __Method_ListConversionEvents = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListConversionEventsRequest, global::Google.Analytics.Admin.V1Alpha.ListConversionEventsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListConversionEvents",
        __Marshaller_google_analytics_admin_v1alpha_ListConversionEventsRequest,
        __Marshaller_google_analytics_admin_v1alpha_ListConversionEventsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateKeyEventRequest, global::Google.Analytics.Admin.V1Alpha.KeyEvent> __Method_CreateKeyEvent = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateKeyEventRequest, global::Google.Analytics.Admin.V1Alpha.KeyEvent>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateKeyEvent",
        __Marshaller_google_analytics_admin_v1alpha_CreateKeyEventRequest,
        __Marshaller_google_analytics_admin_v1alpha_KeyEvent);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateKeyEventRequest, global::Google.Analytics.Admin.V1Alpha.KeyEvent> __Method_UpdateKeyEvent = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateKeyEventRequest, global::Google.Analytics.Admin.V1Alpha.KeyEvent>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateKeyEvent",
        __Marshaller_google_analytics_admin_v1alpha_UpdateKeyEventRequest,
        __Marshaller_google_analytics_admin_v1alpha_KeyEvent);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetKeyEventRequest, global::Google.Analytics.Admin.V1Alpha.KeyEvent> __Method_GetKeyEvent = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetKeyEventRequest, global::Google.Analytics.Admin.V1Alpha.KeyEvent>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetKeyEvent",
        __Marshaller_google_analytics_admin_v1alpha_GetKeyEventRequest,
        __Marshaller_google_analytics_admin_v1alpha_KeyEvent);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeleteKeyEventRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteKeyEvent = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeleteKeyEventRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteKeyEvent",
        __Marshaller_google_analytics_admin_v1alpha_DeleteKeyEventRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListKeyEventsRequest, global::Google.Analytics.Admin.V1Alpha.ListKeyEventsResponse> __Method_ListKeyEvents = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListKeyEventsRequest, global::Google.Analytics.Admin.V1Alpha.ListKeyEventsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListKeyEvents",
        __Marshaller_google_analytics_admin_v1alpha_ListKeyEventsRequest,
        __Marshaller_google_analytics_admin_v1alpha_ListKeyEventsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetDisplayVideo360AdvertiserLinkRequest, global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLink> __Method_GetDisplayVideo360AdvertiserLink = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetDisplayVideo360AdvertiserLinkRequest, global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLink>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDisplayVideo360AdvertiserLink",
        __Marshaller_google_analytics_admin_v1alpha_GetDisplayVideo360AdvertiserLinkRequest,
        __Marshaller_google_analytics_admin_v1alpha_DisplayVideo360AdvertiserLink);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListDisplayVideo360AdvertiserLinksRequest, global::Google.Analytics.Admin.V1Alpha.ListDisplayVideo360AdvertiserLinksResponse> __Method_ListDisplayVideo360AdvertiserLinks = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListDisplayVideo360AdvertiserLinksRequest, global::Google.Analytics.Admin.V1Alpha.ListDisplayVideo360AdvertiserLinksResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListDisplayVideo360AdvertiserLinks",
        __Marshaller_google_analytics_admin_v1alpha_ListDisplayVideo360AdvertiserLinksRequest,
        __Marshaller_google_analytics_admin_v1alpha_ListDisplayVideo360AdvertiserLinksResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateDisplayVideo360AdvertiserLinkRequest, global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLink> __Method_CreateDisplayVideo360AdvertiserLink = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateDisplayVideo360AdvertiserLinkRequest, global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLink>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateDisplayVideo360AdvertiserLink",
        __Marshaller_google_analytics_admin_v1alpha_CreateDisplayVideo360AdvertiserLinkRequest,
        __Marshaller_google_analytics_admin_v1alpha_DisplayVideo360AdvertiserLink);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeleteDisplayVideo360AdvertiserLinkRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteDisplayVideo360AdvertiserLink = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeleteDisplayVideo360AdvertiserLinkRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteDisplayVideo360AdvertiserLink",
        __Marshaller_google_analytics_admin_v1alpha_DeleteDisplayVideo360AdvertiserLinkRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateDisplayVideo360AdvertiserLinkRequest, global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLink> __Method_UpdateDisplayVideo360AdvertiserLink = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateDisplayVideo360AdvertiserLinkRequest, global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLink>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateDisplayVideo360AdvertiserLink",
        __Marshaller_google_analytics_admin_v1alpha_UpdateDisplayVideo360AdvertiserLinkRequest,
        __Marshaller_google_analytics_admin_v1alpha_DisplayVideo360AdvertiserLink);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetDisplayVideo360AdvertiserLinkProposalRequest, global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLinkProposal> __Method_GetDisplayVideo360AdvertiserLinkProposal = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetDisplayVideo360AdvertiserLinkProposalRequest, global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLinkProposal>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDisplayVideo360AdvertiserLinkProposal",
        __Marshaller_google_analytics_admin_v1alpha_GetDisplayVideo360AdvertiserLinkProposalRequest,
        __Marshaller_google_analytics_admin_v1alpha_DisplayVideo360AdvertiserLinkProposal);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListDisplayVideo360AdvertiserLinkProposalsRequest, global::Google.Analytics.Admin.V1Alpha.ListDisplayVideo360AdvertiserLinkProposalsResponse> __Method_ListDisplayVideo360AdvertiserLinkProposals = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListDisplayVideo360AdvertiserLinkProposalsRequest, global::Google.Analytics.Admin.V1Alpha.ListDisplayVideo360AdvertiserLinkProposalsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListDisplayVideo360AdvertiserLinkProposals",
        __Marshaller_google_analytics_admin_v1alpha_ListDisplayVideo360AdvertiserLinkProposalsRequest,
        __Marshaller_google_analytics_admin_v1alpha_ListDisplayVideo360AdvertiserLinkProposalsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateDisplayVideo360AdvertiserLinkProposalRequest, global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLinkProposal> __Method_CreateDisplayVideo360AdvertiserLinkProposal = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateDisplayVideo360AdvertiserLinkProposalRequest, global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLinkProposal>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateDisplayVideo360AdvertiserLinkProposal",
        __Marshaller_google_analytics_admin_v1alpha_CreateDisplayVideo360AdvertiserLinkProposalRequest,
        __Marshaller_google_analytics_admin_v1alpha_DisplayVideo360AdvertiserLinkProposal);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeleteDisplayVideo360AdvertiserLinkProposalRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteDisplayVideo360AdvertiserLinkProposal = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeleteDisplayVideo360AdvertiserLinkProposalRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteDisplayVideo360AdvertiserLinkProposal",
        __Marshaller_google_analytics_admin_v1alpha_DeleteDisplayVideo360AdvertiserLinkProposalRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.ApproveDisplayVideo360AdvertiserLinkProposalRequest, global::Google.Analytics.Admin.V1Alpha.ApproveDisplayVideo360AdvertiserLinkProposalResponse> __Method_ApproveDisplayVideo360AdvertiserLinkProposal = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.ApproveDisplayVideo360AdvertiserLinkProposalRequest, global::Google.Analytics.Admin.V1Alpha.ApproveDisplayVideo360AdvertiserLinkProposalResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ApproveDisplayVideo360AdvertiserLinkProposal",
        __Marshaller_google_analytics_admin_v1alpha_ApproveDisplayVideo360AdvertiserLinkProposalRequest,
        __Marshaller_google_analytics_admin_v1alpha_ApproveDisplayVideo360AdvertiserLinkProposalResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.CancelDisplayVideo360AdvertiserLinkProposalRequest, global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLinkProposal> __Method_CancelDisplayVideo360AdvertiserLinkProposal = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.CancelDisplayVideo360AdvertiserLinkProposalRequest, global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLinkProposal>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CancelDisplayVideo360AdvertiserLinkProposal",
        __Marshaller_google_analytics_admin_v1alpha_CancelDisplayVideo360AdvertiserLinkProposalRequest,
        __Marshaller_google_analytics_admin_v1alpha_DisplayVideo360AdvertiserLinkProposal);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateCustomDimensionRequest, global::Google.Analytics.Admin.V1Alpha.CustomDimension> __Method_CreateCustomDimension = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateCustomDimensionRequest, global::Google.Analytics.Admin.V1Alpha.CustomDimension>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateCustomDimension",
        __Marshaller_google_analytics_admin_v1alpha_CreateCustomDimensionRequest,
        __Marshaller_google_analytics_admin_v1alpha_CustomDimension);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateCustomDimensionRequest, global::Google.Analytics.Admin.V1Alpha.CustomDimension> __Method_UpdateCustomDimension = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateCustomDimensionRequest, global::Google.Analytics.Admin.V1Alpha.CustomDimension>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateCustomDimension",
        __Marshaller_google_analytics_admin_v1alpha_UpdateCustomDimensionRequest,
        __Marshaller_google_analytics_admin_v1alpha_CustomDimension);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListCustomDimensionsRequest, global::Google.Analytics.Admin.V1Alpha.ListCustomDimensionsResponse> __Method_ListCustomDimensions = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListCustomDimensionsRequest, global::Google.Analytics.Admin.V1Alpha.ListCustomDimensionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListCustomDimensions",
        __Marshaller_google_analytics_admin_v1alpha_ListCustomDimensionsRequest,
        __Marshaller_google_analytics_admin_v1alpha_ListCustomDimensionsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.ArchiveCustomDimensionRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ArchiveCustomDimension = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.ArchiveCustomDimensionRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ArchiveCustomDimension",
        __Marshaller_google_analytics_admin_v1alpha_ArchiveCustomDimensionRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetCustomDimensionRequest, global::Google.Analytics.Admin.V1Alpha.CustomDimension> __Method_GetCustomDimension = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetCustomDimensionRequest, global::Google.Analytics.Admin.V1Alpha.CustomDimension>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCustomDimension",
        __Marshaller_google_analytics_admin_v1alpha_GetCustomDimensionRequest,
        __Marshaller_google_analytics_admin_v1alpha_CustomDimension);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateCustomMetricRequest, global::Google.Analytics.Admin.V1Alpha.CustomMetric> __Method_CreateCustomMetric = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateCustomMetricRequest, global::Google.Analytics.Admin.V1Alpha.CustomMetric>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateCustomMetric",
        __Marshaller_google_analytics_admin_v1alpha_CreateCustomMetricRequest,
        __Marshaller_google_analytics_admin_v1alpha_CustomMetric);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateCustomMetricRequest, global::Google.Analytics.Admin.V1Alpha.CustomMetric> __Method_UpdateCustomMetric = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateCustomMetricRequest, global::Google.Analytics.Admin.V1Alpha.CustomMetric>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateCustomMetric",
        __Marshaller_google_analytics_admin_v1alpha_UpdateCustomMetricRequest,
        __Marshaller_google_analytics_admin_v1alpha_CustomMetric);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListCustomMetricsRequest, global::Google.Analytics.Admin.V1Alpha.ListCustomMetricsResponse> __Method_ListCustomMetrics = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListCustomMetricsRequest, global::Google.Analytics.Admin.V1Alpha.ListCustomMetricsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListCustomMetrics",
        __Marshaller_google_analytics_admin_v1alpha_ListCustomMetricsRequest,
        __Marshaller_google_analytics_admin_v1alpha_ListCustomMetricsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.ArchiveCustomMetricRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ArchiveCustomMetric = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.ArchiveCustomMetricRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ArchiveCustomMetric",
        __Marshaller_google_analytics_admin_v1alpha_ArchiveCustomMetricRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetCustomMetricRequest, global::Google.Analytics.Admin.V1Alpha.CustomMetric> __Method_GetCustomMetric = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetCustomMetricRequest, global::Google.Analytics.Admin.V1Alpha.CustomMetric>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCustomMetric",
        __Marshaller_google_analytics_admin_v1alpha_GetCustomMetricRequest,
        __Marshaller_google_analytics_admin_v1alpha_CustomMetric);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetDataRetentionSettingsRequest, global::Google.Analytics.Admin.V1Alpha.DataRetentionSettings> __Method_GetDataRetentionSettings = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetDataRetentionSettingsRequest, global::Google.Analytics.Admin.V1Alpha.DataRetentionSettings>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDataRetentionSettings",
        __Marshaller_google_analytics_admin_v1alpha_GetDataRetentionSettingsRequest,
        __Marshaller_google_analytics_admin_v1alpha_DataRetentionSettings);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateDataRetentionSettingsRequest, global::Google.Analytics.Admin.V1Alpha.DataRetentionSettings> __Method_UpdateDataRetentionSettings = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateDataRetentionSettingsRequest, global::Google.Analytics.Admin.V1Alpha.DataRetentionSettings>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateDataRetentionSettings",
        __Marshaller_google_analytics_admin_v1alpha_UpdateDataRetentionSettingsRequest,
        __Marshaller_google_analytics_admin_v1alpha_DataRetentionSettings);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateDataStreamRequest, global::Google.Analytics.Admin.V1Alpha.DataStream> __Method_CreateDataStream = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateDataStreamRequest, global::Google.Analytics.Admin.V1Alpha.DataStream>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateDataStream",
        __Marshaller_google_analytics_admin_v1alpha_CreateDataStreamRequest,
        __Marshaller_google_analytics_admin_v1alpha_DataStream);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeleteDataStreamRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteDataStream = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeleteDataStreamRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteDataStream",
        __Marshaller_google_analytics_admin_v1alpha_DeleteDataStreamRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateDataStreamRequest, global::Google.Analytics.Admin.V1Alpha.DataStream> __Method_UpdateDataStream = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateDataStreamRequest, global::Google.Analytics.Admin.V1Alpha.DataStream>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateDataStream",
        __Marshaller_google_analytics_admin_v1alpha_UpdateDataStreamRequest,
        __Marshaller_google_analytics_admin_v1alpha_DataStream);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListDataStreamsRequest, global::Google.Analytics.Admin.V1Alpha.ListDataStreamsResponse> __Method_ListDataStreams = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListDataStreamsRequest, global::Google.Analytics.Admin.V1Alpha.ListDataStreamsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListDataStreams",
        __Marshaller_google_analytics_admin_v1alpha_ListDataStreamsRequest,
        __Marshaller_google_analytics_admin_v1alpha_ListDataStreamsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetDataStreamRequest, global::Google.Analytics.Admin.V1Alpha.DataStream> __Method_GetDataStream = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetDataStreamRequest, global::Google.Analytics.Admin.V1Alpha.DataStream>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDataStream",
        __Marshaller_google_analytics_admin_v1alpha_GetDataStreamRequest,
        __Marshaller_google_analytics_admin_v1alpha_DataStream);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetAudienceRequest, global::Google.Analytics.Admin.V1Alpha.Audience> __Method_GetAudience = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetAudienceRequest, global::Google.Analytics.Admin.V1Alpha.Audience>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAudience",
        __Marshaller_google_analytics_admin_v1alpha_GetAudienceRequest,
        __Marshaller_google_analytics_admin_v1alpha_Audience);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListAudiencesRequest, global::Google.Analytics.Admin.V1Alpha.ListAudiencesResponse> __Method_ListAudiences = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListAudiencesRequest, global::Google.Analytics.Admin.V1Alpha.ListAudiencesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListAudiences",
        __Marshaller_google_analytics_admin_v1alpha_ListAudiencesRequest,
        __Marshaller_google_analytics_admin_v1alpha_ListAudiencesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateAudienceRequest, global::Google.Analytics.Admin.V1Alpha.Audience> __Method_CreateAudience = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateAudienceRequest, global::Google.Analytics.Admin.V1Alpha.Audience>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateAudience",
        __Marshaller_google_analytics_admin_v1alpha_CreateAudienceRequest,
        __Marshaller_google_analytics_admin_v1alpha_Audience);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateAudienceRequest, global::Google.Analytics.Admin.V1Alpha.Audience> __Method_UpdateAudience = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateAudienceRequest, global::Google.Analytics.Admin.V1Alpha.Audience>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateAudience",
        __Marshaller_google_analytics_admin_v1alpha_UpdateAudienceRequest,
        __Marshaller_google_analytics_admin_v1alpha_Audience);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.ArchiveAudienceRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ArchiveAudience = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.ArchiveAudienceRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ArchiveAudience",
        __Marshaller_google_analytics_admin_v1alpha_ArchiveAudienceRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetSearchAds360LinkRequest, global::Google.Analytics.Admin.V1Alpha.SearchAds360Link> __Method_GetSearchAds360Link = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetSearchAds360LinkRequest, global::Google.Analytics.Admin.V1Alpha.SearchAds360Link>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSearchAds360Link",
        __Marshaller_google_analytics_admin_v1alpha_GetSearchAds360LinkRequest,
        __Marshaller_google_analytics_admin_v1alpha_SearchAds360Link);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListSearchAds360LinksRequest, global::Google.Analytics.Admin.V1Alpha.ListSearchAds360LinksResponse> __Method_ListSearchAds360Links = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListSearchAds360LinksRequest, global::Google.Analytics.Admin.V1Alpha.ListSearchAds360LinksResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListSearchAds360Links",
        __Marshaller_google_analytics_admin_v1alpha_ListSearchAds360LinksRequest,
        __Marshaller_google_analytics_admin_v1alpha_ListSearchAds360LinksResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateSearchAds360LinkRequest, global::Google.Analytics.Admin.V1Alpha.SearchAds360Link> __Method_CreateSearchAds360Link = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateSearchAds360LinkRequest, global::Google.Analytics.Admin.V1Alpha.SearchAds360Link>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateSearchAds360Link",
        __Marshaller_google_analytics_admin_v1alpha_CreateSearchAds360LinkRequest,
        __Marshaller_google_analytics_admin_v1alpha_SearchAds360Link);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeleteSearchAds360LinkRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteSearchAds360Link = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeleteSearchAds360LinkRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteSearchAds360Link",
        __Marshaller_google_analytics_admin_v1alpha_DeleteSearchAds360LinkRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateSearchAds360LinkRequest, global::Google.Analytics.Admin.V1Alpha.SearchAds360Link> __Method_UpdateSearchAds360Link = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateSearchAds360LinkRequest, global::Google.Analytics.Admin.V1Alpha.SearchAds360Link>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateSearchAds360Link",
        __Marshaller_google_analytics_admin_v1alpha_UpdateSearchAds360LinkRequest,
        __Marshaller_google_analytics_admin_v1alpha_SearchAds360Link);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetAttributionSettingsRequest, global::Google.Analytics.Admin.V1Alpha.AttributionSettings> __Method_GetAttributionSettings = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetAttributionSettingsRequest, global::Google.Analytics.Admin.V1Alpha.AttributionSettings>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAttributionSettings",
        __Marshaller_google_analytics_admin_v1alpha_GetAttributionSettingsRequest,
        __Marshaller_google_analytics_admin_v1alpha_AttributionSettings);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateAttributionSettingsRequest, global::Google.Analytics.Admin.V1Alpha.AttributionSettings> __Method_UpdateAttributionSettings = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateAttributionSettingsRequest, global::Google.Analytics.Admin.V1Alpha.AttributionSettings>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateAttributionSettings",
        __Marshaller_google_analytics_admin_v1alpha_UpdateAttributionSettingsRequest,
        __Marshaller_google_analytics_admin_v1alpha_AttributionSettings);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.RunAccessReportRequest, global::Google.Analytics.Admin.V1Alpha.RunAccessReportResponse> __Method_RunAccessReport = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.RunAccessReportRequest, global::Google.Analytics.Admin.V1Alpha.RunAccessReportResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RunAccessReport",
        __Marshaller_google_analytics_admin_v1alpha_RunAccessReportRequest,
        __Marshaller_google_analytics_admin_v1alpha_RunAccessReportResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateAccessBindingRequest, global::Google.Analytics.Admin.V1Alpha.AccessBinding> __Method_CreateAccessBinding = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateAccessBindingRequest, global::Google.Analytics.Admin.V1Alpha.AccessBinding>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateAccessBinding",
        __Marshaller_google_analytics_admin_v1alpha_CreateAccessBindingRequest,
        __Marshaller_google_analytics_admin_v1alpha_AccessBinding);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetAccessBindingRequest, global::Google.Analytics.Admin.V1Alpha.AccessBinding> __Method_GetAccessBinding = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetAccessBindingRequest, global::Google.Analytics.Admin.V1Alpha.AccessBinding>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAccessBinding",
        __Marshaller_google_analytics_admin_v1alpha_GetAccessBindingRequest,
        __Marshaller_google_analytics_admin_v1alpha_AccessBinding);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateAccessBindingRequest, global::Google.Analytics.Admin.V1Alpha.AccessBinding> __Method_UpdateAccessBinding = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateAccessBindingRequest, global::Google.Analytics.Admin.V1Alpha.AccessBinding>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateAccessBinding",
        __Marshaller_google_analytics_admin_v1alpha_UpdateAccessBindingRequest,
        __Marshaller_google_analytics_admin_v1alpha_AccessBinding);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeleteAccessBindingRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteAccessBinding = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeleteAccessBindingRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteAccessBinding",
        __Marshaller_google_analytics_admin_v1alpha_DeleteAccessBindingRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListAccessBindingsRequest, global::Google.Analytics.Admin.V1Alpha.ListAccessBindingsResponse> __Method_ListAccessBindings = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListAccessBindingsRequest, global::Google.Analytics.Admin.V1Alpha.ListAccessBindingsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListAccessBindings",
        __Marshaller_google_analytics_admin_v1alpha_ListAccessBindingsRequest,
        __Marshaller_google_analytics_admin_v1alpha_ListAccessBindingsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.BatchCreateAccessBindingsRequest, global::Google.Analytics.Admin.V1Alpha.BatchCreateAccessBindingsResponse> __Method_BatchCreateAccessBindings = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.BatchCreateAccessBindingsRequest, global::Google.Analytics.Admin.V1Alpha.BatchCreateAccessBindingsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BatchCreateAccessBindings",
        __Marshaller_google_analytics_admin_v1alpha_BatchCreateAccessBindingsRequest,
        __Marshaller_google_analytics_admin_v1alpha_BatchCreateAccessBindingsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.BatchGetAccessBindingsRequest, global::Google.Analytics.Admin.V1Alpha.BatchGetAccessBindingsResponse> __Method_BatchGetAccessBindings = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.BatchGetAccessBindingsRequest, global::Google.Analytics.Admin.V1Alpha.BatchGetAccessBindingsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BatchGetAccessBindings",
        __Marshaller_google_analytics_admin_v1alpha_BatchGetAccessBindingsRequest,
        __Marshaller_google_analytics_admin_v1alpha_BatchGetAccessBindingsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.BatchUpdateAccessBindingsRequest, global::Google.Analytics.Admin.V1Alpha.BatchUpdateAccessBindingsResponse> __Method_BatchUpdateAccessBindings = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.BatchUpdateAccessBindingsRequest, global::Google.Analytics.Admin.V1Alpha.BatchUpdateAccessBindingsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BatchUpdateAccessBindings",
        __Marshaller_google_analytics_admin_v1alpha_BatchUpdateAccessBindingsRequest,
        __Marshaller_google_analytics_admin_v1alpha_BatchUpdateAccessBindingsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.BatchDeleteAccessBindingsRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_BatchDeleteAccessBindings = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.BatchDeleteAccessBindingsRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BatchDeleteAccessBindings",
        __Marshaller_google_analytics_admin_v1alpha_BatchDeleteAccessBindingsRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetExpandedDataSetRequest, global::Google.Analytics.Admin.V1Alpha.ExpandedDataSet> __Method_GetExpandedDataSet = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetExpandedDataSetRequest, global::Google.Analytics.Admin.V1Alpha.ExpandedDataSet>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetExpandedDataSet",
        __Marshaller_google_analytics_admin_v1alpha_GetExpandedDataSetRequest,
        __Marshaller_google_analytics_admin_v1alpha_ExpandedDataSet);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListExpandedDataSetsRequest, global::Google.Analytics.Admin.V1Alpha.ListExpandedDataSetsResponse> __Method_ListExpandedDataSets = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListExpandedDataSetsRequest, global::Google.Analytics.Admin.V1Alpha.ListExpandedDataSetsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListExpandedDataSets",
        __Marshaller_google_analytics_admin_v1alpha_ListExpandedDataSetsRequest,
        __Marshaller_google_analytics_admin_v1alpha_ListExpandedDataSetsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateExpandedDataSetRequest, global::Google.Analytics.Admin.V1Alpha.ExpandedDataSet> __Method_CreateExpandedDataSet = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateExpandedDataSetRequest, global::Google.Analytics.Admin.V1Alpha.ExpandedDataSet>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateExpandedDataSet",
        __Marshaller_google_analytics_admin_v1alpha_CreateExpandedDataSetRequest,
        __Marshaller_google_analytics_admin_v1alpha_ExpandedDataSet);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateExpandedDataSetRequest, global::Google.Analytics.Admin.V1Alpha.ExpandedDataSet> __Method_UpdateExpandedDataSet = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateExpandedDataSetRequest, global::Google.Analytics.Admin.V1Alpha.ExpandedDataSet>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateExpandedDataSet",
        __Marshaller_google_analytics_admin_v1alpha_UpdateExpandedDataSetRequest,
        __Marshaller_google_analytics_admin_v1alpha_ExpandedDataSet);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeleteExpandedDataSetRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteExpandedDataSet = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeleteExpandedDataSetRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteExpandedDataSet",
        __Marshaller_google_analytics_admin_v1alpha_DeleteExpandedDataSetRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetChannelGroupRequest, global::Google.Analytics.Admin.V1Alpha.ChannelGroup> __Method_GetChannelGroup = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetChannelGroupRequest, global::Google.Analytics.Admin.V1Alpha.ChannelGroup>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetChannelGroup",
        __Marshaller_google_analytics_admin_v1alpha_GetChannelGroupRequest,
        __Marshaller_google_analytics_admin_v1alpha_ChannelGroup);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListChannelGroupsRequest, global::Google.Analytics.Admin.V1Alpha.ListChannelGroupsResponse> __Method_ListChannelGroups = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListChannelGroupsRequest, global::Google.Analytics.Admin.V1Alpha.ListChannelGroupsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListChannelGroups",
        __Marshaller_google_analytics_admin_v1alpha_ListChannelGroupsRequest,
        __Marshaller_google_analytics_admin_v1alpha_ListChannelGroupsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateChannelGroupRequest, global::Google.Analytics.Admin.V1Alpha.ChannelGroup> __Method_CreateChannelGroup = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateChannelGroupRequest, global::Google.Analytics.Admin.V1Alpha.ChannelGroup>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateChannelGroup",
        __Marshaller_google_analytics_admin_v1alpha_CreateChannelGroupRequest,
        __Marshaller_google_analytics_admin_v1alpha_ChannelGroup);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateChannelGroupRequest, global::Google.Analytics.Admin.V1Alpha.ChannelGroup> __Method_UpdateChannelGroup = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateChannelGroupRequest, global::Google.Analytics.Admin.V1Alpha.ChannelGroup>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateChannelGroup",
        __Marshaller_google_analytics_admin_v1alpha_UpdateChannelGroupRequest,
        __Marshaller_google_analytics_admin_v1alpha_ChannelGroup);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeleteChannelGroupRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteChannelGroup = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeleteChannelGroupRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteChannelGroup",
        __Marshaller_google_analytics_admin_v1alpha_DeleteChannelGroupRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.SetAutomatedGa4ConfigurationOptOutRequest, global::Google.Analytics.Admin.V1Alpha.SetAutomatedGa4ConfigurationOptOutResponse> __Method_SetAutomatedGa4ConfigurationOptOut = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.SetAutomatedGa4ConfigurationOptOutRequest, global::Google.Analytics.Admin.V1Alpha.SetAutomatedGa4ConfigurationOptOutResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetAutomatedGa4ConfigurationOptOut",
        __Marshaller_google_analytics_admin_v1alpha_SetAutomatedGa4ConfigurationOptOutRequest,
        __Marshaller_google_analytics_admin_v1alpha_SetAutomatedGa4ConfigurationOptOutResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.FetchAutomatedGa4ConfigurationOptOutRequest, global::Google.Analytics.Admin.V1Alpha.FetchAutomatedGa4ConfigurationOptOutResponse> __Method_FetchAutomatedGa4ConfigurationOptOut = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.FetchAutomatedGa4ConfigurationOptOutRequest, global::Google.Analytics.Admin.V1Alpha.FetchAutomatedGa4ConfigurationOptOutResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "FetchAutomatedGa4ConfigurationOptOut",
        __Marshaller_google_analytics_admin_v1alpha_FetchAutomatedGa4ConfigurationOptOutRequest,
        __Marshaller_google_analytics_admin_v1alpha_FetchAutomatedGa4ConfigurationOptOutResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateBigQueryLinkRequest, global::Google.Analytics.Admin.V1Alpha.BigQueryLink> __Method_CreateBigQueryLink = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateBigQueryLinkRequest, global::Google.Analytics.Admin.V1Alpha.BigQueryLink>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateBigQueryLink",
        __Marshaller_google_analytics_admin_v1alpha_CreateBigQueryLinkRequest,
        __Marshaller_google_analytics_admin_v1alpha_BigQueryLink);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetBigQueryLinkRequest, global::Google.Analytics.Admin.V1Alpha.BigQueryLink> __Method_GetBigQueryLink = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetBigQueryLinkRequest, global::Google.Analytics.Admin.V1Alpha.BigQueryLink>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetBigQueryLink",
        __Marshaller_google_analytics_admin_v1alpha_GetBigQueryLinkRequest,
        __Marshaller_google_analytics_admin_v1alpha_BigQueryLink);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListBigQueryLinksRequest, global::Google.Analytics.Admin.V1Alpha.ListBigQueryLinksResponse> __Method_ListBigQueryLinks = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListBigQueryLinksRequest, global::Google.Analytics.Admin.V1Alpha.ListBigQueryLinksResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListBigQueryLinks",
        __Marshaller_google_analytics_admin_v1alpha_ListBigQueryLinksRequest,
        __Marshaller_google_analytics_admin_v1alpha_ListBigQueryLinksResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeleteBigQueryLinkRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteBigQueryLink = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeleteBigQueryLinkRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteBigQueryLink",
        __Marshaller_google_analytics_admin_v1alpha_DeleteBigQueryLinkRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateBigQueryLinkRequest, global::Google.Analytics.Admin.V1Alpha.BigQueryLink> __Method_UpdateBigQueryLink = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateBigQueryLinkRequest, global::Google.Analytics.Admin.V1Alpha.BigQueryLink>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateBigQueryLink",
        __Marshaller_google_analytics_admin_v1alpha_UpdateBigQueryLinkRequest,
        __Marshaller_google_analytics_admin_v1alpha_BigQueryLink);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetEnhancedMeasurementSettingsRequest, global::Google.Analytics.Admin.V1Alpha.EnhancedMeasurementSettings> __Method_GetEnhancedMeasurementSettings = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetEnhancedMeasurementSettingsRequest, global::Google.Analytics.Admin.V1Alpha.EnhancedMeasurementSettings>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetEnhancedMeasurementSettings",
        __Marshaller_google_analytics_admin_v1alpha_GetEnhancedMeasurementSettingsRequest,
        __Marshaller_google_analytics_admin_v1alpha_EnhancedMeasurementSettings);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateEnhancedMeasurementSettingsRequest, global::Google.Analytics.Admin.V1Alpha.EnhancedMeasurementSettings> __Method_UpdateEnhancedMeasurementSettings = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateEnhancedMeasurementSettingsRequest, global::Google.Analytics.Admin.V1Alpha.EnhancedMeasurementSettings>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateEnhancedMeasurementSettings",
        __Marshaller_google_analytics_admin_v1alpha_UpdateEnhancedMeasurementSettingsRequest,
        __Marshaller_google_analytics_admin_v1alpha_EnhancedMeasurementSettings);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateConnectedSiteTagRequest, global::Google.Analytics.Admin.V1Alpha.CreateConnectedSiteTagResponse> __Method_CreateConnectedSiteTag = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateConnectedSiteTagRequest, global::Google.Analytics.Admin.V1Alpha.CreateConnectedSiteTagResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateConnectedSiteTag",
        __Marshaller_google_analytics_admin_v1alpha_CreateConnectedSiteTagRequest,
        __Marshaller_google_analytics_admin_v1alpha_CreateConnectedSiteTagResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeleteConnectedSiteTagRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteConnectedSiteTag = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeleteConnectedSiteTagRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteConnectedSiteTag",
        __Marshaller_google_analytics_admin_v1alpha_DeleteConnectedSiteTagRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListConnectedSiteTagsRequest, global::Google.Analytics.Admin.V1Alpha.ListConnectedSiteTagsResponse> __Method_ListConnectedSiteTags = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListConnectedSiteTagsRequest, global::Google.Analytics.Admin.V1Alpha.ListConnectedSiteTagsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListConnectedSiteTags",
        __Marshaller_google_analytics_admin_v1alpha_ListConnectedSiteTagsRequest,
        __Marshaller_google_analytics_admin_v1alpha_ListConnectedSiteTagsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.FetchConnectedGa4PropertyRequest, global::Google.Analytics.Admin.V1Alpha.FetchConnectedGa4PropertyResponse> __Method_FetchConnectedGa4Property = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.FetchConnectedGa4PropertyRequest, global::Google.Analytics.Admin.V1Alpha.FetchConnectedGa4PropertyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "FetchConnectedGa4Property",
        __Marshaller_google_analytics_admin_v1alpha_FetchConnectedGa4PropertyRequest,
        __Marshaller_google_analytics_admin_v1alpha_FetchConnectedGa4PropertyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetAdSenseLinkRequest, global::Google.Analytics.Admin.V1Alpha.AdSenseLink> __Method_GetAdSenseLink = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetAdSenseLinkRequest, global::Google.Analytics.Admin.V1Alpha.AdSenseLink>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAdSenseLink",
        __Marshaller_google_analytics_admin_v1alpha_GetAdSenseLinkRequest,
        __Marshaller_google_analytics_admin_v1alpha_AdSenseLink);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateAdSenseLinkRequest, global::Google.Analytics.Admin.V1Alpha.AdSenseLink> __Method_CreateAdSenseLink = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateAdSenseLinkRequest, global::Google.Analytics.Admin.V1Alpha.AdSenseLink>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateAdSenseLink",
        __Marshaller_google_analytics_admin_v1alpha_CreateAdSenseLinkRequest,
        __Marshaller_google_analytics_admin_v1alpha_AdSenseLink);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeleteAdSenseLinkRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteAdSenseLink = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeleteAdSenseLinkRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteAdSenseLink",
        __Marshaller_google_analytics_admin_v1alpha_DeleteAdSenseLinkRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListAdSenseLinksRequest, global::Google.Analytics.Admin.V1Alpha.ListAdSenseLinksResponse> __Method_ListAdSenseLinks = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListAdSenseLinksRequest, global::Google.Analytics.Admin.V1Alpha.ListAdSenseLinksResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListAdSenseLinks",
        __Marshaller_google_analytics_admin_v1alpha_ListAdSenseLinksRequest,
        __Marshaller_google_analytics_admin_v1alpha_ListAdSenseLinksResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetEventCreateRuleRequest, global::Google.Analytics.Admin.V1Alpha.EventCreateRule> __Method_GetEventCreateRule = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetEventCreateRuleRequest, global::Google.Analytics.Admin.V1Alpha.EventCreateRule>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetEventCreateRule",
        __Marshaller_google_analytics_admin_v1alpha_GetEventCreateRuleRequest,
        __Marshaller_google_analytics_admin_v1alpha_EventCreateRule);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListEventCreateRulesRequest, global::Google.Analytics.Admin.V1Alpha.ListEventCreateRulesResponse> __Method_ListEventCreateRules = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListEventCreateRulesRequest, global::Google.Analytics.Admin.V1Alpha.ListEventCreateRulesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListEventCreateRules",
        __Marshaller_google_analytics_admin_v1alpha_ListEventCreateRulesRequest,
        __Marshaller_google_analytics_admin_v1alpha_ListEventCreateRulesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateEventCreateRuleRequest, global::Google.Analytics.Admin.V1Alpha.EventCreateRule> __Method_CreateEventCreateRule = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateEventCreateRuleRequest, global::Google.Analytics.Admin.V1Alpha.EventCreateRule>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateEventCreateRule",
        __Marshaller_google_analytics_admin_v1alpha_CreateEventCreateRuleRequest,
        __Marshaller_google_analytics_admin_v1alpha_EventCreateRule);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateEventCreateRuleRequest, global::Google.Analytics.Admin.V1Alpha.EventCreateRule> __Method_UpdateEventCreateRule = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateEventCreateRuleRequest, global::Google.Analytics.Admin.V1Alpha.EventCreateRule>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateEventCreateRule",
        __Marshaller_google_analytics_admin_v1alpha_UpdateEventCreateRuleRequest,
        __Marshaller_google_analytics_admin_v1alpha_EventCreateRule);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeleteEventCreateRuleRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteEventCreateRule = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeleteEventCreateRuleRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteEventCreateRule",
        __Marshaller_google_analytics_admin_v1alpha_DeleteEventCreateRuleRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetEventEditRuleRequest, global::Google.Analytics.Admin.V1Alpha.EventEditRule> __Method_GetEventEditRule = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetEventEditRuleRequest, global::Google.Analytics.Admin.V1Alpha.EventEditRule>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetEventEditRule",
        __Marshaller_google_analytics_admin_v1alpha_GetEventEditRuleRequest,
        __Marshaller_google_analytics_admin_v1alpha_EventEditRule);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListEventEditRulesRequest, global::Google.Analytics.Admin.V1Alpha.ListEventEditRulesResponse> __Method_ListEventEditRules = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListEventEditRulesRequest, global::Google.Analytics.Admin.V1Alpha.ListEventEditRulesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListEventEditRules",
        __Marshaller_google_analytics_admin_v1alpha_ListEventEditRulesRequest,
        __Marshaller_google_analytics_admin_v1alpha_ListEventEditRulesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateEventEditRuleRequest, global::Google.Analytics.Admin.V1Alpha.EventEditRule> __Method_CreateEventEditRule = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateEventEditRuleRequest, global::Google.Analytics.Admin.V1Alpha.EventEditRule>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateEventEditRule",
        __Marshaller_google_analytics_admin_v1alpha_CreateEventEditRuleRequest,
        __Marshaller_google_analytics_admin_v1alpha_EventEditRule);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateEventEditRuleRequest, global::Google.Analytics.Admin.V1Alpha.EventEditRule> __Method_UpdateEventEditRule = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateEventEditRuleRequest, global::Google.Analytics.Admin.V1Alpha.EventEditRule>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateEventEditRule",
        __Marshaller_google_analytics_admin_v1alpha_UpdateEventEditRuleRequest,
        __Marshaller_google_analytics_admin_v1alpha_EventEditRule);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeleteEventEditRuleRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteEventEditRule = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeleteEventEditRuleRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteEventEditRule",
        __Marshaller_google_analytics_admin_v1alpha_DeleteEventEditRuleRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.ReorderEventEditRulesRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ReorderEventEditRules = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.ReorderEventEditRulesRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReorderEventEditRules",
        __Marshaller_google_analytics_admin_v1alpha_ReorderEventEditRulesRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateDataRedactionSettingsRequest, global::Google.Analytics.Admin.V1Alpha.DataRedactionSettings> __Method_UpdateDataRedactionSettings = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateDataRedactionSettingsRequest, global::Google.Analytics.Admin.V1Alpha.DataRedactionSettings>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateDataRedactionSettings",
        __Marshaller_google_analytics_admin_v1alpha_UpdateDataRedactionSettingsRequest,
        __Marshaller_google_analytics_admin_v1alpha_DataRedactionSettings);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetDataRedactionSettingsRequest, global::Google.Analytics.Admin.V1Alpha.DataRedactionSettings> __Method_GetDataRedactionSettings = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetDataRedactionSettingsRequest, global::Google.Analytics.Admin.V1Alpha.DataRedactionSettings>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDataRedactionSettings",
        __Marshaller_google_analytics_admin_v1alpha_GetDataRedactionSettingsRequest,
        __Marshaller_google_analytics_admin_v1alpha_DataRedactionSettings);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetCalculatedMetricRequest, global::Google.Analytics.Admin.V1Alpha.CalculatedMetric> __Method_GetCalculatedMetric = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetCalculatedMetricRequest, global::Google.Analytics.Admin.V1Alpha.CalculatedMetric>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCalculatedMetric",
        __Marshaller_google_analytics_admin_v1alpha_GetCalculatedMetricRequest,
        __Marshaller_google_analytics_admin_v1alpha_CalculatedMetric);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateCalculatedMetricRequest, global::Google.Analytics.Admin.V1Alpha.CalculatedMetric> __Method_CreateCalculatedMetric = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateCalculatedMetricRequest, global::Google.Analytics.Admin.V1Alpha.CalculatedMetric>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateCalculatedMetric",
        __Marshaller_google_analytics_admin_v1alpha_CreateCalculatedMetricRequest,
        __Marshaller_google_analytics_admin_v1alpha_CalculatedMetric);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListCalculatedMetricsRequest, global::Google.Analytics.Admin.V1Alpha.ListCalculatedMetricsResponse> __Method_ListCalculatedMetrics = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListCalculatedMetricsRequest, global::Google.Analytics.Admin.V1Alpha.ListCalculatedMetricsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListCalculatedMetrics",
        __Marshaller_google_analytics_admin_v1alpha_ListCalculatedMetricsRequest,
        __Marshaller_google_analytics_admin_v1alpha_ListCalculatedMetricsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateCalculatedMetricRequest, global::Google.Analytics.Admin.V1Alpha.CalculatedMetric> __Method_UpdateCalculatedMetric = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateCalculatedMetricRequest, global::Google.Analytics.Admin.V1Alpha.CalculatedMetric>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateCalculatedMetric",
        __Marshaller_google_analytics_admin_v1alpha_UpdateCalculatedMetricRequest,
        __Marshaller_google_analytics_admin_v1alpha_CalculatedMetric);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeleteCalculatedMetricRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteCalculatedMetric = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeleteCalculatedMetricRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteCalculatedMetric",
        __Marshaller_google_analytics_admin_v1alpha_DeleteCalculatedMetricRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateRollupPropertyRequest, global::Google.Analytics.Admin.V1Alpha.CreateRollupPropertyResponse> __Method_CreateRollupProperty = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateRollupPropertyRequest, global::Google.Analytics.Admin.V1Alpha.CreateRollupPropertyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateRollupProperty",
        __Marshaller_google_analytics_admin_v1alpha_CreateRollupPropertyRequest,
        __Marshaller_google_analytics_admin_v1alpha_CreateRollupPropertyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetRollupPropertySourceLinkRequest, global::Google.Analytics.Admin.V1Alpha.RollupPropertySourceLink> __Method_GetRollupPropertySourceLink = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetRollupPropertySourceLinkRequest, global::Google.Analytics.Admin.V1Alpha.RollupPropertySourceLink>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetRollupPropertySourceLink",
        __Marshaller_google_analytics_admin_v1alpha_GetRollupPropertySourceLinkRequest,
        __Marshaller_google_analytics_admin_v1alpha_RollupPropertySourceLink);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListRollupPropertySourceLinksRequest, global::Google.Analytics.Admin.V1Alpha.ListRollupPropertySourceLinksResponse> __Method_ListRollupPropertySourceLinks = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListRollupPropertySourceLinksRequest, global::Google.Analytics.Admin.V1Alpha.ListRollupPropertySourceLinksResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListRollupPropertySourceLinks",
        __Marshaller_google_analytics_admin_v1alpha_ListRollupPropertySourceLinksRequest,
        __Marshaller_google_analytics_admin_v1alpha_ListRollupPropertySourceLinksResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateRollupPropertySourceLinkRequest, global::Google.Analytics.Admin.V1Alpha.RollupPropertySourceLink> __Method_CreateRollupPropertySourceLink = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateRollupPropertySourceLinkRequest, global::Google.Analytics.Admin.V1Alpha.RollupPropertySourceLink>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateRollupPropertySourceLink",
        __Marshaller_google_analytics_admin_v1alpha_CreateRollupPropertySourceLinkRequest,
        __Marshaller_google_analytics_admin_v1alpha_RollupPropertySourceLink);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeleteRollupPropertySourceLinkRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteRollupPropertySourceLink = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeleteRollupPropertySourceLinkRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteRollupPropertySourceLink",
        __Marshaller_google_analytics_admin_v1alpha_DeleteRollupPropertySourceLinkRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.ProvisionSubpropertyRequest, global::Google.Analytics.Admin.V1Alpha.ProvisionSubpropertyResponse> __Method_ProvisionSubproperty = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.ProvisionSubpropertyRequest, global::Google.Analytics.Admin.V1Alpha.ProvisionSubpropertyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ProvisionSubproperty",
        __Marshaller_google_analytics_admin_v1alpha_ProvisionSubpropertyRequest,
        __Marshaller_google_analytics_admin_v1alpha_ProvisionSubpropertyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateSubpropertyEventFilterRequest, global::Google.Analytics.Admin.V1Alpha.SubpropertyEventFilter> __Method_CreateSubpropertyEventFilter = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.CreateSubpropertyEventFilterRequest, global::Google.Analytics.Admin.V1Alpha.SubpropertyEventFilter>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateSubpropertyEventFilter",
        __Marshaller_google_analytics_admin_v1alpha_CreateSubpropertyEventFilterRequest,
        __Marshaller_google_analytics_admin_v1alpha_SubpropertyEventFilter);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetSubpropertyEventFilterRequest, global::Google.Analytics.Admin.V1Alpha.SubpropertyEventFilter> __Method_GetSubpropertyEventFilter = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.GetSubpropertyEventFilterRequest, global::Google.Analytics.Admin.V1Alpha.SubpropertyEventFilter>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSubpropertyEventFilter",
        __Marshaller_google_analytics_admin_v1alpha_GetSubpropertyEventFilterRequest,
        __Marshaller_google_analytics_admin_v1alpha_SubpropertyEventFilter);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListSubpropertyEventFiltersRequest, global::Google.Analytics.Admin.V1Alpha.ListSubpropertyEventFiltersResponse> __Method_ListSubpropertyEventFilters = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.ListSubpropertyEventFiltersRequest, global::Google.Analytics.Admin.V1Alpha.ListSubpropertyEventFiltersResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListSubpropertyEventFilters",
        __Marshaller_google_analytics_admin_v1alpha_ListSubpropertyEventFiltersRequest,
        __Marshaller_google_analytics_admin_v1alpha_ListSubpropertyEventFiltersResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateSubpropertyEventFilterRequest, global::Google.Analytics.Admin.V1Alpha.SubpropertyEventFilter> __Method_UpdateSubpropertyEventFilter = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.UpdateSubpropertyEventFilterRequest, global::Google.Analytics.Admin.V1Alpha.SubpropertyEventFilter>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateSubpropertyEventFilter",
        __Marshaller_google_analytics_admin_v1alpha_UpdateSubpropertyEventFilterRequest,
        __Marshaller_google_analytics_admin_v1alpha_SubpropertyEventFilter);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeleteSubpropertyEventFilterRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteSubpropertyEventFilter = new grpc::Method<global::Google.Analytics.Admin.V1Alpha.DeleteSubpropertyEventFilterRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteSubpropertyEventFilter",
        __Marshaller_google_analytics_admin_v1alpha_DeleteSubpropertyEventFilterRequest,
        __Marshaller_google_protobuf_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Analytics.Admin.V1Alpha.AnalyticsAdminReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of AnalyticsAdminService</summary>
    [grpc::BindServiceMethod(typeof(AnalyticsAdminService), "BindService")]
    public abstract partial class AnalyticsAdminServiceBase
    {
      /// <summary>
      /// Lookup for a single Account.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.Account> GetAccount(global::Google.Analytics.Admin.V1Alpha.GetAccountRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns all accounts accessible by the caller.
      ///
      /// Note that these accounts might not currently have GA properties.
      /// Soft-deleted (ie: "trashed") accounts are excluded by default.
      /// Returns an empty list if no relevant accounts are found.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.ListAccountsResponse> ListAccounts(global::Google.Analytics.Admin.V1Alpha.ListAccountsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Marks target Account as soft-deleted (ie: "trashed") and returns it.
      ///
      /// This API does not have a method to restore soft-deleted accounts.
      /// However, they can be restored using the Trash Can UI.
      ///
      /// If the accounts are not restored before the expiration time, the account
      /// and all child resources (eg: Properties, GoogleAdsLinks, Streams,
      /// AccessBindings) will be permanently purged.
      /// https://support.google.com/analytics/answer/6154772
      ///
      /// Returns an error if the target is not found.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteAccount(global::Google.Analytics.Admin.V1Alpha.DeleteAccountRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates an account.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.Account> UpdateAccount(global::Google.Analytics.Admin.V1Alpha.UpdateAccountRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Requests a ticket for creating an account.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.ProvisionAccountTicketResponse> ProvisionAccountTicket(global::Google.Analytics.Admin.V1Alpha.ProvisionAccountTicketRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns summaries of all accounts accessible by the caller.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.ListAccountSummariesResponse> ListAccountSummaries(global::Google.Analytics.Admin.V1Alpha.ListAccountSummariesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lookup for a single GA Property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.Property> GetProperty(global::Google.Analytics.Admin.V1Alpha.GetPropertyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns child Properties under the specified parent Account.
      ///
      /// Properties will be excluded if the caller does not have access.
      /// Soft-deleted (ie: "trashed") properties are excluded by default.
      /// Returns an empty list if no relevant properties are found.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.ListPropertiesResponse> ListProperties(global::Google.Analytics.Admin.V1Alpha.ListPropertiesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a Google Analytics property with the specified location and
      /// attributes.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.Property> CreateProperty(global::Google.Analytics.Admin.V1Alpha.CreatePropertyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Marks target Property as soft-deleted (ie: "trashed") and returns it.
      ///
      /// This API does not have a method to restore soft-deleted properties.
      /// However, they can be restored using the Trash Can UI.
      ///
      /// If the properties are not restored before the expiration time, the Property
      /// and all child resources (eg: GoogleAdsLinks, Streams, AccessBindings)
      /// will be permanently purged.
      /// https://support.google.com/analytics/answer/6154772
      ///
      /// Returns an error if the target is not found.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.Property> DeleteProperty(global::Google.Analytics.Admin.V1Alpha.DeletePropertyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.Property> UpdateProperty(global::Google.Analytics.Admin.V1Alpha.UpdatePropertyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a FirebaseLink.
      ///
      /// Properties can have at most one FirebaseLink.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.FirebaseLink> CreateFirebaseLink(global::Google.Analytics.Admin.V1Alpha.CreateFirebaseLinkRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a FirebaseLink on a property
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteFirebaseLink(global::Google.Analytics.Admin.V1Alpha.DeleteFirebaseLinkRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists FirebaseLinks on a property.
      /// Properties can have at most one FirebaseLink.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.ListFirebaseLinksResponse> ListFirebaseLinks(global::Google.Analytics.Admin.V1Alpha.ListFirebaseLinksRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns the Site Tag for the specified web stream.
      /// Site Tags are immutable singletons.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.GlobalSiteTag> GetGlobalSiteTag(global::Google.Analytics.Admin.V1Alpha.GetGlobalSiteTagRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a GoogleAdsLink.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.GoogleAdsLink> CreateGoogleAdsLink(global::Google.Analytics.Admin.V1Alpha.CreateGoogleAdsLinkRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a GoogleAdsLink on a property
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.GoogleAdsLink> UpdateGoogleAdsLink(global::Google.Analytics.Admin.V1Alpha.UpdateGoogleAdsLinkRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a GoogleAdsLink on a property
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteGoogleAdsLink(global::Google.Analytics.Admin.V1Alpha.DeleteGoogleAdsLinkRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists GoogleAdsLinks on a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.ListGoogleAdsLinksResponse> ListGoogleAdsLinks(global::Google.Analytics.Admin.V1Alpha.ListGoogleAdsLinksRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get data sharing settings on an account.
      /// Data sharing settings are singletons.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.DataSharingSettings> GetDataSharingSettings(global::Google.Analytics.Admin.V1Alpha.GetDataSharingSettingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lookup for a single MeasurementProtocolSecret.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.MeasurementProtocolSecret> GetMeasurementProtocolSecret(global::Google.Analytics.Admin.V1Alpha.GetMeasurementProtocolSecretRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns child MeasurementProtocolSecrets under the specified parent
      /// Property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.ListMeasurementProtocolSecretsResponse> ListMeasurementProtocolSecrets(global::Google.Analytics.Admin.V1Alpha.ListMeasurementProtocolSecretsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a measurement protocol secret.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.MeasurementProtocolSecret> CreateMeasurementProtocolSecret(global::Google.Analytics.Admin.V1Alpha.CreateMeasurementProtocolSecretRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes target MeasurementProtocolSecret.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteMeasurementProtocolSecret(global::Google.Analytics.Admin.V1Alpha.DeleteMeasurementProtocolSecretRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a measurement protocol secret.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.MeasurementProtocolSecret> UpdateMeasurementProtocolSecret(global::Google.Analytics.Admin.V1Alpha.UpdateMeasurementProtocolSecretRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Acknowledges the terms of user data collection for the specified property.
      ///
      /// This acknowledgement must be completed (either in the Google Analytics UI
      /// or through this API) before MeasurementProtocolSecret resources may be
      /// created.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.AcknowledgeUserDataCollectionResponse> AcknowledgeUserDataCollection(global::Google.Analytics.Admin.V1Alpha.AcknowledgeUserDataCollectionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Looks up a single SKAdNetworkConversionValueSchema.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.SKAdNetworkConversionValueSchema> GetSKAdNetworkConversionValueSchema(global::Google.Analytics.Admin.V1Alpha.GetSKAdNetworkConversionValueSchemaRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a SKAdNetworkConversionValueSchema.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.SKAdNetworkConversionValueSchema> CreateSKAdNetworkConversionValueSchema(global::Google.Analytics.Admin.V1Alpha.CreateSKAdNetworkConversionValueSchemaRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes target SKAdNetworkConversionValueSchema.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteSKAdNetworkConversionValueSchema(global::Google.Analytics.Admin.V1Alpha.DeleteSKAdNetworkConversionValueSchemaRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a SKAdNetworkConversionValueSchema.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.SKAdNetworkConversionValueSchema> UpdateSKAdNetworkConversionValueSchema(global::Google.Analytics.Admin.V1Alpha.UpdateSKAdNetworkConversionValueSchemaRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists SKAdNetworkConversionValueSchema on a stream.
      /// Properties can have at most one SKAdNetworkConversionValueSchema.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.ListSKAdNetworkConversionValueSchemasResponse> ListSKAdNetworkConversionValueSchemas(global::Google.Analytics.Admin.V1Alpha.ListSKAdNetworkConversionValueSchemasRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Searches through all changes to an account or its children given the
      /// specified set of filters.
      ///
      /// Only returns the subset of changes supported by the API. The UI may return
      /// additional changes.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.SearchChangeHistoryEventsResponse> SearchChangeHistoryEvents(global::Google.Analytics.Admin.V1Alpha.SearchChangeHistoryEventsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lookup for Google Signals settings for a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.GoogleSignalsSettings> GetGoogleSignalsSettings(global::Google.Analytics.Admin.V1Alpha.GetGoogleSignalsSettingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates Google Signals settings for a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.GoogleSignalsSettings> UpdateGoogleSignalsSettings(global::Google.Analytics.Admin.V1Alpha.UpdateGoogleSignalsSettingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deprecated: Use `CreateKeyEvent` instead.
      /// Creates a conversion event with the specified attributes.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.ConversionEvent> CreateConversionEvent(global::Google.Analytics.Admin.V1Alpha.CreateConversionEventRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deprecated: Use `UpdateKeyEvent` instead.
      /// Updates a conversion event with the specified attributes.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.ConversionEvent> UpdateConversionEvent(global::Google.Analytics.Admin.V1Alpha.UpdateConversionEventRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deprecated: Use `GetKeyEvent` instead.
      /// Retrieve a single conversion event.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.ConversionEvent> GetConversionEvent(global::Google.Analytics.Admin.V1Alpha.GetConversionEventRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deprecated: Use `DeleteKeyEvent` instead.
      /// Deletes a conversion event in a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteConversionEvent(global::Google.Analytics.Admin.V1Alpha.DeleteConversionEventRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deprecated: Use `ListKeyEvents` instead.
      /// Returns a list of conversion events in the specified parent property.
      ///
      /// Returns an empty list if no conversion events are found.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.ListConversionEventsResponse> ListConversionEvents(global::Google.Analytics.Admin.V1Alpha.ListConversionEventsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a Key Event.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.KeyEvent> CreateKeyEvent(global::Google.Analytics.Admin.V1Alpha.CreateKeyEventRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a Key Event.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.KeyEvent> UpdateKeyEvent(global::Google.Analytics.Admin.V1Alpha.UpdateKeyEventRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieve a single Key Event.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.KeyEvent> GetKeyEvent(global::Google.Analytics.Admin.V1Alpha.GetKeyEventRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a Key Event.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteKeyEvent(global::Google.Analytics.Admin.V1Alpha.DeleteKeyEventRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns a list of Key Events in the specified parent property.
      /// Returns an empty list if no Key Events are found.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.ListKeyEventsResponse> ListKeyEvents(global::Google.Analytics.Admin.V1Alpha.ListKeyEventsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Look up a single DisplayVideo360AdvertiserLink
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLink> GetDisplayVideo360AdvertiserLink(global::Google.Analytics.Admin.V1Alpha.GetDisplayVideo360AdvertiserLinkRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists all DisplayVideo360AdvertiserLinks on a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.ListDisplayVideo360AdvertiserLinksResponse> ListDisplayVideo360AdvertiserLinks(global::Google.Analytics.Admin.V1Alpha.ListDisplayVideo360AdvertiserLinksRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a DisplayVideo360AdvertiserLink.
      /// This can only be utilized by users who have proper authorization both on
      /// the Google Analytics property and on the Display &amp; Video 360 advertiser.
      /// Users who do not have access to the Display &amp; Video 360 advertiser should
      /// instead seek to create a DisplayVideo360LinkProposal.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLink> CreateDisplayVideo360AdvertiserLink(global::Google.Analytics.Admin.V1Alpha.CreateDisplayVideo360AdvertiserLinkRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a DisplayVideo360AdvertiserLink on a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteDisplayVideo360AdvertiserLink(global::Google.Analytics.Admin.V1Alpha.DeleteDisplayVideo360AdvertiserLinkRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a DisplayVideo360AdvertiserLink on a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLink> UpdateDisplayVideo360AdvertiserLink(global::Google.Analytics.Admin.V1Alpha.UpdateDisplayVideo360AdvertiserLinkRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lookup for a single DisplayVideo360AdvertiserLinkProposal.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLinkProposal> GetDisplayVideo360AdvertiserLinkProposal(global::Google.Analytics.Admin.V1Alpha.GetDisplayVideo360AdvertiserLinkProposalRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists DisplayVideo360AdvertiserLinkProposals on a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.ListDisplayVideo360AdvertiserLinkProposalsResponse> ListDisplayVideo360AdvertiserLinkProposals(global::Google.Analytics.Admin.V1Alpha.ListDisplayVideo360AdvertiserLinkProposalsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a DisplayVideo360AdvertiserLinkProposal.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLinkProposal> CreateDisplayVideo360AdvertiserLinkProposal(global::Google.Analytics.Admin.V1Alpha.CreateDisplayVideo360AdvertiserLinkProposalRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a DisplayVideo360AdvertiserLinkProposal on a property.
      /// This can only be used on cancelled proposals.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteDisplayVideo360AdvertiserLinkProposal(global::Google.Analytics.Admin.V1Alpha.DeleteDisplayVideo360AdvertiserLinkProposalRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Approves a DisplayVideo360AdvertiserLinkProposal.
      /// The DisplayVideo360AdvertiserLinkProposal will be deleted and a new
      /// DisplayVideo360AdvertiserLink will be created.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.ApproveDisplayVideo360AdvertiserLinkProposalResponse> ApproveDisplayVideo360AdvertiserLinkProposal(global::Google.Analytics.Admin.V1Alpha.ApproveDisplayVideo360AdvertiserLinkProposalRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Cancels a DisplayVideo360AdvertiserLinkProposal.
      /// Cancelling can mean either:
      /// - Declining a proposal initiated from Display &amp; Video 360
      /// - Withdrawing a proposal initiated from Google Analytics
      /// After being cancelled, a proposal will eventually be deleted automatically.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLinkProposal> CancelDisplayVideo360AdvertiserLinkProposal(global::Google.Analytics.Admin.V1Alpha.CancelDisplayVideo360AdvertiserLinkProposalRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a CustomDimension.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.CustomDimension> CreateCustomDimension(global::Google.Analytics.Admin.V1Alpha.CreateCustomDimensionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a CustomDimension on a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.CustomDimension> UpdateCustomDimension(global::Google.Analytics.Admin.V1Alpha.UpdateCustomDimensionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists CustomDimensions on a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.ListCustomDimensionsResponse> ListCustomDimensions(global::Google.Analytics.Admin.V1Alpha.ListCustomDimensionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Archives a CustomDimension on a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> ArchiveCustomDimension(global::Google.Analytics.Admin.V1Alpha.ArchiveCustomDimensionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lookup for a single CustomDimension.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.CustomDimension> GetCustomDimension(global::Google.Analytics.Admin.V1Alpha.GetCustomDimensionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a CustomMetric.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.CustomMetric> CreateCustomMetric(global::Google.Analytics.Admin.V1Alpha.CreateCustomMetricRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a CustomMetric on a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.CustomMetric> UpdateCustomMetric(global::Google.Analytics.Admin.V1Alpha.UpdateCustomMetricRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists CustomMetrics on a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.ListCustomMetricsResponse> ListCustomMetrics(global::Google.Analytics.Admin.V1Alpha.ListCustomMetricsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Archives a CustomMetric on a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> ArchiveCustomMetric(global::Google.Analytics.Admin.V1Alpha.ArchiveCustomMetricRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lookup for a single CustomMetric.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.CustomMetric> GetCustomMetric(global::Google.Analytics.Admin.V1Alpha.GetCustomMetricRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns the singleton data retention settings for this property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.DataRetentionSettings> GetDataRetentionSettings(global::Google.Analytics.Admin.V1Alpha.GetDataRetentionSettingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the singleton data retention settings for this property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.DataRetentionSettings> UpdateDataRetentionSettings(global::Google.Analytics.Admin.V1Alpha.UpdateDataRetentionSettingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a DataStream.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.DataStream> CreateDataStream(global::Google.Analytics.Admin.V1Alpha.CreateDataStreamRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a DataStream on a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteDataStream(global::Google.Analytics.Admin.V1Alpha.DeleteDataStreamRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a DataStream on a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.DataStream> UpdateDataStream(global::Google.Analytics.Admin.V1Alpha.UpdateDataStreamRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists DataStreams on a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.ListDataStreamsResponse> ListDataStreams(global::Google.Analytics.Admin.V1Alpha.ListDataStreamsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lookup for a single DataStream.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.DataStream> GetDataStream(global::Google.Analytics.Admin.V1Alpha.GetDataStreamRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lookup for a single Audience.
      /// Audiences created before 2020 may not be supported.
      /// Default audiences will not show filter definitions.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.Audience> GetAudience(global::Google.Analytics.Admin.V1Alpha.GetAudienceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists Audiences on a property.
      /// Audiences created before 2020 may not be supported.
      /// Default audiences will not show filter definitions.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.ListAudiencesResponse> ListAudiences(global::Google.Analytics.Admin.V1Alpha.ListAudiencesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates an Audience.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.Audience> CreateAudience(global::Google.Analytics.Admin.V1Alpha.CreateAudienceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates an Audience on a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.Audience> UpdateAudience(global::Google.Analytics.Admin.V1Alpha.UpdateAudienceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Archives an Audience on a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> ArchiveAudience(global::Google.Analytics.Admin.V1Alpha.ArchiveAudienceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Look up a single SearchAds360Link
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.SearchAds360Link> GetSearchAds360Link(global::Google.Analytics.Admin.V1Alpha.GetSearchAds360LinkRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists all SearchAds360Links on a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.ListSearchAds360LinksResponse> ListSearchAds360Links(global::Google.Analytics.Admin.V1Alpha.ListSearchAds360LinksRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a SearchAds360Link.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.SearchAds360Link> CreateSearchAds360Link(global::Google.Analytics.Admin.V1Alpha.CreateSearchAds360LinkRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a SearchAds360Link on a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteSearchAds360Link(global::Google.Analytics.Admin.V1Alpha.DeleteSearchAds360LinkRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a SearchAds360Link on a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.SearchAds360Link> UpdateSearchAds360Link(global::Google.Analytics.Admin.V1Alpha.UpdateSearchAds360LinkRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lookup for a AttributionSettings singleton.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.AttributionSettings> GetAttributionSettings(global::Google.Analytics.Admin.V1Alpha.GetAttributionSettingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates attribution settings on a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.AttributionSettings> UpdateAttributionSettings(global::Google.Analytics.Admin.V1Alpha.UpdateAttributionSettingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns a customized report of data access records. The report provides
      /// records of each time a user reads Google Analytics reporting data. Access
      /// records are retained for up to 2 years.
      ///
      /// Data Access Reports can be requested for a property. Reports may be
      /// requested for any property, but dimensions that aren't related to quota can
      /// only be requested on Google Analytics 360 properties. This method is only
      /// available to Administrators.
      ///
      /// These data access records include GA UI Reporting, GA UI Explorations,
      /// GA Data API, and other products like Firebase &amp; Admob that can retrieve
      /// data from Google Analytics through a linkage. These records don't include
      /// property configuration changes like adding a stream or changing a
      /// property's time zone. For configuration change history, see
      /// [searchChangeHistoryEvents](https://developers.google.com/analytics/devguides/config/admin/v1/rest/v1alpha/accounts/searchChangeHistoryEvents).
      ///
      /// To give your feedback on this API, complete the [Google Analytics Access
      /// Reports
      /// feedback](https://docs.google.com/forms/d/e/1FAIpQLSdmEBUrMzAEdiEKk5TV5dEHvDUZDRlgWYdQdAeSdtR4hVjEhw/viewform)
      /// form.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.RunAccessReportResponse> RunAccessReport(global::Google.Analytics.Admin.V1Alpha.RunAccessReportRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates an access binding on an account or property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.AccessBinding> CreateAccessBinding(global::Google.Analytics.Admin.V1Alpha.CreateAccessBindingRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets information about an access binding.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.AccessBinding> GetAccessBinding(global::Google.Analytics.Admin.V1Alpha.GetAccessBindingRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates an access binding on an account or property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.AccessBinding> UpdateAccessBinding(global::Google.Analytics.Admin.V1Alpha.UpdateAccessBindingRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes an access binding on an account or property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteAccessBinding(global::Google.Analytics.Admin.V1Alpha.DeleteAccessBindingRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists all access bindings on an account or property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.ListAccessBindingsResponse> ListAccessBindings(global::Google.Analytics.Admin.V1Alpha.ListAccessBindingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates information about multiple access bindings to an account or
      /// property.
      ///
      /// This method is transactional. If any AccessBinding cannot be created, none
      /// of the AccessBindings will be created.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.BatchCreateAccessBindingsResponse> BatchCreateAccessBindings(global::Google.Analytics.Admin.V1Alpha.BatchCreateAccessBindingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets information about multiple access bindings to an account or property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.BatchGetAccessBindingsResponse> BatchGetAccessBindings(global::Google.Analytics.Admin.V1Alpha.BatchGetAccessBindingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates information about multiple access bindings to an account or
      /// property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.BatchUpdateAccessBindingsResponse> BatchUpdateAccessBindings(global::Google.Analytics.Admin.V1Alpha.BatchUpdateAccessBindingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes information about multiple users' links to an account or property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> BatchDeleteAccessBindings(global::Google.Analytics.Admin.V1Alpha.BatchDeleteAccessBindingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lookup for a single ExpandedDataSet.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.ExpandedDataSet> GetExpandedDataSet(global::Google.Analytics.Admin.V1Alpha.GetExpandedDataSetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists ExpandedDataSets on a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.ListExpandedDataSetsResponse> ListExpandedDataSets(global::Google.Analytics.Admin.V1Alpha.ListExpandedDataSetsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a ExpandedDataSet.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.ExpandedDataSet> CreateExpandedDataSet(global::Google.Analytics.Admin.V1Alpha.CreateExpandedDataSetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a ExpandedDataSet on a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.ExpandedDataSet> UpdateExpandedDataSet(global::Google.Analytics.Admin.V1Alpha.UpdateExpandedDataSetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a ExpandedDataSet on a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteExpandedDataSet(global::Google.Analytics.Admin.V1Alpha.DeleteExpandedDataSetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lookup for a single ChannelGroup.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.ChannelGroup> GetChannelGroup(global::Google.Analytics.Admin.V1Alpha.GetChannelGroupRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists ChannelGroups on a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.ListChannelGroupsResponse> ListChannelGroups(global::Google.Analytics.Admin.V1Alpha.ListChannelGroupsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a ChannelGroup.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.ChannelGroup> CreateChannelGroup(global::Google.Analytics.Admin.V1Alpha.CreateChannelGroupRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a ChannelGroup.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.ChannelGroup> UpdateChannelGroup(global::Google.Analytics.Admin.V1Alpha.UpdateChannelGroupRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a ChannelGroup on a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteChannelGroup(global::Google.Analytics.Admin.V1Alpha.DeleteChannelGroupRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Sets the opt out status for the automated GA4 setup process for a UA
      /// property.
      /// Note: this has no effect on GA4 property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.SetAutomatedGa4ConfigurationOptOutResponse> SetAutomatedGa4ConfigurationOptOut(global::Google.Analytics.Admin.V1Alpha.SetAutomatedGa4ConfigurationOptOutRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Fetches the opt out status for the automated GA4 setup process for a UA
      /// property.
      /// Note: this has no effect on GA4 property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.FetchAutomatedGa4ConfigurationOptOutResponse> FetchAutomatedGa4ConfigurationOptOut(global::Google.Analytics.Admin.V1Alpha.FetchAutomatedGa4ConfigurationOptOutRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a BigQueryLink.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.BigQueryLink> CreateBigQueryLink(global::Google.Analytics.Admin.V1Alpha.CreateBigQueryLinkRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lookup for a single BigQuery Link.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.BigQueryLink> GetBigQueryLink(global::Google.Analytics.Admin.V1Alpha.GetBigQueryLinkRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists BigQuery Links on a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.ListBigQueryLinksResponse> ListBigQueryLinks(global::Google.Analytics.Admin.V1Alpha.ListBigQueryLinksRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a BigQueryLink on a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteBigQueryLink(global::Google.Analytics.Admin.V1Alpha.DeleteBigQueryLinkRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a BigQueryLink.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.BigQueryLink> UpdateBigQueryLink(global::Google.Analytics.Admin.V1Alpha.UpdateBigQueryLinkRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns the enhanced measurement settings for this data stream.
      /// Note that the stream must enable enhanced measurement for these settings to
      /// take effect.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.EnhancedMeasurementSettings> GetEnhancedMeasurementSettings(global::Google.Analytics.Admin.V1Alpha.GetEnhancedMeasurementSettingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the enhanced measurement settings for this data stream.
      /// Note that the stream must enable enhanced measurement for these settings to
      /// take effect.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.EnhancedMeasurementSettings> UpdateEnhancedMeasurementSettings(global::Google.Analytics.Admin.V1Alpha.UpdateEnhancedMeasurementSettingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a connected site tag for a Universal Analytics property. You can
      /// create a maximum of 20 connected site tags per property.
      /// Note: This API cannot be used on GA4 properties.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.CreateConnectedSiteTagResponse> CreateConnectedSiteTag(global::Google.Analytics.Admin.V1Alpha.CreateConnectedSiteTagRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a connected site tag for a Universal Analytics property.
      /// Note: this has no effect on GA4 properties.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteConnectedSiteTag(global::Google.Analytics.Admin.V1Alpha.DeleteConnectedSiteTagRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists the connected site tags for a Universal Analytics property. A maximum
      /// of 20 connected site tags will be returned. Note: this has no effect on GA4
      /// property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.ListConnectedSiteTagsResponse> ListConnectedSiteTags(global::Google.Analytics.Admin.V1Alpha.ListConnectedSiteTagsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Given a specified UA property, looks up the GA4 property connected to it.
      /// Note: this cannot be used with GA4 properties.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.FetchConnectedGa4PropertyResponse> FetchConnectedGa4Property(global::Google.Analytics.Admin.V1Alpha.FetchConnectedGa4PropertyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Looks up a single AdSenseLink.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.AdSenseLink> GetAdSenseLink(global::Google.Analytics.Admin.V1Alpha.GetAdSenseLinkRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates an AdSenseLink.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.AdSenseLink> CreateAdSenseLink(global::Google.Analytics.Admin.V1Alpha.CreateAdSenseLinkRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes an AdSenseLink.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteAdSenseLink(global::Google.Analytics.Admin.V1Alpha.DeleteAdSenseLinkRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists AdSenseLinks on a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.ListAdSenseLinksResponse> ListAdSenseLinks(global::Google.Analytics.Admin.V1Alpha.ListAdSenseLinksRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lookup for a single EventCreateRule.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.EventCreateRule> GetEventCreateRule(global::Google.Analytics.Admin.V1Alpha.GetEventCreateRuleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists EventCreateRules on a web data stream.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.ListEventCreateRulesResponse> ListEventCreateRules(global::Google.Analytics.Admin.V1Alpha.ListEventCreateRulesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates an EventCreateRule.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.EventCreateRule> CreateEventCreateRule(global::Google.Analytics.Admin.V1Alpha.CreateEventCreateRuleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates an EventCreateRule.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.EventCreateRule> UpdateEventCreateRule(global::Google.Analytics.Admin.V1Alpha.UpdateEventCreateRuleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes an EventCreateRule.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteEventCreateRule(global::Google.Analytics.Admin.V1Alpha.DeleteEventCreateRuleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lookup for a single EventEditRule.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.EventEditRule> GetEventEditRule(global::Google.Analytics.Admin.V1Alpha.GetEventEditRuleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists EventEditRules on a web data stream.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.ListEventEditRulesResponse> ListEventEditRules(global::Google.Analytics.Admin.V1Alpha.ListEventEditRulesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates an EventEditRule.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.EventEditRule> CreateEventEditRule(global::Google.Analytics.Admin.V1Alpha.CreateEventEditRuleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates an EventEditRule.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.EventEditRule> UpdateEventEditRule(global::Google.Analytics.Admin.V1Alpha.UpdateEventEditRuleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes an EventEditRule.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteEventEditRule(global::Google.Analytics.Admin.V1Alpha.DeleteEventEditRuleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Changes the processing order of event edit rules on the specified stream.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> ReorderEventEditRules(global::Google.Analytics.Admin.V1Alpha.ReorderEventEditRulesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a DataRedactionSettings on a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.DataRedactionSettings> UpdateDataRedactionSettings(global::Google.Analytics.Admin.V1Alpha.UpdateDataRedactionSettingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lookup for a single DataRedactionSettings.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.DataRedactionSettings> GetDataRedactionSettings(global::Google.Analytics.Admin.V1Alpha.GetDataRedactionSettingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lookup for a single CalculatedMetric.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.CalculatedMetric> GetCalculatedMetric(global::Google.Analytics.Admin.V1Alpha.GetCalculatedMetricRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a CalculatedMetric.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.CalculatedMetric> CreateCalculatedMetric(global::Google.Analytics.Admin.V1Alpha.CreateCalculatedMetricRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists CalculatedMetrics on a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.ListCalculatedMetricsResponse> ListCalculatedMetrics(global::Google.Analytics.Admin.V1Alpha.ListCalculatedMetricsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a CalculatedMetric on a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.CalculatedMetric> UpdateCalculatedMetric(global::Google.Analytics.Admin.V1Alpha.UpdateCalculatedMetricRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a CalculatedMetric on a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteCalculatedMetric(global::Google.Analytics.Admin.V1Alpha.DeleteCalculatedMetricRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Create a roll-up property and all roll-up property source links.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.CreateRollupPropertyResponse> CreateRollupProperty(global::Google.Analytics.Admin.V1Alpha.CreateRollupPropertyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lookup for a single roll-up property source Link.
      /// Only roll-up properties can have source links, so this method will throw an
      /// error if used on other types of properties.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.RollupPropertySourceLink> GetRollupPropertySourceLink(global::Google.Analytics.Admin.V1Alpha.GetRollupPropertySourceLinkRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists roll-up property source Links on a property.
      /// Only roll-up properties can have source links, so this method will throw an
      /// error if used on other types of properties.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.ListRollupPropertySourceLinksResponse> ListRollupPropertySourceLinks(global::Google.Analytics.Admin.V1Alpha.ListRollupPropertySourceLinksRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a roll-up property source link.
      /// Only roll-up properties can have source links, so this method will throw an
      /// error if used on other types of properties.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.RollupPropertySourceLink> CreateRollupPropertySourceLink(global::Google.Analytics.Admin.V1Alpha.CreateRollupPropertySourceLinkRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a roll-up property source link.
      /// Only roll-up properties can have source links, so this method will throw an
      /// error if used on other types of properties.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteRollupPropertySourceLink(global::Google.Analytics.Admin.V1Alpha.DeleteRollupPropertySourceLinkRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Create a subproperty and a subproperty event filter that applies to the
      /// created subproperty.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.ProvisionSubpropertyResponse> ProvisionSubproperty(global::Google.Analytics.Admin.V1Alpha.ProvisionSubpropertyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a subproperty Event Filter.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.SubpropertyEventFilter> CreateSubpropertyEventFilter(global::Google.Analytics.Admin.V1Alpha.CreateSubpropertyEventFilterRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lookup for a single subproperty Event Filter.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.SubpropertyEventFilter> GetSubpropertyEventFilter(global::Google.Analytics.Admin.V1Alpha.GetSubpropertyEventFilterRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// List all subproperty Event Filters on a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.ListSubpropertyEventFiltersResponse> ListSubpropertyEventFilters(global::Google.Analytics.Admin.V1Alpha.ListSubpropertyEventFiltersRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a subproperty Event Filter.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Alpha.SubpropertyEventFilter> UpdateSubpropertyEventFilter(global::Google.Analytics.Admin.V1Alpha.UpdateSubpropertyEventFilterRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a subproperty event filter.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteSubpropertyEventFilter(global::Google.Analytics.Admin.V1Alpha.DeleteSubpropertyEventFilterRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for AnalyticsAdminService</summary>
    public partial class AnalyticsAdminServiceClient : grpc::ClientBase<AnalyticsAdminServiceClient>
    {
      /// <summary>Creates a new client for AnalyticsAdminService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public AnalyticsAdminServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for AnalyticsAdminService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public AnalyticsAdminServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected AnalyticsAdminServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected AnalyticsAdminServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Lookup for a single Account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.Account GetAccount(global::Google.Analytics.Admin.V1Alpha.GetAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAccount(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single Account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.Account GetAccount(global::Google.Analytics.Admin.V1Alpha.GetAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAccount, null, options, request);
      }
      /// <summary>
      /// Lookup for a single Account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.Account> GetAccountAsync(global::Google.Analytics.Admin.V1Alpha.GetAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAccountAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single Account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.Account> GetAccountAsync(global::Google.Analytics.Admin.V1Alpha.GetAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAccount, null, options, request);
      }
      /// <summary>
      /// Returns all accounts accessible by the caller.
      ///
      /// Note that these accounts might not currently have GA properties.
      /// Soft-deleted (ie: "trashed") accounts are excluded by default.
      /// Returns an empty list if no relevant accounts are found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListAccountsResponse ListAccounts(global::Google.Analytics.Admin.V1Alpha.ListAccountsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAccounts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns all accounts accessible by the caller.
      ///
      /// Note that these accounts might not currently have GA properties.
      /// Soft-deleted (ie: "trashed") accounts are excluded by default.
      /// Returns an empty list if no relevant accounts are found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListAccountsResponse ListAccounts(global::Google.Analytics.Admin.V1Alpha.ListAccountsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListAccounts, null, options, request);
      }
      /// <summary>
      /// Returns all accounts accessible by the caller.
      ///
      /// Note that these accounts might not currently have GA properties.
      /// Soft-deleted (ie: "trashed") accounts are excluded by default.
      /// Returns an empty list if no relevant accounts are found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListAccountsResponse> ListAccountsAsync(global::Google.Analytics.Admin.V1Alpha.ListAccountsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAccountsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns all accounts accessible by the caller.
      ///
      /// Note that these accounts might not currently have GA properties.
      /// Soft-deleted (ie: "trashed") accounts are excluded by default.
      /// Returns an empty list if no relevant accounts are found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListAccountsResponse> ListAccountsAsync(global::Google.Analytics.Admin.V1Alpha.ListAccountsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListAccounts, null, options, request);
      }
      /// <summary>
      /// Marks target Account as soft-deleted (ie: "trashed") and returns it.
      ///
      /// This API does not have a method to restore soft-deleted accounts.
      /// However, they can be restored using the Trash Can UI.
      ///
      /// If the accounts are not restored before the expiration time, the account
      /// and all child resources (eg: Properties, GoogleAdsLinks, Streams,
      /// AccessBindings) will be permanently purged.
      /// https://support.google.com/analytics/answer/6154772
      ///
      /// Returns an error if the target is not found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteAccount(global::Google.Analytics.Admin.V1Alpha.DeleteAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAccount(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Marks target Account as soft-deleted (ie: "trashed") and returns it.
      ///
      /// This API does not have a method to restore soft-deleted accounts.
      /// However, they can be restored using the Trash Can UI.
      ///
      /// If the accounts are not restored before the expiration time, the account
      /// and all child resources (eg: Properties, GoogleAdsLinks, Streams,
      /// AccessBindings) will be permanently purged.
      /// https://support.google.com/analytics/answer/6154772
      ///
      /// Returns an error if the target is not found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteAccount(global::Google.Analytics.Admin.V1Alpha.DeleteAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteAccount, null, options, request);
      }
      /// <summary>
      /// Marks target Account as soft-deleted (ie: "trashed") and returns it.
      ///
      /// This API does not have a method to restore soft-deleted accounts.
      /// However, they can be restored using the Trash Can UI.
      ///
      /// If the accounts are not restored before the expiration time, the account
      /// and all child resources (eg: Properties, GoogleAdsLinks, Streams,
      /// AccessBindings) will be permanently purged.
      /// https://support.google.com/analytics/answer/6154772
      ///
      /// Returns an error if the target is not found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteAccountAsync(global::Google.Analytics.Admin.V1Alpha.DeleteAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAccountAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Marks target Account as soft-deleted (ie: "trashed") and returns it.
      ///
      /// This API does not have a method to restore soft-deleted accounts.
      /// However, they can be restored using the Trash Can UI.
      ///
      /// If the accounts are not restored before the expiration time, the account
      /// and all child resources (eg: Properties, GoogleAdsLinks, Streams,
      /// AccessBindings) will be permanently purged.
      /// https://support.google.com/analytics/answer/6154772
      ///
      /// Returns an error if the target is not found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteAccountAsync(global::Google.Analytics.Admin.V1Alpha.DeleteAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteAccount, null, options, request);
      }
      /// <summary>
      /// Updates an account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.Account UpdateAccount(global::Google.Analytics.Admin.V1Alpha.UpdateAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAccount(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.Account UpdateAccount(global::Google.Analytics.Admin.V1Alpha.UpdateAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateAccount, null, options, request);
      }
      /// <summary>
      /// Updates an account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.Account> UpdateAccountAsync(global::Google.Analytics.Admin.V1Alpha.UpdateAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAccountAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.Account> UpdateAccountAsync(global::Google.Analytics.Admin.V1Alpha.UpdateAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateAccount, null, options, request);
      }
      /// <summary>
      /// Requests a ticket for creating an account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ProvisionAccountTicketResponse ProvisionAccountTicket(global::Google.Analytics.Admin.V1Alpha.ProvisionAccountTicketRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ProvisionAccountTicket(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Requests a ticket for creating an account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ProvisionAccountTicketResponse ProvisionAccountTicket(global::Google.Analytics.Admin.V1Alpha.ProvisionAccountTicketRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ProvisionAccountTicket, null, options, request);
      }
      /// <summary>
      /// Requests a ticket for creating an account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ProvisionAccountTicketResponse> ProvisionAccountTicketAsync(global::Google.Analytics.Admin.V1Alpha.ProvisionAccountTicketRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ProvisionAccountTicketAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Requests a ticket for creating an account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ProvisionAccountTicketResponse> ProvisionAccountTicketAsync(global::Google.Analytics.Admin.V1Alpha.ProvisionAccountTicketRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ProvisionAccountTicket, null, options, request);
      }
      /// <summary>
      /// Returns summaries of all accounts accessible by the caller.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListAccountSummariesResponse ListAccountSummaries(global::Google.Analytics.Admin.V1Alpha.ListAccountSummariesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAccountSummaries(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns summaries of all accounts accessible by the caller.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListAccountSummariesResponse ListAccountSummaries(global::Google.Analytics.Admin.V1Alpha.ListAccountSummariesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListAccountSummaries, null, options, request);
      }
      /// <summary>
      /// Returns summaries of all accounts accessible by the caller.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListAccountSummariesResponse> ListAccountSummariesAsync(global::Google.Analytics.Admin.V1Alpha.ListAccountSummariesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAccountSummariesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns summaries of all accounts accessible by the caller.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListAccountSummariesResponse> ListAccountSummariesAsync(global::Google.Analytics.Admin.V1Alpha.ListAccountSummariesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListAccountSummaries, null, options, request);
      }
      /// <summary>
      /// Lookup for a single GA Property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.Property GetProperty(global::Google.Analytics.Admin.V1Alpha.GetPropertyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProperty(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single GA Property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.Property GetProperty(global::Google.Analytics.Admin.V1Alpha.GetPropertyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetProperty, null, options, request);
      }
      /// <summary>
      /// Lookup for a single GA Property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.Property> GetPropertyAsync(global::Google.Analytics.Admin.V1Alpha.GetPropertyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPropertyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single GA Property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.Property> GetPropertyAsync(global::Google.Analytics.Admin.V1Alpha.GetPropertyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetProperty, null, options, request);
      }
      /// <summary>
      /// Returns child Properties under the specified parent Account.
      ///
      /// Properties will be excluded if the caller does not have access.
      /// Soft-deleted (ie: "trashed") properties are excluded by default.
      /// Returns an empty list if no relevant properties are found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListPropertiesResponse ListProperties(global::Google.Analytics.Admin.V1Alpha.ListPropertiesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProperties(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns child Properties under the specified parent Account.
      ///
      /// Properties will be excluded if the caller does not have access.
      /// Soft-deleted (ie: "trashed") properties are excluded by default.
      /// Returns an empty list if no relevant properties are found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListPropertiesResponse ListProperties(global::Google.Analytics.Admin.V1Alpha.ListPropertiesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListProperties, null, options, request);
      }
      /// <summary>
      /// Returns child Properties under the specified parent Account.
      ///
      /// Properties will be excluded if the caller does not have access.
      /// Soft-deleted (ie: "trashed") properties are excluded by default.
      /// Returns an empty list if no relevant properties are found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListPropertiesResponse> ListPropertiesAsync(global::Google.Analytics.Admin.V1Alpha.ListPropertiesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListPropertiesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns child Properties under the specified parent Account.
      ///
      /// Properties will be excluded if the caller does not have access.
      /// Soft-deleted (ie: "trashed") properties are excluded by default.
      /// Returns an empty list if no relevant properties are found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListPropertiesResponse> ListPropertiesAsync(global::Google.Analytics.Admin.V1Alpha.ListPropertiesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListProperties, null, options, request);
      }
      /// <summary>
      /// Creates a Google Analytics property with the specified location and
      /// attributes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.Property CreateProperty(global::Google.Analytics.Admin.V1Alpha.CreatePropertyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateProperty(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a Google Analytics property with the specified location and
      /// attributes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.Property CreateProperty(global::Google.Analytics.Admin.V1Alpha.CreatePropertyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateProperty, null, options, request);
      }
      /// <summary>
      /// Creates a Google Analytics property with the specified location and
      /// attributes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.Property> CreatePropertyAsync(global::Google.Analytics.Admin.V1Alpha.CreatePropertyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreatePropertyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a Google Analytics property with the specified location and
      /// attributes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.Property> CreatePropertyAsync(global::Google.Analytics.Admin.V1Alpha.CreatePropertyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateProperty, null, options, request);
      }
      /// <summary>
      /// Marks target Property as soft-deleted (ie: "trashed") and returns it.
      ///
      /// This API does not have a method to restore soft-deleted properties.
      /// However, they can be restored using the Trash Can UI.
      ///
      /// If the properties are not restored before the expiration time, the Property
      /// and all child resources (eg: GoogleAdsLinks, Streams, AccessBindings)
      /// will be permanently purged.
      /// https://support.google.com/analytics/answer/6154772
      ///
      /// Returns an error if the target is not found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.Property DeleteProperty(global::Google.Analytics.Admin.V1Alpha.DeletePropertyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteProperty(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Marks target Property as soft-deleted (ie: "trashed") and returns it.
      ///
      /// This API does not have a method to restore soft-deleted properties.
      /// However, they can be restored using the Trash Can UI.
      ///
      /// If the properties are not restored before the expiration time, the Property
      /// and all child resources (eg: GoogleAdsLinks, Streams, AccessBindings)
      /// will be permanently purged.
      /// https://support.google.com/analytics/answer/6154772
      ///
      /// Returns an error if the target is not found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.Property DeleteProperty(global::Google.Analytics.Admin.V1Alpha.DeletePropertyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteProperty, null, options, request);
      }
      /// <summary>
      /// Marks target Property as soft-deleted (ie: "trashed") and returns it.
      ///
      /// This API does not have a method to restore soft-deleted properties.
      /// However, they can be restored using the Trash Can UI.
      ///
      /// If the properties are not restored before the expiration time, the Property
      /// and all child resources (eg: GoogleAdsLinks, Streams, AccessBindings)
      /// will be permanently purged.
      /// https://support.google.com/analytics/answer/6154772
      ///
      /// Returns an error if the target is not found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.Property> DeletePropertyAsync(global::Google.Analytics.Admin.V1Alpha.DeletePropertyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeletePropertyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Marks target Property as soft-deleted (ie: "trashed") and returns it.
      ///
      /// This API does not have a method to restore soft-deleted properties.
      /// However, they can be restored using the Trash Can UI.
      ///
      /// If the properties are not restored before the expiration time, the Property
      /// and all child resources (eg: GoogleAdsLinks, Streams, AccessBindings)
      /// will be permanently purged.
      /// https://support.google.com/analytics/answer/6154772
      ///
      /// Returns an error if the target is not found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.Property> DeletePropertyAsync(global::Google.Analytics.Admin.V1Alpha.DeletePropertyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteProperty, null, options, request);
      }
      /// <summary>
      /// Updates a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.Property UpdateProperty(global::Google.Analytics.Admin.V1Alpha.UpdatePropertyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateProperty(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.Property UpdateProperty(global::Google.Analytics.Admin.V1Alpha.UpdatePropertyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateProperty, null, options, request);
      }
      /// <summary>
      /// Updates a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.Property> UpdatePropertyAsync(global::Google.Analytics.Admin.V1Alpha.UpdatePropertyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdatePropertyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.Property> UpdatePropertyAsync(global::Google.Analytics.Admin.V1Alpha.UpdatePropertyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateProperty, null, options, request);
      }
      /// <summary>
      /// Creates a FirebaseLink.
      ///
      /// Properties can have at most one FirebaseLink.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.FirebaseLink CreateFirebaseLink(global::Google.Analytics.Admin.V1Alpha.CreateFirebaseLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateFirebaseLink(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a FirebaseLink.
      ///
      /// Properties can have at most one FirebaseLink.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.FirebaseLink CreateFirebaseLink(global::Google.Analytics.Admin.V1Alpha.CreateFirebaseLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateFirebaseLink, null, options, request);
      }
      /// <summary>
      /// Creates a FirebaseLink.
      ///
      /// Properties can have at most one FirebaseLink.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.FirebaseLink> CreateFirebaseLinkAsync(global::Google.Analytics.Admin.V1Alpha.CreateFirebaseLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateFirebaseLinkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a FirebaseLink.
      ///
      /// Properties can have at most one FirebaseLink.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.FirebaseLink> CreateFirebaseLinkAsync(global::Google.Analytics.Admin.V1Alpha.CreateFirebaseLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateFirebaseLink, null, options, request);
      }
      /// <summary>
      /// Deletes a FirebaseLink on a property
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteFirebaseLink(global::Google.Analytics.Admin.V1Alpha.DeleteFirebaseLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteFirebaseLink(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a FirebaseLink on a property
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteFirebaseLink(global::Google.Analytics.Admin.V1Alpha.DeleteFirebaseLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteFirebaseLink, null, options, request);
      }
      /// <summary>
      /// Deletes a FirebaseLink on a property
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteFirebaseLinkAsync(global::Google.Analytics.Admin.V1Alpha.DeleteFirebaseLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteFirebaseLinkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a FirebaseLink on a property
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteFirebaseLinkAsync(global::Google.Analytics.Admin.V1Alpha.DeleteFirebaseLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteFirebaseLink, null, options, request);
      }
      /// <summary>
      /// Lists FirebaseLinks on a property.
      /// Properties can have at most one FirebaseLink.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListFirebaseLinksResponse ListFirebaseLinks(global::Google.Analytics.Admin.V1Alpha.ListFirebaseLinksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListFirebaseLinks(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists FirebaseLinks on a property.
      /// Properties can have at most one FirebaseLink.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListFirebaseLinksResponse ListFirebaseLinks(global::Google.Analytics.Admin.V1Alpha.ListFirebaseLinksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListFirebaseLinks, null, options, request);
      }
      /// <summary>
      /// Lists FirebaseLinks on a property.
      /// Properties can have at most one FirebaseLink.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListFirebaseLinksResponse> ListFirebaseLinksAsync(global::Google.Analytics.Admin.V1Alpha.ListFirebaseLinksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListFirebaseLinksAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists FirebaseLinks on a property.
      /// Properties can have at most one FirebaseLink.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListFirebaseLinksResponse> ListFirebaseLinksAsync(global::Google.Analytics.Admin.V1Alpha.ListFirebaseLinksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListFirebaseLinks, null, options, request);
      }
      /// <summary>
      /// Returns the Site Tag for the specified web stream.
      /// Site Tags are immutable singletons.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.GlobalSiteTag GetGlobalSiteTag(global::Google.Analytics.Admin.V1Alpha.GetGlobalSiteTagRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetGlobalSiteTag(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the Site Tag for the specified web stream.
      /// Site Tags are immutable singletons.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.GlobalSiteTag GetGlobalSiteTag(global::Google.Analytics.Admin.V1Alpha.GetGlobalSiteTagRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetGlobalSiteTag, null, options, request);
      }
      /// <summary>
      /// Returns the Site Tag for the specified web stream.
      /// Site Tags are immutable singletons.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.GlobalSiteTag> GetGlobalSiteTagAsync(global::Google.Analytics.Admin.V1Alpha.GetGlobalSiteTagRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetGlobalSiteTagAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the Site Tag for the specified web stream.
      /// Site Tags are immutable singletons.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.GlobalSiteTag> GetGlobalSiteTagAsync(global::Google.Analytics.Admin.V1Alpha.GetGlobalSiteTagRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetGlobalSiteTag, null, options, request);
      }
      /// <summary>
      /// Creates a GoogleAdsLink.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.GoogleAdsLink CreateGoogleAdsLink(global::Google.Analytics.Admin.V1Alpha.CreateGoogleAdsLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateGoogleAdsLink(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a GoogleAdsLink.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.GoogleAdsLink CreateGoogleAdsLink(global::Google.Analytics.Admin.V1Alpha.CreateGoogleAdsLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateGoogleAdsLink, null, options, request);
      }
      /// <summary>
      /// Creates a GoogleAdsLink.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.GoogleAdsLink> CreateGoogleAdsLinkAsync(global::Google.Analytics.Admin.V1Alpha.CreateGoogleAdsLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateGoogleAdsLinkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a GoogleAdsLink.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.GoogleAdsLink> CreateGoogleAdsLinkAsync(global::Google.Analytics.Admin.V1Alpha.CreateGoogleAdsLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateGoogleAdsLink, null, options, request);
      }
      /// <summary>
      /// Updates a GoogleAdsLink on a property
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.GoogleAdsLink UpdateGoogleAdsLink(global::Google.Analytics.Admin.V1Alpha.UpdateGoogleAdsLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateGoogleAdsLink(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a GoogleAdsLink on a property
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.GoogleAdsLink UpdateGoogleAdsLink(global::Google.Analytics.Admin.V1Alpha.UpdateGoogleAdsLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateGoogleAdsLink, null, options, request);
      }
      /// <summary>
      /// Updates a GoogleAdsLink on a property
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.GoogleAdsLink> UpdateGoogleAdsLinkAsync(global::Google.Analytics.Admin.V1Alpha.UpdateGoogleAdsLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateGoogleAdsLinkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a GoogleAdsLink on a property
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.GoogleAdsLink> UpdateGoogleAdsLinkAsync(global::Google.Analytics.Admin.V1Alpha.UpdateGoogleAdsLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateGoogleAdsLink, null, options, request);
      }
      /// <summary>
      /// Deletes a GoogleAdsLink on a property
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteGoogleAdsLink(global::Google.Analytics.Admin.V1Alpha.DeleteGoogleAdsLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteGoogleAdsLink(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a GoogleAdsLink on a property
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteGoogleAdsLink(global::Google.Analytics.Admin.V1Alpha.DeleteGoogleAdsLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteGoogleAdsLink, null, options, request);
      }
      /// <summary>
      /// Deletes a GoogleAdsLink on a property
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteGoogleAdsLinkAsync(global::Google.Analytics.Admin.V1Alpha.DeleteGoogleAdsLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteGoogleAdsLinkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a GoogleAdsLink on a property
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteGoogleAdsLinkAsync(global::Google.Analytics.Admin.V1Alpha.DeleteGoogleAdsLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteGoogleAdsLink, null, options, request);
      }
      /// <summary>
      /// Lists GoogleAdsLinks on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListGoogleAdsLinksResponse ListGoogleAdsLinks(global::Google.Analytics.Admin.V1Alpha.ListGoogleAdsLinksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListGoogleAdsLinks(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists GoogleAdsLinks on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListGoogleAdsLinksResponse ListGoogleAdsLinks(global::Google.Analytics.Admin.V1Alpha.ListGoogleAdsLinksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListGoogleAdsLinks, null, options, request);
      }
      /// <summary>
      /// Lists GoogleAdsLinks on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListGoogleAdsLinksResponse> ListGoogleAdsLinksAsync(global::Google.Analytics.Admin.V1Alpha.ListGoogleAdsLinksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListGoogleAdsLinksAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists GoogleAdsLinks on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListGoogleAdsLinksResponse> ListGoogleAdsLinksAsync(global::Google.Analytics.Admin.V1Alpha.ListGoogleAdsLinksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListGoogleAdsLinks, null, options, request);
      }
      /// <summary>
      /// Get data sharing settings on an account.
      /// Data sharing settings are singletons.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.DataSharingSettings GetDataSharingSettings(global::Google.Analytics.Admin.V1Alpha.GetDataSharingSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDataSharingSettings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get data sharing settings on an account.
      /// Data sharing settings are singletons.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.DataSharingSettings GetDataSharingSettings(global::Google.Analytics.Admin.V1Alpha.GetDataSharingSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDataSharingSettings, null, options, request);
      }
      /// <summary>
      /// Get data sharing settings on an account.
      /// Data sharing settings are singletons.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.DataSharingSettings> GetDataSharingSettingsAsync(global::Google.Analytics.Admin.V1Alpha.GetDataSharingSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDataSharingSettingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get data sharing settings on an account.
      /// Data sharing settings are singletons.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.DataSharingSettings> GetDataSharingSettingsAsync(global::Google.Analytics.Admin.V1Alpha.GetDataSharingSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDataSharingSettings, null, options, request);
      }
      /// <summary>
      /// Lookup for a single MeasurementProtocolSecret.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.MeasurementProtocolSecret GetMeasurementProtocolSecret(global::Google.Analytics.Admin.V1Alpha.GetMeasurementProtocolSecretRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetMeasurementProtocolSecret(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single MeasurementProtocolSecret.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.MeasurementProtocolSecret GetMeasurementProtocolSecret(global::Google.Analytics.Admin.V1Alpha.GetMeasurementProtocolSecretRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetMeasurementProtocolSecret, null, options, request);
      }
      /// <summary>
      /// Lookup for a single MeasurementProtocolSecret.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.MeasurementProtocolSecret> GetMeasurementProtocolSecretAsync(global::Google.Analytics.Admin.V1Alpha.GetMeasurementProtocolSecretRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetMeasurementProtocolSecretAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single MeasurementProtocolSecret.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.MeasurementProtocolSecret> GetMeasurementProtocolSecretAsync(global::Google.Analytics.Admin.V1Alpha.GetMeasurementProtocolSecretRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetMeasurementProtocolSecret, null, options, request);
      }
      /// <summary>
      /// Returns child MeasurementProtocolSecrets under the specified parent
      /// Property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListMeasurementProtocolSecretsResponse ListMeasurementProtocolSecrets(global::Google.Analytics.Admin.V1Alpha.ListMeasurementProtocolSecretsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListMeasurementProtocolSecrets(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns child MeasurementProtocolSecrets under the specified parent
      /// Property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListMeasurementProtocolSecretsResponse ListMeasurementProtocolSecrets(global::Google.Analytics.Admin.V1Alpha.ListMeasurementProtocolSecretsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListMeasurementProtocolSecrets, null, options, request);
      }
      /// <summary>
      /// Returns child MeasurementProtocolSecrets under the specified parent
      /// Property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListMeasurementProtocolSecretsResponse> ListMeasurementProtocolSecretsAsync(global::Google.Analytics.Admin.V1Alpha.ListMeasurementProtocolSecretsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListMeasurementProtocolSecretsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns child MeasurementProtocolSecrets under the specified parent
      /// Property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListMeasurementProtocolSecretsResponse> ListMeasurementProtocolSecretsAsync(global::Google.Analytics.Admin.V1Alpha.ListMeasurementProtocolSecretsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListMeasurementProtocolSecrets, null, options, request);
      }
      /// <summary>
      /// Creates a measurement protocol secret.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.MeasurementProtocolSecret CreateMeasurementProtocolSecret(global::Google.Analytics.Admin.V1Alpha.CreateMeasurementProtocolSecretRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateMeasurementProtocolSecret(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a measurement protocol secret.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.MeasurementProtocolSecret CreateMeasurementProtocolSecret(global::Google.Analytics.Admin.V1Alpha.CreateMeasurementProtocolSecretRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateMeasurementProtocolSecret, null, options, request);
      }
      /// <summary>
      /// Creates a measurement protocol secret.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.MeasurementProtocolSecret> CreateMeasurementProtocolSecretAsync(global::Google.Analytics.Admin.V1Alpha.CreateMeasurementProtocolSecretRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateMeasurementProtocolSecretAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a measurement protocol secret.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.MeasurementProtocolSecret> CreateMeasurementProtocolSecretAsync(global::Google.Analytics.Admin.V1Alpha.CreateMeasurementProtocolSecretRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateMeasurementProtocolSecret, null, options, request);
      }
      /// <summary>
      /// Deletes target MeasurementProtocolSecret.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteMeasurementProtocolSecret(global::Google.Analytics.Admin.V1Alpha.DeleteMeasurementProtocolSecretRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteMeasurementProtocolSecret(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes target MeasurementProtocolSecret.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteMeasurementProtocolSecret(global::Google.Analytics.Admin.V1Alpha.DeleteMeasurementProtocolSecretRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteMeasurementProtocolSecret, null, options, request);
      }
      /// <summary>
      /// Deletes target MeasurementProtocolSecret.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteMeasurementProtocolSecretAsync(global::Google.Analytics.Admin.V1Alpha.DeleteMeasurementProtocolSecretRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteMeasurementProtocolSecretAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes target MeasurementProtocolSecret.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteMeasurementProtocolSecretAsync(global::Google.Analytics.Admin.V1Alpha.DeleteMeasurementProtocolSecretRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteMeasurementProtocolSecret, null, options, request);
      }
      /// <summary>
      /// Updates a measurement protocol secret.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.MeasurementProtocolSecret UpdateMeasurementProtocolSecret(global::Google.Analytics.Admin.V1Alpha.UpdateMeasurementProtocolSecretRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateMeasurementProtocolSecret(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a measurement protocol secret.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.MeasurementProtocolSecret UpdateMeasurementProtocolSecret(global::Google.Analytics.Admin.V1Alpha.UpdateMeasurementProtocolSecretRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateMeasurementProtocolSecret, null, options, request);
      }
      /// <summary>
      /// Updates a measurement protocol secret.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.MeasurementProtocolSecret> UpdateMeasurementProtocolSecretAsync(global::Google.Analytics.Admin.V1Alpha.UpdateMeasurementProtocolSecretRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateMeasurementProtocolSecretAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a measurement protocol secret.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.MeasurementProtocolSecret> UpdateMeasurementProtocolSecretAsync(global::Google.Analytics.Admin.V1Alpha.UpdateMeasurementProtocolSecretRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateMeasurementProtocolSecret, null, options, request);
      }
      /// <summary>
      /// Acknowledges the terms of user data collection for the specified property.
      ///
      /// This acknowledgement must be completed (either in the Google Analytics UI
      /// or through this API) before MeasurementProtocolSecret resources may be
      /// created.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.AcknowledgeUserDataCollectionResponse AcknowledgeUserDataCollection(global::Google.Analytics.Admin.V1Alpha.AcknowledgeUserDataCollectionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AcknowledgeUserDataCollection(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Acknowledges the terms of user data collection for the specified property.
      ///
      /// This acknowledgement must be completed (either in the Google Analytics UI
      /// or through this API) before MeasurementProtocolSecret resources may be
      /// created.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.AcknowledgeUserDataCollectionResponse AcknowledgeUserDataCollection(global::Google.Analytics.Admin.V1Alpha.AcknowledgeUserDataCollectionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AcknowledgeUserDataCollection, null, options, request);
      }
      /// <summary>
      /// Acknowledges the terms of user data collection for the specified property.
      ///
      /// This acknowledgement must be completed (either in the Google Analytics UI
      /// or through this API) before MeasurementProtocolSecret resources may be
      /// created.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.AcknowledgeUserDataCollectionResponse> AcknowledgeUserDataCollectionAsync(global::Google.Analytics.Admin.V1Alpha.AcknowledgeUserDataCollectionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AcknowledgeUserDataCollectionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Acknowledges the terms of user data collection for the specified property.
      ///
      /// This acknowledgement must be completed (either in the Google Analytics UI
      /// or through this API) before MeasurementProtocolSecret resources may be
      /// created.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.AcknowledgeUserDataCollectionResponse> AcknowledgeUserDataCollectionAsync(global::Google.Analytics.Admin.V1Alpha.AcknowledgeUserDataCollectionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AcknowledgeUserDataCollection, null, options, request);
      }
      /// <summary>
      /// Looks up a single SKAdNetworkConversionValueSchema.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.SKAdNetworkConversionValueSchema GetSKAdNetworkConversionValueSchema(global::Google.Analytics.Admin.V1Alpha.GetSKAdNetworkConversionValueSchemaRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSKAdNetworkConversionValueSchema(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Looks up a single SKAdNetworkConversionValueSchema.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.SKAdNetworkConversionValueSchema GetSKAdNetworkConversionValueSchema(global::Google.Analytics.Admin.V1Alpha.GetSKAdNetworkConversionValueSchemaRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSKAdNetworkConversionValueSchema, null, options, request);
      }
      /// <summary>
      /// Looks up a single SKAdNetworkConversionValueSchema.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.SKAdNetworkConversionValueSchema> GetSKAdNetworkConversionValueSchemaAsync(global::Google.Analytics.Admin.V1Alpha.GetSKAdNetworkConversionValueSchemaRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSKAdNetworkConversionValueSchemaAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Looks up a single SKAdNetworkConversionValueSchema.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.SKAdNetworkConversionValueSchema> GetSKAdNetworkConversionValueSchemaAsync(global::Google.Analytics.Admin.V1Alpha.GetSKAdNetworkConversionValueSchemaRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSKAdNetworkConversionValueSchema, null, options, request);
      }
      /// <summary>
      /// Creates a SKAdNetworkConversionValueSchema.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.SKAdNetworkConversionValueSchema CreateSKAdNetworkConversionValueSchema(global::Google.Analytics.Admin.V1Alpha.CreateSKAdNetworkConversionValueSchemaRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateSKAdNetworkConversionValueSchema(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a SKAdNetworkConversionValueSchema.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.SKAdNetworkConversionValueSchema CreateSKAdNetworkConversionValueSchema(global::Google.Analytics.Admin.V1Alpha.CreateSKAdNetworkConversionValueSchemaRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateSKAdNetworkConversionValueSchema, null, options, request);
      }
      /// <summary>
      /// Creates a SKAdNetworkConversionValueSchema.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.SKAdNetworkConversionValueSchema> CreateSKAdNetworkConversionValueSchemaAsync(global::Google.Analytics.Admin.V1Alpha.CreateSKAdNetworkConversionValueSchemaRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateSKAdNetworkConversionValueSchemaAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a SKAdNetworkConversionValueSchema.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.SKAdNetworkConversionValueSchema> CreateSKAdNetworkConversionValueSchemaAsync(global::Google.Analytics.Admin.V1Alpha.CreateSKAdNetworkConversionValueSchemaRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateSKAdNetworkConversionValueSchema, null, options, request);
      }
      /// <summary>
      /// Deletes target SKAdNetworkConversionValueSchema.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteSKAdNetworkConversionValueSchema(global::Google.Analytics.Admin.V1Alpha.DeleteSKAdNetworkConversionValueSchemaRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteSKAdNetworkConversionValueSchema(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes target SKAdNetworkConversionValueSchema.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteSKAdNetworkConversionValueSchema(global::Google.Analytics.Admin.V1Alpha.DeleteSKAdNetworkConversionValueSchemaRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteSKAdNetworkConversionValueSchema, null, options, request);
      }
      /// <summary>
      /// Deletes target SKAdNetworkConversionValueSchema.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteSKAdNetworkConversionValueSchemaAsync(global::Google.Analytics.Admin.V1Alpha.DeleteSKAdNetworkConversionValueSchemaRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteSKAdNetworkConversionValueSchemaAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes target SKAdNetworkConversionValueSchema.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteSKAdNetworkConversionValueSchemaAsync(global::Google.Analytics.Admin.V1Alpha.DeleteSKAdNetworkConversionValueSchemaRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteSKAdNetworkConversionValueSchema, null, options, request);
      }
      /// <summary>
      /// Updates a SKAdNetworkConversionValueSchema.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.SKAdNetworkConversionValueSchema UpdateSKAdNetworkConversionValueSchema(global::Google.Analytics.Admin.V1Alpha.UpdateSKAdNetworkConversionValueSchemaRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateSKAdNetworkConversionValueSchema(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a SKAdNetworkConversionValueSchema.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.SKAdNetworkConversionValueSchema UpdateSKAdNetworkConversionValueSchema(global::Google.Analytics.Admin.V1Alpha.UpdateSKAdNetworkConversionValueSchemaRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateSKAdNetworkConversionValueSchema, null, options, request);
      }
      /// <summary>
      /// Updates a SKAdNetworkConversionValueSchema.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.SKAdNetworkConversionValueSchema> UpdateSKAdNetworkConversionValueSchemaAsync(global::Google.Analytics.Admin.V1Alpha.UpdateSKAdNetworkConversionValueSchemaRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateSKAdNetworkConversionValueSchemaAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a SKAdNetworkConversionValueSchema.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.SKAdNetworkConversionValueSchema> UpdateSKAdNetworkConversionValueSchemaAsync(global::Google.Analytics.Admin.V1Alpha.UpdateSKAdNetworkConversionValueSchemaRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateSKAdNetworkConversionValueSchema, null, options, request);
      }
      /// <summary>
      /// Lists SKAdNetworkConversionValueSchema on a stream.
      /// Properties can have at most one SKAdNetworkConversionValueSchema.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListSKAdNetworkConversionValueSchemasResponse ListSKAdNetworkConversionValueSchemas(global::Google.Analytics.Admin.V1Alpha.ListSKAdNetworkConversionValueSchemasRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSKAdNetworkConversionValueSchemas(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists SKAdNetworkConversionValueSchema on a stream.
      /// Properties can have at most one SKAdNetworkConversionValueSchema.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListSKAdNetworkConversionValueSchemasResponse ListSKAdNetworkConversionValueSchemas(global::Google.Analytics.Admin.V1Alpha.ListSKAdNetworkConversionValueSchemasRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListSKAdNetworkConversionValueSchemas, null, options, request);
      }
      /// <summary>
      /// Lists SKAdNetworkConversionValueSchema on a stream.
      /// Properties can have at most one SKAdNetworkConversionValueSchema.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListSKAdNetworkConversionValueSchemasResponse> ListSKAdNetworkConversionValueSchemasAsync(global::Google.Analytics.Admin.V1Alpha.ListSKAdNetworkConversionValueSchemasRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSKAdNetworkConversionValueSchemasAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists SKAdNetworkConversionValueSchema on a stream.
      /// Properties can have at most one SKAdNetworkConversionValueSchema.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListSKAdNetworkConversionValueSchemasResponse> ListSKAdNetworkConversionValueSchemasAsync(global::Google.Analytics.Admin.V1Alpha.ListSKAdNetworkConversionValueSchemasRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListSKAdNetworkConversionValueSchemas, null, options, request);
      }
      /// <summary>
      /// Searches through all changes to an account or its children given the
      /// specified set of filters.
      ///
      /// Only returns the subset of changes supported by the API. The UI may return
      /// additional changes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.SearchChangeHistoryEventsResponse SearchChangeHistoryEvents(global::Google.Analytics.Admin.V1Alpha.SearchChangeHistoryEventsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchChangeHistoryEvents(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Searches through all changes to an account or its children given the
      /// specified set of filters.
      ///
      /// Only returns the subset of changes supported by the API. The UI may return
      /// additional changes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.SearchChangeHistoryEventsResponse SearchChangeHistoryEvents(global::Google.Analytics.Admin.V1Alpha.SearchChangeHistoryEventsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SearchChangeHistoryEvents, null, options, request);
      }
      /// <summary>
      /// Searches through all changes to an account or its children given the
      /// specified set of filters.
      ///
      /// Only returns the subset of changes supported by the API. The UI may return
      /// additional changes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.SearchChangeHistoryEventsResponse> SearchChangeHistoryEventsAsync(global::Google.Analytics.Admin.V1Alpha.SearchChangeHistoryEventsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchChangeHistoryEventsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Searches through all changes to an account or its children given the
      /// specified set of filters.
      ///
      /// Only returns the subset of changes supported by the API. The UI may return
      /// additional changes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.SearchChangeHistoryEventsResponse> SearchChangeHistoryEventsAsync(global::Google.Analytics.Admin.V1Alpha.SearchChangeHistoryEventsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SearchChangeHistoryEvents, null, options, request);
      }
      /// <summary>
      /// Lookup for Google Signals settings for a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.GoogleSignalsSettings GetGoogleSignalsSettings(global::Google.Analytics.Admin.V1Alpha.GetGoogleSignalsSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetGoogleSignalsSettings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for Google Signals settings for a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.GoogleSignalsSettings GetGoogleSignalsSettings(global::Google.Analytics.Admin.V1Alpha.GetGoogleSignalsSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetGoogleSignalsSettings, null, options, request);
      }
      /// <summary>
      /// Lookup for Google Signals settings for a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.GoogleSignalsSettings> GetGoogleSignalsSettingsAsync(global::Google.Analytics.Admin.V1Alpha.GetGoogleSignalsSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetGoogleSignalsSettingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for Google Signals settings for a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.GoogleSignalsSettings> GetGoogleSignalsSettingsAsync(global::Google.Analytics.Admin.V1Alpha.GetGoogleSignalsSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetGoogleSignalsSettings, null, options, request);
      }
      /// <summary>
      /// Updates Google Signals settings for a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.GoogleSignalsSettings UpdateGoogleSignalsSettings(global::Google.Analytics.Admin.V1Alpha.UpdateGoogleSignalsSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateGoogleSignalsSettings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates Google Signals settings for a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.GoogleSignalsSettings UpdateGoogleSignalsSettings(global::Google.Analytics.Admin.V1Alpha.UpdateGoogleSignalsSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateGoogleSignalsSettings, null, options, request);
      }
      /// <summary>
      /// Updates Google Signals settings for a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.GoogleSignalsSettings> UpdateGoogleSignalsSettingsAsync(global::Google.Analytics.Admin.V1Alpha.UpdateGoogleSignalsSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateGoogleSignalsSettingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates Google Signals settings for a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.GoogleSignalsSettings> UpdateGoogleSignalsSettingsAsync(global::Google.Analytics.Admin.V1Alpha.UpdateGoogleSignalsSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateGoogleSignalsSettings, null, options, request);
      }
      /// <summary>
      /// Deprecated: Use `CreateKeyEvent` instead.
      /// Creates a conversion event with the specified attributes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ConversionEvent CreateConversionEvent(global::Google.Analytics.Admin.V1Alpha.CreateConversionEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateConversionEvent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deprecated: Use `CreateKeyEvent` instead.
      /// Creates a conversion event with the specified attributes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ConversionEvent CreateConversionEvent(global::Google.Analytics.Admin.V1Alpha.CreateConversionEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateConversionEvent, null, options, request);
      }
      /// <summary>
      /// Deprecated: Use `CreateKeyEvent` instead.
      /// Creates a conversion event with the specified attributes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ConversionEvent> CreateConversionEventAsync(global::Google.Analytics.Admin.V1Alpha.CreateConversionEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateConversionEventAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deprecated: Use `CreateKeyEvent` instead.
      /// Creates a conversion event with the specified attributes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ConversionEvent> CreateConversionEventAsync(global::Google.Analytics.Admin.V1Alpha.CreateConversionEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateConversionEvent, null, options, request);
      }
      /// <summary>
      /// Deprecated: Use `UpdateKeyEvent` instead.
      /// Updates a conversion event with the specified attributes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ConversionEvent UpdateConversionEvent(global::Google.Analytics.Admin.V1Alpha.UpdateConversionEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateConversionEvent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deprecated: Use `UpdateKeyEvent` instead.
      /// Updates a conversion event with the specified attributes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ConversionEvent UpdateConversionEvent(global::Google.Analytics.Admin.V1Alpha.UpdateConversionEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateConversionEvent, null, options, request);
      }
      /// <summary>
      /// Deprecated: Use `UpdateKeyEvent` instead.
      /// Updates a conversion event with the specified attributes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ConversionEvent> UpdateConversionEventAsync(global::Google.Analytics.Admin.V1Alpha.UpdateConversionEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateConversionEventAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deprecated: Use `UpdateKeyEvent` instead.
      /// Updates a conversion event with the specified attributes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ConversionEvent> UpdateConversionEventAsync(global::Google.Analytics.Admin.V1Alpha.UpdateConversionEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateConversionEvent, null, options, request);
      }
      /// <summary>
      /// Deprecated: Use `GetKeyEvent` instead.
      /// Retrieve a single conversion event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ConversionEvent GetConversionEvent(global::Google.Analytics.Admin.V1Alpha.GetConversionEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetConversionEvent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deprecated: Use `GetKeyEvent` instead.
      /// Retrieve a single conversion event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ConversionEvent GetConversionEvent(global::Google.Analytics.Admin.V1Alpha.GetConversionEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetConversionEvent, null, options, request);
      }
      /// <summary>
      /// Deprecated: Use `GetKeyEvent` instead.
      /// Retrieve a single conversion event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ConversionEvent> GetConversionEventAsync(global::Google.Analytics.Admin.V1Alpha.GetConversionEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetConversionEventAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deprecated: Use `GetKeyEvent` instead.
      /// Retrieve a single conversion event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ConversionEvent> GetConversionEventAsync(global::Google.Analytics.Admin.V1Alpha.GetConversionEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetConversionEvent, null, options, request);
      }
      /// <summary>
      /// Deprecated: Use `DeleteKeyEvent` instead.
      /// Deletes a conversion event in a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteConversionEvent(global::Google.Analytics.Admin.V1Alpha.DeleteConversionEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteConversionEvent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deprecated: Use `DeleteKeyEvent` instead.
      /// Deletes a conversion event in a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteConversionEvent(global::Google.Analytics.Admin.V1Alpha.DeleteConversionEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteConversionEvent, null, options, request);
      }
      /// <summary>
      /// Deprecated: Use `DeleteKeyEvent` instead.
      /// Deletes a conversion event in a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteConversionEventAsync(global::Google.Analytics.Admin.V1Alpha.DeleteConversionEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteConversionEventAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deprecated: Use `DeleteKeyEvent` instead.
      /// Deletes a conversion event in a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteConversionEventAsync(global::Google.Analytics.Admin.V1Alpha.DeleteConversionEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteConversionEvent, null, options, request);
      }
      /// <summary>
      /// Deprecated: Use `ListKeyEvents` instead.
      /// Returns a list of conversion events in the specified parent property.
      ///
      /// Returns an empty list if no conversion events are found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListConversionEventsResponse ListConversionEvents(global::Google.Analytics.Admin.V1Alpha.ListConversionEventsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListConversionEvents(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deprecated: Use `ListKeyEvents` instead.
      /// Returns a list of conversion events in the specified parent property.
      ///
      /// Returns an empty list if no conversion events are found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListConversionEventsResponse ListConversionEvents(global::Google.Analytics.Admin.V1Alpha.ListConversionEventsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListConversionEvents, null, options, request);
      }
      /// <summary>
      /// Deprecated: Use `ListKeyEvents` instead.
      /// Returns a list of conversion events in the specified parent property.
      ///
      /// Returns an empty list if no conversion events are found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListConversionEventsResponse> ListConversionEventsAsync(global::Google.Analytics.Admin.V1Alpha.ListConversionEventsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListConversionEventsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deprecated: Use `ListKeyEvents` instead.
      /// Returns a list of conversion events in the specified parent property.
      ///
      /// Returns an empty list if no conversion events are found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListConversionEventsResponse> ListConversionEventsAsync(global::Google.Analytics.Admin.V1Alpha.ListConversionEventsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListConversionEvents, null, options, request);
      }
      /// <summary>
      /// Creates a Key Event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.KeyEvent CreateKeyEvent(global::Google.Analytics.Admin.V1Alpha.CreateKeyEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateKeyEvent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a Key Event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.KeyEvent CreateKeyEvent(global::Google.Analytics.Admin.V1Alpha.CreateKeyEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateKeyEvent, null, options, request);
      }
      /// <summary>
      /// Creates a Key Event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.KeyEvent> CreateKeyEventAsync(global::Google.Analytics.Admin.V1Alpha.CreateKeyEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateKeyEventAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a Key Event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.KeyEvent> CreateKeyEventAsync(global::Google.Analytics.Admin.V1Alpha.CreateKeyEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateKeyEvent, null, options, request);
      }
      /// <summary>
      /// Updates a Key Event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.KeyEvent UpdateKeyEvent(global::Google.Analytics.Admin.V1Alpha.UpdateKeyEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateKeyEvent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a Key Event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.KeyEvent UpdateKeyEvent(global::Google.Analytics.Admin.V1Alpha.UpdateKeyEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateKeyEvent, null, options, request);
      }
      /// <summary>
      /// Updates a Key Event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.KeyEvent> UpdateKeyEventAsync(global::Google.Analytics.Admin.V1Alpha.UpdateKeyEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateKeyEventAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a Key Event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.KeyEvent> UpdateKeyEventAsync(global::Google.Analytics.Admin.V1Alpha.UpdateKeyEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateKeyEvent, null, options, request);
      }
      /// <summary>
      /// Retrieve a single Key Event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.KeyEvent GetKeyEvent(global::Google.Analytics.Admin.V1Alpha.GetKeyEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetKeyEvent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve a single Key Event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.KeyEvent GetKeyEvent(global::Google.Analytics.Admin.V1Alpha.GetKeyEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetKeyEvent, null, options, request);
      }
      /// <summary>
      /// Retrieve a single Key Event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.KeyEvent> GetKeyEventAsync(global::Google.Analytics.Admin.V1Alpha.GetKeyEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetKeyEventAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve a single Key Event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.KeyEvent> GetKeyEventAsync(global::Google.Analytics.Admin.V1Alpha.GetKeyEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetKeyEvent, null, options, request);
      }
      /// <summary>
      /// Deletes a Key Event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteKeyEvent(global::Google.Analytics.Admin.V1Alpha.DeleteKeyEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteKeyEvent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a Key Event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteKeyEvent(global::Google.Analytics.Admin.V1Alpha.DeleteKeyEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteKeyEvent, null, options, request);
      }
      /// <summary>
      /// Deletes a Key Event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteKeyEventAsync(global::Google.Analytics.Admin.V1Alpha.DeleteKeyEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteKeyEventAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a Key Event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteKeyEventAsync(global::Google.Analytics.Admin.V1Alpha.DeleteKeyEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteKeyEvent, null, options, request);
      }
      /// <summary>
      /// Returns a list of Key Events in the specified parent property.
      /// Returns an empty list if no Key Events are found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListKeyEventsResponse ListKeyEvents(global::Google.Analytics.Admin.V1Alpha.ListKeyEventsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListKeyEvents(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns a list of Key Events in the specified parent property.
      /// Returns an empty list if no Key Events are found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListKeyEventsResponse ListKeyEvents(global::Google.Analytics.Admin.V1Alpha.ListKeyEventsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListKeyEvents, null, options, request);
      }
      /// <summary>
      /// Returns a list of Key Events in the specified parent property.
      /// Returns an empty list if no Key Events are found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListKeyEventsResponse> ListKeyEventsAsync(global::Google.Analytics.Admin.V1Alpha.ListKeyEventsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListKeyEventsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns a list of Key Events in the specified parent property.
      /// Returns an empty list if no Key Events are found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListKeyEventsResponse> ListKeyEventsAsync(global::Google.Analytics.Admin.V1Alpha.ListKeyEventsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListKeyEvents, null, options, request);
      }
      /// <summary>
      /// Look up a single DisplayVideo360AdvertiserLink
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLink GetDisplayVideo360AdvertiserLink(global::Google.Analytics.Admin.V1Alpha.GetDisplayVideo360AdvertiserLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDisplayVideo360AdvertiserLink(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Look up a single DisplayVideo360AdvertiserLink
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLink GetDisplayVideo360AdvertiserLink(global::Google.Analytics.Admin.V1Alpha.GetDisplayVideo360AdvertiserLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDisplayVideo360AdvertiserLink, null, options, request);
      }
      /// <summary>
      /// Look up a single DisplayVideo360AdvertiserLink
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLink> GetDisplayVideo360AdvertiserLinkAsync(global::Google.Analytics.Admin.V1Alpha.GetDisplayVideo360AdvertiserLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDisplayVideo360AdvertiserLinkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Look up a single DisplayVideo360AdvertiserLink
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLink> GetDisplayVideo360AdvertiserLinkAsync(global::Google.Analytics.Admin.V1Alpha.GetDisplayVideo360AdvertiserLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDisplayVideo360AdvertiserLink, null, options, request);
      }
      /// <summary>
      /// Lists all DisplayVideo360AdvertiserLinks on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListDisplayVideo360AdvertiserLinksResponse ListDisplayVideo360AdvertiserLinks(global::Google.Analytics.Admin.V1Alpha.ListDisplayVideo360AdvertiserLinksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDisplayVideo360AdvertiserLinks(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all DisplayVideo360AdvertiserLinks on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListDisplayVideo360AdvertiserLinksResponse ListDisplayVideo360AdvertiserLinks(global::Google.Analytics.Admin.V1Alpha.ListDisplayVideo360AdvertiserLinksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListDisplayVideo360AdvertiserLinks, null, options, request);
      }
      /// <summary>
      /// Lists all DisplayVideo360AdvertiserLinks on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListDisplayVideo360AdvertiserLinksResponse> ListDisplayVideo360AdvertiserLinksAsync(global::Google.Analytics.Admin.V1Alpha.ListDisplayVideo360AdvertiserLinksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDisplayVideo360AdvertiserLinksAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all DisplayVideo360AdvertiserLinks on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListDisplayVideo360AdvertiserLinksResponse> ListDisplayVideo360AdvertiserLinksAsync(global::Google.Analytics.Admin.V1Alpha.ListDisplayVideo360AdvertiserLinksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListDisplayVideo360AdvertiserLinks, null, options, request);
      }
      /// <summary>
      /// Creates a DisplayVideo360AdvertiserLink.
      /// This can only be utilized by users who have proper authorization both on
      /// the Google Analytics property and on the Display &amp; Video 360 advertiser.
      /// Users who do not have access to the Display &amp; Video 360 advertiser should
      /// instead seek to create a DisplayVideo360LinkProposal.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLink CreateDisplayVideo360AdvertiserLink(global::Google.Analytics.Admin.V1Alpha.CreateDisplayVideo360AdvertiserLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateDisplayVideo360AdvertiserLink(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a DisplayVideo360AdvertiserLink.
      /// This can only be utilized by users who have proper authorization both on
      /// the Google Analytics property and on the Display &amp; Video 360 advertiser.
      /// Users who do not have access to the Display &amp; Video 360 advertiser should
      /// instead seek to create a DisplayVideo360LinkProposal.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLink CreateDisplayVideo360AdvertiserLink(global::Google.Analytics.Admin.V1Alpha.CreateDisplayVideo360AdvertiserLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateDisplayVideo360AdvertiserLink, null, options, request);
      }
      /// <summary>
      /// Creates a DisplayVideo360AdvertiserLink.
      /// This can only be utilized by users who have proper authorization both on
      /// the Google Analytics property and on the Display &amp; Video 360 advertiser.
      /// Users who do not have access to the Display &amp; Video 360 advertiser should
      /// instead seek to create a DisplayVideo360LinkProposal.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLink> CreateDisplayVideo360AdvertiserLinkAsync(global::Google.Analytics.Admin.V1Alpha.CreateDisplayVideo360AdvertiserLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateDisplayVideo360AdvertiserLinkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a DisplayVideo360AdvertiserLink.
      /// This can only be utilized by users who have proper authorization both on
      /// the Google Analytics property and on the Display &amp; Video 360 advertiser.
      /// Users who do not have access to the Display &amp; Video 360 advertiser should
      /// instead seek to create a DisplayVideo360LinkProposal.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLink> CreateDisplayVideo360AdvertiserLinkAsync(global::Google.Analytics.Admin.V1Alpha.CreateDisplayVideo360AdvertiserLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateDisplayVideo360AdvertiserLink, null, options, request);
      }
      /// <summary>
      /// Deletes a DisplayVideo360AdvertiserLink on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteDisplayVideo360AdvertiserLink(global::Google.Analytics.Admin.V1Alpha.DeleteDisplayVideo360AdvertiserLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteDisplayVideo360AdvertiserLink(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a DisplayVideo360AdvertiserLink on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteDisplayVideo360AdvertiserLink(global::Google.Analytics.Admin.V1Alpha.DeleteDisplayVideo360AdvertiserLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteDisplayVideo360AdvertiserLink, null, options, request);
      }
      /// <summary>
      /// Deletes a DisplayVideo360AdvertiserLink on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteDisplayVideo360AdvertiserLinkAsync(global::Google.Analytics.Admin.V1Alpha.DeleteDisplayVideo360AdvertiserLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteDisplayVideo360AdvertiserLinkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a DisplayVideo360AdvertiserLink on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteDisplayVideo360AdvertiserLinkAsync(global::Google.Analytics.Admin.V1Alpha.DeleteDisplayVideo360AdvertiserLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteDisplayVideo360AdvertiserLink, null, options, request);
      }
      /// <summary>
      /// Updates a DisplayVideo360AdvertiserLink on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLink UpdateDisplayVideo360AdvertiserLink(global::Google.Analytics.Admin.V1Alpha.UpdateDisplayVideo360AdvertiserLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateDisplayVideo360AdvertiserLink(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a DisplayVideo360AdvertiserLink on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLink UpdateDisplayVideo360AdvertiserLink(global::Google.Analytics.Admin.V1Alpha.UpdateDisplayVideo360AdvertiserLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateDisplayVideo360AdvertiserLink, null, options, request);
      }
      /// <summary>
      /// Updates a DisplayVideo360AdvertiserLink on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLink> UpdateDisplayVideo360AdvertiserLinkAsync(global::Google.Analytics.Admin.V1Alpha.UpdateDisplayVideo360AdvertiserLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateDisplayVideo360AdvertiserLinkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a DisplayVideo360AdvertiserLink on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLink> UpdateDisplayVideo360AdvertiserLinkAsync(global::Google.Analytics.Admin.V1Alpha.UpdateDisplayVideo360AdvertiserLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateDisplayVideo360AdvertiserLink, null, options, request);
      }
      /// <summary>
      /// Lookup for a single DisplayVideo360AdvertiserLinkProposal.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLinkProposal GetDisplayVideo360AdvertiserLinkProposal(global::Google.Analytics.Admin.V1Alpha.GetDisplayVideo360AdvertiserLinkProposalRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDisplayVideo360AdvertiserLinkProposal(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single DisplayVideo360AdvertiserLinkProposal.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLinkProposal GetDisplayVideo360AdvertiserLinkProposal(global::Google.Analytics.Admin.V1Alpha.GetDisplayVideo360AdvertiserLinkProposalRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDisplayVideo360AdvertiserLinkProposal, null, options, request);
      }
      /// <summary>
      /// Lookup for a single DisplayVideo360AdvertiserLinkProposal.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLinkProposal> GetDisplayVideo360AdvertiserLinkProposalAsync(global::Google.Analytics.Admin.V1Alpha.GetDisplayVideo360AdvertiserLinkProposalRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDisplayVideo360AdvertiserLinkProposalAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single DisplayVideo360AdvertiserLinkProposal.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLinkProposal> GetDisplayVideo360AdvertiserLinkProposalAsync(global::Google.Analytics.Admin.V1Alpha.GetDisplayVideo360AdvertiserLinkProposalRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDisplayVideo360AdvertiserLinkProposal, null, options, request);
      }
      /// <summary>
      /// Lists DisplayVideo360AdvertiserLinkProposals on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListDisplayVideo360AdvertiserLinkProposalsResponse ListDisplayVideo360AdvertiserLinkProposals(global::Google.Analytics.Admin.V1Alpha.ListDisplayVideo360AdvertiserLinkProposalsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDisplayVideo360AdvertiserLinkProposals(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists DisplayVideo360AdvertiserLinkProposals on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListDisplayVideo360AdvertiserLinkProposalsResponse ListDisplayVideo360AdvertiserLinkProposals(global::Google.Analytics.Admin.V1Alpha.ListDisplayVideo360AdvertiserLinkProposalsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListDisplayVideo360AdvertiserLinkProposals, null, options, request);
      }
      /// <summary>
      /// Lists DisplayVideo360AdvertiserLinkProposals on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListDisplayVideo360AdvertiserLinkProposalsResponse> ListDisplayVideo360AdvertiserLinkProposalsAsync(global::Google.Analytics.Admin.V1Alpha.ListDisplayVideo360AdvertiserLinkProposalsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDisplayVideo360AdvertiserLinkProposalsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists DisplayVideo360AdvertiserLinkProposals on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListDisplayVideo360AdvertiserLinkProposalsResponse> ListDisplayVideo360AdvertiserLinkProposalsAsync(global::Google.Analytics.Admin.V1Alpha.ListDisplayVideo360AdvertiserLinkProposalsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListDisplayVideo360AdvertiserLinkProposals, null, options, request);
      }
      /// <summary>
      /// Creates a DisplayVideo360AdvertiserLinkProposal.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLinkProposal CreateDisplayVideo360AdvertiserLinkProposal(global::Google.Analytics.Admin.V1Alpha.CreateDisplayVideo360AdvertiserLinkProposalRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateDisplayVideo360AdvertiserLinkProposal(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a DisplayVideo360AdvertiserLinkProposal.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLinkProposal CreateDisplayVideo360AdvertiserLinkProposal(global::Google.Analytics.Admin.V1Alpha.CreateDisplayVideo360AdvertiserLinkProposalRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateDisplayVideo360AdvertiserLinkProposal, null, options, request);
      }
      /// <summary>
      /// Creates a DisplayVideo360AdvertiserLinkProposal.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLinkProposal> CreateDisplayVideo360AdvertiserLinkProposalAsync(global::Google.Analytics.Admin.V1Alpha.CreateDisplayVideo360AdvertiserLinkProposalRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateDisplayVideo360AdvertiserLinkProposalAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a DisplayVideo360AdvertiserLinkProposal.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLinkProposal> CreateDisplayVideo360AdvertiserLinkProposalAsync(global::Google.Analytics.Admin.V1Alpha.CreateDisplayVideo360AdvertiserLinkProposalRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateDisplayVideo360AdvertiserLinkProposal, null, options, request);
      }
      /// <summary>
      /// Deletes a DisplayVideo360AdvertiserLinkProposal on a property.
      /// This can only be used on cancelled proposals.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteDisplayVideo360AdvertiserLinkProposal(global::Google.Analytics.Admin.V1Alpha.DeleteDisplayVideo360AdvertiserLinkProposalRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteDisplayVideo360AdvertiserLinkProposal(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a DisplayVideo360AdvertiserLinkProposal on a property.
      /// This can only be used on cancelled proposals.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteDisplayVideo360AdvertiserLinkProposal(global::Google.Analytics.Admin.V1Alpha.DeleteDisplayVideo360AdvertiserLinkProposalRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteDisplayVideo360AdvertiserLinkProposal, null, options, request);
      }
      /// <summary>
      /// Deletes a DisplayVideo360AdvertiserLinkProposal on a property.
      /// This can only be used on cancelled proposals.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteDisplayVideo360AdvertiserLinkProposalAsync(global::Google.Analytics.Admin.V1Alpha.DeleteDisplayVideo360AdvertiserLinkProposalRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteDisplayVideo360AdvertiserLinkProposalAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a DisplayVideo360AdvertiserLinkProposal on a property.
      /// This can only be used on cancelled proposals.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteDisplayVideo360AdvertiserLinkProposalAsync(global::Google.Analytics.Admin.V1Alpha.DeleteDisplayVideo360AdvertiserLinkProposalRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteDisplayVideo360AdvertiserLinkProposal, null, options, request);
      }
      /// <summary>
      /// Approves a DisplayVideo360AdvertiserLinkProposal.
      /// The DisplayVideo360AdvertiserLinkProposal will be deleted and a new
      /// DisplayVideo360AdvertiserLink will be created.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ApproveDisplayVideo360AdvertiserLinkProposalResponse ApproveDisplayVideo360AdvertiserLinkProposal(global::Google.Analytics.Admin.V1Alpha.ApproveDisplayVideo360AdvertiserLinkProposalRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ApproveDisplayVideo360AdvertiserLinkProposal(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Approves a DisplayVideo360AdvertiserLinkProposal.
      /// The DisplayVideo360AdvertiserLinkProposal will be deleted and a new
      /// DisplayVideo360AdvertiserLink will be created.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ApproveDisplayVideo360AdvertiserLinkProposalResponse ApproveDisplayVideo360AdvertiserLinkProposal(global::Google.Analytics.Admin.V1Alpha.ApproveDisplayVideo360AdvertiserLinkProposalRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ApproveDisplayVideo360AdvertiserLinkProposal, null, options, request);
      }
      /// <summary>
      /// Approves a DisplayVideo360AdvertiserLinkProposal.
      /// The DisplayVideo360AdvertiserLinkProposal will be deleted and a new
      /// DisplayVideo360AdvertiserLink will be created.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ApproveDisplayVideo360AdvertiserLinkProposalResponse> ApproveDisplayVideo360AdvertiserLinkProposalAsync(global::Google.Analytics.Admin.V1Alpha.ApproveDisplayVideo360AdvertiserLinkProposalRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ApproveDisplayVideo360AdvertiserLinkProposalAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Approves a DisplayVideo360AdvertiserLinkProposal.
      /// The DisplayVideo360AdvertiserLinkProposal will be deleted and a new
      /// DisplayVideo360AdvertiserLink will be created.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ApproveDisplayVideo360AdvertiserLinkProposalResponse> ApproveDisplayVideo360AdvertiserLinkProposalAsync(global::Google.Analytics.Admin.V1Alpha.ApproveDisplayVideo360AdvertiserLinkProposalRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ApproveDisplayVideo360AdvertiserLinkProposal, null, options, request);
      }
      /// <summary>
      /// Cancels a DisplayVideo360AdvertiserLinkProposal.
      /// Cancelling can mean either:
      /// - Declining a proposal initiated from Display &amp; Video 360
      /// - Withdrawing a proposal initiated from Google Analytics
      /// After being cancelled, a proposal will eventually be deleted automatically.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLinkProposal CancelDisplayVideo360AdvertiserLinkProposal(global::Google.Analytics.Admin.V1Alpha.CancelDisplayVideo360AdvertiserLinkProposalRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CancelDisplayVideo360AdvertiserLinkProposal(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Cancels a DisplayVideo360AdvertiserLinkProposal.
      /// Cancelling can mean either:
      /// - Declining a proposal initiated from Display &amp; Video 360
      /// - Withdrawing a proposal initiated from Google Analytics
      /// After being cancelled, a proposal will eventually be deleted automatically.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLinkProposal CancelDisplayVideo360AdvertiserLinkProposal(global::Google.Analytics.Admin.V1Alpha.CancelDisplayVideo360AdvertiserLinkProposalRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CancelDisplayVideo360AdvertiserLinkProposal, null, options, request);
      }
      /// <summary>
      /// Cancels a DisplayVideo360AdvertiserLinkProposal.
      /// Cancelling can mean either:
      /// - Declining a proposal initiated from Display &amp; Video 360
      /// - Withdrawing a proposal initiated from Google Analytics
      /// After being cancelled, a proposal will eventually be deleted automatically.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLinkProposal> CancelDisplayVideo360AdvertiserLinkProposalAsync(global::Google.Analytics.Admin.V1Alpha.CancelDisplayVideo360AdvertiserLinkProposalRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CancelDisplayVideo360AdvertiserLinkProposalAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Cancels a DisplayVideo360AdvertiserLinkProposal.
      /// Cancelling can mean either:
      /// - Declining a proposal initiated from Display &amp; Video 360
      /// - Withdrawing a proposal initiated from Google Analytics
      /// After being cancelled, a proposal will eventually be deleted automatically.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLinkProposal> CancelDisplayVideo360AdvertiserLinkProposalAsync(global::Google.Analytics.Admin.V1Alpha.CancelDisplayVideo360AdvertiserLinkProposalRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CancelDisplayVideo360AdvertiserLinkProposal, null, options, request);
      }
      /// <summary>
      /// Creates a CustomDimension.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.CustomDimension CreateCustomDimension(global::Google.Analytics.Admin.V1Alpha.CreateCustomDimensionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCustomDimension(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a CustomDimension.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.CustomDimension CreateCustomDimension(global::Google.Analytics.Admin.V1Alpha.CreateCustomDimensionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateCustomDimension, null, options, request);
      }
      /// <summary>
      /// Creates a CustomDimension.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.CustomDimension> CreateCustomDimensionAsync(global::Google.Analytics.Admin.V1Alpha.CreateCustomDimensionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCustomDimensionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a CustomDimension.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.CustomDimension> CreateCustomDimensionAsync(global::Google.Analytics.Admin.V1Alpha.CreateCustomDimensionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateCustomDimension, null, options, request);
      }
      /// <summary>
      /// Updates a CustomDimension on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.CustomDimension UpdateCustomDimension(global::Google.Analytics.Admin.V1Alpha.UpdateCustomDimensionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCustomDimension(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a CustomDimension on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.CustomDimension UpdateCustomDimension(global::Google.Analytics.Admin.V1Alpha.UpdateCustomDimensionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateCustomDimension, null, options, request);
      }
      /// <summary>
      /// Updates a CustomDimension on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.CustomDimension> UpdateCustomDimensionAsync(global::Google.Analytics.Admin.V1Alpha.UpdateCustomDimensionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCustomDimensionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a CustomDimension on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.CustomDimension> UpdateCustomDimensionAsync(global::Google.Analytics.Admin.V1Alpha.UpdateCustomDimensionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateCustomDimension, null, options, request);
      }
      /// <summary>
      /// Lists CustomDimensions on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListCustomDimensionsResponse ListCustomDimensions(global::Google.Analytics.Admin.V1Alpha.ListCustomDimensionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListCustomDimensions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists CustomDimensions on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListCustomDimensionsResponse ListCustomDimensions(global::Google.Analytics.Admin.V1Alpha.ListCustomDimensionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListCustomDimensions, null, options, request);
      }
      /// <summary>
      /// Lists CustomDimensions on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListCustomDimensionsResponse> ListCustomDimensionsAsync(global::Google.Analytics.Admin.V1Alpha.ListCustomDimensionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListCustomDimensionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists CustomDimensions on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListCustomDimensionsResponse> ListCustomDimensionsAsync(global::Google.Analytics.Admin.V1Alpha.ListCustomDimensionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListCustomDimensions, null, options, request);
      }
      /// <summary>
      /// Archives a CustomDimension on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty ArchiveCustomDimension(global::Google.Analytics.Admin.V1Alpha.ArchiveCustomDimensionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ArchiveCustomDimension(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Archives a CustomDimension on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty ArchiveCustomDimension(global::Google.Analytics.Admin.V1Alpha.ArchiveCustomDimensionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ArchiveCustomDimension, null, options, request);
      }
      /// <summary>
      /// Archives a CustomDimension on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> ArchiveCustomDimensionAsync(global::Google.Analytics.Admin.V1Alpha.ArchiveCustomDimensionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ArchiveCustomDimensionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Archives a CustomDimension on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> ArchiveCustomDimensionAsync(global::Google.Analytics.Admin.V1Alpha.ArchiveCustomDimensionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ArchiveCustomDimension, null, options, request);
      }
      /// <summary>
      /// Lookup for a single CustomDimension.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.CustomDimension GetCustomDimension(global::Google.Analytics.Admin.V1Alpha.GetCustomDimensionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCustomDimension(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single CustomDimension.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.CustomDimension GetCustomDimension(global::Google.Analytics.Admin.V1Alpha.GetCustomDimensionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCustomDimension, null, options, request);
      }
      /// <summary>
      /// Lookup for a single CustomDimension.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.CustomDimension> GetCustomDimensionAsync(global::Google.Analytics.Admin.V1Alpha.GetCustomDimensionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCustomDimensionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single CustomDimension.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.CustomDimension> GetCustomDimensionAsync(global::Google.Analytics.Admin.V1Alpha.GetCustomDimensionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCustomDimension, null, options, request);
      }
      /// <summary>
      /// Creates a CustomMetric.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.CustomMetric CreateCustomMetric(global::Google.Analytics.Admin.V1Alpha.CreateCustomMetricRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCustomMetric(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a CustomMetric.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.CustomMetric CreateCustomMetric(global::Google.Analytics.Admin.V1Alpha.CreateCustomMetricRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateCustomMetric, null, options, request);
      }
      /// <summary>
      /// Creates a CustomMetric.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.CustomMetric> CreateCustomMetricAsync(global::Google.Analytics.Admin.V1Alpha.CreateCustomMetricRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCustomMetricAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a CustomMetric.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.CustomMetric> CreateCustomMetricAsync(global::Google.Analytics.Admin.V1Alpha.CreateCustomMetricRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateCustomMetric, null, options, request);
      }
      /// <summary>
      /// Updates a CustomMetric on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.CustomMetric UpdateCustomMetric(global::Google.Analytics.Admin.V1Alpha.UpdateCustomMetricRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCustomMetric(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a CustomMetric on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.CustomMetric UpdateCustomMetric(global::Google.Analytics.Admin.V1Alpha.UpdateCustomMetricRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateCustomMetric, null, options, request);
      }
      /// <summary>
      /// Updates a CustomMetric on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.CustomMetric> UpdateCustomMetricAsync(global::Google.Analytics.Admin.V1Alpha.UpdateCustomMetricRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCustomMetricAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a CustomMetric on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.CustomMetric> UpdateCustomMetricAsync(global::Google.Analytics.Admin.V1Alpha.UpdateCustomMetricRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateCustomMetric, null, options, request);
      }
      /// <summary>
      /// Lists CustomMetrics on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListCustomMetricsResponse ListCustomMetrics(global::Google.Analytics.Admin.V1Alpha.ListCustomMetricsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListCustomMetrics(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists CustomMetrics on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListCustomMetricsResponse ListCustomMetrics(global::Google.Analytics.Admin.V1Alpha.ListCustomMetricsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListCustomMetrics, null, options, request);
      }
      /// <summary>
      /// Lists CustomMetrics on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListCustomMetricsResponse> ListCustomMetricsAsync(global::Google.Analytics.Admin.V1Alpha.ListCustomMetricsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListCustomMetricsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists CustomMetrics on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListCustomMetricsResponse> ListCustomMetricsAsync(global::Google.Analytics.Admin.V1Alpha.ListCustomMetricsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListCustomMetrics, null, options, request);
      }
      /// <summary>
      /// Archives a CustomMetric on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty ArchiveCustomMetric(global::Google.Analytics.Admin.V1Alpha.ArchiveCustomMetricRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ArchiveCustomMetric(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Archives a CustomMetric on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty ArchiveCustomMetric(global::Google.Analytics.Admin.V1Alpha.ArchiveCustomMetricRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ArchiveCustomMetric, null, options, request);
      }
      /// <summary>
      /// Archives a CustomMetric on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> ArchiveCustomMetricAsync(global::Google.Analytics.Admin.V1Alpha.ArchiveCustomMetricRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ArchiveCustomMetricAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Archives a CustomMetric on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> ArchiveCustomMetricAsync(global::Google.Analytics.Admin.V1Alpha.ArchiveCustomMetricRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ArchiveCustomMetric, null, options, request);
      }
      /// <summary>
      /// Lookup for a single CustomMetric.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.CustomMetric GetCustomMetric(global::Google.Analytics.Admin.V1Alpha.GetCustomMetricRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCustomMetric(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single CustomMetric.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.CustomMetric GetCustomMetric(global::Google.Analytics.Admin.V1Alpha.GetCustomMetricRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCustomMetric, null, options, request);
      }
      /// <summary>
      /// Lookup for a single CustomMetric.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.CustomMetric> GetCustomMetricAsync(global::Google.Analytics.Admin.V1Alpha.GetCustomMetricRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCustomMetricAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single CustomMetric.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.CustomMetric> GetCustomMetricAsync(global::Google.Analytics.Admin.V1Alpha.GetCustomMetricRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCustomMetric, null, options, request);
      }
      /// <summary>
      /// Returns the singleton data retention settings for this property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.DataRetentionSettings GetDataRetentionSettings(global::Google.Analytics.Admin.V1Alpha.GetDataRetentionSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDataRetentionSettings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the singleton data retention settings for this property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.DataRetentionSettings GetDataRetentionSettings(global::Google.Analytics.Admin.V1Alpha.GetDataRetentionSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDataRetentionSettings, null, options, request);
      }
      /// <summary>
      /// Returns the singleton data retention settings for this property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.DataRetentionSettings> GetDataRetentionSettingsAsync(global::Google.Analytics.Admin.V1Alpha.GetDataRetentionSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDataRetentionSettingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the singleton data retention settings for this property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.DataRetentionSettings> GetDataRetentionSettingsAsync(global::Google.Analytics.Admin.V1Alpha.GetDataRetentionSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDataRetentionSettings, null, options, request);
      }
      /// <summary>
      /// Updates the singleton data retention settings for this property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.DataRetentionSettings UpdateDataRetentionSettings(global::Google.Analytics.Admin.V1Alpha.UpdateDataRetentionSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateDataRetentionSettings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the singleton data retention settings for this property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.DataRetentionSettings UpdateDataRetentionSettings(global::Google.Analytics.Admin.V1Alpha.UpdateDataRetentionSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateDataRetentionSettings, null, options, request);
      }
      /// <summary>
      /// Updates the singleton data retention settings for this property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.DataRetentionSettings> UpdateDataRetentionSettingsAsync(global::Google.Analytics.Admin.V1Alpha.UpdateDataRetentionSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateDataRetentionSettingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the singleton data retention settings for this property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.DataRetentionSettings> UpdateDataRetentionSettingsAsync(global::Google.Analytics.Admin.V1Alpha.UpdateDataRetentionSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateDataRetentionSettings, null, options, request);
      }
      /// <summary>
      /// Creates a DataStream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.DataStream CreateDataStream(global::Google.Analytics.Admin.V1Alpha.CreateDataStreamRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateDataStream(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a DataStream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.DataStream CreateDataStream(global::Google.Analytics.Admin.V1Alpha.CreateDataStreamRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateDataStream, null, options, request);
      }
      /// <summary>
      /// Creates a DataStream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.DataStream> CreateDataStreamAsync(global::Google.Analytics.Admin.V1Alpha.CreateDataStreamRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateDataStreamAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a DataStream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.DataStream> CreateDataStreamAsync(global::Google.Analytics.Admin.V1Alpha.CreateDataStreamRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateDataStream, null, options, request);
      }
      /// <summary>
      /// Deletes a DataStream on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteDataStream(global::Google.Analytics.Admin.V1Alpha.DeleteDataStreamRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteDataStream(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a DataStream on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteDataStream(global::Google.Analytics.Admin.V1Alpha.DeleteDataStreamRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteDataStream, null, options, request);
      }
      /// <summary>
      /// Deletes a DataStream on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteDataStreamAsync(global::Google.Analytics.Admin.V1Alpha.DeleteDataStreamRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteDataStreamAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a DataStream on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteDataStreamAsync(global::Google.Analytics.Admin.V1Alpha.DeleteDataStreamRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteDataStream, null, options, request);
      }
      /// <summary>
      /// Updates a DataStream on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.DataStream UpdateDataStream(global::Google.Analytics.Admin.V1Alpha.UpdateDataStreamRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateDataStream(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a DataStream on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.DataStream UpdateDataStream(global::Google.Analytics.Admin.V1Alpha.UpdateDataStreamRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateDataStream, null, options, request);
      }
      /// <summary>
      /// Updates a DataStream on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.DataStream> UpdateDataStreamAsync(global::Google.Analytics.Admin.V1Alpha.UpdateDataStreamRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateDataStreamAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a DataStream on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.DataStream> UpdateDataStreamAsync(global::Google.Analytics.Admin.V1Alpha.UpdateDataStreamRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateDataStream, null, options, request);
      }
      /// <summary>
      /// Lists DataStreams on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListDataStreamsResponse ListDataStreams(global::Google.Analytics.Admin.V1Alpha.ListDataStreamsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDataStreams(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists DataStreams on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListDataStreamsResponse ListDataStreams(global::Google.Analytics.Admin.V1Alpha.ListDataStreamsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListDataStreams, null, options, request);
      }
      /// <summary>
      /// Lists DataStreams on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListDataStreamsResponse> ListDataStreamsAsync(global::Google.Analytics.Admin.V1Alpha.ListDataStreamsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDataStreamsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists DataStreams on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListDataStreamsResponse> ListDataStreamsAsync(global::Google.Analytics.Admin.V1Alpha.ListDataStreamsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListDataStreams, null, options, request);
      }
      /// <summary>
      /// Lookup for a single DataStream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.DataStream GetDataStream(global::Google.Analytics.Admin.V1Alpha.GetDataStreamRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDataStream(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single DataStream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.DataStream GetDataStream(global::Google.Analytics.Admin.V1Alpha.GetDataStreamRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDataStream, null, options, request);
      }
      /// <summary>
      /// Lookup for a single DataStream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.DataStream> GetDataStreamAsync(global::Google.Analytics.Admin.V1Alpha.GetDataStreamRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDataStreamAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single DataStream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.DataStream> GetDataStreamAsync(global::Google.Analytics.Admin.V1Alpha.GetDataStreamRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDataStream, null, options, request);
      }
      /// <summary>
      /// Lookup for a single Audience.
      /// Audiences created before 2020 may not be supported.
      /// Default audiences will not show filter definitions.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.Audience GetAudience(global::Google.Analytics.Admin.V1Alpha.GetAudienceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAudience(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single Audience.
      /// Audiences created before 2020 may not be supported.
      /// Default audiences will not show filter definitions.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.Audience GetAudience(global::Google.Analytics.Admin.V1Alpha.GetAudienceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAudience, null, options, request);
      }
      /// <summary>
      /// Lookup for a single Audience.
      /// Audiences created before 2020 may not be supported.
      /// Default audiences will not show filter definitions.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.Audience> GetAudienceAsync(global::Google.Analytics.Admin.V1Alpha.GetAudienceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAudienceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single Audience.
      /// Audiences created before 2020 may not be supported.
      /// Default audiences will not show filter definitions.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.Audience> GetAudienceAsync(global::Google.Analytics.Admin.V1Alpha.GetAudienceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAudience, null, options, request);
      }
      /// <summary>
      /// Lists Audiences on a property.
      /// Audiences created before 2020 may not be supported.
      /// Default audiences will not show filter definitions.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListAudiencesResponse ListAudiences(global::Google.Analytics.Admin.V1Alpha.ListAudiencesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAudiences(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists Audiences on a property.
      /// Audiences created before 2020 may not be supported.
      /// Default audiences will not show filter definitions.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListAudiencesResponse ListAudiences(global::Google.Analytics.Admin.V1Alpha.ListAudiencesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListAudiences, null, options, request);
      }
      /// <summary>
      /// Lists Audiences on a property.
      /// Audiences created before 2020 may not be supported.
      /// Default audiences will not show filter definitions.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListAudiencesResponse> ListAudiencesAsync(global::Google.Analytics.Admin.V1Alpha.ListAudiencesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAudiencesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists Audiences on a property.
      /// Audiences created before 2020 may not be supported.
      /// Default audiences will not show filter definitions.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListAudiencesResponse> ListAudiencesAsync(global::Google.Analytics.Admin.V1Alpha.ListAudiencesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListAudiences, null, options, request);
      }
      /// <summary>
      /// Creates an Audience.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.Audience CreateAudience(global::Google.Analytics.Admin.V1Alpha.CreateAudienceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAudience(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an Audience.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.Audience CreateAudience(global::Google.Analytics.Admin.V1Alpha.CreateAudienceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateAudience, null, options, request);
      }
      /// <summary>
      /// Creates an Audience.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.Audience> CreateAudienceAsync(global::Google.Analytics.Admin.V1Alpha.CreateAudienceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAudienceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an Audience.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.Audience> CreateAudienceAsync(global::Google.Analytics.Admin.V1Alpha.CreateAudienceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateAudience, null, options, request);
      }
      /// <summary>
      /// Updates an Audience on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.Audience UpdateAudience(global::Google.Analytics.Admin.V1Alpha.UpdateAudienceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAudience(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an Audience on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.Audience UpdateAudience(global::Google.Analytics.Admin.V1Alpha.UpdateAudienceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateAudience, null, options, request);
      }
      /// <summary>
      /// Updates an Audience on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.Audience> UpdateAudienceAsync(global::Google.Analytics.Admin.V1Alpha.UpdateAudienceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAudienceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an Audience on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.Audience> UpdateAudienceAsync(global::Google.Analytics.Admin.V1Alpha.UpdateAudienceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateAudience, null, options, request);
      }
      /// <summary>
      /// Archives an Audience on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty ArchiveAudience(global::Google.Analytics.Admin.V1Alpha.ArchiveAudienceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ArchiveAudience(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Archives an Audience on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty ArchiveAudience(global::Google.Analytics.Admin.V1Alpha.ArchiveAudienceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ArchiveAudience, null, options, request);
      }
      /// <summary>
      /// Archives an Audience on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> ArchiveAudienceAsync(global::Google.Analytics.Admin.V1Alpha.ArchiveAudienceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ArchiveAudienceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Archives an Audience on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> ArchiveAudienceAsync(global::Google.Analytics.Admin.V1Alpha.ArchiveAudienceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ArchiveAudience, null, options, request);
      }
      /// <summary>
      /// Look up a single SearchAds360Link
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.SearchAds360Link GetSearchAds360Link(global::Google.Analytics.Admin.V1Alpha.GetSearchAds360LinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSearchAds360Link(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Look up a single SearchAds360Link
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.SearchAds360Link GetSearchAds360Link(global::Google.Analytics.Admin.V1Alpha.GetSearchAds360LinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSearchAds360Link, null, options, request);
      }
      /// <summary>
      /// Look up a single SearchAds360Link
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.SearchAds360Link> GetSearchAds360LinkAsync(global::Google.Analytics.Admin.V1Alpha.GetSearchAds360LinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSearchAds360LinkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Look up a single SearchAds360Link
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.SearchAds360Link> GetSearchAds360LinkAsync(global::Google.Analytics.Admin.V1Alpha.GetSearchAds360LinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSearchAds360Link, null, options, request);
      }
      /// <summary>
      /// Lists all SearchAds360Links on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListSearchAds360LinksResponse ListSearchAds360Links(global::Google.Analytics.Admin.V1Alpha.ListSearchAds360LinksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSearchAds360Links(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all SearchAds360Links on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListSearchAds360LinksResponse ListSearchAds360Links(global::Google.Analytics.Admin.V1Alpha.ListSearchAds360LinksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListSearchAds360Links, null, options, request);
      }
      /// <summary>
      /// Lists all SearchAds360Links on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListSearchAds360LinksResponse> ListSearchAds360LinksAsync(global::Google.Analytics.Admin.V1Alpha.ListSearchAds360LinksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSearchAds360LinksAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all SearchAds360Links on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListSearchAds360LinksResponse> ListSearchAds360LinksAsync(global::Google.Analytics.Admin.V1Alpha.ListSearchAds360LinksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListSearchAds360Links, null, options, request);
      }
      /// <summary>
      /// Creates a SearchAds360Link.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.SearchAds360Link CreateSearchAds360Link(global::Google.Analytics.Admin.V1Alpha.CreateSearchAds360LinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateSearchAds360Link(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a SearchAds360Link.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.SearchAds360Link CreateSearchAds360Link(global::Google.Analytics.Admin.V1Alpha.CreateSearchAds360LinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateSearchAds360Link, null, options, request);
      }
      /// <summary>
      /// Creates a SearchAds360Link.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.SearchAds360Link> CreateSearchAds360LinkAsync(global::Google.Analytics.Admin.V1Alpha.CreateSearchAds360LinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateSearchAds360LinkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a SearchAds360Link.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.SearchAds360Link> CreateSearchAds360LinkAsync(global::Google.Analytics.Admin.V1Alpha.CreateSearchAds360LinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateSearchAds360Link, null, options, request);
      }
      /// <summary>
      /// Deletes a SearchAds360Link on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteSearchAds360Link(global::Google.Analytics.Admin.V1Alpha.DeleteSearchAds360LinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteSearchAds360Link(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a SearchAds360Link on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteSearchAds360Link(global::Google.Analytics.Admin.V1Alpha.DeleteSearchAds360LinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteSearchAds360Link, null, options, request);
      }
      /// <summary>
      /// Deletes a SearchAds360Link on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteSearchAds360LinkAsync(global::Google.Analytics.Admin.V1Alpha.DeleteSearchAds360LinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteSearchAds360LinkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a SearchAds360Link on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteSearchAds360LinkAsync(global::Google.Analytics.Admin.V1Alpha.DeleteSearchAds360LinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteSearchAds360Link, null, options, request);
      }
      /// <summary>
      /// Updates a SearchAds360Link on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.SearchAds360Link UpdateSearchAds360Link(global::Google.Analytics.Admin.V1Alpha.UpdateSearchAds360LinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateSearchAds360Link(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a SearchAds360Link on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.SearchAds360Link UpdateSearchAds360Link(global::Google.Analytics.Admin.V1Alpha.UpdateSearchAds360LinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateSearchAds360Link, null, options, request);
      }
      /// <summary>
      /// Updates a SearchAds360Link on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.SearchAds360Link> UpdateSearchAds360LinkAsync(global::Google.Analytics.Admin.V1Alpha.UpdateSearchAds360LinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateSearchAds360LinkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a SearchAds360Link on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.SearchAds360Link> UpdateSearchAds360LinkAsync(global::Google.Analytics.Admin.V1Alpha.UpdateSearchAds360LinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateSearchAds360Link, null, options, request);
      }
      /// <summary>
      /// Lookup for a AttributionSettings singleton.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.AttributionSettings GetAttributionSettings(global::Google.Analytics.Admin.V1Alpha.GetAttributionSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAttributionSettings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a AttributionSettings singleton.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.AttributionSettings GetAttributionSettings(global::Google.Analytics.Admin.V1Alpha.GetAttributionSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAttributionSettings, null, options, request);
      }
      /// <summary>
      /// Lookup for a AttributionSettings singleton.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.AttributionSettings> GetAttributionSettingsAsync(global::Google.Analytics.Admin.V1Alpha.GetAttributionSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAttributionSettingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a AttributionSettings singleton.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.AttributionSettings> GetAttributionSettingsAsync(global::Google.Analytics.Admin.V1Alpha.GetAttributionSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAttributionSettings, null, options, request);
      }
      /// <summary>
      /// Updates attribution settings on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.AttributionSettings UpdateAttributionSettings(global::Google.Analytics.Admin.V1Alpha.UpdateAttributionSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAttributionSettings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates attribution settings on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.AttributionSettings UpdateAttributionSettings(global::Google.Analytics.Admin.V1Alpha.UpdateAttributionSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateAttributionSettings, null, options, request);
      }
      /// <summary>
      /// Updates attribution settings on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.AttributionSettings> UpdateAttributionSettingsAsync(global::Google.Analytics.Admin.V1Alpha.UpdateAttributionSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAttributionSettingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates attribution settings on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.AttributionSettings> UpdateAttributionSettingsAsync(global::Google.Analytics.Admin.V1Alpha.UpdateAttributionSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateAttributionSettings, null, options, request);
      }
      /// <summary>
      /// Returns a customized report of data access records. The report provides
      /// records of each time a user reads Google Analytics reporting data. Access
      /// records are retained for up to 2 years.
      ///
      /// Data Access Reports can be requested for a property. Reports may be
      /// requested for any property, but dimensions that aren't related to quota can
      /// only be requested on Google Analytics 360 properties. This method is only
      /// available to Administrators.
      ///
      /// These data access records include GA UI Reporting, GA UI Explorations,
      /// GA Data API, and other products like Firebase &amp; Admob that can retrieve
      /// data from Google Analytics through a linkage. These records don't include
      /// property configuration changes like adding a stream or changing a
      /// property's time zone. For configuration change history, see
      /// [searchChangeHistoryEvents](https://developers.google.com/analytics/devguides/config/admin/v1/rest/v1alpha/accounts/searchChangeHistoryEvents).
      ///
      /// To give your feedback on this API, complete the [Google Analytics Access
      /// Reports
      /// feedback](https://docs.google.com/forms/d/e/1FAIpQLSdmEBUrMzAEdiEKk5TV5dEHvDUZDRlgWYdQdAeSdtR4hVjEhw/viewform)
      /// form.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.RunAccessReportResponse RunAccessReport(global::Google.Analytics.Admin.V1Alpha.RunAccessReportRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RunAccessReport(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns a customized report of data access records. The report provides
      /// records of each time a user reads Google Analytics reporting data. Access
      /// records are retained for up to 2 years.
      ///
      /// Data Access Reports can be requested for a property. Reports may be
      /// requested for any property, but dimensions that aren't related to quota can
      /// only be requested on Google Analytics 360 properties. This method is only
      /// available to Administrators.
      ///
      /// These data access records include GA UI Reporting, GA UI Explorations,
      /// GA Data API, and other products like Firebase &amp; Admob that can retrieve
      /// data from Google Analytics through a linkage. These records don't include
      /// property configuration changes like adding a stream or changing a
      /// property's time zone. For configuration change history, see
      /// [searchChangeHistoryEvents](https://developers.google.com/analytics/devguides/config/admin/v1/rest/v1alpha/accounts/searchChangeHistoryEvents).
      ///
      /// To give your feedback on this API, complete the [Google Analytics Access
      /// Reports
      /// feedback](https://docs.google.com/forms/d/e/1FAIpQLSdmEBUrMzAEdiEKk5TV5dEHvDUZDRlgWYdQdAeSdtR4hVjEhw/viewform)
      /// form.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.RunAccessReportResponse RunAccessReport(global::Google.Analytics.Admin.V1Alpha.RunAccessReportRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RunAccessReport, null, options, request);
      }
      /// <summary>
      /// Returns a customized report of data access records. The report provides
      /// records of each time a user reads Google Analytics reporting data. Access
      /// records are retained for up to 2 years.
      ///
      /// Data Access Reports can be requested for a property. Reports may be
      /// requested for any property, but dimensions that aren't related to quota can
      /// only be requested on Google Analytics 360 properties. This method is only
      /// available to Administrators.
      ///
      /// These data access records include GA UI Reporting, GA UI Explorations,
      /// GA Data API, and other products like Firebase &amp; Admob that can retrieve
      /// data from Google Analytics through a linkage. These records don't include
      /// property configuration changes like adding a stream or changing a
      /// property's time zone. For configuration change history, see
      /// [searchChangeHistoryEvents](https://developers.google.com/analytics/devguides/config/admin/v1/rest/v1alpha/accounts/searchChangeHistoryEvents).
      ///
      /// To give your feedback on this API, complete the [Google Analytics Access
      /// Reports
      /// feedback](https://docs.google.com/forms/d/e/1FAIpQLSdmEBUrMzAEdiEKk5TV5dEHvDUZDRlgWYdQdAeSdtR4hVjEhw/viewform)
      /// form.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.RunAccessReportResponse> RunAccessReportAsync(global::Google.Analytics.Admin.V1Alpha.RunAccessReportRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RunAccessReportAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns a customized report of data access records. The report provides
      /// records of each time a user reads Google Analytics reporting data. Access
      /// records are retained for up to 2 years.
      ///
      /// Data Access Reports can be requested for a property. Reports may be
      /// requested for any property, but dimensions that aren't related to quota can
      /// only be requested on Google Analytics 360 properties. This method is only
      /// available to Administrators.
      ///
      /// These data access records include GA UI Reporting, GA UI Explorations,
      /// GA Data API, and other products like Firebase &amp; Admob that can retrieve
      /// data from Google Analytics through a linkage. These records don't include
      /// property configuration changes like adding a stream or changing a
      /// property's time zone. For configuration change history, see
      /// [searchChangeHistoryEvents](https://developers.google.com/analytics/devguides/config/admin/v1/rest/v1alpha/accounts/searchChangeHistoryEvents).
      ///
      /// To give your feedback on this API, complete the [Google Analytics Access
      /// Reports
      /// feedback](https://docs.google.com/forms/d/e/1FAIpQLSdmEBUrMzAEdiEKk5TV5dEHvDUZDRlgWYdQdAeSdtR4hVjEhw/viewform)
      /// form.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.RunAccessReportResponse> RunAccessReportAsync(global::Google.Analytics.Admin.V1Alpha.RunAccessReportRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RunAccessReport, null, options, request);
      }
      /// <summary>
      /// Creates an access binding on an account or property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.AccessBinding CreateAccessBinding(global::Google.Analytics.Admin.V1Alpha.CreateAccessBindingRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAccessBinding(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an access binding on an account or property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.AccessBinding CreateAccessBinding(global::Google.Analytics.Admin.V1Alpha.CreateAccessBindingRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateAccessBinding, null, options, request);
      }
      /// <summary>
      /// Creates an access binding on an account or property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.AccessBinding> CreateAccessBindingAsync(global::Google.Analytics.Admin.V1Alpha.CreateAccessBindingRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAccessBindingAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an access binding on an account or property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.AccessBinding> CreateAccessBindingAsync(global::Google.Analytics.Admin.V1Alpha.CreateAccessBindingRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateAccessBinding, null, options, request);
      }
      /// <summary>
      /// Gets information about an access binding.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.AccessBinding GetAccessBinding(global::Google.Analytics.Admin.V1Alpha.GetAccessBindingRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAccessBinding(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets information about an access binding.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.AccessBinding GetAccessBinding(global::Google.Analytics.Admin.V1Alpha.GetAccessBindingRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAccessBinding, null, options, request);
      }
      /// <summary>
      /// Gets information about an access binding.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.AccessBinding> GetAccessBindingAsync(global::Google.Analytics.Admin.V1Alpha.GetAccessBindingRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAccessBindingAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets information about an access binding.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.AccessBinding> GetAccessBindingAsync(global::Google.Analytics.Admin.V1Alpha.GetAccessBindingRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAccessBinding, null, options, request);
      }
      /// <summary>
      /// Updates an access binding on an account or property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.AccessBinding UpdateAccessBinding(global::Google.Analytics.Admin.V1Alpha.UpdateAccessBindingRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAccessBinding(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an access binding on an account or property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.AccessBinding UpdateAccessBinding(global::Google.Analytics.Admin.V1Alpha.UpdateAccessBindingRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateAccessBinding, null, options, request);
      }
      /// <summary>
      /// Updates an access binding on an account or property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.AccessBinding> UpdateAccessBindingAsync(global::Google.Analytics.Admin.V1Alpha.UpdateAccessBindingRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAccessBindingAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an access binding on an account or property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.AccessBinding> UpdateAccessBindingAsync(global::Google.Analytics.Admin.V1Alpha.UpdateAccessBindingRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateAccessBinding, null, options, request);
      }
      /// <summary>
      /// Deletes an access binding on an account or property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteAccessBinding(global::Google.Analytics.Admin.V1Alpha.DeleteAccessBindingRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAccessBinding(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes an access binding on an account or property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteAccessBinding(global::Google.Analytics.Admin.V1Alpha.DeleteAccessBindingRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteAccessBinding, null, options, request);
      }
      /// <summary>
      /// Deletes an access binding on an account or property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteAccessBindingAsync(global::Google.Analytics.Admin.V1Alpha.DeleteAccessBindingRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAccessBindingAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes an access binding on an account or property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteAccessBindingAsync(global::Google.Analytics.Admin.V1Alpha.DeleteAccessBindingRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteAccessBinding, null, options, request);
      }
      /// <summary>
      /// Lists all access bindings on an account or property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListAccessBindingsResponse ListAccessBindings(global::Google.Analytics.Admin.V1Alpha.ListAccessBindingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAccessBindings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all access bindings on an account or property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListAccessBindingsResponse ListAccessBindings(global::Google.Analytics.Admin.V1Alpha.ListAccessBindingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListAccessBindings, null, options, request);
      }
      /// <summary>
      /// Lists all access bindings on an account or property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListAccessBindingsResponse> ListAccessBindingsAsync(global::Google.Analytics.Admin.V1Alpha.ListAccessBindingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAccessBindingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all access bindings on an account or property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListAccessBindingsResponse> ListAccessBindingsAsync(global::Google.Analytics.Admin.V1Alpha.ListAccessBindingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListAccessBindings, null, options, request);
      }
      /// <summary>
      /// Creates information about multiple access bindings to an account or
      /// property.
      ///
      /// This method is transactional. If any AccessBinding cannot be created, none
      /// of the AccessBindings will be created.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.BatchCreateAccessBindingsResponse BatchCreateAccessBindings(global::Google.Analytics.Admin.V1Alpha.BatchCreateAccessBindingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchCreateAccessBindings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates information about multiple access bindings to an account or
      /// property.
      ///
      /// This method is transactional. If any AccessBinding cannot be created, none
      /// of the AccessBindings will be created.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.BatchCreateAccessBindingsResponse BatchCreateAccessBindings(global::Google.Analytics.Admin.V1Alpha.BatchCreateAccessBindingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BatchCreateAccessBindings, null, options, request);
      }
      /// <summary>
      /// Creates information about multiple access bindings to an account or
      /// property.
      ///
      /// This method is transactional. If any AccessBinding cannot be created, none
      /// of the AccessBindings will be created.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.BatchCreateAccessBindingsResponse> BatchCreateAccessBindingsAsync(global::Google.Analytics.Admin.V1Alpha.BatchCreateAccessBindingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchCreateAccessBindingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates information about multiple access bindings to an account or
      /// property.
      ///
      /// This method is transactional. If any AccessBinding cannot be created, none
      /// of the AccessBindings will be created.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.BatchCreateAccessBindingsResponse> BatchCreateAccessBindingsAsync(global::Google.Analytics.Admin.V1Alpha.BatchCreateAccessBindingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BatchCreateAccessBindings, null, options, request);
      }
      /// <summary>
      /// Gets information about multiple access bindings to an account or property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.BatchGetAccessBindingsResponse BatchGetAccessBindings(global::Google.Analytics.Admin.V1Alpha.BatchGetAccessBindingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchGetAccessBindings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets information about multiple access bindings to an account or property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.BatchGetAccessBindingsResponse BatchGetAccessBindings(global::Google.Analytics.Admin.V1Alpha.BatchGetAccessBindingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BatchGetAccessBindings, null, options, request);
      }
      /// <summary>
      /// Gets information about multiple access bindings to an account or property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.BatchGetAccessBindingsResponse> BatchGetAccessBindingsAsync(global::Google.Analytics.Admin.V1Alpha.BatchGetAccessBindingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchGetAccessBindingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets information about multiple access bindings to an account or property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.BatchGetAccessBindingsResponse> BatchGetAccessBindingsAsync(global::Google.Analytics.Admin.V1Alpha.BatchGetAccessBindingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BatchGetAccessBindings, null, options, request);
      }
      /// <summary>
      /// Updates information about multiple access bindings to an account or
      /// property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.BatchUpdateAccessBindingsResponse BatchUpdateAccessBindings(global::Google.Analytics.Admin.V1Alpha.BatchUpdateAccessBindingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchUpdateAccessBindings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates information about multiple access bindings to an account or
      /// property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.BatchUpdateAccessBindingsResponse BatchUpdateAccessBindings(global::Google.Analytics.Admin.V1Alpha.BatchUpdateAccessBindingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BatchUpdateAccessBindings, null, options, request);
      }
      /// <summary>
      /// Updates information about multiple access bindings to an account or
      /// property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.BatchUpdateAccessBindingsResponse> BatchUpdateAccessBindingsAsync(global::Google.Analytics.Admin.V1Alpha.BatchUpdateAccessBindingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchUpdateAccessBindingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates information about multiple access bindings to an account or
      /// property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.BatchUpdateAccessBindingsResponse> BatchUpdateAccessBindingsAsync(global::Google.Analytics.Admin.V1Alpha.BatchUpdateAccessBindingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BatchUpdateAccessBindings, null, options, request);
      }
      /// <summary>
      /// Deletes information about multiple users' links to an account or property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty BatchDeleteAccessBindings(global::Google.Analytics.Admin.V1Alpha.BatchDeleteAccessBindingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchDeleteAccessBindings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes information about multiple users' links to an account or property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty BatchDeleteAccessBindings(global::Google.Analytics.Admin.V1Alpha.BatchDeleteAccessBindingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BatchDeleteAccessBindings, null, options, request);
      }
      /// <summary>
      /// Deletes information about multiple users' links to an account or property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> BatchDeleteAccessBindingsAsync(global::Google.Analytics.Admin.V1Alpha.BatchDeleteAccessBindingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchDeleteAccessBindingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes information about multiple users' links to an account or property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> BatchDeleteAccessBindingsAsync(global::Google.Analytics.Admin.V1Alpha.BatchDeleteAccessBindingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BatchDeleteAccessBindings, null, options, request);
      }
      /// <summary>
      /// Lookup for a single ExpandedDataSet.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ExpandedDataSet GetExpandedDataSet(global::Google.Analytics.Admin.V1Alpha.GetExpandedDataSetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetExpandedDataSet(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single ExpandedDataSet.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ExpandedDataSet GetExpandedDataSet(global::Google.Analytics.Admin.V1Alpha.GetExpandedDataSetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetExpandedDataSet, null, options, request);
      }
      /// <summary>
      /// Lookup for a single ExpandedDataSet.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ExpandedDataSet> GetExpandedDataSetAsync(global::Google.Analytics.Admin.V1Alpha.GetExpandedDataSetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetExpandedDataSetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single ExpandedDataSet.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ExpandedDataSet> GetExpandedDataSetAsync(global::Google.Analytics.Admin.V1Alpha.GetExpandedDataSetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetExpandedDataSet, null, options, request);
      }
      /// <summary>
      /// Lists ExpandedDataSets on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListExpandedDataSetsResponse ListExpandedDataSets(global::Google.Analytics.Admin.V1Alpha.ListExpandedDataSetsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListExpandedDataSets(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists ExpandedDataSets on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListExpandedDataSetsResponse ListExpandedDataSets(global::Google.Analytics.Admin.V1Alpha.ListExpandedDataSetsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListExpandedDataSets, null, options, request);
      }
      /// <summary>
      /// Lists ExpandedDataSets on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListExpandedDataSetsResponse> ListExpandedDataSetsAsync(global::Google.Analytics.Admin.V1Alpha.ListExpandedDataSetsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListExpandedDataSetsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists ExpandedDataSets on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListExpandedDataSetsResponse> ListExpandedDataSetsAsync(global::Google.Analytics.Admin.V1Alpha.ListExpandedDataSetsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListExpandedDataSets, null, options, request);
      }
      /// <summary>
      /// Creates a ExpandedDataSet.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ExpandedDataSet CreateExpandedDataSet(global::Google.Analytics.Admin.V1Alpha.CreateExpandedDataSetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateExpandedDataSet(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a ExpandedDataSet.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ExpandedDataSet CreateExpandedDataSet(global::Google.Analytics.Admin.V1Alpha.CreateExpandedDataSetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateExpandedDataSet, null, options, request);
      }
      /// <summary>
      /// Creates a ExpandedDataSet.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ExpandedDataSet> CreateExpandedDataSetAsync(global::Google.Analytics.Admin.V1Alpha.CreateExpandedDataSetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateExpandedDataSetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a ExpandedDataSet.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ExpandedDataSet> CreateExpandedDataSetAsync(global::Google.Analytics.Admin.V1Alpha.CreateExpandedDataSetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateExpandedDataSet, null, options, request);
      }
      /// <summary>
      /// Updates a ExpandedDataSet on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ExpandedDataSet UpdateExpandedDataSet(global::Google.Analytics.Admin.V1Alpha.UpdateExpandedDataSetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateExpandedDataSet(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a ExpandedDataSet on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ExpandedDataSet UpdateExpandedDataSet(global::Google.Analytics.Admin.V1Alpha.UpdateExpandedDataSetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateExpandedDataSet, null, options, request);
      }
      /// <summary>
      /// Updates a ExpandedDataSet on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ExpandedDataSet> UpdateExpandedDataSetAsync(global::Google.Analytics.Admin.V1Alpha.UpdateExpandedDataSetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateExpandedDataSetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a ExpandedDataSet on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ExpandedDataSet> UpdateExpandedDataSetAsync(global::Google.Analytics.Admin.V1Alpha.UpdateExpandedDataSetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateExpandedDataSet, null, options, request);
      }
      /// <summary>
      /// Deletes a ExpandedDataSet on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteExpandedDataSet(global::Google.Analytics.Admin.V1Alpha.DeleteExpandedDataSetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteExpandedDataSet(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a ExpandedDataSet on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteExpandedDataSet(global::Google.Analytics.Admin.V1Alpha.DeleteExpandedDataSetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteExpandedDataSet, null, options, request);
      }
      /// <summary>
      /// Deletes a ExpandedDataSet on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteExpandedDataSetAsync(global::Google.Analytics.Admin.V1Alpha.DeleteExpandedDataSetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteExpandedDataSetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a ExpandedDataSet on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteExpandedDataSetAsync(global::Google.Analytics.Admin.V1Alpha.DeleteExpandedDataSetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteExpandedDataSet, null, options, request);
      }
      /// <summary>
      /// Lookup for a single ChannelGroup.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ChannelGroup GetChannelGroup(global::Google.Analytics.Admin.V1Alpha.GetChannelGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetChannelGroup(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single ChannelGroup.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ChannelGroup GetChannelGroup(global::Google.Analytics.Admin.V1Alpha.GetChannelGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetChannelGroup, null, options, request);
      }
      /// <summary>
      /// Lookup for a single ChannelGroup.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ChannelGroup> GetChannelGroupAsync(global::Google.Analytics.Admin.V1Alpha.GetChannelGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetChannelGroupAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single ChannelGroup.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ChannelGroup> GetChannelGroupAsync(global::Google.Analytics.Admin.V1Alpha.GetChannelGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetChannelGroup, null, options, request);
      }
      /// <summary>
      /// Lists ChannelGroups on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListChannelGroupsResponse ListChannelGroups(global::Google.Analytics.Admin.V1Alpha.ListChannelGroupsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListChannelGroups(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists ChannelGroups on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListChannelGroupsResponse ListChannelGroups(global::Google.Analytics.Admin.V1Alpha.ListChannelGroupsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListChannelGroups, null, options, request);
      }
      /// <summary>
      /// Lists ChannelGroups on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListChannelGroupsResponse> ListChannelGroupsAsync(global::Google.Analytics.Admin.V1Alpha.ListChannelGroupsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListChannelGroupsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists ChannelGroups on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListChannelGroupsResponse> ListChannelGroupsAsync(global::Google.Analytics.Admin.V1Alpha.ListChannelGroupsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListChannelGroups, null, options, request);
      }
      /// <summary>
      /// Creates a ChannelGroup.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ChannelGroup CreateChannelGroup(global::Google.Analytics.Admin.V1Alpha.CreateChannelGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateChannelGroup(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a ChannelGroup.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ChannelGroup CreateChannelGroup(global::Google.Analytics.Admin.V1Alpha.CreateChannelGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateChannelGroup, null, options, request);
      }
      /// <summary>
      /// Creates a ChannelGroup.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ChannelGroup> CreateChannelGroupAsync(global::Google.Analytics.Admin.V1Alpha.CreateChannelGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateChannelGroupAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a ChannelGroup.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ChannelGroup> CreateChannelGroupAsync(global::Google.Analytics.Admin.V1Alpha.CreateChannelGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateChannelGroup, null, options, request);
      }
      /// <summary>
      /// Updates a ChannelGroup.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ChannelGroup UpdateChannelGroup(global::Google.Analytics.Admin.V1Alpha.UpdateChannelGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateChannelGroup(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a ChannelGroup.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ChannelGroup UpdateChannelGroup(global::Google.Analytics.Admin.V1Alpha.UpdateChannelGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateChannelGroup, null, options, request);
      }
      /// <summary>
      /// Updates a ChannelGroup.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ChannelGroup> UpdateChannelGroupAsync(global::Google.Analytics.Admin.V1Alpha.UpdateChannelGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateChannelGroupAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a ChannelGroup.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ChannelGroup> UpdateChannelGroupAsync(global::Google.Analytics.Admin.V1Alpha.UpdateChannelGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateChannelGroup, null, options, request);
      }
      /// <summary>
      /// Deletes a ChannelGroup on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteChannelGroup(global::Google.Analytics.Admin.V1Alpha.DeleteChannelGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteChannelGroup(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a ChannelGroup on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteChannelGroup(global::Google.Analytics.Admin.V1Alpha.DeleteChannelGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteChannelGroup, null, options, request);
      }
      /// <summary>
      /// Deletes a ChannelGroup on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteChannelGroupAsync(global::Google.Analytics.Admin.V1Alpha.DeleteChannelGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteChannelGroupAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a ChannelGroup on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteChannelGroupAsync(global::Google.Analytics.Admin.V1Alpha.DeleteChannelGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteChannelGroup, null, options, request);
      }
      /// <summary>
      /// Sets the opt out status for the automated GA4 setup process for a UA
      /// property.
      /// Note: this has no effect on GA4 property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.SetAutomatedGa4ConfigurationOptOutResponse SetAutomatedGa4ConfigurationOptOut(global::Google.Analytics.Admin.V1Alpha.SetAutomatedGa4ConfigurationOptOutRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetAutomatedGa4ConfigurationOptOut(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sets the opt out status for the automated GA4 setup process for a UA
      /// property.
      /// Note: this has no effect on GA4 property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.SetAutomatedGa4ConfigurationOptOutResponse SetAutomatedGa4ConfigurationOptOut(global::Google.Analytics.Admin.V1Alpha.SetAutomatedGa4ConfigurationOptOutRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetAutomatedGa4ConfigurationOptOut, null, options, request);
      }
      /// <summary>
      /// Sets the opt out status for the automated GA4 setup process for a UA
      /// property.
      /// Note: this has no effect on GA4 property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.SetAutomatedGa4ConfigurationOptOutResponse> SetAutomatedGa4ConfigurationOptOutAsync(global::Google.Analytics.Admin.V1Alpha.SetAutomatedGa4ConfigurationOptOutRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetAutomatedGa4ConfigurationOptOutAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sets the opt out status for the automated GA4 setup process for a UA
      /// property.
      /// Note: this has no effect on GA4 property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.SetAutomatedGa4ConfigurationOptOutResponse> SetAutomatedGa4ConfigurationOptOutAsync(global::Google.Analytics.Admin.V1Alpha.SetAutomatedGa4ConfigurationOptOutRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetAutomatedGa4ConfigurationOptOut, null, options, request);
      }
      /// <summary>
      /// Fetches the opt out status for the automated GA4 setup process for a UA
      /// property.
      /// Note: this has no effect on GA4 property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.FetchAutomatedGa4ConfigurationOptOutResponse FetchAutomatedGa4ConfigurationOptOut(global::Google.Analytics.Admin.V1Alpha.FetchAutomatedGa4ConfigurationOptOutRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return FetchAutomatedGa4ConfigurationOptOut(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Fetches the opt out status for the automated GA4 setup process for a UA
      /// property.
      /// Note: this has no effect on GA4 property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.FetchAutomatedGa4ConfigurationOptOutResponse FetchAutomatedGa4ConfigurationOptOut(global::Google.Analytics.Admin.V1Alpha.FetchAutomatedGa4ConfigurationOptOutRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_FetchAutomatedGa4ConfigurationOptOut, null, options, request);
      }
      /// <summary>
      /// Fetches the opt out status for the automated GA4 setup process for a UA
      /// property.
      /// Note: this has no effect on GA4 property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.FetchAutomatedGa4ConfigurationOptOutResponse> FetchAutomatedGa4ConfigurationOptOutAsync(global::Google.Analytics.Admin.V1Alpha.FetchAutomatedGa4ConfigurationOptOutRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return FetchAutomatedGa4ConfigurationOptOutAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Fetches the opt out status for the automated GA4 setup process for a UA
      /// property.
      /// Note: this has no effect on GA4 property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.FetchAutomatedGa4ConfigurationOptOutResponse> FetchAutomatedGa4ConfigurationOptOutAsync(global::Google.Analytics.Admin.V1Alpha.FetchAutomatedGa4ConfigurationOptOutRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_FetchAutomatedGa4ConfigurationOptOut, null, options, request);
      }
      /// <summary>
      /// Creates a BigQueryLink.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.BigQueryLink CreateBigQueryLink(global::Google.Analytics.Admin.V1Alpha.CreateBigQueryLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateBigQueryLink(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a BigQueryLink.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.BigQueryLink CreateBigQueryLink(global::Google.Analytics.Admin.V1Alpha.CreateBigQueryLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateBigQueryLink, null, options, request);
      }
      /// <summary>
      /// Creates a BigQueryLink.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.BigQueryLink> CreateBigQueryLinkAsync(global::Google.Analytics.Admin.V1Alpha.CreateBigQueryLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateBigQueryLinkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a BigQueryLink.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.BigQueryLink> CreateBigQueryLinkAsync(global::Google.Analytics.Admin.V1Alpha.CreateBigQueryLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateBigQueryLink, null, options, request);
      }
      /// <summary>
      /// Lookup for a single BigQuery Link.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.BigQueryLink GetBigQueryLink(global::Google.Analytics.Admin.V1Alpha.GetBigQueryLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBigQueryLink(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single BigQuery Link.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.BigQueryLink GetBigQueryLink(global::Google.Analytics.Admin.V1Alpha.GetBigQueryLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetBigQueryLink, null, options, request);
      }
      /// <summary>
      /// Lookup for a single BigQuery Link.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.BigQueryLink> GetBigQueryLinkAsync(global::Google.Analytics.Admin.V1Alpha.GetBigQueryLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBigQueryLinkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single BigQuery Link.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.BigQueryLink> GetBigQueryLinkAsync(global::Google.Analytics.Admin.V1Alpha.GetBigQueryLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetBigQueryLink, null, options, request);
      }
      /// <summary>
      /// Lists BigQuery Links on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListBigQueryLinksResponse ListBigQueryLinks(global::Google.Analytics.Admin.V1Alpha.ListBigQueryLinksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListBigQueryLinks(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists BigQuery Links on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListBigQueryLinksResponse ListBigQueryLinks(global::Google.Analytics.Admin.V1Alpha.ListBigQueryLinksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListBigQueryLinks, null, options, request);
      }
      /// <summary>
      /// Lists BigQuery Links on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListBigQueryLinksResponse> ListBigQueryLinksAsync(global::Google.Analytics.Admin.V1Alpha.ListBigQueryLinksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListBigQueryLinksAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists BigQuery Links on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListBigQueryLinksResponse> ListBigQueryLinksAsync(global::Google.Analytics.Admin.V1Alpha.ListBigQueryLinksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListBigQueryLinks, null, options, request);
      }
      /// <summary>
      /// Deletes a BigQueryLink on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteBigQueryLink(global::Google.Analytics.Admin.V1Alpha.DeleteBigQueryLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteBigQueryLink(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a BigQueryLink on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteBigQueryLink(global::Google.Analytics.Admin.V1Alpha.DeleteBigQueryLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteBigQueryLink, null, options, request);
      }
      /// <summary>
      /// Deletes a BigQueryLink on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteBigQueryLinkAsync(global::Google.Analytics.Admin.V1Alpha.DeleteBigQueryLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteBigQueryLinkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a BigQueryLink on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteBigQueryLinkAsync(global::Google.Analytics.Admin.V1Alpha.DeleteBigQueryLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteBigQueryLink, null, options, request);
      }
      /// <summary>
      /// Updates a BigQueryLink.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.BigQueryLink UpdateBigQueryLink(global::Google.Analytics.Admin.V1Alpha.UpdateBigQueryLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateBigQueryLink(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a BigQueryLink.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.BigQueryLink UpdateBigQueryLink(global::Google.Analytics.Admin.V1Alpha.UpdateBigQueryLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateBigQueryLink, null, options, request);
      }
      /// <summary>
      /// Updates a BigQueryLink.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.BigQueryLink> UpdateBigQueryLinkAsync(global::Google.Analytics.Admin.V1Alpha.UpdateBigQueryLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateBigQueryLinkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a BigQueryLink.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.BigQueryLink> UpdateBigQueryLinkAsync(global::Google.Analytics.Admin.V1Alpha.UpdateBigQueryLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateBigQueryLink, null, options, request);
      }
      /// <summary>
      /// Returns the enhanced measurement settings for this data stream.
      /// Note that the stream must enable enhanced measurement for these settings to
      /// take effect.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.EnhancedMeasurementSettings GetEnhancedMeasurementSettings(global::Google.Analytics.Admin.V1Alpha.GetEnhancedMeasurementSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEnhancedMeasurementSettings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the enhanced measurement settings for this data stream.
      /// Note that the stream must enable enhanced measurement for these settings to
      /// take effect.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.EnhancedMeasurementSettings GetEnhancedMeasurementSettings(global::Google.Analytics.Admin.V1Alpha.GetEnhancedMeasurementSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetEnhancedMeasurementSettings, null, options, request);
      }
      /// <summary>
      /// Returns the enhanced measurement settings for this data stream.
      /// Note that the stream must enable enhanced measurement for these settings to
      /// take effect.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.EnhancedMeasurementSettings> GetEnhancedMeasurementSettingsAsync(global::Google.Analytics.Admin.V1Alpha.GetEnhancedMeasurementSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEnhancedMeasurementSettingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the enhanced measurement settings for this data stream.
      /// Note that the stream must enable enhanced measurement for these settings to
      /// take effect.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.EnhancedMeasurementSettings> GetEnhancedMeasurementSettingsAsync(global::Google.Analytics.Admin.V1Alpha.GetEnhancedMeasurementSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetEnhancedMeasurementSettings, null, options, request);
      }
      /// <summary>
      /// Updates the enhanced measurement settings for this data stream.
      /// Note that the stream must enable enhanced measurement for these settings to
      /// take effect.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.EnhancedMeasurementSettings UpdateEnhancedMeasurementSettings(global::Google.Analytics.Admin.V1Alpha.UpdateEnhancedMeasurementSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateEnhancedMeasurementSettings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the enhanced measurement settings for this data stream.
      /// Note that the stream must enable enhanced measurement for these settings to
      /// take effect.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.EnhancedMeasurementSettings UpdateEnhancedMeasurementSettings(global::Google.Analytics.Admin.V1Alpha.UpdateEnhancedMeasurementSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateEnhancedMeasurementSettings, null, options, request);
      }
      /// <summary>
      /// Updates the enhanced measurement settings for this data stream.
      /// Note that the stream must enable enhanced measurement for these settings to
      /// take effect.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.EnhancedMeasurementSettings> UpdateEnhancedMeasurementSettingsAsync(global::Google.Analytics.Admin.V1Alpha.UpdateEnhancedMeasurementSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateEnhancedMeasurementSettingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the enhanced measurement settings for this data stream.
      /// Note that the stream must enable enhanced measurement for these settings to
      /// take effect.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.EnhancedMeasurementSettings> UpdateEnhancedMeasurementSettingsAsync(global::Google.Analytics.Admin.V1Alpha.UpdateEnhancedMeasurementSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateEnhancedMeasurementSettings, null, options, request);
      }
      /// <summary>
      /// Creates a connected site tag for a Universal Analytics property. You can
      /// create a maximum of 20 connected site tags per property.
      /// Note: This API cannot be used on GA4 properties.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.CreateConnectedSiteTagResponse CreateConnectedSiteTag(global::Google.Analytics.Admin.V1Alpha.CreateConnectedSiteTagRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateConnectedSiteTag(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a connected site tag for a Universal Analytics property. You can
      /// create a maximum of 20 connected site tags per property.
      /// Note: This API cannot be used on GA4 properties.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.CreateConnectedSiteTagResponse CreateConnectedSiteTag(global::Google.Analytics.Admin.V1Alpha.CreateConnectedSiteTagRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateConnectedSiteTag, null, options, request);
      }
      /// <summary>
      /// Creates a connected site tag for a Universal Analytics property. You can
      /// create a maximum of 20 connected site tags per property.
      /// Note: This API cannot be used on GA4 properties.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.CreateConnectedSiteTagResponse> CreateConnectedSiteTagAsync(global::Google.Analytics.Admin.V1Alpha.CreateConnectedSiteTagRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateConnectedSiteTagAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a connected site tag for a Universal Analytics property. You can
      /// create a maximum of 20 connected site tags per property.
      /// Note: This API cannot be used on GA4 properties.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.CreateConnectedSiteTagResponse> CreateConnectedSiteTagAsync(global::Google.Analytics.Admin.V1Alpha.CreateConnectedSiteTagRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateConnectedSiteTag, null, options, request);
      }
      /// <summary>
      /// Deletes a connected site tag for a Universal Analytics property.
      /// Note: this has no effect on GA4 properties.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteConnectedSiteTag(global::Google.Analytics.Admin.V1Alpha.DeleteConnectedSiteTagRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteConnectedSiteTag(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a connected site tag for a Universal Analytics property.
      /// Note: this has no effect on GA4 properties.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteConnectedSiteTag(global::Google.Analytics.Admin.V1Alpha.DeleteConnectedSiteTagRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteConnectedSiteTag, null, options, request);
      }
      /// <summary>
      /// Deletes a connected site tag for a Universal Analytics property.
      /// Note: this has no effect on GA4 properties.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteConnectedSiteTagAsync(global::Google.Analytics.Admin.V1Alpha.DeleteConnectedSiteTagRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteConnectedSiteTagAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a connected site tag for a Universal Analytics property.
      /// Note: this has no effect on GA4 properties.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteConnectedSiteTagAsync(global::Google.Analytics.Admin.V1Alpha.DeleteConnectedSiteTagRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteConnectedSiteTag, null, options, request);
      }
      /// <summary>
      /// Lists the connected site tags for a Universal Analytics property. A maximum
      /// of 20 connected site tags will be returned. Note: this has no effect on GA4
      /// property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListConnectedSiteTagsResponse ListConnectedSiteTags(global::Google.Analytics.Admin.V1Alpha.ListConnectedSiteTagsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListConnectedSiteTags(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the connected site tags for a Universal Analytics property. A maximum
      /// of 20 connected site tags will be returned. Note: this has no effect on GA4
      /// property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListConnectedSiteTagsResponse ListConnectedSiteTags(global::Google.Analytics.Admin.V1Alpha.ListConnectedSiteTagsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListConnectedSiteTags, null, options, request);
      }
      /// <summary>
      /// Lists the connected site tags for a Universal Analytics property. A maximum
      /// of 20 connected site tags will be returned. Note: this has no effect on GA4
      /// property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListConnectedSiteTagsResponse> ListConnectedSiteTagsAsync(global::Google.Analytics.Admin.V1Alpha.ListConnectedSiteTagsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListConnectedSiteTagsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the connected site tags for a Universal Analytics property. A maximum
      /// of 20 connected site tags will be returned. Note: this has no effect on GA4
      /// property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListConnectedSiteTagsResponse> ListConnectedSiteTagsAsync(global::Google.Analytics.Admin.V1Alpha.ListConnectedSiteTagsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListConnectedSiteTags, null, options, request);
      }
      /// <summary>
      /// Given a specified UA property, looks up the GA4 property connected to it.
      /// Note: this cannot be used with GA4 properties.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.FetchConnectedGa4PropertyResponse FetchConnectedGa4Property(global::Google.Analytics.Admin.V1Alpha.FetchConnectedGa4PropertyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return FetchConnectedGa4Property(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Given a specified UA property, looks up the GA4 property connected to it.
      /// Note: this cannot be used with GA4 properties.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.FetchConnectedGa4PropertyResponse FetchConnectedGa4Property(global::Google.Analytics.Admin.V1Alpha.FetchConnectedGa4PropertyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_FetchConnectedGa4Property, null, options, request);
      }
      /// <summary>
      /// Given a specified UA property, looks up the GA4 property connected to it.
      /// Note: this cannot be used with GA4 properties.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.FetchConnectedGa4PropertyResponse> FetchConnectedGa4PropertyAsync(global::Google.Analytics.Admin.V1Alpha.FetchConnectedGa4PropertyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return FetchConnectedGa4PropertyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Given a specified UA property, looks up the GA4 property connected to it.
      /// Note: this cannot be used with GA4 properties.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.FetchConnectedGa4PropertyResponse> FetchConnectedGa4PropertyAsync(global::Google.Analytics.Admin.V1Alpha.FetchConnectedGa4PropertyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_FetchConnectedGa4Property, null, options, request);
      }
      /// <summary>
      /// Looks up a single AdSenseLink.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.AdSenseLink GetAdSenseLink(global::Google.Analytics.Admin.V1Alpha.GetAdSenseLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAdSenseLink(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Looks up a single AdSenseLink.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.AdSenseLink GetAdSenseLink(global::Google.Analytics.Admin.V1Alpha.GetAdSenseLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAdSenseLink, null, options, request);
      }
      /// <summary>
      /// Looks up a single AdSenseLink.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.AdSenseLink> GetAdSenseLinkAsync(global::Google.Analytics.Admin.V1Alpha.GetAdSenseLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAdSenseLinkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Looks up a single AdSenseLink.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.AdSenseLink> GetAdSenseLinkAsync(global::Google.Analytics.Admin.V1Alpha.GetAdSenseLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAdSenseLink, null, options, request);
      }
      /// <summary>
      /// Creates an AdSenseLink.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.AdSenseLink CreateAdSenseLink(global::Google.Analytics.Admin.V1Alpha.CreateAdSenseLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAdSenseLink(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an AdSenseLink.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.AdSenseLink CreateAdSenseLink(global::Google.Analytics.Admin.V1Alpha.CreateAdSenseLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateAdSenseLink, null, options, request);
      }
      /// <summary>
      /// Creates an AdSenseLink.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.AdSenseLink> CreateAdSenseLinkAsync(global::Google.Analytics.Admin.V1Alpha.CreateAdSenseLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAdSenseLinkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an AdSenseLink.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.AdSenseLink> CreateAdSenseLinkAsync(global::Google.Analytics.Admin.V1Alpha.CreateAdSenseLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateAdSenseLink, null, options, request);
      }
      /// <summary>
      /// Deletes an AdSenseLink.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteAdSenseLink(global::Google.Analytics.Admin.V1Alpha.DeleteAdSenseLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAdSenseLink(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes an AdSenseLink.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteAdSenseLink(global::Google.Analytics.Admin.V1Alpha.DeleteAdSenseLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteAdSenseLink, null, options, request);
      }
      /// <summary>
      /// Deletes an AdSenseLink.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteAdSenseLinkAsync(global::Google.Analytics.Admin.V1Alpha.DeleteAdSenseLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAdSenseLinkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes an AdSenseLink.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteAdSenseLinkAsync(global::Google.Analytics.Admin.V1Alpha.DeleteAdSenseLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteAdSenseLink, null, options, request);
      }
      /// <summary>
      /// Lists AdSenseLinks on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListAdSenseLinksResponse ListAdSenseLinks(global::Google.Analytics.Admin.V1Alpha.ListAdSenseLinksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAdSenseLinks(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists AdSenseLinks on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListAdSenseLinksResponse ListAdSenseLinks(global::Google.Analytics.Admin.V1Alpha.ListAdSenseLinksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListAdSenseLinks, null, options, request);
      }
      /// <summary>
      /// Lists AdSenseLinks on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListAdSenseLinksResponse> ListAdSenseLinksAsync(global::Google.Analytics.Admin.V1Alpha.ListAdSenseLinksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAdSenseLinksAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists AdSenseLinks on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListAdSenseLinksResponse> ListAdSenseLinksAsync(global::Google.Analytics.Admin.V1Alpha.ListAdSenseLinksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListAdSenseLinks, null, options, request);
      }
      /// <summary>
      /// Lookup for a single EventCreateRule.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.EventCreateRule GetEventCreateRule(global::Google.Analytics.Admin.V1Alpha.GetEventCreateRuleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEventCreateRule(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single EventCreateRule.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.EventCreateRule GetEventCreateRule(global::Google.Analytics.Admin.V1Alpha.GetEventCreateRuleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetEventCreateRule, null, options, request);
      }
      /// <summary>
      /// Lookup for a single EventCreateRule.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.EventCreateRule> GetEventCreateRuleAsync(global::Google.Analytics.Admin.V1Alpha.GetEventCreateRuleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEventCreateRuleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single EventCreateRule.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.EventCreateRule> GetEventCreateRuleAsync(global::Google.Analytics.Admin.V1Alpha.GetEventCreateRuleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetEventCreateRule, null, options, request);
      }
      /// <summary>
      /// Lists EventCreateRules on a web data stream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListEventCreateRulesResponse ListEventCreateRules(global::Google.Analytics.Admin.V1Alpha.ListEventCreateRulesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListEventCreateRules(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists EventCreateRules on a web data stream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListEventCreateRulesResponse ListEventCreateRules(global::Google.Analytics.Admin.V1Alpha.ListEventCreateRulesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListEventCreateRules, null, options, request);
      }
      /// <summary>
      /// Lists EventCreateRules on a web data stream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListEventCreateRulesResponse> ListEventCreateRulesAsync(global::Google.Analytics.Admin.V1Alpha.ListEventCreateRulesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListEventCreateRulesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists EventCreateRules on a web data stream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListEventCreateRulesResponse> ListEventCreateRulesAsync(global::Google.Analytics.Admin.V1Alpha.ListEventCreateRulesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListEventCreateRules, null, options, request);
      }
      /// <summary>
      /// Creates an EventCreateRule.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.EventCreateRule CreateEventCreateRule(global::Google.Analytics.Admin.V1Alpha.CreateEventCreateRuleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateEventCreateRule(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an EventCreateRule.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.EventCreateRule CreateEventCreateRule(global::Google.Analytics.Admin.V1Alpha.CreateEventCreateRuleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateEventCreateRule, null, options, request);
      }
      /// <summary>
      /// Creates an EventCreateRule.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.EventCreateRule> CreateEventCreateRuleAsync(global::Google.Analytics.Admin.V1Alpha.CreateEventCreateRuleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateEventCreateRuleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an EventCreateRule.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.EventCreateRule> CreateEventCreateRuleAsync(global::Google.Analytics.Admin.V1Alpha.CreateEventCreateRuleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateEventCreateRule, null, options, request);
      }
      /// <summary>
      /// Updates an EventCreateRule.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.EventCreateRule UpdateEventCreateRule(global::Google.Analytics.Admin.V1Alpha.UpdateEventCreateRuleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateEventCreateRule(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an EventCreateRule.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.EventCreateRule UpdateEventCreateRule(global::Google.Analytics.Admin.V1Alpha.UpdateEventCreateRuleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateEventCreateRule, null, options, request);
      }
      /// <summary>
      /// Updates an EventCreateRule.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.EventCreateRule> UpdateEventCreateRuleAsync(global::Google.Analytics.Admin.V1Alpha.UpdateEventCreateRuleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateEventCreateRuleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an EventCreateRule.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.EventCreateRule> UpdateEventCreateRuleAsync(global::Google.Analytics.Admin.V1Alpha.UpdateEventCreateRuleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateEventCreateRule, null, options, request);
      }
      /// <summary>
      /// Deletes an EventCreateRule.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteEventCreateRule(global::Google.Analytics.Admin.V1Alpha.DeleteEventCreateRuleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteEventCreateRule(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes an EventCreateRule.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteEventCreateRule(global::Google.Analytics.Admin.V1Alpha.DeleteEventCreateRuleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteEventCreateRule, null, options, request);
      }
      /// <summary>
      /// Deletes an EventCreateRule.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteEventCreateRuleAsync(global::Google.Analytics.Admin.V1Alpha.DeleteEventCreateRuleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteEventCreateRuleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes an EventCreateRule.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteEventCreateRuleAsync(global::Google.Analytics.Admin.V1Alpha.DeleteEventCreateRuleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteEventCreateRule, null, options, request);
      }
      /// <summary>
      /// Lookup for a single EventEditRule.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.EventEditRule GetEventEditRule(global::Google.Analytics.Admin.V1Alpha.GetEventEditRuleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEventEditRule(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single EventEditRule.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.EventEditRule GetEventEditRule(global::Google.Analytics.Admin.V1Alpha.GetEventEditRuleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetEventEditRule, null, options, request);
      }
      /// <summary>
      /// Lookup for a single EventEditRule.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.EventEditRule> GetEventEditRuleAsync(global::Google.Analytics.Admin.V1Alpha.GetEventEditRuleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEventEditRuleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single EventEditRule.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.EventEditRule> GetEventEditRuleAsync(global::Google.Analytics.Admin.V1Alpha.GetEventEditRuleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetEventEditRule, null, options, request);
      }
      /// <summary>
      /// Lists EventEditRules on a web data stream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListEventEditRulesResponse ListEventEditRules(global::Google.Analytics.Admin.V1Alpha.ListEventEditRulesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListEventEditRules(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists EventEditRules on a web data stream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListEventEditRulesResponse ListEventEditRules(global::Google.Analytics.Admin.V1Alpha.ListEventEditRulesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListEventEditRules, null, options, request);
      }
      /// <summary>
      /// Lists EventEditRules on a web data stream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListEventEditRulesResponse> ListEventEditRulesAsync(global::Google.Analytics.Admin.V1Alpha.ListEventEditRulesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListEventEditRulesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists EventEditRules on a web data stream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListEventEditRulesResponse> ListEventEditRulesAsync(global::Google.Analytics.Admin.V1Alpha.ListEventEditRulesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListEventEditRules, null, options, request);
      }
      /// <summary>
      /// Creates an EventEditRule.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.EventEditRule CreateEventEditRule(global::Google.Analytics.Admin.V1Alpha.CreateEventEditRuleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateEventEditRule(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an EventEditRule.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.EventEditRule CreateEventEditRule(global::Google.Analytics.Admin.V1Alpha.CreateEventEditRuleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateEventEditRule, null, options, request);
      }
      /// <summary>
      /// Creates an EventEditRule.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.EventEditRule> CreateEventEditRuleAsync(global::Google.Analytics.Admin.V1Alpha.CreateEventEditRuleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateEventEditRuleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an EventEditRule.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.EventEditRule> CreateEventEditRuleAsync(global::Google.Analytics.Admin.V1Alpha.CreateEventEditRuleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateEventEditRule, null, options, request);
      }
      /// <summary>
      /// Updates an EventEditRule.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.EventEditRule UpdateEventEditRule(global::Google.Analytics.Admin.V1Alpha.UpdateEventEditRuleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateEventEditRule(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an EventEditRule.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.EventEditRule UpdateEventEditRule(global::Google.Analytics.Admin.V1Alpha.UpdateEventEditRuleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateEventEditRule, null, options, request);
      }
      /// <summary>
      /// Updates an EventEditRule.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.EventEditRule> UpdateEventEditRuleAsync(global::Google.Analytics.Admin.V1Alpha.UpdateEventEditRuleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateEventEditRuleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an EventEditRule.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.EventEditRule> UpdateEventEditRuleAsync(global::Google.Analytics.Admin.V1Alpha.UpdateEventEditRuleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateEventEditRule, null, options, request);
      }
      /// <summary>
      /// Deletes an EventEditRule.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteEventEditRule(global::Google.Analytics.Admin.V1Alpha.DeleteEventEditRuleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteEventEditRule(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes an EventEditRule.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteEventEditRule(global::Google.Analytics.Admin.V1Alpha.DeleteEventEditRuleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteEventEditRule, null, options, request);
      }
      /// <summary>
      /// Deletes an EventEditRule.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteEventEditRuleAsync(global::Google.Analytics.Admin.V1Alpha.DeleteEventEditRuleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteEventEditRuleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes an EventEditRule.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteEventEditRuleAsync(global::Google.Analytics.Admin.V1Alpha.DeleteEventEditRuleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteEventEditRule, null, options, request);
      }
      /// <summary>
      /// Changes the processing order of event edit rules on the specified stream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty ReorderEventEditRules(global::Google.Analytics.Admin.V1Alpha.ReorderEventEditRulesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReorderEventEditRules(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Changes the processing order of event edit rules on the specified stream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty ReorderEventEditRules(global::Google.Analytics.Admin.V1Alpha.ReorderEventEditRulesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ReorderEventEditRules, null, options, request);
      }
      /// <summary>
      /// Changes the processing order of event edit rules on the specified stream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> ReorderEventEditRulesAsync(global::Google.Analytics.Admin.V1Alpha.ReorderEventEditRulesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReorderEventEditRulesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Changes the processing order of event edit rules on the specified stream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> ReorderEventEditRulesAsync(global::Google.Analytics.Admin.V1Alpha.ReorderEventEditRulesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ReorderEventEditRules, null, options, request);
      }
      /// <summary>
      /// Updates a DataRedactionSettings on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.DataRedactionSettings UpdateDataRedactionSettings(global::Google.Analytics.Admin.V1Alpha.UpdateDataRedactionSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateDataRedactionSettings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a DataRedactionSettings on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.DataRedactionSettings UpdateDataRedactionSettings(global::Google.Analytics.Admin.V1Alpha.UpdateDataRedactionSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateDataRedactionSettings, null, options, request);
      }
      /// <summary>
      /// Updates a DataRedactionSettings on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.DataRedactionSettings> UpdateDataRedactionSettingsAsync(global::Google.Analytics.Admin.V1Alpha.UpdateDataRedactionSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateDataRedactionSettingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a DataRedactionSettings on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.DataRedactionSettings> UpdateDataRedactionSettingsAsync(global::Google.Analytics.Admin.V1Alpha.UpdateDataRedactionSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateDataRedactionSettings, null, options, request);
      }
      /// <summary>
      /// Lookup for a single DataRedactionSettings.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.DataRedactionSettings GetDataRedactionSettings(global::Google.Analytics.Admin.V1Alpha.GetDataRedactionSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDataRedactionSettings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single DataRedactionSettings.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.DataRedactionSettings GetDataRedactionSettings(global::Google.Analytics.Admin.V1Alpha.GetDataRedactionSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDataRedactionSettings, null, options, request);
      }
      /// <summary>
      /// Lookup for a single DataRedactionSettings.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.DataRedactionSettings> GetDataRedactionSettingsAsync(global::Google.Analytics.Admin.V1Alpha.GetDataRedactionSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDataRedactionSettingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single DataRedactionSettings.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.DataRedactionSettings> GetDataRedactionSettingsAsync(global::Google.Analytics.Admin.V1Alpha.GetDataRedactionSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDataRedactionSettings, null, options, request);
      }
      /// <summary>
      /// Lookup for a single CalculatedMetric.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.CalculatedMetric GetCalculatedMetric(global::Google.Analytics.Admin.V1Alpha.GetCalculatedMetricRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCalculatedMetric(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single CalculatedMetric.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.CalculatedMetric GetCalculatedMetric(global::Google.Analytics.Admin.V1Alpha.GetCalculatedMetricRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCalculatedMetric, null, options, request);
      }
      /// <summary>
      /// Lookup for a single CalculatedMetric.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.CalculatedMetric> GetCalculatedMetricAsync(global::Google.Analytics.Admin.V1Alpha.GetCalculatedMetricRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCalculatedMetricAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single CalculatedMetric.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.CalculatedMetric> GetCalculatedMetricAsync(global::Google.Analytics.Admin.V1Alpha.GetCalculatedMetricRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCalculatedMetric, null, options, request);
      }
      /// <summary>
      /// Creates a CalculatedMetric.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.CalculatedMetric CreateCalculatedMetric(global::Google.Analytics.Admin.V1Alpha.CreateCalculatedMetricRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCalculatedMetric(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a CalculatedMetric.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.CalculatedMetric CreateCalculatedMetric(global::Google.Analytics.Admin.V1Alpha.CreateCalculatedMetricRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateCalculatedMetric, null, options, request);
      }
      /// <summary>
      /// Creates a CalculatedMetric.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.CalculatedMetric> CreateCalculatedMetricAsync(global::Google.Analytics.Admin.V1Alpha.CreateCalculatedMetricRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCalculatedMetricAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a CalculatedMetric.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.CalculatedMetric> CreateCalculatedMetricAsync(global::Google.Analytics.Admin.V1Alpha.CreateCalculatedMetricRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateCalculatedMetric, null, options, request);
      }
      /// <summary>
      /// Lists CalculatedMetrics on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListCalculatedMetricsResponse ListCalculatedMetrics(global::Google.Analytics.Admin.V1Alpha.ListCalculatedMetricsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListCalculatedMetrics(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists CalculatedMetrics on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListCalculatedMetricsResponse ListCalculatedMetrics(global::Google.Analytics.Admin.V1Alpha.ListCalculatedMetricsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListCalculatedMetrics, null, options, request);
      }
      /// <summary>
      /// Lists CalculatedMetrics on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListCalculatedMetricsResponse> ListCalculatedMetricsAsync(global::Google.Analytics.Admin.V1Alpha.ListCalculatedMetricsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListCalculatedMetricsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists CalculatedMetrics on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListCalculatedMetricsResponse> ListCalculatedMetricsAsync(global::Google.Analytics.Admin.V1Alpha.ListCalculatedMetricsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListCalculatedMetrics, null, options, request);
      }
      /// <summary>
      /// Updates a CalculatedMetric on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.CalculatedMetric UpdateCalculatedMetric(global::Google.Analytics.Admin.V1Alpha.UpdateCalculatedMetricRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCalculatedMetric(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a CalculatedMetric on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.CalculatedMetric UpdateCalculatedMetric(global::Google.Analytics.Admin.V1Alpha.UpdateCalculatedMetricRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateCalculatedMetric, null, options, request);
      }
      /// <summary>
      /// Updates a CalculatedMetric on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.CalculatedMetric> UpdateCalculatedMetricAsync(global::Google.Analytics.Admin.V1Alpha.UpdateCalculatedMetricRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCalculatedMetricAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a CalculatedMetric on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.CalculatedMetric> UpdateCalculatedMetricAsync(global::Google.Analytics.Admin.V1Alpha.UpdateCalculatedMetricRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateCalculatedMetric, null, options, request);
      }
      /// <summary>
      /// Deletes a CalculatedMetric on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteCalculatedMetric(global::Google.Analytics.Admin.V1Alpha.DeleteCalculatedMetricRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteCalculatedMetric(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a CalculatedMetric on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteCalculatedMetric(global::Google.Analytics.Admin.V1Alpha.DeleteCalculatedMetricRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteCalculatedMetric, null, options, request);
      }
      /// <summary>
      /// Deletes a CalculatedMetric on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteCalculatedMetricAsync(global::Google.Analytics.Admin.V1Alpha.DeleteCalculatedMetricRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteCalculatedMetricAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a CalculatedMetric on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteCalculatedMetricAsync(global::Google.Analytics.Admin.V1Alpha.DeleteCalculatedMetricRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteCalculatedMetric, null, options, request);
      }
      /// <summary>
      /// Create a roll-up property and all roll-up property source links.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.CreateRollupPropertyResponse CreateRollupProperty(global::Google.Analytics.Admin.V1Alpha.CreateRollupPropertyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateRollupProperty(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a roll-up property and all roll-up property source links.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.CreateRollupPropertyResponse CreateRollupProperty(global::Google.Analytics.Admin.V1Alpha.CreateRollupPropertyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateRollupProperty, null, options, request);
      }
      /// <summary>
      /// Create a roll-up property and all roll-up property source links.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.CreateRollupPropertyResponse> CreateRollupPropertyAsync(global::Google.Analytics.Admin.V1Alpha.CreateRollupPropertyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateRollupPropertyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a roll-up property and all roll-up property source links.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.CreateRollupPropertyResponse> CreateRollupPropertyAsync(global::Google.Analytics.Admin.V1Alpha.CreateRollupPropertyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateRollupProperty, null, options, request);
      }
      /// <summary>
      /// Lookup for a single roll-up property source Link.
      /// Only roll-up properties can have source links, so this method will throw an
      /// error if used on other types of properties.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.RollupPropertySourceLink GetRollupPropertySourceLink(global::Google.Analytics.Admin.V1Alpha.GetRollupPropertySourceLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRollupPropertySourceLink(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single roll-up property source Link.
      /// Only roll-up properties can have source links, so this method will throw an
      /// error if used on other types of properties.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.RollupPropertySourceLink GetRollupPropertySourceLink(global::Google.Analytics.Admin.V1Alpha.GetRollupPropertySourceLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetRollupPropertySourceLink, null, options, request);
      }
      /// <summary>
      /// Lookup for a single roll-up property source Link.
      /// Only roll-up properties can have source links, so this method will throw an
      /// error if used on other types of properties.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.RollupPropertySourceLink> GetRollupPropertySourceLinkAsync(global::Google.Analytics.Admin.V1Alpha.GetRollupPropertySourceLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRollupPropertySourceLinkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single roll-up property source Link.
      /// Only roll-up properties can have source links, so this method will throw an
      /// error if used on other types of properties.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.RollupPropertySourceLink> GetRollupPropertySourceLinkAsync(global::Google.Analytics.Admin.V1Alpha.GetRollupPropertySourceLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetRollupPropertySourceLink, null, options, request);
      }
      /// <summary>
      /// Lists roll-up property source Links on a property.
      /// Only roll-up properties can have source links, so this method will throw an
      /// error if used on other types of properties.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListRollupPropertySourceLinksResponse ListRollupPropertySourceLinks(global::Google.Analytics.Admin.V1Alpha.ListRollupPropertySourceLinksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListRollupPropertySourceLinks(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists roll-up property source Links on a property.
      /// Only roll-up properties can have source links, so this method will throw an
      /// error if used on other types of properties.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListRollupPropertySourceLinksResponse ListRollupPropertySourceLinks(global::Google.Analytics.Admin.V1Alpha.ListRollupPropertySourceLinksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListRollupPropertySourceLinks, null, options, request);
      }
      /// <summary>
      /// Lists roll-up property source Links on a property.
      /// Only roll-up properties can have source links, so this method will throw an
      /// error if used on other types of properties.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListRollupPropertySourceLinksResponse> ListRollupPropertySourceLinksAsync(global::Google.Analytics.Admin.V1Alpha.ListRollupPropertySourceLinksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListRollupPropertySourceLinksAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists roll-up property source Links on a property.
      /// Only roll-up properties can have source links, so this method will throw an
      /// error if used on other types of properties.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListRollupPropertySourceLinksResponse> ListRollupPropertySourceLinksAsync(global::Google.Analytics.Admin.V1Alpha.ListRollupPropertySourceLinksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListRollupPropertySourceLinks, null, options, request);
      }
      /// <summary>
      /// Creates a roll-up property source link.
      /// Only roll-up properties can have source links, so this method will throw an
      /// error if used on other types of properties.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.RollupPropertySourceLink CreateRollupPropertySourceLink(global::Google.Analytics.Admin.V1Alpha.CreateRollupPropertySourceLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateRollupPropertySourceLink(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a roll-up property source link.
      /// Only roll-up properties can have source links, so this method will throw an
      /// error if used on other types of properties.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.RollupPropertySourceLink CreateRollupPropertySourceLink(global::Google.Analytics.Admin.V1Alpha.CreateRollupPropertySourceLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateRollupPropertySourceLink, null, options, request);
      }
      /// <summary>
      /// Creates a roll-up property source link.
      /// Only roll-up properties can have source links, so this method will throw an
      /// error if used on other types of properties.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.RollupPropertySourceLink> CreateRollupPropertySourceLinkAsync(global::Google.Analytics.Admin.V1Alpha.CreateRollupPropertySourceLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateRollupPropertySourceLinkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a roll-up property source link.
      /// Only roll-up properties can have source links, so this method will throw an
      /// error if used on other types of properties.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.RollupPropertySourceLink> CreateRollupPropertySourceLinkAsync(global::Google.Analytics.Admin.V1Alpha.CreateRollupPropertySourceLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateRollupPropertySourceLink, null, options, request);
      }
      /// <summary>
      /// Deletes a roll-up property source link.
      /// Only roll-up properties can have source links, so this method will throw an
      /// error if used on other types of properties.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteRollupPropertySourceLink(global::Google.Analytics.Admin.V1Alpha.DeleteRollupPropertySourceLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteRollupPropertySourceLink(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a roll-up property source link.
      /// Only roll-up properties can have source links, so this method will throw an
      /// error if used on other types of properties.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteRollupPropertySourceLink(global::Google.Analytics.Admin.V1Alpha.DeleteRollupPropertySourceLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteRollupPropertySourceLink, null, options, request);
      }
      /// <summary>
      /// Deletes a roll-up property source link.
      /// Only roll-up properties can have source links, so this method will throw an
      /// error if used on other types of properties.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteRollupPropertySourceLinkAsync(global::Google.Analytics.Admin.V1Alpha.DeleteRollupPropertySourceLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteRollupPropertySourceLinkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a roll-up property source link.
      /// Only roll-up properties can have source links, so this method will throw an
      /// error if used on other types of properties.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteRollupPropertySourceLinkAsync(global::Google.Analytics.Admin.V1Alpha.DeleteRollupPropertySourceLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteRollupPropertySourceLink, null, options, request);
      }
      /// <summary>
      /// Create a subproperty and a subproperty event filter that applies to the
      /// created subproperty.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ProvisionSubpropertyResponse ProvisionSubproperty(global::Google.Analytics.Admin.V1Alpha.ProvisionSubpropertyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ProvisionSubproperty(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a subproperty and a subproperty event filter that applies to the
      /// created subproperty.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ProvisionSubpropertyResponse ProvisionSubproperty(global::Google.Analytics.Admin.V1Alpha.ProvisionSubpropertyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ProvisionSubproperty, null, options, request);
      }
      /// <summary>
      /// Create a subproperty and a subproperty event filter that applies to the
      /// created subproperty.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ProvisionSubpropertyResponse> ProvisionSubpropertyAsync(global::Google.Analytics.Admin.V1Alpha.ProvisionSubpropertyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ProvisionSubpropertyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a subproperty and a subproperty event filter that applies to the
      /// created subproperty.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ProvisionSubpropertyResponse> ProvisionSubpropertyAsync(global::Google.Analytics.Admin.V1Alpha.ProvisionSubpropertyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ProvisionSubproperty, null, options, request);
      }
      /// <summary>
      /// Creates a subproperty Event Filter.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.SubpropertyEventFilter CreateSubpropertyEventFilter(global::Google.Analytics.Admin.V1Alpha.CreateSubpropertyEventFilterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateSubpropertyEventFilter(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a subproperty Event Filter.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.SubpropertyEventFilter CreateSubpropertyEventFilter(global::Google.Analytics.Admin.V1Alpha.CreateSubpropertyEventFilterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateSubpropertyEventFilter, null, options, request);
      }
      /// <summary>
      /// Creates a subproperty Event Filter.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.SubpropertyEventFilter> CreateSubpropertyEventFilterAsync(global::Google.Analytics.Admin.V1Alpha.CreateSubpropertyEventFilterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateSubpropertyEventFilterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a subproperty Event Filter.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.SubpropertyEventFilter> CreateSubpropertyEventFilterAsync(global::Google.Analytics.Admin.V1Alpha.CreateSubpropertyEventFilterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateSubpropertyEventFilter, null, options, request);
      }
      /// <summary>
      /// Lookup for a single subproperty Event Filter.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.SubpropertyEventFilter GetSubpropertyEventFilter(global::Google.Analytics.Admin.V1Alpha.GetSubpropertyEventFilterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSubpropertyEventFilter(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single subproperty Event Filter.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.SubpropertyEventFilter GetSubpropertyEventFilter(global::Google.Analytics.Admin.V1Alpha.GetSubpropertyEventFilterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSubpropertyEventFilter, null, options, request);
      }
      /// <summary>
      /// Lookup for a single subproperty Event Filter.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.SubpropertyEventFilter> GetSubpropertyEventFilterAsync(global::Google.Analytics.Admin.V1Alpha.GetSubpropertyEventFilterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSubpropertyEventFilterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single subproperty Event Filter.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.SubpropertyEventFilter> GetSubpropertyEventFilterAsync(global::Google.Analytics.Admin.V1Alpha.GetSubpropertyEventFilterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSubpropertyEventFilter, null, options, request);
      }
      /// <summary>
      /// List all subproperty Event Filters on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListSubpropertyEventFiltersResponse ListSubpropertyEventFilters(global::Google.Analytics.Admin.V1Alpha.ListSubpropertyEventFiltersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSubpropertyEventFilters(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List all subproperty Event Filters on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.ListSubpropertyEventFiltersResponse ListSubpropertyEventFilters(global::Google.Analytics.Admin.V1Alpha.ListSubpropertyEventFiltersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListSubpropertyEventFilters, null, options, request);
      }
      /// <summary>
      /// List all subproperty Event Filters on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListSubpropertyEventFiltersResponse> ListSubpropertyEventFiltersAsync(global::Google.Analytics.Admin.V1Alpha.ListSubpropertyEventFiltersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSubpropertyEventFiltersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List all subproperty Event Filters on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.ListSubpropertyEventFiltersResponse> ListSubpropertyEventFiltersAsync(global::Google.Analytics.Admin.V1Alpha.ListSubpropertyEventFiltersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListSubpropertyEventFilters, null, options, request);
      }
      /// <summary>
      /// Updates a subproperty Event Filter.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.SubpropertyEventFilter UpdateSubpropertyEventFilter(global::Google.Analytics.Admin.V1Alpha.UpdateSubpropertyEventFilterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateSubpropertyEventFilter(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a subproperty Event Filter.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Alpha.SubpropertyEventFilter UpdateSubpropertyEventFilter(global::Google.Analytics.Admin.V1Alpha.UpdateSubpropertyEventFilterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateSubpropertyEventFilter, null, options, request);
      }
      /// <summary>
      /// Updates a subproperty Event Filter.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.SubpropertyEventFilter> UpdateSubpropertyEventFilterAsync(global::Google.Analytics.Admin.V1Alpha.UpdateSubpropertyEventFilterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateSubpropertyEventFilterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a subproperty Event Filter.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Alpha.SubpropertyEventFilter> UpdateSubpropertyEventFilterAsync(global::Google.Analytics.Admin.V1Alpha.UpdateSubpropertyEventFilterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateSubpropertyEventFilter, null, options, request);
      }
      /// <summary>
      /// Deletes a subproperty event filter.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteSubpropertyEventFilter(global::Google.Analytics.Admin.V1Alpha.DeleteSubpropertyEventFilterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteSubpropertyEventFilter(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a subproperty event filter.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteSubpropertyEventFilter(global::Google.Analytics.Admin.V1Alpha.DeleteSubpropertyEventFilterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteSubpropertyEventFilter, null, options, request);
      }
      /// <summary>
      /// Deletes a subproperty event filter.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteSubpropertyEventFilterAsync(global::Google.Analytics.Admin.V1Alpha.DeleteSubpropertyEventFilterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteSubpropertyEventFilterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a subproperty event filter.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteSubpropertyEventFilterAsync(global::Google.Analytics.Admin.V1Alpha.DeleteSubpropertyEventFilterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteSubpropertyEventFilter, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override AnalyticsAdminServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new AnalyticsAdminServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(AnalyticsAdminServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetAccount, serviceImpl.GetAccount)
          .AddMethod(__Method_ListAccounts, serviceImpl.ListAccounts)
          .AddMethod(__Method_DeleteAccount, serviceImpl.DeleteAccount)
          .AddMethod(__Method_UpdateAccount, serviceImpl.UpdateAccount)
          .AddMethod(__Method_ProvisionAccountTicket, serviceImpl.ProvisionAccountTicket)
          .AddMethod(__Method_ListAccountSummaries, serviceImpl.ListAccountSummaries)
          .AddMethod(__Method_GetProperty, serviceImpl.GetProperty)
          .AddMethod(__Method_ListProperties, serviceImpl.ListProperties)
          .AddMethod(__Method_CreateProperty, serviceImpl.CreateProperty)
          .AddMethod(__Method_DeleteProperty, serviceImpl.DeleteProperty)
          .AddMethod(__Method_UpdateProperty, serviceImpl.UpdateProperty)
          .AddMethod(__Method_CreateFirebaseLink, serviceImpl.CreateFirebaseLink)
          .AddMethod(__Method_DeleteFirebaseLink, serviceImpl.DeleteFirebaseLink)
          .AddMethod(__Method_ListFirebaseLinks, serviceImpl.ListFirebaseLinks)
          .AddMethod(__Method_GetGlobalSiteTag, serviceImpl.GetGlobalSiteTag)
          .AddMethod(__Method_CreateGoogleAdsLink, serviceImpl.CreateGoogleAdsLink)
          .AddMethod(__Method_UpdateGoogleAdsLink, serviceImpl.UpdateGoogleAdsLink)
          .AddMethod(__Method_DeleteGoogleAdsLink, serviceImpl.DeleteGoogleAdsLink)
          .AddMethod(__Method_ListGoogleAdsLinks, serviceImpl.ListGoogleAdsLinks)
          .AddMethod(__Method_GetDataSharingSettings, serviceImpl.GetDataSharingSettings)
          .AddMethod(__Method_GetMeasurementProtocolSecret, serviceImpl.GetMeasurementProtocolSecret)
          .AddMethod(__Method_ListMeasurementProtocolSecrets, serviceImpl.ListMeasurementProtocolSecrets)
          .AddMethod(__Method_CreateMeasurementProtocolSecret, serviceImpl.CreateMeasurementProtocolSecret)
          .AddMethod(__Method_DeleteMeasurementProtocolSecret, serviceImpl.DeleteMeasurementProtocolSecret)
          .AddMethod(__Method_UpdateMeasurementProtocolSecret, serviceImpl.UpdateMeasurementProtocolSecret)
          .AddMethod(__Method_AcknowledgeUserDataCollection, serviceImpl.AcknowledgeUserDataCollection)
          .AddMethod(__Method_GetSKAdNetworkConversionValueSchema, serviceImpl.GetSKAdNetworkConversionValueSchema)
          .AddMethod(__Method_CreateSKAdNetworkConversionValueSchema, serviceImpl.CreateSKAdNetworkConversionValueSchema)
          .AddMethod(__Method_DeleteSKAdNetworkConversionValueSchema, serviceImpl.DeleteSKAdNetworkConversionValueSchema)
          .AddMethod(__Method_UpdateSKAdNetworkConversionValueSchema, serviceImpl.UpdateSKAdNetworkConversionValueSchema)
          .AddMethod(__Method_ListSKAdNetworkConversionValueSchemas, serviceImpl.ListSKAdNetworkConversionValueSchemas)
          .AddMethod(__Method_SearchChangeHistoryEvents, serviceImpl.SearchChangeHistoryEvents)
          .AddMethod(__Method_GetGoogleSignalsSettings, serviceImpl.GetGoogleSignalsSettings)
          .AddMethod(__Method_UpdateGoogleSignalsSettings, serviceImpl.UpdateGoogleSignalsSettings)
          .AddMethod(__Method_CreateConversionEvent, serviceImpl.CreateConversionEvent)
          .AddMethod(__Method_UpdateConversionEvent, serviceImpl.UpdateConversionEvent)
          .AddMethod(__Method_GetConversionEvent, serviceImpl.GetConversionEvent)
          .AddMethod(__Method_DeleteConversionEvent, serviceImpl.DeleteConversionEvent)
          .AddMethod(__Method_ListConversionEvents, serviceImpl.ListConversionEvents)
          .AddMethod(__Method_CreateKeyEvent, serviceImpl.CreateKeyEvent)
          .AddMethod(__Method_UpdateKeyEvent, serviceImpl.UpdateKeyEvent)
          .AddMethod(__Method_GetKeyEvent, serviceImpl.GetKeyEvent)
          .AddMethod(__Method_DeleteKeyEvent, serviceImpl.DeleteKeyEvent)
          .AddMethod(__Method_ListKeyEvents, serviceImpl.ListKeyEvents)
          .AddMethod(__Method_GetDisplayVideo360AdvertiserLink, serviceImpl.GetDisplayVideo360AdvertiserLink)
          .AddMethod(__Method_ListDisplayVideo360AdvertiserLinks, serviceImpl.ListDisplayVideo360AdvertiserLinks)
          .AddMethod(__Method_CreateDisplayVideo360AdvertiserLink, serviceImpl.CreateDisplayVideo360AdvertiserLink)
          .AddMethod(__Method_DeleteDisplayVideo360AdvertiserLink, serviceImpl.DeleteDisplayVideo360AdvertiserLink)
          .AddMethod(__Method_UpdateDisplayVideo360AdvertiserLink, serviceImpl.UpdateDisplayVideo360AdvertiserLink)
          .AddMethod(__Method_GetDisplayVideo360AdvertiserLinkProposal, serviceImpl.GetDisplayVideo360AdvertiserLinkProposal)
          .AddMethod(__Method_ListDisplayVideo360AdvertiserLinkProposals, serviceImpl.ListDisplayVideo360AdvertiserLinkProposals)
          .AddMethod(__Method_CreateDisplayVideo360AdvertiserLinkProposal, serviceImpl.CreateDisplayVideo360AdvertiserLinkProposal)
          .AddMethod(__Method_DeleteDisplayVideo360AdvertiserLinkProposal, serviceImpl.DeleteDisplayVideo360AdvertiserLinkProposal)
          .AddMethod(__Method_ApproveDisplayVideo360AdvertiserLinkProposal, serviceImpl.ApproveDisplayVideo360AdvertiserLinkProposal)
          .AddMethod(__Method_CancelDisplayVideo360AdvertiserLinkProposal, serviceImpl.CancelDisplayVideo360AdvertiserLinkProposal)
          .AddMethod(__Method_CreateCustomDimension, serviceImpl.CreateCustomDimension)
          .AddMethod(__Method_UpdateCustomDimension, serviceImpl.UpdateCustomDimension)
          .AddMethod(__Method_ListCustomDimensions, serviceImpl.ListCustomDimensions)
          .AddMethod(__Method_ArchiveCustomDimension, serviceImpl.ArchiveCustomDimension)
          .AddMethod(__Method_GetCustomDimension, serviceImpl.GetCustomDimension)
          .AddMethod(__Method_CreateCustomMetric, serviceImpl.CreateCustomMetric)
          .AddMethod(__Method_UpdateCustomMetric, serviceImpl.UpdateCustomMetric)
          .AddMethod(__Method_ListCustomMetrics, serviceImpl.ListCustomMetrics)
          .AddMethod(__Method_ArchiveCustomMetric, serviceImpl.ArchiveCustomMetric)
          .AddMethod(__Method_GetCustomMetric, serviceImpl.GetCustomMetric)
          .AddMethod(__Method_GetDataRetentionSettings, serviceImpl.GetDataRetentionSettings)
          .AddMethod(__Method_UpdateDataRetentionSettings, serviceImpl.UpdateDataRetentionSettings)
          .AddMethod(__Method_CreateDataStream, serviceImpl.CreateDataStream)
          .AddMethod(__Method_DeleteDataStream, serviceImpl.DeleteDataStream)
          .AddMethod(__Method_UpdateDataStream, serviceImpl.UpdateDataStream)
          .AddMethod(__Method_ListDataStreams, serviceImpl.ListDataStreams)
          .AddMethod(__Method_GetDataStream, serviceImpl.GetDataStream)
          .AddMethod(__Method_GetAudience, serviceImpl.GetAudience)
          .AddMethod(__Method_ListAudiences, serviceImpl.ListAudiences)
          .AddMethod(__Method_CreateAudience, serviceImpl.CreateAudience)
          .AddMethod(__Method_UpdateAudience, serviceImpl.UpdateAudience)
          .AddMethod(__Method_ArchiveAudience, serviceImpl.ArchiveAudience)
          .AddMethod(__Method_GetSearchAds360Link, serviceImpl.GetSearchAds360Link)
          .AddMethod(__Method_ListSearchAds360Links, serviceImpl.ListSearchAds360Links)
          .AddMethod(__Method_CreateSearchAds360Link, serviceImpl.CreateSearchAds360Link)
          .AddMethod(__Method_DeleteSearchAds360Link, serviceImpl.DeleteSearchAds360Link)
          .AddMethod(__Method_UpdateSearchAds360Link, serviceImpl.UpdateSearchAds360Link)
          .AddMethod(__Method_GetAttributionSettings, serviceImpl.GetAttributionSettings)
          .AddMethod(__Method_UpdateAttributionSettings, serviceImpl.UpdateAttributionSettings)
          .AddMethod(__Method_RunAccessReport, serviceImpl.RunAccessReport)
          .AddMethod(__Method_CreateAccessBinding, serviceImpl.CreateAccessBinding)
          .AddMethod(__Method_GetAccessBinding, serviceImpl.GetAccessBinding)
          .AddMethod(__Method_UpdateAccessBinding, serviceImpl.UpdateAccessBinding)
          .AddMethod(__Method_DeleteAccessBinding, serviceImpl.DeleteAccessBinding)
          .AddMethod(__Method_ListAccessBindings, serviceImpl.ListAccessBindings)
          .AddMethod(__Method_BatchCreateAccessBindings, serviceImpl.BatchCreateAccessBindings)
          .AddMethod(__Method_BatchGetAccessBindings, serviceImpl.BatchGetAccessBindings)
          .AddMethod(__Method_BatchUpdateAccessBindings, serviceImpl.BatchUpdateAccessBindings)
          .AddMethod(__Method_BatchDeleteAccessBindings, serviceImpl.BatchDeleteAccessBindings)
          .AddMethod(__Method_GetExpandedDataSet, serviceImpl.GetExpandedDataSet)
          .AddMethod(__Method_ListExpandedDataSets, serviceImpl.ListExpandedDataSets)
          .AddMethod(__Method_CreateExpandedDataSet, serviceImpl.CreateExpandedDataSet)
          .AddMethod(__Method_UpdateExpandedDataSet, serviceImpl.UpdateExpandedDataSet)
          .AddMethod(__Method_DeleteExpandedDataSet, serviceImpl.DeleteExpandedDataSet)
          .AddMethod(__Method_GetChannelGroup, serviceImpl.GetChannelGroup)
          .AddMethod(__Method_ListChannelGroups, serviceImpl.ListChannelGroups)
          .AddMethod(__Method_CreateChannelGroup, serviceImpl.CreateChannelGroup)
          .AddMethod(__Method_UpdateChannelGroup, serviceImpl.UpdateChannelGroup)
          .AddMethod(__Method_DeleteChannelGroup, serviceImpl.DeleteChannelGroup)
          .AddMethod(__Method_SetAutomatedGa4ConfigurationOptOut, serviceImpl.SetAutomatedGa4ConfigurationOptOut)
          .AddMethod(__Method_FetchAutomatedGa4ConfigurationOptOut, serviceImpl.FetchAutomatedGa4ConfigurationOptOut)
          .AddMethod(__Method_CreateBigQueryLink, serviceImpl.CreateBigQueryLink)
          .AddMethod(__Method_GetBigQueryLink, serviceImpl.GetBigQueryLink)
          .AddMethod(__Method_ListBigQueryLinks, serviceImpl.ListBigQueryLinks)
          .AddMethod(__Method_DeleteBigQueryLink, serviceImpl.DeleteBigQueryLink)
          .AddMethod(__Method_UpdateBigQueryLink, serviceImpl.UpdateBigQueryLink)
          .AddMethod(__Method_GetEnhancedMeasurementSettings, serviceImpl.GetEnhancedMeasurementSettings)
          .AddMethod(__Method_UpdateEnhancedMeasurementSettings, serviceImpl.UpdateEnhancedMeasurementSettings)
          .AddMethod(__Method_CreateConnectedSiteTag, serviceImpl.CreateConnectedSiteTag)
          .AddMethod(__Method_DeleteConnectedSiteTag, serviceImpl.DeleteConnectedSiteTag)
          .AddMethod(__Method_ListConnectedSiteTags, serviceImpl.ListConnectedSiteTags)
          .AddMethod(__Method_FetchConnectedGa4Property, serviceImpl.FetchConnectedGa4Property)
          .AddMethod(__Method_GetAdSenseLink, serviceImpl.GetAdSenseLink)
          .AddMethod(__Method_CreateAdSenseLink, serviceImpl.CreateAdSenseLink)
          .AddMethod(__Method_DeleteAdSenseLink, serviceImpl.DeleteAdSenseLink)
          .AddMethod(__Method_ListAdSenseLinks, serviceImpl.ListAdSenseLinks)
          .AddMethod(__Method_GetEventCreateRule, serviceImpl.GetEventCreateRule)
          .AddMethod(__Method_ListEventCreateRules, serviceImpl.ListEventCreateRules)
          .AddMethod(__Method_CreateEventCreateRule, serviceImpl.CreateEventCreateRule)
          .AddMethod(__Method_UpdateEventCreateRule, serviceImpl.UpdateEventCreateRule)
          .AddMethod(__Method_DeleteEventCreateRule, serviceImpl.DeleteEventCreateRule)
          .AddMethod(__Method_GetEventEditRule, serviceImpl.GetEventEditRule)
          .AddMethod(__Method_ListEventEditRules, serviceImpl.ListEventEditRules)
          .AddMethod(__Method_CreateEventEditRule, serviceImpl.CreateEventEditRule)
          .AddMethod(__Method_UpdateEventEditRule, serviceImpl.UpdateEventEditRule)
          .AddMethod(__Method_DeleteEventEditRule, serviceImpl.DeleteEventEditRule)
          .AddMethod(__Method_ReorderEventEditRules, serviceImpl.ReorderEventEditRules)
          .AddMethod(__Method_UpdateDataRedactionSettings, serviceImpl.UpdateDataRedactionSettings)
          .AddMethod(__Method_GetDataRedactionSettings, serviceImpl.GetDataRedactionSettings)
          .AddMethod(__Method_GetCalculatedMetric, serviceImpl.GetCalculatedMetric)
          .AddMethod(__Method_CreateCalculatedMetric, serviceImpl.CreateCalculatedMetric)
          .AddMethod(__Method_ListCalculatedMetrics, serviceImpl.ListCalculatedMetrics)
          .AddMethod(__Method_UpdateCalculatedMetric, serviceImpl.UpdateCalculatedMetric)
          .AddMethod(__Method_DeleteCalculatedMetric, serviceImpl.DeleteCalculatedMetric)
          .AddMethod(__Method_CreateRollupProperty, serviceImpl.CreateRollupProperty)
          .AddMethod(__Method_GetRollupPropertySourceLink, serviceImpl.GetRollupPropertySourceLink)
          .AddMethod(__Method_ListRollupPropertySourceLinks, serviceImpl.ListRollupPropertySourceLinks)
          .AddMethod(__Method_CreateRollupPropertySourceLink, serviceImpl.CreateRollupPropertySourceLink)
          .AddMethod(__Method_DeleteRollupPropertySourceLink, serviceImpl.DeleteRollupPropertySourceLink)
          .AddMethod(__Method_ProvisionSubproperty, serviceImpl.ProvisionSubproperty)
          .AddMethod(__Method_CreateSubpropertyEventFilter, serviceImpl.CreateSubpropertyEventFilter)
          .AddMethod(__Method_GetSubpropertyEventFilter, serviceImpl.GetSubpropertyEventFilter)
          .AddMethod(__Method_ListSubpropertyEventFilters, serviceImpl.ListSubpropertyEventFilters)
          .AddMethod(__Method_UpdateSubpropertyEventFilter, serviceImpl.UpdateSubpropertyEventFilter)
          .AddMethod(__Method_DeleteSubpropertyEventFilter, serviceImpl.DeleteSubpropertyEventFilter).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, AnalyticsAdminServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetAccount, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.GetAccountRequest, global::Google.Analytics.Admin.V1Alpha.Account>(serviceImpl.GetAccount));
      serviceBinder.AddMethod(__Method_ListAccounts, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.ListAccountsRequest, global::Google.Analytics.Admin.V1Alpha.ListAccountsResponse>(serviceImpl.ListAccounts));
      serviceBinder.AddMethod(__Method_DeleteAccount, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.DeleteAccountRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteAccount));
      serviceBinder.AddMethod(__Method_UpdateAccount, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.UpdateAccountRequest, global::Google.Analytics.Admin.V1Alpha.Account>(serviceImpl.UpdateAccount));
      serviceBinder.AddMethod(__Method_ProvisionAccountTicket, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.ProvisionAccountTicketRequest, global::Google.Analytics.Admin.V1Alpha.ProvisionAccountTicketResponse>(serviceImpl.ProvisionAccountTicket));
      serviceBinder.AddMethod(__Method_ListAccountSummaries, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.ListAccountSummariesRequest, global::Google.Analytics.Admin.V1Alpha.ListAccountSummariesResponse>(serviceImpl.ListAccountSummaries));
      serviceBinder.AddMethod(__Method_GetProperty, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.GetPropertyRequest, global::Google.Analytics.Admin.V1Alpha.Property>(serviceImpl.GetProperty));
      serviceBinder.AddMethod(__Method_ListProperties, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.ListPropertiesRequest, global::Google.Analytics.Admin.V1Alpha.ListPropertiesResponse>(serviceImpl.ListProperties));
      serviceBinder.AddMethod(__Method_CreateProperty, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.CreatePropertyRequest, global::Google.Analytics.Admin.V1Alpha.Property>(serviceImpl.CreateProperty));
      serviceBinder.AddMethod(__Method_DeleteProperty, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.DeletePropertyRequest, global::Google.Analytics.Admin.V1Alpha.Property>(serviceImpl.DeleteProperty));
      serviceBinder.AddMethod(__Method_UpdateProperty, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.UpdatePropertyRequest, global::Google.Analytics.Admin.V1Alpha.Property>(serviceImpl.UpdateProperty));
      serviceBinder.AddMethod(__Method_CreateFirebaseLink, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.CreateFirebaseLinkRequest, global::Google.Analytics.Admin.V1Alpha.FirebaseLink>(serviceImpl.CreateFirebaseLink));
      serviceBinder.AddMethod(__Method_DeleteFirebaseLink, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.DeleteFirebaseLinkRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteFirebaseLink));
      serviceBinder.AddMethod(__Method_ListFirebaseLinks, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.ListFirebaseLinksRequest, global::Google.Analytics.Admin.V1Alpha.ListFirebaseLinksResponse>(serviceImpl.ListFirebaseLinks));
      serviceBinder.AddMethod(__Method_GetGlobalSiteTag, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.GetGlobalSiteTagRequest, global::Google.Analytics.Admin.V1Alpha.GlobalSiteTag>(serviceImpl.GetGlobalSiteTag));
      serviceBinder.AddMethod(__Method_CreateGoogleAdsLink, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.CreateGoogleAdsLinkRequest, global::Google.Analytics.Admin.V1Alpha.GoogleAdsLink>(serviceImpl.CreateGoogleAdsLink));
      serviceBinder.AddMethod(__Method_UpdateGoogleAdsLink, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.UpdateGoogleAdsLinkRequest, global::Google.Analytics.Admin.V1Alpha.GoogleAdsLink>(serviceImpl.UpdateGoogleAdsLink));
      serviceBinder.AddMethod(__Method_DeleteGoogleAdsLink, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.DeleteGoogleAdsLinkRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteGoogleAdsLink));
      serviceBinder.AddMethod(__Method_ListGoogleAdsLinks, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.ListGoogleAdsLinksRequest, global::Google.Analytics.Admin.V1Alpha.ListGoogleAdsLinksResponse>(serviceImpl.ListGoogleAdsLinks));
      serviceBinder.AddMethod(__Method_GetDataSharingSettings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.GetDataSharingSettingsRequest, global::Google.Analytics.Admin.V1Alpha.DataSharingSettings>(serviceImpl.GetDataSharingSettings));
      serviceBinder.AddMethod(__Method_GetMeasurementProtocolSecret, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.GetMeasurementProtocolSecretRequest, global::Google.Analytics.Admin.V1Alpha.MeasurementProtocolSecret>(serviceImpl.GetMeasurementProtocolSecret));
      serviceBinder.AddMethod(__Method_ListMeasurementProtocolSecrets, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.ListMeasurementProtocolSecretsRequest, global::Google.Analytics.Admin.V1Alpha.ListMeasurementProtocolSecretsResponse>(serviceImpl.ListMeasurementProtocolSecrets));
      serviceBinder.AddMethod(__Method_CreateMeasurementProtocolSecret, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.CreateMeasurementProtocolSecretRequest, global::Google.Analytics.Admin.V1Alpha.MeasurementProtocolSecret>(serviceImpl.CreateMeasurementProtocolSecret));
      serviceBinder.AddMethod(__Method_DeleteMeasurementProtocolSecret, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.DeleteMeasurementProtocolSecretRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteMeasurementProtocolSecret));
      serviceBinder.AddMethod(__Method_UpdateMeasurementProtocolSecret, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.UpdateMeasurementProtocolSecretRequest, global::Google.Analytics.Admin.V1Alpha.MeasurementProtocolSecret>(serviceImpl.UpdateMeasurementProtocolSecret));
      serviceBinder.AddMethod(__Method_AcknowledgeUserDataCollection, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.AcknowledgeUserDataCollectionRequest, global::Google.Analytics.Admin.V1Alpha.AcknowledgeUserDataCollectionResponse>(serviceImpl.AcknowledgeUserDataCollection));
      serviceBinder.AddMethod(__Method_GetSKAdNetworkConversionValueSchema, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.GetSKAdNetworkConversionValueSchemaRequest, global::Google.Analytics.Admin.V1Alpha.SKAdNetworkConversionValueSchema>(serviceImpl.GetSKAdNetworkConversionValueSchema));
      serviceBinder.AddMethod(__Method_CreateSKAdNetworkConversionValueSchema, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.CreateSKAdNetworkConversionValueSchemaRequest, global::Google.Analytics.Admin.V1Alpha.SKAdNetworkConversionValueSchema>(serviceImpl.CreateSKAdNetworkConversionValueSchema));
      serviceBinder.AddMethod(__Method_DeleteSKAdNetworkConversionValueSchema, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.DeleteSKAdNetworkConversionValueSchemaRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteSKAdNetworkConversionValueSchema));
      serviceBinder.AddMethod(__Method_UpdateSKAdNetworkConversionValueSchema, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.UpdateSKAdNetworkConversionValueSchemaRequest, global::Google.Analytics.Admin.V1Alpha.SKAdNetworkConversionValueSchema>(serviceImpl.UpdateSKAdNetworkConversionValueSchema));
      serviceBinder.AddMethod(__Method_ListSKAdNetworkConversionValueSchemas, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.ListSKAdNetworkConversionValueSchemasRequest, global::Google.Analytics.Admin.V1Alpha.ListSKAdNetworkConversionValueSchemasResponse>(serviceImpl.ListSKAdNetworkConversionValueSchemas));
      serviceBinder.AddMethod(__Method_SearchChangeHistoryEvents, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.SearchChangeHistoryEventsRequest, global::Google.Analytics.Admin.V1Alpha.SearchChangeHistoryEventsResponse>(serviceImpl.SearchChangeHistoryEvents));
      serviceBinder.AddMethod(__Method_GetGoogleSignalsSettings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.GetGoogleSignalsSettingsRequest, global::Google.Analytics.Admin.V1Alpha.GoogleSignalsSettings>(serviceImpl.GetGoogleSignalsSettings));
      serviceBinder.AddMethod(__Method_UpdateGoogleSignalsSettings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.UpdateGoogleSignalsSettingsRequest, global::Google.Analytics.Admin.V1Alpha.GoogleSignalsSettings>(serviceImpl.UpdateGoogleSignalsSettings));
      serviceBinder.AddMethod(__Method_CreateConversionEvent, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.CreateConversionEventRequest, global::Google.Analytics.Admin.V1Alpha.ConversionEvent>(serviceImpl.CreateConversionEvent));
      serviceBinder.AddMethod(__Method_UpdateConversionEvent, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.UpdateConversionEventRequest, global::Google.Analytics.Admin.V1Alpha.ConversionEvent>(serviceImpl.UpdateConversionEvent));
      serviceBinder.AddMethod(__Method_GetConversionEvent, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.GetConversionEventRequest, global::Google.Analytics.Admin.V1Alpha.ConversionEvent>(serviceImpl.GetConversionEvent));
      serviceBinder.AddMethod(__Method_DeleteConversionEvent, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.DeleteConversionEventRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteConversionEvent));
      serviceBinder.AddMethod(__Method_ListConversionEvents, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.ListConversionEventsRequest, global::Google.Analytics.Admin.V1Alpha.ListConversionEventsResponse>(serviceImpl.ListConversionEvents));
      serviceBinder.AddMethod(__Method_CreateKeyEvent, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.CreateKeyEventRequest, global::Google.Analytics.Admin.V1Alpha.KeyEvent>(serviceImpl.CreateKeyEvent));
      serviceBinder.AddMethod(__Method_UpdateKeyEvent, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.UpdateKeyEventRequest, global::Google.Analytics.Admin.V1Alpha.KeyEvent>(serviceImpl.UpdateKeyEvent));
      serviceBinder.AddMethod(__Method_GetKeyEvent, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.GetKeyEventRequest, global::Google.Analytics.Admin.V1Alpha.KeyEvent>(serviceImpl.GetKeyEvent));
      serviceBinder.AddMethod(__Method_DeleteKeyEvent, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.DeleteKeyEventRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteKeyEvent));
      serviceBinder.AddMethod(__Method_ListKeyEvents, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.ListKeyEventsRequest, global::Google.Analytics.Admin.V1Alpha.ListKeyEventsResponse>(serviceImpl.ListKeyEvents));
      serviceBinder.AddMethod(__Method_GetDisplayVideo360AdvertiserLink, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.GetDisplayVideo360AdvertiserLinkRequest, global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLink>(serviceImpl.GetDisplayVideo360AdvertiserLink));
      serviceBinder.AddMethod(__Method_ListDisplayVideo360AdvertiserLinks, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.ListDisplayVideo360AdvertiserLinksRequest, global::Google.Analytics.Admin.V1Alpha.ListDisplayVideo360AdvertiserLinksResponse>(serviceImpl.ListDisplayVideo360AdvertiserLinks));
      serviceBinder.AddMethod(__Method_CreateDisplayVideo360AdvertiserLink, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.CreateDisplayVideo360AdvertiserLinkRequest, global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLink>(serviceImpl.CreateDisplayVideo360AdvertiserLink));
      serviceBinder.AddMethod(__Method_DeleteDisplayVideo360AdvertiserLink, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.DeleteDisplayVideo360AdvertiserLinkRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteDisplayVideo360AdvertiserLink));
      serviceBinder.AddMethod(__Method_UpdateDisplayVideo360AdvertiserLink, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.UpdateDisplayVideo360AdvertiserLinkRequest, global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLink>(serviceImpl.UpdateDisplayVideo360AdvertiserLink));
      serviceBinder.AddMethod(__Method_GetDisplayVideo360AdvertiserLinkProposal, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.GetDisplayVideo360AdvertiserLinkProposalRequest, global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLinkProposal>(serviceImpl.GetDisplayVideo360AdvertiserLinkProposal));
      serviceBinder.AddMethod(__Method_ListDisplayVideo360AdvertiserLinkProposals, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.ListDisplayVideo360AdvertiserLinkProposalsRequest, global::Google.Analytics.Admin.V1Alpha.ListDisplayVideo360AdvertiserLinkProposalsResponse>(serviceImpl.ListDisplayVideo360AdvertiserLinkProposals));
      serviceBinder.AddMethod(__Method_CreateDisplayVideo360AdvertiserLinkProposal, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.CreateDisplayVideo360AdvertiserLinkProposalRequest, global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLinkProposal>(serviceImpl.CreateDisplayVideo360AdvertiserLinkProposal));
      serviceBinder.AddMethod(__Method_DeleteDisplayVideo360AdvertiserLinkProposal, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.DeleteDisplayVideo360AdvertiserLinkProposalRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteDisplayVideo360AdvertiserLinkProposal));
      serviceBinder.AddMethod(__Method_ApproveDisplayVideo360AdvertiserLinkProposal, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.ApproveDisplayVideo360AdvertiserLinkProposalRequest, global::Google.Analytics.Admin.V1Alpha.ApproveDisplayVideo360AdvertiserLinkProposalResponse>(serviceImpl.ApproveDisplayVideo360AdvertiserLinkProposal));
      serviceBinder.AddMethod(__Method_CancelDisplayVideo360AdvertiserLinkProposal, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.CancelDisplayVideo360AdvertiserLinkProposalRequest, global::Google.Analytics.Admin.V1Alpha.DisplayVideo360AdvertiserLinkProposal>(serviceImpl.CancelDisplayVideo360AdvertiserLinkProposal));
      serviceBinder.AddMethod(__Method_CreateCustomDimension, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.CreateCustomDimensionRequest, global::Google.Analytics.Admin.V1Alpha.CustomDimension>(serviceImpl.CreateCustomDimension));
      serviceBinder.AddMethod(__Method_UpdateCustomDimension, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.UpdateCustomDimensionRequest, global::Google.Analytics.Admin.V1Alpha.CustomDimension>(serviceImpl.UpdateCustomDimension));
      serviceBinder.AddMethod(__Method_ListCustomDimensions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.ListCustomDimensionsRequest, global::Google.Analytics.Admin.V1Alpha.ListCustomDimensionsResponse>(serviceImpl.ListCustomDimensions));
      serviceBinder.AddMethod(__Method_ArchiveCustomDimension, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.ArchiveCustomDimensionRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.ArchiveCustomDimension));
      serviceBinder.AddMethod(__Method_GetCustomDimension, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.GetCustomDimensionRequest, global::Google.Analytics.Admin.V1Alpha.CustomDimension>(serviceImpl.GetCustomDimension));
      serviceBinder.AddMethod(__Method_CreateCustomMetric, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.CreateCustomMetricRequest, global::Google.Analytics.Admin.V1Alpha.CustomMetric>(serviceImpl.CreateCustomMetric));
      serviceBinder.AddMethod(__Method_UpdateCustomMetric, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.UpdateCustomMetricRequest, global::Google.Analytics.Admin.V1Alpha.CustomMetric>(serviceImpl.UpdateCustomMetric));
      serviceBinder.AddMethod(__Method_ListCustomMetrics, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.ListCustomMetricsRequest, global::Google.Analytics.Admin.V1Alpha.ListCustomMetricsResponse>(serviceImpl.ListCustomMetrics));
      serviceBinder.AddMethod(__Method_ArchiveCustomMetric, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.ArchiveCustomMetricRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.ArchiveCustomMetric));
      serviceBinder.AddMethod(__Method_GetCustomMetric, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.GetCustomMetricRequest, global::Google.Analytics.Admin.V1Alpha.CustomMetric>(serviceImpl.GetCustomMetric));
      serviceBinder.AddMethod(__Method_GetDataRetentionSettings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.GetDataRetentionSettingsRequest, global::Google.Analytics.Admin.V1Alpha.DataRetentionSettings>(serviceImpl.GetDataRetentionSettings));
      serviceBinder.AddMethod(__Method_UpdateDataRetentionSettings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.UpdateDataRetentionSettingsRequest, global::Google.Analytics.Admin.V1Alpha.DataRetentionSettings>(serviceImpl.UpdateDataRetentionSettings));
      serviceBinder.AddMethod(__Method_CreateDataStream, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.CreateDataStreamRequest, global::Google.Analytics.Admin.V1Alpha.DataStream>(serviceImpl.CreateDataStream));
      serviceBinder.AddMethod(__Method_DeleteDataStream, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.DeleteDataStreamRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteDataStream));
      serviceBinder.AddMethod(__Method_UpdateDataStream, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.UpdateDataStreamRequest, global::Google.Analytics.Admin.V1Alpha.DataStream>(serviceImpl.UpdateDataStream));
      serviceBinder.AddMethod(__Method_ListDataStreams, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.ListDataStreamsRequest, global::Google.Analytics.Admin.V1Alpha.ListDataStreamsResponse>(serviceImpl.ListDataStreams));
      serviceBinder.AddMethod(__Method_GetDataStream, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.GetDataStreamRequest, global::Google.Analytics.Admin.V1Alpha.DataStream>(serviceImpl.GetDataStream));
      serviceBinder.AddMethod(__Method_GetAudience, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.GetAudienceRequest, global::Google.Analytics.Admin.V1Alpha.Audience>(serviceImpl.GetAudience));
      serviceBinder.AddMethod(__Method_ListAudiences, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.ListAudiencesRequest, global::Google.Analytics.Admin.V1Alpha.ListAudiencesResponse>(serviceImpl.ListAudiences));
      serviceBinder.AddMethod(__Method_CreateAudience, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.CreateAudienceRequest, global::Google.Analytics.Admin.V1Alpha.Audience>(serviceImpl.CreateAudience));
      serviceBinder.AddMethod(__Method_UpdateAudience, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.UpdateAudienceRequest, global::Google.Analytics.Admin.V1Alpha.Audience>(serviceImpl.UpdateAudience));
      serviceBinder.AddMethod(__Method_ArchiveAudience, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.ArchiveAudienceRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.ArchiveAudience));
      serviceBinder.AddMethod(__Method_GetSearchAds360Link, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.GetSearchAds360LinkRequest, global::Google.Analytics.Admin.V1Alpha.SearchAds360Link>(serviceImpl.GetSearchAds360Link));
      serviceBinder.AddMethod(__Method_ListSearchAds360Links, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.ListSearchAds360LinksRequest, global::Google.Analytics.Admin.V1Alpha.ListSearchAds360LinksResponse>(serviceImpl.ListSearchAds360Links));
      serviceBinder.AddMethod(__Method_CreateSearchAds360Link, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.CreateSearchAds360LinkRequest, global::Google.Analytics.Admin.V1Alpha.SearchAds360Link>(serviceImpl.CreateSearchAds360Link));
      serviceBinder.AddMethod(__Method_DeleteSearchAds360Link, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.DeleteSearchAds360LinkRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteSearchAds360Link));
      serviceBinder.AddMethod(__Method_UpdateSearchAds360Link, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.UpdateSearchAds360LinkRequest, global::Google.Analytics.Admin.V1Alpha.SearchAds360Link>(serviceImpl.UpdateSearchAds360Link));
      serviceBinder.AddMethod(__Method_GetAttributionSettings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.GetAttributionSettingsRequest, global::Google.Analytics.Admin.V1Alpha.AttributionSettings>(serviceImpl.GetAttributionSettings));
      serviceBinder.AddMethod(__Method_UpdateAttributionSettings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.UpdateAttributionSettingsRequest, global::Google.Analytics.Admin.V1Alpha.AttributionSettings>(serviceImpl.UpdateAttributionSettings));
      serviceBinder.AddMethod(__Method_RunAccessReport, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.RunAccessReportRequest, global::Google.Analytics.Admin.V1Alpha.RunAccessReportResponse>(serviceImpl.RunAccessReport));
      serviceBinder.AddMethod(__Method_CreateAccessBinding, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.CreateAccessBindingRequest, global::Google.Analytics.Admin.V1Alpha.AccessBinding>(serviceImpl.CreateAccessBinding));
      serviceBinder.AddMethod(__Method_GetAccessBinding, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.GetAccessBindingRequest, global::Google.Analytics.Admin.V1Alpha.AccessBinding>(serviceImpl.GetAccessBinding));
      serviceBinder.AddMethod(__Method_UpdateAccessBinding, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.UpdateAccessBindingRequest, global::Google.Analytics.Admin.V1Alpha.AccessBinding>(serviceImpl.UpdateAccessBinding));
      serviceBinder.AddMethod(__Method_DeleteAccessBinding, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.DeleteAccessBindingRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteAccessBinding));
      serviceBinder.AddMethod(__Method_ListAccessBindings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.ListAccessBindingsRequest, global::Google.Analytics.Admin.V1Alpha.ListAccessBindingsResponse>(serviceImpl.ListAccessBindings));
      serviceBinder.AddMethod(__Method_BatchCreateAccessBindings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.BatchCreateAccessBindingsRequest, global::Google.Analytics.Admin.V1Alpha.BatchCreateAccessBindingsResponse>(serviceImpl.BatchCreateAccessBindings));
      serviceBinder.AddMethod(__Method_BatchGetAccessBindings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.BatchGetAccessBindingsRequest, global::Google.Analytics.Admin.V1Alpha.BatchGetAccessBindingsResponse>(serviceImpl.BatchGetAccessBindings));
      serviceBinder.AddMethod(__Method_BatchUpdateAccessBindings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.BatchUpdateAccessBindingsRequest, global::Google.Analytics.Admin.V1Alpha.BatchUpdateAccessBindingsResponse>(serviceImpl.BatchUpdateAccessBindings));
      serviceBinder.AddMethod(__Method_BatchDeleteAccessBindings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.BatchDeleteAccessBindingsRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.BatchDeleteAccessBindings));
      serviceBinder.AddMethod(__Method_GetExpandedDataSet, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.GetExpandedDataSetRequest, global::Google.Analytics.Admin.V1Alpha.ExpandedDataSet>(serviceImpl.GetExpandedDataSet));
      serviceBinder.AddMethod(__Method_ListExpandedDataSets, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.ListExpandedDataSetsRequest, global::Google.Analytics.Admin.V1Alpha.ListExpandedDataSetsResponse>(serviceImpl.ListExpandedDataSets));
      serviceBinder.AddMethod(__Method_CreateExpandedDataSet, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.CreateExpandedDataSetRequest, global::Google.Analytics.Admin.V1Alpha.ExpandedDataSet>(serviceImpl.CreateExpandedDataSet));
      serviceBinder.AddMethod(__Method_UpdateExpandedDataSet, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.UpdateExpandedDataSetRequest, global::Google.Analytics.Admin.V1Alpha.ExpandedDataSet>(serviceImpl.UpdateExpandedDataSet));
      serviceBinder.AddMethod(__Method_DeleteExpandedDataSet, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.DeleteExpandedDataSetRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteExpandedDataSet));
      serviceBinder.AddMethod(__Method_GetChannelGroup, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.GetChannelGroupRequest, global::Google.Analytics.Admin.V1Alpha.ChannelGroup>(serviceImpl.GetChannelGroup));
      serviceBinder.AddMethod(__Method_ListChannelGroups, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.ListChannelGroupsRequest, global::Google.Analytics.Admin.V1Alpha.ListChannelGroupsResponse>(serviceImpl.ListChannelGroups));
      serviceBinder.AddMethod(__Method_CreateChannelGroup, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.CreateChannelGroupRequest, global::Google.Analytics.Admin.V1Alpha.ChannelGroup>(serviceImpl.CreateChannelGroup));
      serviceBinder.AddMethod(__Method_UpdateChannelGroup, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.UpdateChannelGroupRequest, global::Google.Analytics.Admin.V1Alpha.ChannelGroup>(serviceImpl.UpdateChannelGroup));
      serviceBinder.AddMethod(__Method_DeleteChannelGroup, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.DeleteChannelGroupRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteChannelGroup));
      serviceBinder.AddMethod(__Method_SetAutomatedGa4ConfigurationOptOut, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.SetAutomatedGa4ConfigurationOptOutRequest, global::Google.Analytics.Admin.V1Alpha.SetAutomatedGa4ConfigurationOptOutResponse>(serviceImpl.SetAutomatedGa4ConfigurationOptOut));
      serviceBinder.AddMethod(__Method_FetchAutomatedGa4ConfigurationOptOut, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.FetchAutomatedGa4ConfigurationOptOutRequest, global::Google.Analytics.Admin.V1Alpha.FetchAutomatedGa4ConfigurationOptOutResponse>(serviceImpl.FetchAutomatedGa4ConfigurationOptOut));
      serviceBinder.AddMethod(__Method_CreateBigQueryLink, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.CreateBigQueryLinkRequest, global::Google.Analytics.Admin.V1Alpha.BigQueryLink>(serviceImpl.CreateBigQueryLink));
      serviceBinder.AddMethod(__Method_GetBigQueryLink, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.GetBigQueryLinkRequest, global::Google.Analytics.Admin.V1Alpha.BigQueryLink>(serviceImpl.GetBigQueryLink));
      serviceBinder.AddMethod(__Method_ListBigQueryLinks, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.ListBigQueryLinksRequest, global::Google.Analytics.Admin.V1Alpha.ListBigQueryLinksResponse>(serviceImpl.ListBigQueryLinks));
      serviceBinder.AddMethod(__Method_DeleteBigQueryLink, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.DeleteBigQueryLinkRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteBigQueryLink));
      serviceBinder.AddMethod(__Method_UpdateBigQueryLink, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.UpdateBigQueryLinkRequest, global::Google.Analytics.Admin.V1Alpha.BigQueryLink>(serviceImpl.UpdateBigQueryLink));
      serviceBinder.AddMethod(__Method_GetEnhancedMeasurementSettings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.GetEnhancedMeasurementSettingsRequest, global::Google.Analytics.Admin.V1Alpha.EnhancedMeasurementSettings>(serviceImpl.GetEnhancedMeasurementSettings));
      serviceBinder.AddMethod(__Method_UpdateEnhancedMeasurementSettings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.UpdateEnhancedMeasurementSettingsRequest, global::Google.Analytics.Admin.V1Alpha.EnhancedMeasurementSettings>(serviceImpl.UpdateEnhancedMeasurementSettings));
      serviceBinder.AddMethod(__Method_CreateConnectedSiteTag, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.CreateConnectedSiteTagRequest, global::Google.Analytics.Admin.V1Alpha.CreateConnectedSiteTagResponse>(serviceImpl.CreateConnectedSiteTag));
      serviceBinder.AddMethod(__Method_DeleteConnectedSiteTag, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.DeleteConnectedSiteTagRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteConnectedSiteTag));
      serviceBinder.AddMethod(__Method_ListConnectedSiteTags, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.ListConnectedSiteTagsRequest, global::Google.Analytics.Admin.V1Alpha.ListConnectedSiteTagsResponse>(serviceImpl.ListConnectedSiteTags));
      serviceBinder.AddMethod(__Method_FetchConnectedGa4Property, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.FetchConnectedGa4PropertyRequest, global::Google.Analytics.Admin.V1Alpha.FetchConnectedGa4PropertyResponse>(serviceImpl.FetchConnectedGa4Property));
      serviceBinder.AddMethod(__Method_GetAdSenseLink, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.GetAdSenseLinkRequest, global::Google.Analytics.Admin.V1Alpha.AdSenseLink>(serviceImpl.GetAdSenseLink));
      serviceBinder.AddMethod(__Method_CreateAdSenseLink, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.CreateAdSenseLinkRequest, global::Google.Analytics.Admin.V1Alpha.AdSenseLink>(serviceImpl.CreateAdSenseLink));
      serviceBinder.AddMethod(__Method_DeleteAdSenseLink, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.DeleteAdSenseLinkRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteAdSenseLink));
      serviceBinder.AddMethod(__Method_ListAdSenseLinks, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.ListAdSenseLinksRequest, global::Google.Analytics.Admin.V1Alpha.ListAdSenseLinksResponse>(serviceImpl.ListAdSenseLinks));
      serviceBinder.AddMethod(__Method_GetEventCreateRule, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.GetEventCreateRuleRequest, global::Google.Analytics.Admin.V1Alpha.EventCreateRule>(serviceImpl.GetEventCreateRule));
      serviceBinder.AddMethod(__Method_ListEventCreateRules, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.ListEventCreateRulesRequest, global::Google.Analytics.Admin.V1Alpha.ListEventCreateRulesResponse>(serviceImpl.ListEventCreateRules));
      serviceBinder.AddMethod(__Method_CreateEventCreateRule, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.CreateEventCreateRuleRequest, global::Google.Analytics.Admin.V1Alpha.EventCreateRule>(serviceImpl.CreateEventCreateRule));
      serviceBinder.AddMethod(__Method_UpdateEventCreateRule, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.UpdateEventCreateRuleRequest, global::Google.Analytics.Admin.V1Alpha.EventCreateRule>(serviceImpl.UpdateEventCreateRule));
      serviceBinder.AddMethod(__Method_DeleteEventCreateRule, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.DeleteEventCreateRuleRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteEventCreateRule));
      serviceBinder.AddMethod(__Method_GetEventEditRule, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.GetEventEditRuleRequest, global::Google.Analytics.Admin.V1Alpha.EventEditRule>(serviceImpl.GetEventEditRule));
      serviceBinder.AddMethod(__Method_ListEventEditRules, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.ListEventEditRulesRequest, global::Google.Analytics.Admin.V1Alpha.ListEventEditRulesResponse>(serviceImpl.ListEventEditRules));
      serviceBinder.AddMethod(__Method_CreateEventEditRule, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.CreateEventEditRuleRequest, global::Google.Analytics.Admin.V1Alpha.EventEditRule>(serviceImpl.CreateEventEditRule));
      serviceBinder.AddMethod(__Method_UpdateEventEditRule, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.UpdateEventEditRuleRequest, global::Google.Analytics.Admin.V1Alpha.EventEditRule>(serviceImpl.UpdateEventEditRule));
      serviceBinder.AddMethod(__Method_DeleteEventEditRule, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.DeleteEventEditRuleRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteEventEditRule));
      serviceBinder.AddMethod(__Method_ReorderEventEditRules, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.ReorderEventEditRulesRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.ReorderEventEditRules));
      serviceBinder.AddMethod(__Method_UpdateDataRedactionSettings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.UpdateDataRedactionSettingsRequest, global::Google.Analytics.Admin.V1Alpha.DataRedactionSettings>(serviceImpl.UpdateDataRedactionSettings));
      serviceBinder.AddMethod(__Method_GetDataRedactionSettings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.GetDataRedactionSettingsRequest, global::Google.Analytics.Admin.V1Alpha.DataRedactionSettings>(serviceImpl.GetDataRedactionSettings));
      serviceBinder.AddMethod(__Method_GetCalculatedMetric, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.GetCalculatedMetricRequest, global::Google.Analytics.Admin.V1Alpha.CalculatedMetric>(serviceImpl.GetCalculatedMetric));
      serviceBinder.AddMethod(__Method_CreateCalculatedMetric, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.CreateCalculatedMetricRequest, global::Google.Analytics.Admin.V1Alpha.CalculatedMetric>(serviceImpl.CreateCalculatedMetric));
      serviceBinder.AddMethod(__Method_ListCalculatedMetrics, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.ListCalculatedMetricsRequest, global::Google.Analytics.Admin.V1Alpha.ListCalculatedMetricsResponse>(serviceImpl.ListCalculatedMetrics));
      serviceBinder.AddMethod(__Method_UpdateCalculatedMetric, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.UpdateCalculatedMetricRequest, global::Google.Analytics.Admin.V1Alpha.CalculatedMetric>(serviceImpl.UpdateCalculatedMetric));
      serviceBinder.AddMethod(__Method_DeleteCalculatedMetric, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.DeleteCalculatedMetricRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteCalculatedMetric));
      serviceBinder.AddMethod(__Method_CreateRollupProperty, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.CreateRollupPropertyRequest, global::Google.Analytics.Admin.V1Alpha.CreateRollupPropertyResponse>(serviceImpl.CreateRollupProperty));
      serviceBinder.AddMethod(__Method_GetRollupPropertySourceLink, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.GetRollupPropertySourceLinkRequest, global::Google.Analytics.Admin.V1Alpha.RollupPropertySourceLink>(serviceImpl.GetRollupPropertySourceLink));
      serviceBinder.AddMethod(__Method_ListRollupPropertySourceLinks, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.ListRollupPropertySourceLinksRequest, global::Google.Analytics.Admin.V1Alpha.ListRollupPropertySourceLinksResponse>(serviceImpl.ListRollupPropertySourceLinks));
      serviceBinder.AddMethod(__Method_CreateRollupPropertySourceLink, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.CreateRollupPropertySourceLinkRequest, global::Google.Analytics.Admin.V1Alpha.RollupPropertySourceLink>(serviceImpl.CreateRollupPropertySourceLink));
      serviceBinder.AddMethod(__Method_DeleteRollupPropertySourceLink, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.DeleteRollupPropertySourceLinkRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteRollupPropertySourceLink));
      serviceBinder.AddMethod(__Method_ProvisionSubproperty, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.ProvisionSubpropertyRequest, global::Google.Analytics.Admin.V1Alpha.ProvisionSubpropertyResponse>(serviceImpl.ProvisionSubproperty));
      serviceBinder.AddMethod(__Method_CreateSubpropertyEventFilter, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.CreateSubpropertyEventFilterRequest, global::Google.Analytics.Admin.V1Alpha.SubpropertyEventFilter>(serviceImpl.CreateSubpropertyEventFilter));
      serviceBinder.AddMethod(__Method_GetSubpropertyEventFilter, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.GetSubpropertyEventFilterRequest, global::Google.Analytics.Admin.V1Alpha.SubpropertyEventFilter>(serviceImpl.GetSubpropertyEventFilter));
      serviceBinder.AddMethod(__Method_ListSubpropertyEventFilters, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.ListSubpropertyEventFiltersRequest, global::Google.Analytics.Admin.V1Alpha.ListSubpropertyEventFiltersResponse>(serviceImpl.ListSubpropertyEventFilters));
      serviceBinder.AddMethod(__Method_UpdateSubpropertyEventFilter, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.UpdateSubpropertyEventFilterRequest, global::Google.Analytics.Admin.V1Alpha.SubpropertyEventFilter>(serviceImpl.UpdateSubpropertyEventFilter));
      serviceBinder.AddMethod(__Method_DeleteSubpropertyEventFilter, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Alpha.DeleteSubpropertyEventFilterRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteSubpropertyEventFilter));
    }

  }
}
#endregion
