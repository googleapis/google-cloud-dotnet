// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/scheduler/v1/job.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Scheduler.V1 {

  /// <summary>Holder for reflection information generated from google/cloud/scheduler/v1/job.proto</summary>
  public static partial class JobReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/scheduler/v1/job.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static JobReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNnb29nbGUvY2xvdWQvc2NoZWR1bGVyL3YxL2pvYi5wcm90bxIZZ29vZ2xl",
            "LmNsb3VkLnNjaGVkdWxlci52MRofZ29vZ2xlL2FwaS9maWVsZF9iZWhhdmlv",
            "ci5wcm90bxoZZ29vZ2xlL2FwaS9yZXNvdXJjZS5wcm90bxomZ29vZ2xlL2Ns",
            "b3VkL3NjaGVkdWxlci92MS90YXJnZXQucHJvdG8aHmdvb2dsZS9wcm90b2J1",
            "Zi9kdXJhdGlvbi5wcm90bxofZ29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5w",
            "cm90bxoXZ29vZ2xlL3JwYy9zdGF0dXMucHJvdG8i7wYKA0pvYhIMCgRuYW1l",
            "GAEgASgJEhMKC2Rlc2NyaXB0aW9uGAIgASgJEkAKDXB1YnN1Yl90YXJnZXQY",
            "BCABKAsyJy5nb29nbGUuY2xvdWQuc2NoZWR1bGVyLnYxLlB1YnN1YlRhcmdl",
            "dEgAElAKFmFwcF9lbmdpbmVfaHR0cF90YXJnZXQYBSABKAsyLi5nb29nbGUu",
            "Y2xvdWQuc2NoZWR1bGVyLnYxLkFwcEVuZ2luZUh0dHBUYXJnZXRIABI8Cgto",
            "dHRwX3RhcmdldBgGIAEoCzIlLmdvb2dsZS5jbG91ZC5zY2hlZHVsZXIudjEu",
            "SHR0cFRhcmdldEgAEhAKCHNjaGVkdWxlGBQgASgJEhEKCXRpbWVfem9uZRgV",
            "IAEoCRI5ChB1c2VyX3VwZGF0ZV90aW1lGAkgASgLMhouZ29vZ2xlLnByb3Rv",
            "YnVmLlRpbWVzdGFtcEID4EEDEjgKBXN0YXRlGAogASgOMiQuZ29vZ2xlLmNs",
            "b3VkLnNjaGVkdWxlci52MS5Kb2IuU3RhdGVCA+BBAxInCgZzdGF0dXMYCyAB",
            "KAsyEi5nb29nbGUucnBjLlN0YXR1c0ID4EEDEjYKDXNjaGVkdWxlX3RpbWUY",
            "ESABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMSOgoRbGFz",
            "dF9hdHRlbXB0X3RpbWUYEiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0",
            "YW1wQgPgQQMSPAoMcmV0cnlfY29uZmlnGBMgASgLMiYuZ29vZ2xlLmNsb3Vk",
            "LnNjaGVkdWxlci52MS5SZXRyeUNvbmZpZxIzChBhdHRlbXB0X2RlYWRsaW5l",
            "GBYgASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uIlgKBVN0YXRlEhUK",
            "EVNUQVRFX1VOU1BFQ0lGSUVEEAASCwoHRU5BQkxFRBABEgoKBlBBVVNFRBAC",
            "EgwKCERJU0FCTEVEEAMSEQoNVVBEQVRFX0ZBSUxFRBAEOmXqQWIKIWNsb3Vk",
            "c2NoZWR1bGVyLmdvb2dsZWFwaXMuY29tL0pvYhIycHJvamVjdHMve3Byb2pl",
            "Y3R9L2xvY2F0aW9ucy97bG9jYXRpb259L2pvYnMve2pvYn0qBGpvYnMyA2pv",
            "YkIICgZ0YXJnZXQi4gEKC1JldHJ5Q29uZmlnEhMKC3JldHJ5X2NvdW50GAEg",
            "ASgFEjUKEm1heF9yZXRyeV9kdXJhdGlvbhgCIAEoCzIZLmdvb2dsZS5wcm90",
            "b2J1Zi5EdXJhdGlvbhI3ChRtaW5fYmFja29mZl9kdXJhdGlvbhgDIAEoCzIZ",
            "Lmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbhI3ChRtYXhfYmFja29mZl9kdXJh",
            "dGlvbhgEIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbhIVCg1tYXhf",
            "ZG91YmxpbmdzGAUgASgFQmgKHWNvbS5nb29nbGUuY2xvdWQuc2NoZWR1bGVy",
            "LnYxQghKb2JQcm90b1ABWjtjbG91ZC5nb29nbGUuY29tL2dvL3NjaGVkdWxl",
            "ci9hcGl2MS9zY2hlZHVsZXJwYjtzY2hlZHVsZXJwYmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Cloud.Scheduler.V1.TargetReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Rpc.StatusReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Scheduler.V1.Job), global::Google.Cloud.Scheduler.V1.Job.Parser, new[]{ "Name", "Description", "PubsubTarget", "AppEngineHttpTarget", "HttpTarget", "Schedule", "TimeZone", "UserUpdateTime", "State", "Status", "ScheduleTime", "LastAttemptTime", "RetryConfig", "AttemptDeadline" }, new[]{ "Target" }, new[]{ typeof(global::Google.Cloud.Scheduler.V1.Job.Types.State) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Scheduler.V1.RetryConfig), global::Google.Cloud.Scheduler.V1.RetryConfig.Parser, new[]{ "RetryCount", "MaxRetryDuration", "MinBackoffDuration", "MaxBackoffDuration", "MaxDoublings" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Configuration for a job.
  /// The maximum allowed size for a job is 1MB.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Job : pb::IMessage<Job>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Job> _parser = new pb::MessageParser<Job>(() => new Job());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Job> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Scheduler.V1.JobReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Job() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Job(Job other) : this() {
      name_ = other.name_;
      description_ = other.description_;
      schedule_ = other.schedule_;
      timeZone_ = other.timeZone_;
      userUpdateTime_ = other.userUpdateTime_ != null ? other.userUpdateTime_.Clone() : null;
      state_ = other.state_;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      scheduleTime_ = other.scheduleTime_ != null ? other.scheduleTime_.Clone() : null;
      lastAttemptTime_ = other.lastAttemptTime_ != null ? other.lastAttemptTime_.Clone() : null;
      retryConfig_ = other.retryConfig_ != null ? other.retryConfig_.Clone() : null;
      attemptDeadline_ = other.attemptDeadline_ != null ? other.attemptDeadline_.Clone() : null;
      switch (other.TargetCase) {
        case TargetOneofCase.PubsubTarget:
          PubsubTarget = other.PubsubTarget.Clone();
          break;
        case TargetOneofCase.AppEngineHttpTarget:
          AppEngineHttpTarget = other.AppEngineHttpTarget.Clone();
          break;
        case TargetOneofCase.HttpTarget:
          HttpTarget = other.HttpTarget.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Job Clone() {
      return new Job(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Optionally caller-specified in
    /// [CreateJob][google.cloud.scheduler.v1.CloudScheduler.CreateJob], after
    /// which it becomes output only.
    ///
    /// The job name. For example:
    /// `projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID`.
    ///
    /// * `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]),
    ///    hyphens (-), colons (:), or periods (.).
    ///    For more information, see
    ///    [Identifying
    ///    projects](https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects)
    /// * `LOCATION_ID` is the canonical ID for the job's location.
    ///    The list of available locations can be obtained by calling
    ///    [ListLocations][google.cloud.location.Locations.ListLocations].
    ///    For more information, see https://cloud.google.com/about/locations/.
    /// * `JOB_ID` can contain only letters ([A-Za-z]), numbers ([0-9]),
    ///    hyphens (-), or underscores (_). The maximum length is 500 characters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    /// <summary>
    /// Optionally caller-specified in
    /// [CreateJob][google.cloud.scheduler.v1.CloudScheduler.CreateJob] or
    /// [UpdateJob][google.cloud.scheduler.v1.CloudScheduler.UpdateJob].
    ///
    /// A human-readable description for the job. This string must not contain
    /// more than 500 characters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pubsub_target" field.</summary>
    public const int PubsubTargetFieldNumber = 4;
    /// <summary>
    /// Pub/Sub target.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Scheduler.V1.PubsubTarget PubsubTarget {
      get { return targetCase_ == TargetOneofCase.PubsubTarget ? (global::Google.Cloud.Scheduler.V1.PubsubTarget) target_ : null; }
      set {
        target_ = value;
        targetCase_ = value == null ? TargetOneofCase.None : TargetOneofCase.PubsubTarget;
      }
    }

    /// <summary>Field number for the "app_engine_http_target" field.</summary>
    public const int AppEngineHttpTargetFieldNumber = 5;
    /// <summary>
    /// App Engine HTTP target.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Scheduler.V1.AppEngineHttpTarget AppEngineHttpTarget {
      get { return targetCase_ == TargetOneofCase.AppEngineHttpTarget ? (global::Google.Cloud.Scheduler.V1.AppEngineHttpTarget) target_ : null; }
      set {
        target_ = value;
        targetCase_ = value == null ? TargetOneofCase.None : TargetOneofCase.AppEngineHttpTarget;
      }
    }

    /// <summary>Field number for the "http_target" field.</summary>
    public const int HttpTargetFieldNumber = 6;
    /// <summary>
    /// HTTP target.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Scheduler.V1.HttpTarget HttpTarget {
      get { return targetCase_ == TargetOneofCase.HttpTarget ? (global::Google.Cloud.Scheduler.V1.HttpTarget) target_ : null; }
      set {
        target_ = value;
        targetCase_ = value == null ? TargetOneofCase.None : TargetOneofCase.HttpTarget;
      }
    }

    /// <summary>Field number for the "schedule" field.</summary>
    public const int ScheduleFieldNumber = 20;
    private string schedule_ = "";
    /// <summary>
    /// Required, except when used with
    /// [UpdateJob][google.cloud.scheduler.v1.CloudScheduler.UpdateJob].
    ///
    /// Describes the schedule on which the job will be executed.
    ///
    /// The schedule can be either of the following types:
    ///
    /// * [Crontab](https://en.wikipedia.org/wiki/Cron#Overview)
    /// * English-like
    /// [schedule](https://cloud.google.com/scheduler/docs/configuring/cron-job-schedules)
    ///
    /// As a general rule, execution `n + 1` of a job will not begin
    /// until execution `n` has finished. Cloud Scheduler will never
    /// allow two simultaneously outstanding executions. For example,
    /// this implies that if the `n+1`th execution is scheduled to run at
    /// 16:00 but the `n`th execution takes until 16:15, the `n+1`th
    /// execution will not start until `16:15`.
    /// A scheduled start time will be delayed if the previous
    /// execution has not ended when its scheduled time occurs.
    ///
    /// If [retry_count][google.cloud.scheduler.v1.RetryConfig.retry_count] > 0 and
    /// a job attempt fails, the job will be tried a total of
    /// [retry_count][google.cloud.scheduler.v1.RetryConfig.retry_count] times,
    /// with exponential backoff, until the next scheduled start time. If
    /// retry_count is 0, a job attempt will not be retried if it fails. Instead
    /// the Cloud Scheduler system will wait for the next scheduled execution time.
    /// Setting retry_count to 0 does not prevent failed jobs from running
    /// according to schedule after the failure.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Schedule {
      get { return schedule_; }
      set {
        schedule_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "time_zone" field.</summary>
    public const int TimeZoneFieldNumber = 21;
    private string timeZone_ = "";
    /// <summary>
    /// Specifies the time zone to be used in interpreting
    /// [schedule][google.cloud.scheduler.v1.Job.schedule]. The value of this field
    /// must be a time zone name from the [tz
    /// database](http://en.wikipedia.org/wiki/Tz_database).
    ///
    /// Note that some time zones include a provision for
    /// daylight savings time. The rules for daylight saving time are
    /// determined by the chosen tz. For UTC use the string "utc". If a
    /// time zone is not specified, the default will be in UTC (also known
    /// as GMT).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TimeZone {
      get { return timeZone_; }
      set {
        timeZone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_update_time" field.</summary>
    public const int UserUpdateTimeFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Timestamp userUpdateTime_;
    /// <summary>
    /// Output only. The creation time of the job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UserUpdateTime {
      get { return userUpdateTime_; }
      set {
        userUpdateTime_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 10;
    private global::Google.Cloud.Scheduler.V1.Job.Types.State state_ = global::Google.Cloud.Scheduler.V1.Job.Types.State.Unspecified;
    /// <summary>
    /// Output only. State of the job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Scheduler.V1.Job.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 11;
    private global::Google.Rpc.Status status_;
    /// <summary>
    /// Output only. The response from the target for the last attempted execution.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Rpc.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "schedule_time" field.</summary>
    public const int ScheduleTimeFieldNumber = 17;
    private global::Google.Protobuf.WellKnownTypes.Timestamp scheduleTime_;
    /// <summary>
    /// Output only. The next time the job is scheduled. Note that this may be a
    /// retry of a previously failed attempt or the next execution time
    /// according to the schedule.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ScheduleTime {
      get { return scheduleTime_; }
      set {
        scheduleTime_ = value;
      }
    }

    /// <summary>Field number for the "last_attempt_time" field.</summary>
    public const int LastAttemptTimeFieldNumber = 18;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastAttemptTime_;
    /// <summary>
    /// Output only. The time the last job attempt started.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastAttemptTime {
      get { return lastAttemptTime_; }
      set {
        lastAttemptTime_ = value;
      }
    }

    /// <summary>Field number for the "retry_config" field.</summary>
    public const int RetryConfigFieldNumber = 19;
    private global::Google.Cloud.Scheduler.V1.RetryConfig retryConfig_;
    /// <summary>
    /// Settings that determine the retry behavior.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Scheduler.V1.RetryConfig RetryConfig {
      get { return retryConfig_; }
      set {
        retryConfig_ = value;
      }
    }

    /// <summary>Field number for the "attempt_deadline" field.</summary>
    public const int AttemptDeadlineFieldNumber = 22;
    private global::Google.Protobuf.WellKnownTypes.Duration attemptDeadline_;
    /// <summary>
    /// The deadline for job attempts. If the request handler does not respond by
    /// this deadline then the request is cancelled and the attempt is marked as a
    /// `DEADLINE_EXCEEDED` failure. The failed attempt can be viewed in
    /// execution logs. Cloud Scheduler will retry the job according
    /// to the [RetryConfig][google.cloud.scheduler.v1.RetryConfig].
    ///
    /// The default and the allowed values depend on the type of target:
    ///
    /// * For [HTTP targets][google.cloud.scheduler.v1.Job.http_target], the
    /// default is 3 minutes. The deadline must be in the interval [15 seconds, 30
    /// minutes].
    ///
    /// * For [App Engine HTTP
    /// targets][google.cloud.scheduler.v1.Job.app_engine_http_target], 0 indicates
    /// that the request has the default deadline. The default deadline depends on
    /// the scaling type of the service: 10 minutes for standard apps with
    /// automatic scaling, 24 hours for standard apps with manual and basic
    /// scaling, and 60 minutes for flex apps. If the request deadline is set, it
    /// must be in the interval [15 seconds, 24 hours 15 seconds].
    ///
    /// * For [Pub/Sub targets][google.cloud.scheduler.v1.Job.pubsub_target], this
    /// field is ignored.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration AttemptDeadline {
      get { return attemptDeadline_; }
      set {
        attemptDeadline_ = value;
      }
    }

    private object target_;
    /// <summary>Enum of possible cases for the "target" oneof.</summary>
    public enum TargetOneofCase {
      None = 0,
      PubsubTarget = 4,
      AppEngineHttpTarget = 5,
      HttpTarget = 6,
    }
    private TargetOneofCase targetCase_ = TargetOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TargetOneofCase TargetCase {
      get { return targetCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTarget() {
      targetCase_ = TargetOneofCase.None;
      target_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Job);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Job other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(PubsubTarget, other.PubsubTarget)) return false;
      if (!object.Equals(AppEngineHttpTarget, other.AppEngineHttpTarget)) return false;
      if (!object.Equals(HttpTarget, other.HttpTarget)) return false;
      if (Schedule != other.Schedule) return false;
      if (TimeZone != other.TimeZone) return false;
      if (!object.Equals(UserUpdateTime, other.UserUpdateTime)) return false;
      if (State != other.State) return false;
      if (!object.Equals(Status, other.Status)) return false;
      if (!object.Equals(ScheduleTime, other.ScheduleTime)) return false;
      if (!object.Equals(LastAttemptTime, other.LastAttemptTime)) return false;
      if (!object.Equals(RetryConfig, other.RetryConfig)) return false;
      if (!object.Equals(AttemptDeadline, other.AttemptDeadline)) return false;
      if (TargetCase != other.TargetCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (targetCase_ == TargetOneofCase.PubsubTarget) hash ^= PubsubTarget.GetHashCode();
      if (targetCase_ == TargetOneofCase.AppEngineHttpTarget) hash ^= AppEngineHttpTarget.GetHashCode();
      if (targetCase_ == TargetOneofCase.HttpTarget) hash ^= HttpTarget.GetHashCode();
      if (Schedule.Length != 0) hash ^= Schedule.GetHashCode();
      if (TimeZone.Length != 0) hash ^= TimeZone.GetHashCode();
      if (userUpdateTime_ != null) hash ^= UserUpdateTime.GetHashCode();
      if (State != global::Google.Cloud.Scheduler.V1.Job.Types.State.Unspecified) hash ^= State.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (scheduleTime_ != null) hash ^= ScheduleTime.GetHashCode();
      if (lastAttemptTime_ != null) hash ^= LastAttemptTime.GetHashCode();
      if (retryConfig_ != null) hash ^= RetryConfig.GetHashCode();
      if (attemptDeadline_ != null) hash ^= AttemptDeadline.GetHashCode();
      hash ^= (int) targetCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (targetCase_ == TargetOneofCase.PubsubTarget) {
        output.WriteRawTag(34);
        output.WriteMessage(PubsubTarget);
      }
      if (targetCase_ == TargetOneofCase.AppEngineHttpTarget) {
        output.WriteRawTag(42);
        output.WriteMessage(AppEngineHttpTarget);
      }
      if (targetCase_ == TargetOneofCase.HttpTarget) {
        output.WriteRawTag(50);
        output.WriteMessage(HttpTarget);
      }
      if (userUpdateTime_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(UserUpdateTime);
      }
      if (State != global::Google.Cloud.Scheduler.V1.Job.Types.State.Unspecified) {
        output.WriteRawTag(80);
        output.WriteEnum((int) State);
      }
      if (status_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Status);
      }
      if (scheduleTime_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(ScheduleTime);
      }
      if (lastAttemptTime_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(LastAttemptTime);
      }
      if (retryConfig_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(RetryConfig);
      }
      if (Schedule.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(Schedule);
      }
      if (TimeZone.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(TimeZone);
      }
      if (attemptDeadline_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(AttemptDeadline);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (targetCase_ == TargetOneofCase.PubsubTarget) {
        output.WriteRawTag(34);
        output.WriteMessage(PubsubTarget);
      }
      if (targetCase_ == TargetOneofCase.AppEngineHttpTarget) {
        output.WriteRawTag(42);
        output.WriteMessage(AppEngineHttpTarget);
      }
      if (targetCase_ == TargetOneofCase.HttpTarget) {
        output.WriteRawTag(50);
        output.WriteMessage(HttpTarget);
      }
      if (userUpdateTime_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(UserUpdateTime);
      }
      if (State != global::Google.Cloud.Scheduler.V1.Job.Types.State.Unspecified) {
        output.WriteRawTag(80);
        output.WriteEnum((int) State);
      }
      if (status_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Status);
      }
      if (scheduleTime_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(ScheduleTime);
      }
      if (lastAttemptTime_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(LastAttemptTime);
      }
      if (retryConfig_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(RetryConfig);
      }
      if (Schedule.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(Schedule);
      }
      if (TimeZone.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(TimeZone);
      }
      if (attemptDeadline_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(AttemptDeadline);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (targetCase_ == TargetOneofCase.PubsubTarget) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PubsubTarget);
      }
      if (targetCase_ == TargetOneofCase.AppEngineHttpTarget) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AppEngineHttpTarget);
      }
      if (targetCase_ == TargetOneofCase.HttpTarget) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HttpTarget);
      }
      if (Schedule.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Schedule);
      }
      if (TimeZone.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(TimeZone);
      }
      if (userUpdateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserUpdateTime);
      }
      if (State != global::Google.Cloud.Scheduler.V1.Job.Types.State.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (scheduleTime_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ScheduleTime);
      }
      if (lastAttemptTime_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LastAttemptTime);
      }
      if (retryConfig_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RetryConfig);
      }
      if (attemptDeadline_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(AttemptDeadline);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Job other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Schedule.Length != 0) {
        Schedule = other.Schedule;
      }
      if (other.TimeZone.Length != 0) {
        TimeZone = other.TimeZone;
      }
      if (other.userUpdateTime_ != null) {
        if (userUpdateTime_ == null) {
          UserUpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UserUpdateTime.MergeFrom(other.UserUpdateTime);
      }
      if (other.State != global::Google.Cloud.Scheduler.V1.Job.Types.State.Unspecified) {
        State = other.State;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Google.Rpc.Status();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.scheduleTime_ != null) {
        if (scheduleTime_ == null) {
          ScheduleTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ScheduleTime.MergeFrom(other.ScheduleTime);
      }
      if (other.lastAttemptTime_ != null) {
        if (lastAttemptTime_ == null) {
          LastAttemptTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastAttemptTime.MergeFrom(other.LastAttemptTime);
      }
      if (other.retryConfig_ != null) {
        if (retryConfig_ == null) {
          RetryConfig = new global::Google.Cloud.Scheduler.V1.RetryConfig();
        }
        RetryConfig.MergeFrom(other.RetryConfig);
      }
      if (other.attemptDeadline_ != null) {
        if (attemptDeadline_ == null) {
          AttemptDeadline = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        AttemptDeadline.MergeFrom(other.AttemptDeadline);
      }
      switch (other.TargetCase) {
        case TargetOneofCase.PubsubTarget:
          if (PubsubTarget == null) {
            PubsubTarget = new global::Google.Cloud.Scheduler.V1.PubsubTarget();
          }
          PubsubTarget.MergeFrom(other.PubsubTarget);
          break;
        case TargetOneofCase.AppEngineHttpTarget:
          if (AppEngineHttpTarget == null) {
            AppEngineHttpTarget = new global::Google.Cloud.Scheduler.V1.AppEngineHttpTarget();
          }
          AppEngineHttpTarget.MergeFrom(other.AppEngineHttpTarget);
          break;
        case TargetOneofCase.HttpTarget:
          if (HttpTarget == null) {
            HttpTarget = new global::Google.Cloud.Scheduler.V1.HttpTarget();
          }
          HttpTarget.MergeFrom(other.HttpTarget);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            global::Google.Cloud.Scheduler.V1.PubsubTarget subBuilder = new global::Google.Cloud.Scheduler.V1.PubsubTarget();
            if (targetCase_ == TargetOneofCase.PubsubTarget) {
              subBuilder.MergeFrom(PubsubTarget);
            }
            input.ReadMessage(subBuilder);
            PubsubTarget = subBuilder;
            break;
          }
          case 42: {
            global::Google.Cloud.Scheduler.V1.AppEngineHttpTarget subBuilder = new global::Google.Cloud.Scheduler.V1.AppEngineHttpTarget();
            if (targetCase_ == TargetOneofCase.AppEngineHttpTarget) {
              subBuilder.MergeFrom(AppEngineHttpTarget);
            }
            input.ReadMessage(subBuilder);
            AppEngineHttpTarget = subBuilder;
            break;
          }
          case 50: {
            global::Google.Cloud.Scheduler.V1.HttpTarget subBuilder = new global::Google.Cloud.Scheduler.V1.HttpTarget();
            if (targetCase_ == TargetOneofCase.HttpTarget) {
              subBuilder.MergeFrom(HttpTarget);
            }
            input.ReadMessage(subBuilder);
            HttpTarget = subBuilder;
            break;
          }
          case 74: {
            if (userUpdateTime_ == null) {
              UserUpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UserUpdateTime);
            break;
          }
          case 80: {
            State = (global::Google.Cloud.Scheduler.V1.Job.Types.State) input.ReadEnum();
            break;
          }
          case 90: {
            if (status_ == null) {
              Status = new global::Google.Rpc.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 138: {
            if (scheduleTime_ == null) {
              ScheduleTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ScheduleTime);
            break;
          }
          case 146: {
            if (lastAttemptTime_ == null) {
              LastAttemptTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastAttemptTime);
            break;
          }
          case 154: {
            if (retryConfig_ == null) {
              RetryConfig = new global::Google.Cloud.Scheduler.V1.RetryConfig();
            }
            input.ReadMessage(RetryConfig);
            break;
          }
          case 162: {
            Schedule = input.ReadString();
            break;
          }
          case 170: {
            TimeZone = input.ReadString();
            break;
          }
          case 178: {
            if (attemptDeadline_ == null) {
              AttemptDeadline = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(AttemptDeadline);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            global::Google.Cloud.Scheduler.V1.PubsubTarget subBuilder = new global::Google.Cloud.Scheduler.V1.PubsubTarget();
            if (targetCase_ == TargetOneofCase.PubsubTarget) {
              subBuilder.MergeFrom(PubsubTarget);
            }
            input.ReadMessage(subBuilder);
            PubsubTarget = subBuilder;
            break;
          }
          case 42: {
            global::Google.Cloud.Scheduler.V1.AppEngineHttpTarget subBuilder = new global::Google.Cloud.Scheduler.V1.AppEngineHttpTarget();
            if (targetCase_ == TargetOneofCase.AppEngineHttpTarget) {
              subBuilder.MergeFrom(AppEngineHttpTarget);
            }
            input.ReadMessage(subBuilder);
            AppEngineHttpTarget = subBuilder;
            break;
          }
          case 50: {
            global::Google.Cloud.Scheduler.V1.HttpTarget subBuilder = new global::Google.Cloud.Scheduler.V1.HttpTarget();
            if (targetCase_ == TargetOneofCase.HttpTarget) {
              subBuilder.MergeFrom(HttpTarget);
            }
            input.ReadMessage(subBuilder);
            HttpTarget = subBuilder;
            break;
          }
          case 74: {
            if (userUpdateTime_ == null) {
              UserUpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UserUpdateTime);
            break;
          }
          case 80: {
            State = (global::Google.Cloud.Scheduler.V1.Job.Types.State) input.ReadEnum();
            break;
          }
          case 90: {
            if (status_ == null) {
              Status = new global::Google.Rpc.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 138: {
            if (scheduleTime_ == null) {
              ScheduleTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ScheduleTime);
            break;
          }
          case 146: {
            if (lastAttemptTime_ == null) {
              LastAttemptTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastAttemptTime);
            break;
          }
          case 154: {
            if (retryConfig_ == null) {
              RetryConfig = new global::Google.Cloud.Scheduler.V1.RetryConfig();
            }
            input.ReadMessage(RetryConfig);
            break;
          }
          case 162: {
            Schedule = input.ReadString();
            break;
          }
          case 170: {
            TimeZone = input.ReadString();
            break;
          }
          case 178: {
            if (attemptDeadline_ == null) {
              AttemptDeadline = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(AttemptDeadline);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Job message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// State of the job.
      /// </summary>
      public enum State {
        /// <summary>
        /// Unspecified state.
        /// </summary>
        [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The job is executing normally.
        /// </summary>
        [pbr::OriginalName("ENABLED")] Enabled = 1,
        /// <summary>
        /// The job is paused by the user. It will not execute. A user can
        /// intentionally pause the job using
        /// [PauseJobRequest][google.cloud.scheduler.v1.PauseJobRequest].
        /// </summary>
        [pbr::OriginalName("PAUSED")] Paused = 2,
        /// <summary>
        /// The job is disabled by the system due to error. The user
        /// cannot directly set a job to be disabled.
        /// </summary>
        [pbr::OriginalName("DISABLED")] Disabled = 3,
        /// <summary>
        /// The job state resulting from a failed
        /// [CloudScheduler.UpdateJob][google.cloud.scheduler.v1.CloudScheduler.UpdateJob]
        /// operation. To recover a job from this state, retry
        /// [CloudScheduler.UpdateJob][google.cloud.scheduler.v1.CloudScheduler.UpdateJob]
        /// until a successful response is received.
        /// </summary>
        [pbr::OriginalName("UPDATE_FAILED")] UpdateFailed = 4,
      }

    }
    #endregion

  }

  /// <summary>
  /// Settings that determine the retry behavior.
  ///
  /// By default, if a job does not complete successfully (meaning that
  /// an acknowledgement is not received from the handler, then it will be retried
  /// with exponential backoff according to the settings in
  /// [RetryConfig][google.cloud.scheduler.v1.RetryConfig].
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class RetryConfig : pb::IMessage<RetryConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RetryConfig> _parser = new pb::MessageParser<RetryConfig>(() => new RetryConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RetryConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Scheduler.V1.JobReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RetryConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RetryConfig(RetryConfig other) : this() {
      retryCount_ = other.retryCount_;
      maxRetryDuration_ = other.maxRetryDuration_ != null ? other.maxRetryDuration_.Clone() : null;
      minBackoffDuration_ = other.minBackoffDuration_ != null ? other.minBackoffDuration_.Clone() : null;
      maxBackoffDuration_ = other.maxBackoffDuration_ != null ? other.maxBackoffDuration_.Clone() : null;
      maxDoublings_ = other.maxDoublings_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RetryConfig Clone() {
      return new RetryConfig(this);
    }

    /// <summary>Field number for the "retry_count" field.</summary>
    public const int RetryCountFieldNumber = 1;
    private int retryCount_;
    /// <summary>
    /// The number of attempts that the system will make to run a job using the
    /// exponential backoff procedure described by
    /// [max_doublings][google.cloud.scheduler.v1.RetryConfig.max_doublings].
    ///
    /// The default value of retry_count is zero.
    ///
    /// If retry_count is 0, a job attempt will not be retried if
    /// it fails. Instead the Cloud Scheduler system will wait for the
    /// next scheduled execution time. Setting retry_count to 0 does not prevent
    /// failed jobs from running according to schedule after the failure.
    ///
    /// If retry_count is set to a non-zero number then Cloud Scheduler
    /// will retry failed attempts, using exponential backoff,
    /// retry_count times, or until the next scheduled execution time,
    /// whichever comes first.
    ///
    /// Values greater than 5 and negative values are not allowed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RetryCount {
      get { return retryCount_; }
      set {
        retryCount_ = value;
      }
    }

    /// <summary>Field number for the "max_retry_duration" field.</summary>
    public const int MaxRetryDurationFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Duration maxRetryDuration_;
    /// <summary>
    /// The time limit for retrying a failed job, measured from time when an
    /// execution was first attempted. If specified with
    /// [retry_count][google.cloud.scheduler.v1.RetryConfig.retry_count], the job
    /// will be retried until both limits are reached.
    ///
    /// The default value for max_retry_duration is zero, which means retry
    /// duration is unlimited.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration MaxRetryDuration {
      get { return maxRetryDuration_; }
      set {
        maxRetryDuration_ = value;
      }
    }

    /// <summary>Field number for the "min_backoff_duration" field.</summary>
    public const int MinBackoffDurationFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Duration minBackoffDuration_;
    /// <summary>
    /// The minimum amount of time to wait before retrying a job after
    /// it fails.
    ///
    /// The default value of this field is 5 seconds.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration MinBackoffDuration {
      get { return minBackoffDuration_; }
      set {
        minBackoffDuration_ = value;
      }
    }

    /// <summary>Field number for the "max_backoff_duration" field.</summary>
    public const int MaxBackoffDurationFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Duration maxBackoffDuration_;
    /// <summary>
    /// The maximum amount of time to wait before retrying a job after
    /// it fails.
    ///
    /// The default value of this field is 1 hour.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration MaxBackoffDuration {
      get { return maxBackoffDuration_; }
      set {
        maxBackoffDuration_ = value;
      }
    }

    /// <summary>Field number for the "max_doublings" field.</summary>
    public const int MaxDoublingsFieldNumber = 5;
    private int maxDoublings_;
    /// <summary>
    /// The time between retries will double `max_doublings` times.
    ///
    /// A job's retry interval starts at
    /// [min_backoff_duration][google.cloud.scheduler.v1.RetryConfig.min_backoff_duration],
    /// then doubles `max_doublings` times, then increases linearly, and finally
    /// retries at intervals of
    /// [max_backoff_duration][google.cloud.scheduler.v1.RetryConfig.max_backoff_duration]
    /// up to [retry_count][google.cloud.scheduler.v1.RetryConfig.retry_count]
    /// times.
    ///
    /// For example, if
    /// [min_backoff_duration][google.cloud.scheduler.v1.RetryConfig.min_backoff_duration]
    /// is 10s,
    /// [max_backoff_duration][google.cloud.scheduler.v1.RetryConfig.max_backoff_duration]
    /// is 300s, and `max_doublings` is 3, then the job will first be retried in
    /// 10s. The retry interval will double three times, and then increase linearly
    /// by 2^3 * 10s.  Finally, the job will retry at intervals of
    /// [max_backoff_duration][google.cloud.scheduler.v1.RetryConfig.max_backoff_duration]
    /// until the job has been attempted
    /// [retry_count][google.cloud.scheduler.v1.RetryConfig.retry_count] times.
    /// Thus, the requests will retry at 10s, 20s, 40s, 80s, 160s, 240s, 300s,
    /// 300s, ....
    ///
    /// The default value of this field is 5.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxDoublings {
      get { return maxDoublings_; }
      set {
        maxDoublings_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RetryConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RetryConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RetryCount != other.RetryCount) return false;
      if (!object.Equals(MaxRetryDuration, other.MaxRetryDuration)) return false;
      if (!object.Equals(MinBackoffDuration, other.MinBackoffDuration)) return false;
      if (!object.Equals(MaxBackoffDuration, other.MaxBackoffDuration)) return false;
      if (MaxDoublings != other.MaxDoublings) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RetryCount != 0) hash ^= RetryCount.GetHashCode();
      if (maxRetryDuration_ != null) hash ^= MaxRetryDuration.GetHashCode();
      if (minBackoffDuration_ != null) hash ^= MinBackoffDuration.GetHashCode();
      if (maxBackoffDuration_ != null) hash ^= MaxBackoffDuration.GetHashCode();
      if (MaxDoublings != 0) hash ^= MaxDoublings.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RetryCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RetryCount);
      }
      if (maxRetryDuration_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MaxRetryDuration);
      }
      if (minBackoffDuration_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MinBackoffDuration);
      }
      if (maxBackoffDuration_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(MaxBackoffDuration);
      }
      if (MaxDoublings != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MaxDoublings);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RetryCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RetryCount);
      }
      if (maxRetryDuration_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MaxRetryDuration);
      }
      if (minBackoffDuration_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MinBackoffDuration);
      }
      if (maxBackoffDuration_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(MaxBackoffDuration);
      }
      if (MaxDoublings != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MaxDoublings);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RetryCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RetryCount);
      }
      if (maxRetryDuration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MaxRetryDuration);
      }
      if (minBackoffDuration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MinBackoffDuration);
      }
      if (maxBackoffDuration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MaxBackoffDuration);
      }
      if (MaxDoublings != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxDoublings);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RetryConfig other) {
      if (other == null) {
        return;
      }
      if (other.RetryCount != 0) {
        RetryCount = other.RetryCount;
      }
      if (other.maxRetryDuration_ != null) {
        if (maxRetryDuration_ == null) {
          MaxRetryDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        MaxRetryDuration.MergeFrom(other.MaxRetryDuration);
      }
      if (other.minBackoffDuration_ != null) {
        if (minBackoffDuration_ == null) {
          MinBackoffDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        MinBackoffDuration.MergeFrom(other.MinBackoffDuration);
      }
      if (other.maxBackoffDuration_ != null) {
        if (maxBackoffDuration_ == null) {
          MaxBackoffDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        MaxBackoffDuration.MergeFrom(other.MaxBackoffDuration);
      }
      if (other.MaxDoublings != 0) {
        MaxDoublings = other.MaxDoublings;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RetryCount = input.ReadInt32();
            break;
          }
          case 18: {
            if (maxRetryDuration_ == null) {
              MaxRetryDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(MaxRetryDuration);
            break;
          }
          case 26: {
            if (minBackoffDuration_ == null) {
              MinBackoffDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(MinBackoffDuration);
            break;
          }
          case 34: {
            if (maxBackoffDuration_ == null) {
              MaxBackoffDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(MaxBackoffDuration);
            break;
          }
          case 40: {
            MaxDoublings = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RetryCount = input.ReadInt32();
            break;
          }
          case 18: {
            if (maxRetryDuration_ == null) {
              MaxRetryDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(MaxRetryDuration);
            break;
          }
          case 26: {
            if (minBackoffDuration_ == null) {
              MinBackoffDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(MinBackoffDuration);
            break;
          }
          case 34: {
            if (maxBackoffDuration_ == null) {
              MaxBackoffDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(MaxBackoffDuration);
            break;
          }
          case 40: {
            MaxDoublings = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
