// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/securitycenter/v2/mitre_attack.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.SecurityCenter.V2 {

  /// <summary>Holder for reflection information generated from google/cloud/securitycenter/v2/mitre_attack.proto</summary>
  public static partial class MitreAttackReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/securitycenter/v2/mitre_attack.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MitreAttackReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjFnb29nbGUvY2xvdWQvc2VjdXJpdHljZW50ZXIvdjIvbWl0cmVfYXR0YWNr",
            "LnByb3RvEh5nb29nbGUuY2xvdWQuc2VjdXJpdHljZW50ZXIudjIiyiUKC01p",
            "dHJlQXR0YWNrEkoKDnByaW1hcnlfdGFjdGljGAEgASgOMjIuZ29vZ2xlLmNs",
            "b3VkLnNlY3VyaXR5Y2VudGVyLnYyLk1pdHJlQXR0YWNrLlRhY3RpYxJRChJw",
            "cmltYXJ5X3RlY2huaXF1ZXMYAiADKA4yNS5nb29nbGUuY2xvdWQuc2VjdXJp",
            "dHljZW50ZXIudjIuTWl0cmVBdHRhY2suVGVjaG5pcXVlEk4KEmFkZGl0aW9u",
            "YWxfdGFjdGljcxgDIAMoDjIyLmdvb2dsZS5jbG91ZC5zZWN1cml0eWNlbnRl",
            "ci52Mi5NaXRyZUF0dGFjay5UYWN0aWMSVAoVYWRkaXRpb25hbF90ZWNobmlx",
            "dWVzGAQgAygOMjUuZ29vZ2xlLmNsb3VkLnNlY3VyaXR5Y2VudGVyLnYyLk1p",
            "dHJlQXR0YWNrLlRlY2huaXF1ZRIPCgd2ZXJzaW9uGAUgASgJIrQCCgZUYWN0",
            "aWMSFgoSVEFDVElDX1VOU1BFQ0lGSUVEEAASEgoOUkVDT05OQUlTU0FOQ0UQ",
            "ARIYChRSRVNPVVJDRV9ERVZFTE9QTUVOVBACEhIKDklOSVRJQUxfQUNDRVNT",
            "EAUSDQoJRVhFQ1VUSU9OEAMSDwoLUEVSU0lTVEVOQ0UQBhIYChRQUklWSUxF",
            "R0VfRVNDQUxBVElPThAIEhMKD0RFRkVOU0VfRVZBU0lPThAHEhUKEUNSRURF",
            "TlRJQUxfQUNDRVNTEAkSDQoJRElTQ09WRVJZEAoSFAoQTEFURVJBTF9NT1ZF",
            "TUVOVBALEg4KCkNPTExFQ1RJT04QDBIXChNDT01NQU5EX0FORF9DT05UUk9M",
            "EAQSEAoMRVhGSUxUUkFUSU9OEA0SCgoGSU1QQUNUEA4irSAKCVRlY2huaXF1",
            "ZRIZChVURUNITklRVUVfVU5TUEVDSUZJRUQQABIUChBEQVRBX09CRlVTQ0FU",
            "SU9OEEYSIgoeREFUQV9PQkZVU0NBVElPTl9TVEVHQU5PR1JBUEhZEEcSGQoV",
            "T1NfQ1JFREVOVElBTF9EVU1QSU5HEHISKQolT1NfQ1JFREVOVElBTF9EVU1Q",
            "SU5HX1BST0NfRklMRVNZU1RFTRBzEjUKMU9TX0NSRURFTlRJQUxfRFVNUElO",
            "R19FVENfUEFTU1dPUkRfQU5EX0VUQ19TSEFET1cQehIaChZEQVRBX0ZST01f",
            "TE9DQUxfU1lTVEVNEHUSGgoWQVVUT01BVEVEX0VYRklMVFJBVElPThBEEhwK",
            "GE9CRlVTQ0FURURfRklMRVNfT1JfSU5GTxBIEhEKDVNURUdBTk9HUkFQSFkQ",
            "SRIaChZDT01QSUxFX0FGVEVSX0RFTElWRVJZEEoSFwoTQ09NTUFORF9PQkZV",
            "U0NBVElPThBLEhYKElNDSEVEVUxFRF9UUkFOU0ZFUhB4Eh8KG1NZU1RFTV9P",
            "V05FUl9VU0VSX0RJU0NPVkVSWRB2EhAKDE1BU1FVRVJBRElORxAxEiUKIU1B",
            "VENIX0xFR0lUSU1BVEVfTkFNRV9PUl9MT0NBVElPThAyEigKJEJPT1RfT1Jf",
            "TE9HT05fSU5JVElBTElaQVRJT05fU0NSSVBUUxAlEhEKDVNUQVJUVVBfSVRF",
            "TVMQJhIdChlORVRXT1JLX1NFUlZJQ0VfRElTQ09WRVJZECASFgoSU0NIRURV",
            "TEVEX1RBU0tfSk9CEFkSGwoXU0NIRURVTEVEX1RBU0tfSk9CX0NST04QdxIf",
            "ChtDT05UQUlORVJfT1JDSEVTVFJBVElPTl9KT0IQWhIVChFQUk9DRVNTX0lO",
            "SkVDVElPThBdEhEKDUlOUFVUX0NBUFRVUkUQZxIcChhJTlBVVF9DQVBUVVJF",
            "X0tFWUxPR0dJTkcQaBIVChFQUk9DRVNTX0RJU0NPVkVSWRA4EiUKIUNPTU1B",
            "TkRfQU5EX1NDUklQVElOR19JTlRFUlBSRVRFUhAGEg4KClVOSVhfU0hFTEwQ",
            "BxIKCgZQWVRIT04QOxIpCiVFWFBMT0lUQVRJT05fRk9SX1BSSVZJTEVHRV9F",
            "U0NBTEFUSU9OED8SHwobUEVSTUlTU0lPTl9HUk9VUFNfRElTQ09WRVJZEBIS",
            "EAoMQ0xPVURfR1JPVVBTEBMSFQoRSU5ESUNBVE9SX1JFTU9WQUwQexI0CjBJ",
            "TkRJQ0FUT1JfUkVNT1ZBTF9DTEVBUl9MSU5VWF9PUl9NQUNfU1lTVEVNX0xP",
            "R1MQfBIrCidJTkRJQ0FUT1JfUkVNT1ZBTF9DTEVBUl9DT01NQU5EX0hJU1RP",
            "UlkQfRIjCh9JTkRJQ0FUT1JfUkVNT1ZBTF9GSUxFX0RFTEVUSU9OEEASIAob",
            "SU5ESUNBVE9SX1JFTU9WQUxfVElNRVNUT01QEIABEigKJElORElDQVRPUl9S",
            "RU1PVkFMX0NMRUFSX01BSUxCT1hfREFUQRB+Eh4KGkFQUExJQ0FUSU9OX0xB",
            "WUVSX1BST1RPQ09MEC0SBwoDRE5TEC4SHQoZU09GVFdBUkVfREVQTE9ZTUVO",
            "VF9UT09MUxAvEhIKDlZBTElEX0FDQ09VTlRTEA4SFAoQREVGQVVMVF9BQ0NP",
            "VU5UUxAjEhIKDkxPQ0FMX0FDQ09VTlRTEA8SEgoOQ0xPVURfQUNDT1VOVFMQ",
            "EBIgChxGSUxFX0FORF9ESVJFQ1RPUllfRElTQ09WRVJZEHkSIwofQUNDT1VO",
            "VF9ESVNDT1ZFUllfTE9DQUxfQUNDT1VOVBB0EgkKBVBST1hZEAkSEgoORVhU",
            "RVJOQUxfUFJPWFkQChITCg9NVUxUSV9IT1BfUFJPWFkQCxIYChRBQ0NPVU5U",
            "X01BTklQVUxBVElPThAWEiAKHEFERElUSU9OQUxfQ0xPVURfQ1JFREVOVElB",
            "TFMQKBIaChZBRERJVElPTkFMX0NMT1VEX1JPTEVTEEMSFwoTU1NIX0FVVEhP",
            "UklaRURfS0VZUxAXEiYKIkFERElUSU9OQUxfQ09OVEFJTkVSX0NMVVNURVJf",
            "Uk9MRVMQOhIYChRNVUxUSV9TVEFHRV9DSEFOTkVMUxBMEhkKFUlOR1JFU1Nf",
            "VE9PTF9UUkFOU0ZFUhADEg4KCk5BVElWRV9BUEkQBBIPCgtCUlVURV9GT1JD",
            "RRAsEhgKFEFVVE9NQVRFRF9DT0xMRUNUSU9OEF4SEgoOU0hBUkVEX01PRFVM",
            "RVMQBRIRCg1EQVRBX0VOQ09ESU5HEE0SFQoRU1RBTkRBUkRfRU5DT0RJTkcQ",
            "ThIdChlBQ0NFU1NfVE9LRU5fTUFOSVBVTEFUSU9OECESIAocVE9LRU5fSU1Q",
            "RVJTT05BVElPTl9PUl9USEVGVBAnEhIKDkNSRUFURV9BQ0NPVU5UEE8SEQoN",
            "TE9DQUxfQUNDT1VOVBBQEiQKIERFT0JGVVNDQVRFX0RFQ09ERV9GSUxFU19P",
            "Ul9JTkZPEF8SJQohRVhQTE9JVF9QVUJMSUNfRkFDSU5HX0FQUExJQ0FUSU9O",
            "EBsSHAoXU1VQUExZX0NIQUlOX0NPTVBST01JU0UQgQESOwo2Q09NUFJPTUlT",
            "RV9TT0ZUV0FSRV9ERVBFTkRFTkNJRVNfQU5EX0RFVkVMT1BNRU5UX1RPT0xT",
            "EIIBEiYKIUVYUExPSVRBVElPTl9GT1JfQ0xJRU5UX0VYRUNVVElPThCGARIS",
            "Cg5VU0VSX0VYRUNVVElPThBFEj4KOUxJTlVYX0FORF9NQUNfRklMRV9BTkRf",
            "RElSRUNUT1JZX1BFUk1JU1NJT05TX01PRElGSUNBVElPThCHARIeChpET01B",
            "SU5fUE9MSUNZX01PRElGSUNBVElPThAeEhQKEERBVEFfREVTVFJVQ1RJT04Q",
            "HRIeChlEQVRBX0VOQ1JZUFRFRF9GT1JfSU1QQUNUEIQBEhAKDFNFUlZJQ0Vf",
            "U1RPUBA0EhsKF0lOSElCSVRfU1lTVEVNX1JFQ09WRVJZECQSFwoTRklSTVdB",
            "UkVfQ09SUlVQVElPThBREhYKElJFU09VUkNFX0hJSkFDS0lORxAIEh0KGU5F",
            "VFdPUktfREVOSUFMX09GX1NFUlZJQ0UQERIbChdDTE9VRF9TRVJWSUNFX0RJ",
            "U0NPVkVSWRAwEiIKHlNURUFMX0FQUExJQ0FUSU9OX0FDQ0VTU19UT0tFThAq",
            "EhoKFkFDQ09VTlRfQUNDRVNTX1JFTU9WQUwQMxIiCh5UUkFOU0ZFUl9EQVRB",
            "X1RPX0NMT1VEX0FDQ09VTlQQWxIcChhTVEVBTF9XRUJfU0VTU0lPTl9DT09L",
            "SUUQGRIjCh9DUkVBVEVfT1JfTU9ESUZZX1NZU1RFTV9QUk9DRVNTEBgSHQoZ",
            "RVZFTlRfVFJJR0dFUkVEX0VYRUNVVElPThBBEiUKIUJPT1RfT1JfTE9HT05f",
            "QVVUT1NUQVJUX0VYRUNVVElPThBSEiEKHUtFUk5FTF9NT0RVTEVTX0FORF9F",
            "WFRFTlNJT05TEFMSGQoVU0hPUlRDVVRfTU9ESUZJQ0FUSU9OEH8SJQohQUJV",
            "U0VfRUxFVkFUSU9OX0NPTlRST0xfTUVDSEFOSVNNECISOAozQUJVU0VfRUxF",
            "VkFUSU9OX0NPTlRST0xfTUVDSEFOSVNNX1NFVFVJRF9BTkRfU0VUR0lEEIgB",
            "EjsKN0FCVVNFX0VMRVZBVElPTl9DT05UUk9MX01FQ0hBTklTTV9TVURPX0FO",
            "RF9TVURPX0NBQ0hJTkcQbRIZChVVTlNFQ1VSRURfQ1JFREVOVElBTFMQDRIY",
            "ChRDUkVERU5USUFMU19JTl9GSUxFUxBpEhAKDEJBU0hfSElTVE9SWRBgEhAK",
            "DFBSSVZBVEVfS0VZUxBhEhkKFVNVQlZFUlRfVFJVU1RfQ09OVFJPTBBqEhwK",
            "GElOU1RBTExfUk9PVF9DRVJUSUZJQ0FURRBrEiMKH0NPTVBST01JU0VfSE9T",
            "VF9TT0ZUV0FSRV9CSU5BUlkQVBIkCiBDUkVERU5USUFMU19GUk9NX1BBU1NX",
            "T1JEX1NUT1JFUxBiEiEKHU1PRElGWV9BVVRIRU5USUNBVElPTl9QUk9DRVNT",
            "EBwSJAogUExVR0dBQkxFX0FVVEhFTlRJQ0FUSU9OX01PRFVMRVMQbBIgChtN",
            "VUxUSV9GQUNUT1JfQVVUSEVOVElDQVRJT04QiQESEwoPSU1QQUlSX0RFRkVO",
            "U0VTEB8SGwoXRElTQUJMRV9PUl9NT0RJRllfVE9PTFMQNxIWChJJTkRJQ0FU",
            "T1JfQkxPQ0tJTkcQbhIoCiRESVNBQkxFX09SX01PRElGWV9MSU5VWF9BVURJ",
            "VF9TWVNURU0QbxISCg5ISURFX0FSVElGQUNUUxBVEiAKHEhJRERFTl9GSUxF",
            "U19BTkRfRElSRUNUT1JJRVMQVhIQCgxISURERU5fVVNFUlMQVxIhCh1FWEZJ",
            "TFRSQVRJT05fT1ZFUl9XRUJfU0VSVklDRRAUEiEKHUVYRklMVFJBVElPTl9U",
            "T19DTE9VRF9TVE9SQUdFEBUSFgoSRFlOQU1JQ19SRVNPTFVUSU9OEAwSGQoV",
            "TEFURVJBTF9UT09MX1RSQU5TRkVSECkSGQoVSElKQUNLX0VYRUNVVElPTl9G",
            "TE9XEHASMgouSElKQUNLX0VYRUNVVElPTl9GTE9XX0RZTkFNSUNfTElOS0VS",
            "X0hJSkFDS0lORxBxEicKI01PRElGWV9DTE9VRF9DT01QVVRFX0lORlJBU1RS",
            "VUNUVVJFEBoSEwoPQ1JFQVRFX1NOQVBTSE9UEDYSIgoeQ0xPVURfSU5GUkFT",
            "VFJVQ1RVUkVfRElTQ09WRVJZEDUSGAoUREVWRUxPUF9DQVBBQklMSVRJRVMQ",
            "YxIgChxERVZFTE9QX0NBUEFCSUxJVElFU19NQUxXQVJFEGQSFwoTT0JUQUlO",
            "X0NBUEFCSUxJVElFUxArEh8KG09CVEFJTl9DQVBBQklMSVRJRVNfTUFMV0FS",
            "RRBlEigKI09CVEFJTl9DQVBBQklMSVRJRVNfVlVMTkVSQUJJTElUSUVTEIUB",
            "EhMKD0FDVElWRV9TQ0FOTklORxABEhYKElNDQU5OSU5HX0lQX0JMT0NLUxAC",
            "EhYKElNUQUdFX0NBUEFCSUxJVElFUxBYEhIKDlVQTE9BRF9NQUxXQVJFEGYS",
            "JAogQ09OVEFJTkVSX0FETUlOSVNUUkFUSU9OX0NPTU1BTkQQPBIUChBERVBM",
            "T1lfQ09OVEFJTkVSEEISEgoORVNDQVBFX1RPX0hPU1QQPRIkCiBDT05UQUlO",
            "RVJfQU5EX1JFU09VUkNFX0RJU0NPVkVSWRA5EhsKF1JFRkxFQ1RJVkVfQ09E",
            "RV9MT0FESU5HEFwSLgoqU1RFQUxfT1JfRk9SR0VfQVVUSEVOVElDQVRJT05f",
            "Q0VSVElGSUNBVEVTED4SFAoPRklOQU5DSUFMX1RIRUZUEIMBQuoBCiJjb20u",
            "Z29vZ2xlLmNsb3VkLnNlY3VyaXR5Y2VudGVyLnYyQhBNaXRyZUF0dGFja1By",
            "b3RvUAFaSmNsb3VkLmdvb2dsZS5jb20vZ28vc2VjdXJpdHljZW50ZXIvYXBp",
            "djIvc2VjdXJpdHljZW50ZXJwYjtzZWN1cml0eWNlbnRlcnBiqgIeR29vZ2xl",
            "LkNsb3VkLlNlY3VyaXR5Q2VudGVyLlYyygIeR29vZ2xlXENsb3VkXFNlY3Vy",
            "aXR5Q2VudGVyXFYy6gIhR29vZ2xlOjpDbG91ZDo6U2VjdXJpdHlDZW50ZXI6",
            "OlYyYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.SecurityCenter.V2.MitreAttack), global::Google.Cloud.SecurityCenter.V2.MitreAttack.Parser, new[]{ "PrimaryTactic", "PrimaryTechniques", "AdditionalTactics", "AdditionalTechniques", "Version" }, null, new[]{ typeof(global::Google.Cloud.SecurityCenter.V2.MitreAttack.Types.Tactic), typeof(global::Google.Cloud.SecurityCenter.V2.MitreAttack.Types.Technique) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// MITRE ATT&amp;CK tactics and techniques related to this finding.
  /// See: https://attack.mitre.org
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class MitreAttack : pb::IMessage<MitreAttack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MitreAttack> _parser = new pb::MessageParser<MitreAttack>(() => new MitreAttack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MitreAttack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.SecurityCenter.V2.MitreAttackReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MitreAttack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MitreAttack(MitreAttack other) : this() {
      primaryTactic_ = other.primaryTactic_;
      primaryTechniques_ = other.primaryTechniques_.Clone();
      additionalTactics_ = other.additionalTactics_.Clone();
      additionalTechniques_ = other.additionalTechniques_.Clone();
      version_ = other.version_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MitreAttack Clone() {
      return new MitreAttack(this);
    }

    /// <summary>Field number for the "primary_tactic" field.</summary>
    public const int PrimaryTacticFieldNumber = 1;
    private global::Google.Cloud.SecurityCenter.V2.MitreAttack.Types.Tactic primaryTactic_ = global::Google.Cloud.SecurityCenter.V2.MitreAttack.Types.Tactic.Unspecified;
    /// <summary>
    /// The MITRE ATT&amp;CK tactic most closely represented by this finding, if any.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.SecurityCenter.V2.MitreAttack.Types.Tactic PrimaryTactic {
      get { return primaryTactic_; }
      set {
        primaryTactic_ = value;
      }
    }

    /// <summary>Field number for the "primary_techniques" field.</summary>
    public const int PrimaryTechniquesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Cloud.SecurityCenter.V2.MitreAttack.Types.Technique> _repeated_primaryTechniques_codec
        = pb::FieldCodec.ForEnum(18, x => (int) x, x => (global::Google.Cloud.SecurityCenter.V2.MitreAttack.Types.Technique) x);
    private readonly pbc::RepeatedField<global::Google.Cloud.SecurityCenter.V2.MitreAttack.Types.Technique> primaryTechniques_ = new pbc::RepeatedField<global::Google.Cloud.SecurityCenter.V2.MitreAttack.Types.Technique>();
    /// <summary>
    /// The MITRE ATT&amp;CK technique most closely represented by this finding, if
    /// any. primary_techniques is a repeated field because there are multiple
    /// levels of MITRE ATT&amp;CK techniques.  If the technique most closely
    /// represented by this finding is a sub-technique (e.g. `SCANNING_IP_BLOCKS`),
    /// both the sub-technique and its parent technique(s) will be listed (e.g.
    /// `SCANNING_IP_BLOCKS`, `ACTIVE_SCANNING`).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.SecurityCenter.V2.MitreAttack.Types.Technique> PrimaryTechniques {
      get { return primaryTechniques_; }
    }

    /// <summary>Field number for the "additional_tactics" field.</summary>
    public const int AdditionalTacticsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Cloud.SecurityCenter.V2.MitreAttack.Types.Tactic> _repeated_additionalTactics_codec
        = pb::FieldCodec.ForEnum(26, x => (int) x, x => (global::Google.Cloud.SecurityCenter.V2.MitreAttack.Types.Tactic) x);
    private readonly pbc::RepeatedField<global::Google.Cloud.SecurityCenter.V2.MitreAttack.Types.Tactic> additionalTactics_ = new pbc::RepeatedField<global::Google.Cloud.SecurityCenter.V2.MitreAttack.Types.Tactic>();
    /// <summary>
    /// Additional MITRE ATT&amp;CK tactics related to this finding, if any.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.SecurityCenter.V2.MitreAttack.Types.Tactic> AdditionalTactics {
      get { return additionalTactics_; }
    }

    /// <summary>Field number for the "additional_techniques" field.</summary>
    public const int AdditionalTechniquesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Cloud.SecurityCenter.V2.MitreAttack.Types.Technique> _repeated_additionalTechniques_codec
        = pb::FieldCodec.ForEnum(34, x => (int) x, x => (global::Google.Cloud.SecurityCenter.V2.MitreAttack.Types.Technique) x);
    private readonly pbc::RepeatedField<global::Google.Cloud.SecurityCenter.V2.MitreAttack.Types.Technique> additionalTechniques_ = new pbc::RepeatedField<global::Google.Cloud.SecurityCenter.V2.MitreAttack.Types.Technique>();
    /// <summary>
    /// Additional MITRE ATT&amp;CK techniques related to this finding, if any, along
    /// with any of their respective parent techniques.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.SecurityCenter.V2.MitreAttack.Types.Technique> AdditionalTechniques {
      get { return additionalTechniques_; }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 5;
    private string version_ = "";
    /// <summary>
    /// The MITRE ATT&amp;CK version referenced by the above fields. E.g. "8".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MitreAttack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MitreAttack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PrimaryTactic != other.PrimaryTactic) return false;
      if(!primaryTechniques_.Equals(other.primaryTechniques_)) return false;
      if(!additionalTactics_.Equals(other.additionalTactics_)) return false;
      if(!additionalTechniques_.Equals(other.additionalTechniques_)) return false;
      if (Version != other.Version) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PrimaryTactic != global::Google.Cloud.SecurityCenter.V2.MitreAttack.Types.Tactic.Unspecified) hash ^= PrimaryTactic.GetHashCode();
      hash ^= primaryTechniques_.GetHashCode();
      hash ^= additionalTactics_.GetHashCode();
      hash ^= additionalTechniques_.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PrimaryTactic != global::Google.Cloud.SecurityCenter.V2.MitreAttack.Types.Tactic.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PrimaryTactic);
      }
      primaryTechniques_.WriteTo(output, _repeated_primaryTechniques_codec);
      additionalTactics_.WriteTo(output, _repeated_additionalTactics_codec);
      additionalTechniques_.WriteTo(output, _repeated_additionalTechniques_codec);
      if (Version.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PrimaryTactic != global::Google.Cloud.SecurityCenter.V2.MitreAttack.Types.Tactic.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PrimaryTactic);
      }
      primaryTechniques_.WriteTo(ref output, _repeated_primaryTechniques_codec);
      additionalTactics_.WriteTo(ref output, _repeated_additionalTactics_codec);
      additionalTechniques_.WriteTo(ref output, _repeated_additionalTechniques_codec);
      if (Version.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PrimaryTactic != global::Google.Cloud.SecurityCenter.V2.MitreAttack.Types.Tactic.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PrimaryTactic);
      }
      size += primaryTechniques_.CalculateSize(_repeated_primaryTechniques_codec);
      size += additionalTactics_.CalculateSize(_repeated_additionalTactics_codec);
      size += additionalTechniques_.CalculateSize(_repeated_additionalTechniques_codec);
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MitreAttack other) {
      if (other == null) {
        return;
      }
      if (other.PrimaryTactic != global::Google.Cloud.SecurityCenter.V2.MitreAttack.Types.Tactic.Unspecified) {
        PrimaryTactic = other.PrimaryTactic;
      }
      primaryTechniques_.Add(other.primaryTechniques_);
      additionalTactics_.Add(other.additionalTactics_);
      additionalTechniques_.Add(other.additionalTechniques_);
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PrimaryTactic = (global::Google.Cloud.SecurityCenter.V2.MitreAttack.Types.Tactic) input.ReadEnum();
            break;
          }
          case 18:
          case 16: {
            primaryTechniques_.AddEntriesFrom(input, _repeated_primaryTechniques_codec);
            break;
          }
          case 26:
          case 24: {
            additionalTactics_.AddEntriesFrom(input, _repeated_additionalTactics_codec);
            break;
          }
          case 34:
          case 32: {
            additionalTechniques_.AddEntriesFrom(input, _repeated_additionalTechniques_codec);
            break;
          }
          case 42: {
            Version = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PrimaryTactic = (global::Google.Cloud.SecurityCenter.V2.MitreAttack.Types.Tactic) input.ReadEnum();
            break;
          }
          case 18:
          case 16: {
            primaryTechniques_.AddEntriesFrom(ref input, _repeated_primaryTechniques_codec);
            break;
          }
          case 26:
          case 24: {
            additionalTactics_.AddEntriesFrom(ref input, _repeated_additionalTactics_codec);
            break;
          }
          case 34:
          case 32: {
            additionalTechniques_.AddEntriesFrom(ref input, _repeated_additionalTechniques_codec);
            break;
          }
          case 42: {
            Version = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the MitreAttack message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// MITRE ATT&amp;CK tactics that can be referenced by SCC findings.
      /// See: https://attack.mitre.org/tactics/enterprise/
      /// </summary>
      public enum Tactic {
        /// <summary>
        /// Unspecified value.
        /// </summary>
        [pbr::OriginalName("TACTIC_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// TA0043
        /// </summary>
        [pbr::OriginalName("RECONNAISSANCE")] Reconnaissance = 1,
        /// <summary>
        /// TA0042
        /// </summary>
        [pbr::OriginalName("RESOURCE_DEVELOPMENT")] ResourceDevelopment = 2,
        /// <summary>
        /// TA0001
        /// </summary>
        [pbr::OriginalName("INITIAL_ACCESS")] InitialAccess = 5,
        /// <summary>
        /// TA0002
        /// </summary>
        [pbr::OriginalName("EXECUTION")] Execution = 3,
        /// <summary>
        /// TA0003
        /// </summary>
        [pbr::OriginalName("PERSISTENCE")] Persistence = 6,
        /// <summary>
        /// TA0004
        /// </summary>
        [pbr::OriginalName("PRIVILEGE_ESCALATION")] PrivilegeEscalation = 8,
        /// <summary>
        /// TA0005
        /// </summary>
        [pbr::OriginalName("DEFENSE_EVASION")] DefenseEvasion = 7,
        /// <summary>
        /// TA0006
        /// </summary>
        [pbr::OriginalName("CREDENTIAL_ACCESS")] CredentialAccess = 9,
        /// <summary>
        /// TA0007
        /// </summary>
        [pbr::OriginalName("DISCOVERY")] Discovery = 10,
        /// <summary>
        /// TA0008
        /// </summary>
        [pbr::OriginalName("LATERAL_MOVEMENT")] LateralMovement = 11,
        /// <summary>
        /// TA0009
        /// </summary>
        [pbr::OriginalName("COLLECTION")] Collection = 12,
        /// <summary>
        /// TA0011
        /// </summary>
        [pbr::OriginalName("COMMAND_AND_CONTROL")] CommandAndControl = 4,
        /// <summary>
        /// TA0010
        /// </summary>
        [pbr::OriginalName("EXFILTRATION")] Exfiltration = 13,
        /// <summary>
        /// TA0040
        /// </summary>
        [pbr::OriginalName("IMPACT")] Impact = 14,
      }

      /// <summary>
      /// MITRE ATT&amp;CK techniques that can be referenced by Security Command Center
      /// findings. See: https://attack.mitre.org/techniques/enterprise/
      /// </summary>
      public enum Technique {
        /// <summary>
        /// Unspecified value.
        /// </summary>
        [pbr::OriginalName("TECHNIQUE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// T1001
        /// </summary>
        [pbr::OriginalName("DATA_OBFUSCATION")] DataObfuscation = 70,
        /// <summary>
        /// T1001.002
        /// </summary>
        [pbr::OriginalName("DATA_OBFUSCATION_STEGANOGRAPHY")] DataObfuscationSteganography = 71,
        /// <summary>
        /// T1003
        /// </summary>
        [pbr::OriginalName("OS_CREDENTIAL_DUMPING")] OsCredentialDumping = 114,
        /// <summary>
        /// T1003.007
        /// </summary>
        [pbr::OriginalName("OS_CREDENTIAL_DUMPING_PROC_FILESYSTEM")] OsCredentialDumpingProcFilesystem = 115,
        /// <summary>
        /// T1003.008
        /// </summary>
        [pbr::OriginalName("OS_CREDENTIAL_DUMPING_ETC_PASSWORD_AND_ETC_SHADOW")] OsCredentialDumpingEtcPasswordAndEtcShadow = 122,
        /// <summary>
        /// T1005
        /// </summary>
        [pbr::OriginalName("DATA_FROM_LOCAL_SYSTEM")] DataFromLocalSystem = 117,
        /// <summary>
        /// T1020
        /// </summary>
        [pbr::OriginalName("AUTOMATED_EXFILTRATION")] AutomatedExfiltration = 68,
        /// <summary>
        /// T1027
        /// </summary>
        [pbr::OriginalName("OBFUSCATED_FILES_OR_INFO")] ObfuscatedFilesOrInfo = 72,
        /// <summary>
        /// T1027.003
        /// </summary>
        [pbr::OriginalName("STEGANOGRAPHY")] Steganography = 73,
        /// <summary>
        /// T1027.004
        /// </summary>
        [pbr::OriginalName("COMPILE_AFTER_DELIVERY")] CompileAfterDelivery = 74,
        /// <summary>
        /// T1027.010
        /// </summary>
        [pbr::OriginalName("COMMAND_OBFUSCATION")] CommandObfuscation = 75,
        /// <summary>
        /// T1029
        /// </summary>
        [pbr::OriginalName("SCHEDULED_TRANSFER")] ScheduledTransfer = 120,
        /// <summary>
        /// T1033
        /// </summary>
        [pbr::OriginalName("SYSTEM_OWNER_USER_DISCOVERY")] SystemOwnerUserDiscovery = 118,
        /// <summary>
        /// T1036
        /// </summary>
        [pbr::OriginalName("MASQUERADING")] Masquerading = 49,
        /// <summary>
        /// T1036.005
        /// </summary>
        [pbr::OriginalName("MATCH_LEGITIMATE_NAME_OR_LOCATION")] MatchLegitimateNameOrLocation = 50,
        /// <summary>
        /// T1037
        /// </summary>
        [pbr::OriginalName("BOOT_OR_LOGON_INITIALIZATION_SCRIPTS")] BootOrLogonInitializationScripts = 37,
        /// <summary>
        /// T1037.005
        /// </summary>
        [pbr::OriginalName("STARTUP_ITEMS")] StartupItems = 38,
        /// <summary>
        /// T1046
        /// </summary>
        [pbr::OriginalName("NETWORK_SERVICE_DISCOVERY")] NetworkServiceDiscovery = 32,
        /// <summary>
        /// T1053
        /// </summary>
        [pbr::OriginalName("SCHEDULED_TASK_JOB")] ScheduledTaskJob = 89,
        /// <summary>
        /// T1053.003
        /// </summary>
        [pbr::OriginalName("SCHEDULED_TASK_JOB_CRON")] ScheduledTaskJobCron = 119,
        /// <summary>
        /// T1053.007
        /// </summary>
        [pbr::OriginalName("CONTAINER_ORCHESTRATION_JOB")] ContainerOrchestrationJob = 90,
        /// <summary>
        /// T1055
        /// </summary>
        [pbr::OriginalName("PROCESS_INJECTION")] ProcessInjection = 93,
        /// <summary>
        /// T1056
        /// </summary>
        [pbr::OriginalName("INPUT_CAPTURE")] InputCapture = 103,
        /// <summary>
        /// T1056.001
        /// </summary>
        [pbr::OriginalName("INPUT_CAPTURE_KEYLOGGING")] InputCaptureKeylogging = 104,
        /// <summary>
        /// T1057
        /// </summary>
        [pbr::OriginalName("PROCESS_DISCOVERY")] ProcessDiscovery = 56,
        /// <summary>
        /// T1059
        /// </summary>
        [pbr::OriginalName("COMMAND_AND_SCRIPTING_INTERPRETER")] CommandAndScriptingInterpreter = 6,
        /// <summary>
        /// T1059.004
        /// </summary>
        [pbr::OriginalName("UNIX_SHELL")] UnixShell = 7,
        /// <summary>
        /// T1059.006
        /// </summary>
        [pbr::OriginalName("PYTHON")] Python = 59,
        /// <summary>
        /// T1068
        /// </summary>
        [pbr::OriginalName("EXPLOITATION_FOR_PRIVILEGE_ESCALATION")] ExploitationForPrivilegeEscalation = 63,
        /// <summary>
        /// T1069
        /// </summary>
        [pbr::OriginalName("PERMISSION_GROUPS_DISCOVERY")] PermissionGroupsDiscovery = 18,
        /// <summary>
        /// T1069.003
        /// </summary>
        [pbr::OriginalName("CLOUD_GROUPS")] CloudGroups = 19,
        /// <summary>
        /// T1070
        /// </summary>
        [pbr::OriginalName("INDICATOR_REMOVAL")] IndicatorRemoval = 123,
        /// <summary>
        /// T1070.002
        /// </summary>
        [pbr::OriginalName("INDICATOR_REMOVAL_CLEAR_LINUX_OR_MAC_SYSTEM_LOGS")] IndicatorRemovalClearLinuxOrMacSystemLogs = 124,
        /// <summary>
        /// T1070.003
        /// </summary>
        [pbr::OriginalName("INDICATOR_REMOVAL_CLEAR_COMMAND_HISTORY")] IndicatorRemovalClearCommandHistory = 125,
        /// <summary>
        /// T1070.004
        /// </summary>
        [pbr::OriginalName("INDICATOR_REMOVAL_FILE_DELETION")] IndicatorRemovalFileDeletion = 64,
        /// <summary>
        /// T1070.006
        /// </summary>
        [pbr::OriginalName("INDICATOR_REMOVAL_TIMESTOMP")] IndicatorRemovalTimestomp = 128,
        /// <summary>
        /// T1070.008
        /// </summary>
        [pbr::OriginalName("INDICATOR_REMOVAL_CLEAR_MAILBOX_DATA")] IndicatorRemovalClearMailboxData = 126,
        /// <summary>
        /// T1071
        /// </summary>
        [pbr::OriginalName("APPLICATION_LAYER_PROTOCOL")] ApplicationLayerProtocol = 45,
        /// <summary>
        /// T1071.004
        /// </summary>
        [pbr::OriginalName("DNS")] Dns = 46,
        /// <summary>
        /// T1072
        /// </summary>
        [pbr::OriginalName("SOFTWARE_DEPLOYMENT_TOOLS")] SoftwareDeploymentTools = 47,
        /// <summary>
        /// T1078
        /// </summary>
        [pbr::OriginalName("VALID_ACCOUNTS")] ValidAccounts = 14,
        /// <summary>
        /// T1078.001
        /// </summary>
        [pbr::OriginalName("DEFAULT_ACCOUNTS")] DefaultAccounts = 35,
        /// <summary>
        /// T1078.003
        /// </summary>
        [pbr::OriginalName("LOCAL_ACCOUNTS")] LocalAccounts = 15,
        /// <summary>
        /// T1078.004
        /// </summary>
        [pbr::OriginalName("CLOUD_ACCOUNTS")] CloudAccounts = 16,
        /// <summary>
        /// T1083
        /// </summary>
        [pbr::OriginalName("FILE_AND_DIRECTORY_DISCOVERY")] FileAndDirectoryDiscovery = 121,
        /// <summary>
        /// T1087.001
        /// </summary>
        [pbr::OriginalName("ACCOUNT_DISCOVERY_LOCAL_ACCOUNT")] AccountDiscoveryLocalAccount = 116,
        /// <summary>
        /// T1090
        /// </summary>
        [pbr::OriginalName("PROXY")] Proxy = 9,
        /// <summary>
        /// T1090.002
        /// </summary>
        [pbr::OriginalName("EXTERNAL_PROXY")] ExternalProxy = 10,
        /// <summary>
        /// T1090.003
        /// </summary>
        [pbr::OriginalName("MULTI_HOP_PROXY")] MultiHopProxy = 11,
        /// <summary>
        /// T1098
        /// </summary>
        [pbr::OriginalName("ACCOUNT_MANIPULATION")] AccountManipulation = 22,
        /// <summary>
        /// T1098.001
        /// </summary>
        [pbr::OriginalName("ADDITIONAL_CLOUD_CREDENTIALS")] AdditionalCloudCredentials = 40,
        /// <summary>
        /// T1098.003
        /// </summary>
        [pbr::OriginalName("ADDITIONAL_CLOUD_ROLES")] AdditionalCloudRoles = 67,
        /// <summary>
        /// T1098.004
        /// </summary>
        [pbr::OriginalName("SSH_AUTHORIZED_KEYS")] SshAuthorizedKeys = 23,
        /// <summary>
        /// T1098.006
        /// </summary>
        [pbr::OriginalName("ADDITIONAL_CONTAINER_CLUSTER_ROLES")] AdditionalContainerClusterRoles = 58,
        /// <summary>
        /// T1104
        /// </summary>
        [pbr::OriginalName("MULTI_STAGE_CHANNELS")] MultiStageChannels = 76,
        /// <summary>
        /// T1105
        /// </summary>
        [pbr::OriginalName("INGRESS_TOOL_TRANSFER")] IngressToolTransfer = 3,
        /// <summary>
        /// T1106
        /// </summary>
        [pbr::OriginalName("NATIVE_API")] NativeApi = 4,
        /// <summary>
        /// T1110
        /// </summary>
        [pbr::OriginalName("BRUTE_FORCE")] BruteForce = 44,
        /// <summary>
        /// T1119
        /// </summary>
        [pbr::OriginalName("AUTOMATED_COLLECTION")] AutomatedCollection = 94,
        /// <summary>
        /// T1129
        /// </summary>
        [pbr::OriginalName("SHARED_MODULES")] SharedModules = 5,
        /// <summary>
        /// T1132
        /// </summary>
        [pbr::OriginalName("DATA_ENCODING")] DataEncoding = 77,
        /// <summary>
        /// T1132.001
        /// </summary>
        [pbr::OriginalName("STANDARD_ENCODING")] StandardEncoding = 78,
        /// <summary>
        /// T1134
        /// </summary>
        [pbr::OriginalName("ACCESS_TOKEN_MANIPULATION")] AccessTokenManipulation = 33,
        /// <summary>
        /// T1134.001
        /// </summary>
        [pbr::OriginalName("TOKEN_IMPERSONATION_OR_THEFT")] TokenImpersonationOrTheft = 39,
        /// <summary>
        /// T1136
        /// </summary>
        [pbr::OriginalName("CREATE_ACCOUNT")] CreateAccount = 79,
        /// <summary>
        /// T1136.001
        /// </summary>
        [pbr::OriginalName("LOCAL_ACCOUNT")] LocalAccount = 80,
        /// <summary>
        /// T1140
        /// </summary>
        [pbr::OriginalName("DEOBFUSCATE_DECODE_FILES_OR_INFO")] DeobfuscateDecodeFilesOrInfo = 95,
        /// <summary>
        /// T1190
        /// </summary>
        [pbr::OriginalName("EXPLOIT_PUBLIC_FACING_APPLICATION")] ExploitPublicFacingApplication = 27,
        /// <summary>
        /// T1195
        /// </summary>
        [pbr::OriginalName("SUPPLY_CHAIN_COMPROMISE")] SupplyChainCompromise = 129,
        /// <summary>
        /// T1195.001
        /// </summary>
        [pbr::OriginalName("COMPROMISE_SOFTWARE_DEPENDENCIES_AND_DEVELOPMENT_TOOLS")] CompromiseSoftwareDependenciesAndDevelopmentTools = 130,
        /// <summary>
        /// T1203
        /// </summary>
        [pbr::OriginalName("EXPLOITATION_FOR_CLIENT_EXECUTION")] ExploitationForClientExecution = 134,
        /// <summary>
        /// T1204
        /// </summary>
        [pbr::OriginalName("USER_EXECUTION")] UserExecution = 69,
        /// <summary>
        /// T1222.002
        /// </summary>
        [pbr::OriginalName("LINUX_AND_MAC_FILE_AND_DIRECTORY_PERMISSIONS_MODIFICATION")] LinuxAndMacFileAndDirectoryPermissionsModification = 135,
        /// <summary>
        /// T1484
        /// </summary>
        [pbr::OriginalName("DOMAIN_POLICY_MODIFICATION")] DomainPolicyModification = 30,
        /// <summary>
        /// T1485
        /// </summary>
        [pbr::OriginalName("DATA_DESTRUCTION")] DataDestruction = 29,
        /// <summary>
        /// T1486
        /// </summary>
        [pbr::OriginalName("DATA_ENCRYPTED_FOR_IMPACT")] DataEncryptedForImpact = 132,
        /// <summary>
        /// T1489
        /// </summary>
        [pbr::OriginalName("SERVICE_STOP")] ServiceStop = 52,
        /// <summary>
        /// T1490
        /// </summary>
        [pbr::OriginalName("INHIBIT_SYSTEM_RECOVERY")] InhibitSystemRecovery = 36,
        /// <summary>
        /// T1495
        /// </summary>
        [pbr::OriginalName("FIRMWARE_CORRUPTION")] FirmwareCorruption = 81,
        /// <summary>
        /// T1496
        /// </summary>
        [pbr::OriginalName("RESOURCE_HIJACKING")] ResourceHijacking = 8,
        /// <summary>
        /// T1498
        /// </summary>
        [pbr::OriginalName("NETWORK_DENIAL_OF_SERVICE")] NetworkDenialOfService = 17,
        /// <summary>
        /// T1526
        /// </summary>
        [pbr::OriginalName("CLOUD_SERVICE_DISCOVERY")] CloudServiceDiscovery = 48,
        /// <summary>
        /// T1528
        /// </summary>
        [pbr::OriginalName("STEAL_APPLICATION_ACCESS_TOKEN")] StealApplicationAccessToken = 42,
        /// <summary>
        /// T1531
        /// </summary>
        [pbr::OriginalName("ACCOUNT_ACCESS_REMOVAL")] AccountAccessRemoval = 51,
        /// <summary>
        /// T1537
        /// </summary>
        [pbr::OriginalName("TRANSFER_DATA_TO_CLOUD_ACCOUNT")] TransferDataToCloudAccount = 91,
        /// <summary>
        /// T1539
        /// </summary>
        [pbr::OriginalName("STEAL_WEB_SESSION_COOKIE")] StealWebSessionCookie = 25,
        /// <summary>
        /// T1543
        /// </summary>
        [pbr::OriginalName("CREATE_OR_MODIFY_SYSTEM_PROCESS")] CreateOrModifySystemProcess = 24,
        /// <summary>
        /// T1546
        /// </summary>
        [pbr::OriginalName("EVENT_TRIGGERED_EXECUTION")] EventTriggeredExecution = 65,
        /// <summary>
        /// T1547
        /// </summary>
        [pbr::OriginalName("BOOT_OR_LOGON_AUTOSTART_EXECUTION")] BootOrLogonAutostartExecution = 82,
        /// <summary>
        /// T1547.006
        /// </summary>
        [pbr::OriginalName("KERNEL_MODULES_AND_EXTENSIONS")] KernelModulesAndExtensions = 83,
        /// <summary>
        /// T1547.009
        /// </summary>
        [pbr::OriginalName("SHORTCUT_MODIFICATION")] ShortcutModification = 127,
        /// <summary>
        /// T1548
        /// </summary>
        [pbr::OriginalName("ABUSE_ELEVATION_CONTROL_MECHANISM")] AbuseElevationControlMechanism = 34,
        /// <summary>
        /// T1548.001
        /// </summary>
        [pbr::OriginalName("ABUSE_ELEVATION_CONTROL_MECHANISM_SETUID_AND_SETGID")] AbuseElevationControlMechanismSetuidAndSetgid = 136,
        /// <summary>
        /// T1548.003
        /// </summary>
        [pbr::OriginalName("ABUSE_ELEVATION_CONTROL_MECHANISM_SUDO_AND_SUDO_CACHING")] AbuseElevationControlMechanismSudoAndSudoCaching = 109,
        /// <summary>
        /// T1552
        /// </summary>
        [pbr::OriginalName("UNSECURED_CREDENTIALS")] UnsecuredCredentials = 13,
        /// <summary>
        /// T1552.001
        /// </summary>
        [pbr::OriginalName("CREDENTIALS_IN_FILES")] CredentialsInFiles = 105,
        /// <summary>
        /// T1552.003
        /// </summary>
        [pbr::OriginalName("BASH_HISTORY")] BashHistory = 96,
        /// <summary>
        /// T1552.004
        /// </summary>
        [pbr::OriginalName("PRIVATE_KEYS")] PrivateKeys = 97,
        /// <summary>
        /// T1553
        /// </summary>
        [pbr::OriginalName("SUBVERT_TRUST_CONTROL")] SubvertTrustControl = 106,
        /// <summary>
        /// T1553.004
        /// </summary>
        [pbr::OriginalName("INSTALL_ROOT_CERTIFICATE")] InstallRootCertificate = 107,
        /// <summary>
        /// T1554
        /// </summary>
        [pbr::OriginalName("COMPROMISE_HOST_SOFTWARE_BINARY")] CompromiseHostSoftwareBinary = 84,
        /// <summary>
        /// T1555
        /// </summary>
        [pbr::OriginalName("CREDENTIALS_FROM_PASSWORD_STORES")] CredentialsFromPasswordStores = 98,
        /// <summary>
        /// T1556
        /// </summary>
        [pbr::OriginalName("MODIFY_AUTHENTICATION_PROCESS")] ModifyAuthenticationProcess = 28,
        /// <summary>
        /// T1556.003
        /// </summary>
        [pbr::OriginalName("PLUGGABLE_AUTHENTICATION_MODULES")] PluggableAuthenticationModules = 108,
        /// <summary>
        /// T1556.006
        /// </summary>
        [pbr::OriginalName("MULTI_FACTOR_AUTHENTICATION")] MultiFactorAuthentication = 137,
        /// <summary>
        /// T1562
        /// </summary>
        [pbr::OriginalName("IMPAIR_DEFENSES")] ImpairDefenses = 31,
        /// <summary>
        /// T1562.001
        /// </summary>
        [pbr::OriginalName("DISABLE_OR_MODIFY_TOOLS")] DisableOrModifyTools = 55,
        /// <summary>
        /// T1562.006
        /// </summary>
        [pbr::OriginalName("INDICATOR_BLOCKING")] IndicatorBlocking = 110,
        /// <summary>
        /// T1562.012
        /// </summary>
        [pbr::OriginalName("DISABLE_OR_MODIFY_LINUX_AUDIT_SYSTEM")] DisableOrModifyLinuxAuditSystem = 111,
        /// <summary>
        /// T1564
        /// </summary>
        [pbr::OriginalName("HIDE_ARTIFACTS")] HideArtifacts = 85,
        /// <summary>
        /// T1564.001
        /// </summary>
        [pbr::OriginalName("HIDDEN_FILES_AND_DIRECTORIES")] HiddenFilesAndDirectories = 86,
        /// <summary>
        /// T1564.002
        /// </summary>
        [pbr::OriginalName("HIDDEN_USERS")] HiddenUsers = 87,
        /// <summary>
        /// T1567
        /// </summary>
        [pbr::OriginalName("EXFILTRATION_OVER_WEB_SERVICE")] ExfiltrationOverWebService = 20,
        /// <summary>
        /// T1567.002
        /// </summary>
        [pbr::OriginalName("EXFILTRATION_TO_CLOUD_STORAGE")] ExfiltrationToCloudStorage = 21,
        /// <summary>
        /// T1568
        /// </summary>
        [pbr::OriginalName("DYNAMIC_RESOLUTION")] DynamicResolution = 12,
        /// <summary>
        /// T1570
        /// </summary>
        [pbr::OriginalName("LATERAL_TOOL_TRANSFER")] LateralToolTransfer = 41,
        /// <summary>
        /// T1574
        /// </summary>
        [pbr::OriginalName("HIJACK_EXECUTION_FLOW")] HijackExecutionFlow = 112,
        /// <summary>
        /// T1574.006
        /// </summary>
        [pbr::OriginalName("HIJACK_EXECUTION_FLOW_DYNAMIC_LINKER_HIJACKING")] HijackExecutionFlowDynamicLinkerHijacking = 113,
        /// <summary>
        /// T1578
        /// </summary>
        [pbr::OriginalName("MODIFY_CLOUD_COMPUTE_INFRASTRUCTURE")] ModifyCloudComputeInfrastructure = 26,
        /// <summary>
        /// T1578.001
        /// </summary>
        [pbr::OriginalName("CREATE_SNAPSHOT")] CreateSnapshot = 54,
        /// <summary>
        /// T1580
        /// </summary>
        [pbr::OriginalName("CLOUD_INFRASTRUCTURE_DISCOVERY")] CloudInfrastructureDiscovery = 53,
        /// <summary>
        /// T1587
        /// </summary>
        [pbr::OriginalName("DEVELOP_CAPABILITIES")] DevelopCapabilities = 99,
        /// <summary>
        /// T1587.001
        /// </summary>
        [pbr::OriginalName("DEVELOP_CAPABILITIES_MALWARE")] DevelopCapabilitiesMalware = 100,
        /// <summary>
        /// T1588
        /// </summary>
        [pbr::OriginalName("OBTAIN_CAPABILITIES")] ObtainCapabilities = 43,
        /// <summary>
        /// T1588.001
        /// </summary>
        [pbr::OriginalName("OBTAIN_CAPABILITIES_MALWARE")] ObtainCapabilitiesMalware = 101,
        /// <summary>
        /// T1588.006
        /// </summary>
        [pbr::OriginalName("OBTAIN_CAPABILITIES_VULNERABILITIES")] ObtainCapabilitiesVulnerabilities = 133,
        /// <summary>
        /// T1595
        /// </summary>
        [pbr::OriginalName("ACTIVE_SCANNING")] ActiveScanning = 1,
        /// <summary>
        /// T1595.001
        /// </summary>
        [pbr::OriginalName("SCANNING_IP_BLOCKS")] ScanningIpBlocks = 2,
        /// <summary>
        /// T1608
        /// </summary>
        [pbr::OriginalName("STAGE_CAPABILITIES")] StageCapabilities = 88,
        /// <summary>
        /// T1608.001
        /// </summary>
        [pbr::OriginalName("UPLOAD_MALWARE")] UploadMalware = 102,
        /// <summary>
        /// T1609
        /// </summary>
        [pbr::OriginalName("CONTAINER_ADMINISTRATION_COMMAND")] ContainerAdministrationCommand = 60,
        /// <summary>
        /// T1610
        /// </summary>
        [pbr::OriginalName("DEPLOY_CONTAINER")] DeployContainer = 66,
        /// <summary>
        /// T1611
        /// </summary>
        [pbr::OriginalName("ESCAPE_TO_HOST")] EscapeToHost = 61,
        /// <summary>
        /// T1613
        /// </summary>
        [pbr::OriginalName("CONTAINER_AND_RESOURCE_DISCOVERY")] ContainerAndResourceDiscovery = 57,
        /// <summary>
        /// T1620
        /// </summary>
        [pbr::OriginalName("REFLECTIVE_CODE_LOADING")] ReflectiveCodeLoading = 92,
        /// <summary>
        /// T1649
        /// </summary>
        [pbr::OriginalName("STEAL_OR_FORGE_AUTHENTICATION_CERTIFICATES")] StealOrForgeAuthenticationCertificates = 62,
        /// <summary>
        /// T1657
        /// </summary>
        [pbr::OriginalName("FINANCIAL_THEFT")] FinancialTheft = 131,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
