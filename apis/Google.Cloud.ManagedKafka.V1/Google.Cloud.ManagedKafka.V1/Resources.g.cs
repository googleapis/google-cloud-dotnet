// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/managedkafka/v1/resources.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.ManagedKafka.V1 {

  /// <summary>Holder for reflection information generated from google/cloud/managedkafka/v1/resources.proto</summary>
  public static partial class ResourcesReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/managedkafka/v1/resources.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ResourcesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cixnb29nbGUvY2xvdWQvbWFuYWdlZGthZmthL3YxL3Jlc291cmNlcy5wcm90",
            "bxIcZ29vZ2xlLmNsb3VkLm1hbmFnZWRrYWZrYS52MRofZ29vZ2xlL2FwaS9m",
            "aWVsZF9iZWhhdmlvci5wcm90bxoZZ29vZ2xlL2FwaS9yZXNvdXJjZS5wcm90",
            "bxoeZ29vZ2xlL3Byb3RvYnVmL2R1cmF0aW9uLnByb3RvGh9nb29nbGUvcHJv",
            "dG9idWYvdGltZXN0YW1wLnByb3RvItgGCgdDbHVzdGVyEkIKCmdjcF9jb25m",
            "aWcYCSABKAsyJy5nb29nbGUuY2xvdWQubWFuYWdlZGthZmthLnYxLkdjcENv",
            "bmZpZ0ID4EECSAASEQoEbmFtZRgBIAEoCUID4EEIEjQKC2NyZWF0ZV90aW1l",
            "GAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEjQKC3Vw",
            "ZGF0ZV90aW1lGAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID",
            "4EEDEkYKBmxhYmVscxgEIAMoCzIxLmdvb2dsZS5jbG91ZC5tYW5hZ2Vka2Fm",
            "a2EudjEuQ2x1c3Rlci5MYWJlbHNFbnRyeUID4EEBEkoKD2NhcGFjaXR5X2Nv",
            "bmZpZxgFIAEoCzIsLmdvb2dsZS5jbG91ZC5tYW5hZ2Vka2Fma2EudjEuQ2Fw",
            "YWNpdHlDb25maWdCA+BBAhJMChByZWJhbGFuY2VfY29uZmlnGAggASgLMi0u",
            "Z29vZ2xlLmNsb3VkLm1hbmFnZWRrYWZrYS52MS5SZWJhbGFuY2VDb25maWdC",
            "A+BBARI/CgVzdGF0ZRgKIAEoDjIrLmdvb2dsZS5jbG91ZC5tYW5hZ2Vka2Fm",
            "a2EudjEuQ2x1c3Rlci5TdGF0ZUID4EEDEh8KDXNhdGlzZmllc19wemkYCyAB",
            "KAhCA+BBA0gBiAEBEh8KDXNhdGlzZmllc19wenMYDCABKAhCA+BBA0gCiAEB",
            "Gi0KC0xhYmVsc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToC",
            "OAEiRgoFU3RhdGUSFQoRU1RBVEVfVU5TUEVDSUZJRUQQABIMCghDUkVBVElO",
            "RxABEgoKBkFDVElWRRACEgwKCERFTEVUSU5HEAM6d+pBdAojbWFuYWdlZGth",
            "ZmthLmdvb2dsZWFwaXMuY29tL0NsdXN0ZXISOnByb2plY3RzL3twcm9qZWN0",
            "fS9sb2NhdGlvbnMve2xvY2F0aW9ufS9jbHVzdGVycy97Y2x1c3Rlcn0qCGNs",
            "dXN0ZXJzMgdjbHVzdGVyQhEKD3BsYXRmb3JtX2NvbmZpZ0IQCg5fc2F0aXNm",
            "aWVzX3B6aUIQCg5fc2F0aXNmaWVzX3B6cyJECg5DYXBhY2l0eUNvbmZpZxIX",
            "Cgp2Y3B1X2NvdW50GAEgASgDQgPgQQISGQoMbWVtb3J5X2J5dGVzGAIgASgD",
            "QgPgQQIiqAEKD1JlYmFsYW5jZUNvbmZpZxJFCgRtb2RlGAEgASgOMjIuZ29v",
            "Z2xlLmNsb3VkLm1hbmFnZWRrYWZrYS52MS5SZWJhbGFuY2VDb25maWcuTW9k",
            "ZUID4EEBIk4KBE1vZGUSFAoQTU9ERV9VTlNQRUNJRklFRBAAEhAKDE5PX1JF",
            "QkFMQU5DRRABEh4KGkFVVE9fUkVCQUxBTkNFX09OX1NDQUxFX1VQEAIiJAoN",
            "TmV0d29ya0NvbmZpZxITCgZzdWJuZXQYAiABKAlCA+BBAiJZCgxBY2Nlc3ND",
            "b25maWcSSQoPbmV0d29ya19jb25maWdzGAEgAygLMisuZ29vZ2xlLmNsb3Vk",
            "Lm1hbmFnZWRrYWZrYS52MS5OZXR3b3JrQ29uZmlnQgPgQQIikgEKCUdjcENv",
            "bmZpZxJGCg1hY2Nlc3NfY29uZmlnGAMgASgLMiouZ29vZ2xlLmNsb3VkLm1h",
            "bmFnZWRrYWZrYS52MS5BY2Nlc3NDb25maWdCA+BBAhI9CgdrbXNfa2V5GAIg",
            "ASgJQizgQQHgQQX6QSMKIWNsb3Vka21zLmdvb2dsZWFwaXMuY29tL0NyeXB0",
            "b0tleSLXAgoFVG9waWMSEQoEbmFtZRgBIAEoCUID4EEIEhwKD3BhcnRpdGlv",
            "bl9jb3VudBgCIAEoBUID4EECEiIKEnJlcGxpY2F0aW9uX2ZhY3RvchgDIAEo",
            "BUIG4EEC4EEFEkYKB2NvbmZpZ3MYBCADKAsyMC5nb29nbGUuY2xvdWQubWFu",
            "YWdlZGthZmthLnYxLlRvcGljLkNvbmZpZ3NFbnRyeUID4EEBGi4KDENvbmZp",
            "Z3NFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBOoAB6kF9",
            "CiFtYW5hZ2Vka2Fma2EuZ29vZ2xlYXBpcy5jb20vVG9waWMSSXByb2plY3Rz",
            "L3twcm9qZWN0fS9sb2NhdGlvbnMve2xvY2F0aW9ufS9jbHVzdGVycy97Y2x1",
            "c3Rlcn0vdG9waWNzL3t0b3BpY30qBnRvcGljczIFdG9waWMi4QEKFUNvbnN1",
            "bWVyVG9waWNNZXRhZGF0YRJcCgpwYXJ0aXRpb25zGAEgAygLMkMuZ29vZ2xl",
            "LmNsb3VkLm1hbmFnZWRrYWZrYS52MS5Db25zdW1lclRvcGljTWV0YWRhdGEu",
            "UGFydGl0aW9uc0VudHJ5QgPgQQEaagoPUGFydGl0aW9uc0VudHJ5EgsKA2tl",
            "eRgBIAEoBRJGCgV2YWx1ZRgCIAEoCzI3Lmdvb2dsZS5jbG91ZC5tYW5hZ2Vk",
            "a2Fma2EudjEuQ29uc3VtZXJQYXJ0aXRpb25NZXRhZGF0YToCOAEiRwoZQ29u",
            "c3VtZXJQYXJ0aXRpb25NZXRhZGF0YRITCgZvZmZzZXQYASABKANCA+BBAhIV",
            "CghtZXRhZGF0YRgCIAEoCUID4EEBIoEDCg1Db25zdW1lckdyb3VwEhEKBG5h",
            "bWUYASABKAlCA+BBCBJMCgZ0b3BpY3MYAiADKAsyNy5nb29nbGUuY2xvdWQu",
            "bWFuYWdlZGthZmthLnYxLkNvbnN1bWVyR3JvdXAuVG9waWNzRW50cnlCA+BB",
            "ARpiCgtUb3BpY3NFbnRyeRILCgNrZXkYASABKAkSQgoFdmFsdWUYAiABKAsy",
            "My5nb29nbGUuY2xvdWQubWFuYWdlZGthZmthLnYxLkNvbnN1bWVyVG9waWNN",
            "ZXRhZGF0YToCOAE6qgHqQaYBCiltYW5hZ2Vka2Fma2EuZ29vZ2xlYXBpcy5j",
            "b20vQ29uc3VtZXJHcm91cBJacHJvamVjdHMve3Byb2plY3R9L2xvY2F0aW9u",
            "cy97bG9jYXRpb259L2NsdXN0ZXJzL3tjbHVzdGVyfS9jb25zdW1lckdyb3Vw",
            "cy97Y29uc3VtZXJfZ3JvdXB9Kg5jb25zdW1lckdyb3VwczINY29uc3VtZXJH",
            "cm91cCKAAgoRT3BlcmF0aW9uTWV0YWRhdGESNAoLY3JlYXRlX3RpbWUYASAB",
            "KAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMSMQoIZW5kX3Rp",
            "bWUYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMSEwoG",
            "dGFyZ2V0GAMgASgJQgPgQQMSEQoEdmVyYhgEIAEoCUID4EEDEhsKDnN0YXR1",
            "c19tZXNzYWdlGAUgASgJQgPgQQMSIwoWcmVxdWVzdGVkX2NhbmNlbGxhdGlv",
            "bhgGIAEoCEID4EEDEhgKC2FwaV92ZXJzaW9uGAcgASgJQgPgQQMigwcKDkNv",
            "bm5lY3RDbHVzdGVyEkkKCmdjcF9jb25maWcYByABKAsyLi5nb29nbGUuY2xv",
            "dWQubWFuYWdlZGthZmthLnYxLkNvbm5lY3RHY3BDb25maWdCA+BBAkgAEhEK",
            "BG5hbWUYASABKAlCA+BBCBIdCg1rYWZrYV9jbHVzdGVyGAIgASgJQgbgQQLg",
            "QQUSNAoLY3JlYXRlX3RpbWUYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGlt",
            "ZXN0YW1wQgPgQQMSNAoLdXBkYXRlX3RpbWUYBCABKAsyGi5nb29nbGUucHJv",
            "dG9idWYuVGltZXN0YW1wQgPgQQMSTQoGbGFiZWxzGAUgAygLMjguZ29vZ2xl",
            "LmNsb3VkLm1hbmFnZWRrYWZrYS52MS5Db25uZWN0Q2x1c3Rlci5MYWJlbHNF",
            "bnRyeUID4EEBEkoKD2NhcGFjaXR5X2NvbmZpZxgGIAEoCzIsLmdvb2dsZS5j",
            "bG91ZC5tYW5hZ2Vka2Fma2EudjEuQ2FwYWNpdHlDb25maWdCA+BBAhJGCgVz",
            "dGF0ZRgIIAEoDjIyLmdvb2dsZS5jbG91ZC5tYW5hZ2Vka2Fma2EudjEuQ29u",
            "bmVjdENsdXN0ZXIuU3RhdGVCA+BBAxJNCgZjb25maWcYCSADKAsyOC5nb29n",
            "bGUuY2xvdWQubWFuYWdlZGthZmthLnYxLkNvbm5lY3RDbHVzdGVyLkNvbmZp",
            "Z0VudHJ5QgPgQQEaLQoLTGFiZWxzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZh",
            "bHVlGAIgASgJOgI4ARotCgtDb25maWdFbnRyeRILCgNrZXkYASABKAkSDQoF",
            "dmFsdWUYAiABKAk6AjgBIkYKBVN0YXRlEhUKEVNUQVRFX1VOU1BFQ0lGSUVE",
            "EAASDAoIQ1JFQVRJTkcQARIKCgZBQ1RJVkUQAhIMCghERUxFVElORxADOpwB",
            "6kGYAQoqbWFuYWdlZGthZmthLmdvb2dsZWFwaXMuY29tL0Nvbm5lY3RDbHVz",
            "dGVyEklwcm9qZWN0cy97cHJvamVjdH0vbG9jYXRpb25zL3tsb2NhdGlvbn0v",
            "Y29ubmVjdENsdXN0ZXJzL3tjb25uZWN0X2NsdXN0ZXJ9Kg9jb25uZWN0Q2x1",
            "c3RlcnMyDmNvbm5lY3RDbHVzdGVyQhEKD3BsYXRmb3JtX2NvbmZpZyJzChRD",
            "b25uZWN0TmV0d29ya0NvbmZpZxIbCg5wcmltYXJ5X3N1Ym5ldBgDIAEoCUID",
            "4EECEh8KEmFkZGl0aW9uYWxfc3VibmV0cxgEIAMoCUID4EEBEh0KEGRuc19k",
            "b21haW5fbmFtZXMYAiADKAlCA+BBASJnChNDb25uZWN0QWNjZXNzQ29uZmln",
            "ElAKD25ldHdvcmtfY29uZmlncxgBIAMoCzIyLmdvb2dsZS5jbG91ZC5tYW5h",
            "Z2Vka2Fma2EudjEuQ29ubmVjdE5ldHdvcmtDb25maWdCA+BBAiKrAQoQQ29u",
            "bmVjdEdjcENvbmZpZxJNCg1hY2Nlc3NfY29uZmlnGAEgASgLMjEuZ29vZ2xl",
            "LmNsb3VkLm1hbmFnZWRrYWZrYS52MS5Db25uZWN0QWNjZXNzQ29uZmlnQgPg",
            "QQISSAoMc2VjcmV0X3BhdGhzGAIgAygJQjLgQQH6QSwKKnNlY3JldG1hbmFn",
            "ZXIuZ29vZ2xlYXBpcy5jb20vU2VjcmV0VmVyc2lvbiLbBAoJQ29ubmVjdG9y",
            "ElEKE3Rhc2tfcmVzdGFydF9wb2xpY3kYBCABKAsyLS5nb29nbGUuY2xvdWQu",
            "bWFuYWdlZGthZmthLnYxLlRhc2tSZXRyeVBvbGljeUID4EEBSAASEQoEbmFt",
            "ZRgBIAEoCUID4EEIEkoKB2NvbmZpZ3MYAiADKAsyNC5nb29nbGUuY2xvdWQu",
            "bWFuYWdlZGthZmthLnYxLkNvbm5lY3Rvci5Db25maWdzRW50cnlCA+BBARJB",
            "CgVzdGF0ZRgDIAEoDjItLmdvb2dsZS5jbG91ZC5tYW5hZ2Vka2Fma2EudjEu",
            "Q29ubmVjdG9yLlN0YXRlQgPgQQMaLgoMQ29uZmlnc0VudHJ5EgsKA2tleRgB",
            "IAEoCRINCgV2YWx1ZRgCIAEoCToCOAEicAoFU3RhdGUSFQoRU1RBVEVfVU5T",
            "UEVDSUZJRUQQABIOCgpVTkFTU0lHTkVEEAESCwoHUlVOTklORxACEgoKBlBB",
            "VVNFRBADEgoKBkZBSUxFRBAEEg4KClJFU1RBUlRJTkcQBRILCgdTVE9QUEVE",
            "EAY6pAHqQaABCiVtYW5hZ2Vka2Fma2EuZ29vZ2xlYXBpcy5jb20vQ29ubmVj",
            "dG9yEmBwcm9qZWN0cy97cHJvamVjdH0vbG9jYXRpb25zL3tsb2NhdGlvbn0v",
            "Y29ubmVjdENsdXN0ZXJzL3tjb25uZWN0X2NsdXN0ZXJ9L2Nvbm5lY3RvcnMv",
            "e2Nvbm5lY3Rvcn0qCmNvbm5lY3RvcnMyCWNvbm5lY3RvckIQCg5yZXN0YXJ0",
            "X3BvbGljeSKDAQoPVGFza1JldHJ5UG9saWN5EjcKD21pbmltdW1fYmFja29m",
            "ZhgBIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbkID4EEBEjcKD21h",
            "eGltdW1fYmFja29mZhgCIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlv",
            "bkID4EEBQqIECiBjb20uZ29vZ2xlLmNsb3VkLm1hbmFnZWRrYWZrYS52MUIO",
            "UmVzb3VyY2VzUHJvdG9QAVpEY2xvdWQuZ29vZ2xlLmNvbS9nby9tYW5hZ2Vk",
            "a2Fma2EvYXBpdjEvbWFuYWdlZGthZmthcGI7bWFuYWdlZGthZmthcGKqAhxH",
            "b29nbGUuQ2xvdWQuTWFuYWdlZEthZmthLlYxygIcR29vZ2xlXENsb3VkXE1h",
            "bmFnZWRLYWZrYVxWMeoCH0dvb2dsZTo6Q2xvdWQ6Ok1hbmFnZWRLYWZrYTo6",
            "VjHqQXgKIWNsb3Vka21zLmdvb2dsZWFwaXMuY29tL0NyeXB0b0tleRJTcHJv",
            "amVjdHMve3Byb2plY3R9L2xvY2F0aW9ucy97bG9jYXRpb259L2tleVJpbmdz",
            "L3trZXlfcmluZ30vY3J5cHRvS2V5cy97Y3J5cHRvX2tleX3qQWsKKnNlY3Jl",
            "dG1hbmFnZXIuZ29vZ2xlYXBpcy5jb20vU2VjcmV0VmVyc2lvbhI9cHJvamVj",
            "dHMve3Byb2plY3R9L3NlY3JldHMve3NlY3JldH0vdmVyc2lvbnMve3NlY3Jl",
            "dF92ZXJzaW9ufepBXAofcHJpdmF0ZWNhLmdvb2dsZWFwaXMuY29tL0NhUG9v",
            "bBI5cHJvamVjdHMve3Byb2plY3R9L2xvY2F0aW9ucy97bG9jYXRpb259L2Nh",
            "UG9vbHMve2NhX3Bvb2x9YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ManagedKafka.V1.Cluster), global::Google.Cloud.ManagedKafka.V1.Cluster.Parser, new[]{ "GcpConfig", "Name", "CreateTime", "UpdateTime", "Labels", "CapacityConfig", "RebalanceConfig", "State", "SatisfiesPzi", "SatisfiesPzs" }, new[]{ "PlatformConfig", "SatisfiesPzi", "SatisfiesPzs" }, new[]{ typeof(global::Google.Cloud.ManagedKafka.V1.Cluster.Types.State) }, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ManagedKafka.V1.CapacityConfig), global::Google.Cloud.ManagedKafka.V1.CapacityConfig.Parser, new[]{ "VcpuCount", "MemoryBytes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ManagedKafka.V1.RebalanceConfig), global::Google.Cloud.ManagedKafka.V1.RebalanceConfig.Parser, new[]{ "Mode" }, null, new[]{ typeof(global::Google.Cloud.ManagedKafka.V1.RebalanceConfig.Types.Mode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ManagedKafka.V1.NetworkConfig), global::Google.Cloud.ManagedKafka.V1.NetworkConfig.Parser, new[]{ "Subnet" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ManagedKafka.V1.AccessConfig), global::Google.Cloud.ManagedKafka.V1.AccessConfig.Parser, new[]{ "NetworkConfigs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ManagedKafka.V1.GcpConfig), global::Google.Cloud.ManagedKafka.V1.GcpConfig.Parser, new[]{ "AccessConfig", "KmsKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ManagedKafka.V1.Topic), global::Google.Cloud.ManagedKafka.V1.Topic.Parser, new[]{ "Name", "PartitionCount", "ReplicationFactor", "Configs" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ManagedKafka.V1.ConsumerTopicMetadata), global::Google.Cloud.ManagedKafka.V1.ConsumerTopicMetadata.Parser, new[]{ "Partitions" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ManagedKafka.V1.ConsumerPartitionMetadata), global::Google.Cloud.ManagedKafka.V1.ConsumerPartitionMetadata.Parser, new[]{ "Offset", "Metadata" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ManagedKafka.V1.ConsumerGroup), global::Google.Cloud.ManagedKafka.V1.ConsumerGroup.Parser, new[]{ "Name", "Topics" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ManagedKafka.V1.OperationMetadata), global::Google.Cloud.ManagedKafka.V1.OperationMetadata.Parser, new[]{ "CreateTime", "EndTime", "Target", "Verb", "StatusMessage", "RequestedCancellation", "ApiVersion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ManagedKafka.V1.ConnectCluster), global::Google.Cloud.ManagedKafka.V1.ConnectCluster.Parser, new[]{ "GcpConfig", "Name", "KafkaCluster", "CreateTime", "UpdateTime", "Labels", "CapacityConfig", "State", "Config" }, new[]{ "PlatformConfig" }, new[]{ typeof(global::Google.Cloud.ManagedKafka.V1.ConnectCluster.Types.State) }, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ManagedKafka.V1.ConnectNetworkConfig), global::Google.Cloud.ManagedKafka.V1.ConnectNetworkConfig.Parser, new[]{ "PrimarySubnet", "AdditionalSubnets", "DnsDomainNames" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ManagedKafka.V1.ConnectAccessConfig), global::Google.Cloud.ManagedKafka.V1.ConnectAccessConfig.Parser, new[]{ "NetworkConfigs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ManagedKafka.V1.ConnectGcpConfig), global::Google.Cloud.ManagedKafka.V1.ConnectGcpConfig.Parser, new[]{ "AccessConfig", "SecretPaths" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ManagedKafka.V1.Connector), global::Google.Cloud.ManagedKafka.V1.Connector.Parser, new[]{ "TaskRestartPolicy", "Name", "Configs", "State" }, new[]{ "RestartPolicy" }, new[]{ typeof(global::Google.Cloud.ManagedKafka.V1.Connector.Types.State) }, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ManagedKafka.V1.TaskRetryPolicy), global::Google.Cloud.ManagedKafka.V1.TaskRetryPolicy.Parser, new[]{ "MinimumBackoff", "MaximumBackoff" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// An Apache Kafka cluster deployed in a location.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Cluster : pb::IMessage<Cluster>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Cluster> _parser = new pb::MessageParser<Cluster>(() => new Cluster());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Cluster> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.ManagedKafka.V1.ResourcesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Cluster() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Cluster(Cluster other) : this() {
      _hasBits0 = other._hasBits0;
      name_ = other.name_;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      updateTime_ = other.updateTime_ != null ? other.updateTime_.Clone() : null;
      labels_ = other.labels_.Clone();
      capacityConfig_ = other.capacityConfig_ != null ? other.capacityConfig_.Clone() : null;
      rebalanceConfig_ = other.rebalanceConfig_ != null ? other.rebalanceConfig_.Clone() : null;
      state_ = other.state_;
      satisfiesPzi_ = other.satisfiesPzi_;
      satisfiesPzs_ = other.satisfiesPzs_;
      switch (other.PlatformConfigCase) {
        case PlatformConfigOneofCase.GcpConfig:
          GcpConfig = other.GcpConfig.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Cluster Clone() {
      return new Cluster(this);
    }

    /// <summary>Field number for the "gcp_config" field.</summary>
    public const int GcpConfigFieldNumber = 9;
    /// <summary>
    /// Required. Configuration properties for a Kafka cluster deployed to Google
    /// Cloud Platform.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.ManagedKafka.V1.GcpConfig GcpConfig {
      get { return platformConfigCase_ == PlatformConfigOneofCase.GcpConfig ? (global::Google.Cloud.ManagedKafka.V1.GcpConfig) platformConfig_ : null; }
      set {
        platformConfig_ = value;
        platformConfigCase_ = value == null ? PlatformConfigOneofCase.None : PlatformConfigOneofCase.GcpConfig;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Identifier. The name of the cluster. Structured like:
    /// projects/{project_number}/locations/{location}/clusters/{cluster_id}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. The time when the cluster was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "update_time" field.</summary>
    public const int UpdateTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateTime_;
    /// <summary>
    /// Output only. The time when the cluster was last updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 34);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Optional. Labels as key value pairs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "capacity_config" field.</summary>
    public const int CapacityConfigFieldNumber = 5;
    private global::Google.Cloud.ManagedKafka.V1.CapacityConfig capacityConfig_;
    /// <summary>
    /// Required. Capacity configuration for the Kafka cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.ManagedKafka.V1.CapacityConfig CapacityConfig {
      get { return capacityConfig_; }
      set {
        capacityConfig_ = value;
      }
    }

    /// <summary>Field number for the "rebalance_config" field.</summary>
    public const int RebalanceConfigFieldNumber = 8;
    private global::Google.Cloud.ManagedKafka.V1.RebalanceConfig rebalanceConfig_;
    /// <summary>
    /// Optional. Rebalance configuration for the Kafka cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.ManagedKafka.V1.RebalanceConfig RebalanceConfig {
      get { return rebalanceConfig_; }
      set {
        rebalanceConfig_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 10;
    private global::Google.Cloud.ManagedKafka.V1.Cluster.Types.State state_ = global::Google.Cloud.ManagedKafka.V1.Cluster.Types.State.Unspecified;
    /// <summary>
    /// Output only. The current state of the cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.ManagedKafka.V1.Cluster.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "satisfies_pzi" field.</summary>
    public const int SatisfiesPziFieldNumber = 11;
    private readonly static bool SatisfiesPziDefaultValue = false;

    private bool satisfiesPzi_;
    /// <summary>
    /// Output only. Reserved for future use.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SatisfiesPzi {
      get { if ((_hasBits0 & 1) != 0) { return satisfiesPzi_; } else { return SatisfiesPziDefaultValue; } }
      set {
        _hasBits0 |= 1;
        satisfiesPzi_ = value;
      }
    }
    /// <summary>Gets whether the "satisfies_pzi" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSatisfiesPzi {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "satisfies_pzi" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSatisfiesPzi() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "satisfies_pzs" field.</summary>
    public const int SatisfiesPzsFieldNumber = 12;
    private readonly static bool SatisfiesPzsDefaultValue = false;

    private bool satisfiesPzs_;
    /// <summary>
    /// Output only. Reserved for future use.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SatisfiesPzs {
      get { if ((_hasBits0 & 2) != 0) { return satisfiesPzs_; } else { return SatisfiesPzsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        satisfiesPzs_ = value;
      }
    }
    /// <summary>Gets whether the "satisfies_pzs" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSatisfiesPzs {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "satisfies_pzs" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSatisfiesPzs() {
      _hasBits0 &= ~2;
    }

    private object platformConfig_;
    /// <summary>Enum of possible cases for the "platform_config" oneof.</summary>
    public enum PlatformConfigOneofCase {
      None = 0,
      GcpConfig = 9,
    }
    private PlatformConfigOneofCase platformConfigCase_ = PlatformConfigOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlatformConfigOneofCase PlatformConfigCase {
      get { return platformConfigCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlatformConfig() {
      platformConfigCase_ = PlatformConfigOneofCase.None;
      platformConfig_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Cluster);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Cluster other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GcpConfig, other.GcpConfig)) return false;
      if (Name != other.Name) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(UpdateTime, other.UpdateTime)) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if (!object.Equals(CapacityConfig, other.CapacityConfig)) return false;
      if (!object.Equals(RebalanceConfig, other.RebalanceConfig)) return false;
      if (State != other.State) return false;
      if (SatisfiesPzi != other.SatisfiesPzi) return false;
      if (SatisfiesPzs != other.SatisfiesPzs) return false;
      if (PlatformConfigCase != other.PlatformConfigCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (platformConfigCase_ == PlatformConfigOneofCase.GcpConfig) hash ^= GcpConfig.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (updateTime_ != null) hash ^= UpdateTime.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (capacityConfig_ != null) hash ^= CapacityConfig.GetHashCode();
      if (rebalanceConfig_ != null) hash ^= RebalanceConfig.GetHashCode();
      if (State != global::Google.Cloud.ManagedKafka.V1.Cluster.Types.State.Unspecified) hash ^= State.GetHashCode();
      if (HasSatisfiesPzi) hash ^= SatisfiesPzi.GetHashCode();
      if (HasSatisfiesPzs) hash ^= SatisfiesPzs.GetHashCode();
      hash ^= (int) platformConfigCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (createTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UpdateTime);
      }
      labels_.WriteTo(output, _map_labels_codec);
      if (capacityConfig_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CapacityConfig);
      }
      if (rebalanceConfig_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(RebalanceConfig);
      }
      if (platformConfigCase_ == PlatformConfigOneofCase.GcpConfig) {
        output.WriteRawTag(74);
        output.WriteMessage(GcpConfig);
      }
      if (State != global::Google.Cloud.ManagedKafka.V1.Cluster.Types.State.Unspecified) {
        output.WriteRawTag(80);
        output.WriteEnum((int) State);
      }
      if (HasSatisfiesPzi) {
        output.WriteRawTag(88);
        output.WriteBool(SatisfiesPzi);
      }
      if (HasSatisfiesPzs) {
        output.WriteRawTag(96);
        output.WriteBool(SatisfiesPzs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (createTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UpdateTime);
      }
      labels_.WriteTo(ref output, _map_labels_codec);
      if (capacityConfig_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CapacityConfig);
      }
      if (rebalanceConfig_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(RebalanceConfig);
      }
      if (platformConfigCase_ == PlatformConfigOneofCase.GcpConfig) {
        output.WriteRawTag(74);
        output.WriteMessage(GcpConfig);
      }
      if (State != global::Google.Cloud.ManagedKafka.V1.Cluster.Types.State.Unspecified) {
        output.WriteRawTag(80);
        output.WriteEnum((int) State);
      }
      if (HasSatisfiesPzi) {
        output.WriteRawTag(88);
        output.WriteBool(SatisfiesPzi);
      }
      if (HasSatisfiesPzs) {
        output.WriteRawTag(96);
        output.WriteBool(SatisfiesPzs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (platformConfigCase_ == PlatformConfigOneofCase.GcpConfig) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GcpConfig);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (updateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateTime);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      if (capacityConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CapacityConfig);
      }
      if (rebalanceConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RebalanceConfig);
      }
      if (State != global::Google.Cloud.ManagedKafka.V1.Cluster.Types.State.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (HasSatisfiesPzi) {
        size += 1 + 1;
      }
      if (HasSatisfiesPzs) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Cluster other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.updateTime_ != null) {
        if (updateTime_ == null) {
          UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateTime.MergeFrom(other.UpdateTime);
      }
      labels_.MergeFrom(other.labels_);
      if (other.capacityConfig_ != null) {
        if (capacityConfig_ == null) {
          CapacityConfig = new global::Google.Cloud.ManagedKafka.V1.CapacityConfig();
        }
        CapacityConfig.MergeFrom(other.CapacityConfig);
      }
      if (other.rebalanceConfig_ != null) {
        if (rebalanceConfig_ == null) {
          RebalanceConfig = new global::Google.Cloud.ManagedKafka.V1.RebalanceConfig();
        }
        RebalanceConfig.MergeFrom(other.RebalanceConfig);
      }
      if (other.State != global::Google.Cloud.ManagedKafka.V1.Cluster.Types.State.Unspecified) {
        State = other.State;
      }
      if (other.HasSatisfiesPzi) {
        SatisfiesPzi = other.SatisfiesPzi;
      }
      if (other.HasSatisfiesPzs) {
        SatisfiesPzs = other.SatisfiesPzs;
      }
      switch (other.PlatformConfigCase) {
        case PlatformConfigOneofCase.GcpConfig:
          if (GcpConfig == null) {
            GcpConfig = new global::Google.Cloud.ManagedKafka.V1.GcpConfig();
          }
          GcpConfig.MergeFrom(other.GcpConfig);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 26: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 34: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 42: {
            if (capacityConfig_ == null) {
              CapacityConfig = new global::Google.Cloud.ManagedKafka.V1.CapacityConfig();
            }
            input.ReadMessage(CapacityConfig);
            break;
          }
          case 66: {
            if (rebalanceConfig_ == null) {
              RebalanceConfig = new global::Google.Cloud.ManagedKafka.V1.RebalanceConfig();
            }
            input.ReadMessage(RebalanceConfig);
            break;
          }
          case 74: {
            global::Google.Cloud.ManagedKafka.V1.GcpConfig subBuilder = new global::Google.Cloud.ManagedKafka.V1.GcpConfig();
            if (platformConfigCase_ == PlatformConfigOneofCase.GcpConfig) {
              subBuilder.MergeFrom(GcpConfig);
            }
            input.ReadMessage(subBuilder);
            GcpConfig = subBuilder;
            break;
          }
          case 80: {
            State = (global::Google.Cloud.ManagedKafka.V1.Cluster.Types.State) input.ReadEnum();
            break;
          }
          case 88: {
            SatisfiesPzi = input.ReadBool();
            break;
          }
          case 96: {
            SatisfiesPzs = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 26: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 34: {
            labels_.AddEntriesFrom(ref input, _map_labels_codec);
            break;
          }
          case 42: {
            if (capacityConfig_ == null) {
              CapacityConfig = new global::Google.Cloud.ManagedKafka.V1.CapacityConfig();
            }
            input.ReadMessage(CapacityConfig);
            break;
          }
          case 66: {
            if (rebalanceConfig_ == null) {
              RebalanceConfig = new global::Google.Cloud.ManagedKafka.V1.RebalanceConfig();
            }
            input.ReadMessage(RebalanceConfig);
            break;
          }
          case 74: {
            global::Google.Cloud.ManagedKafka.V1.GcpConfig subBuilder = new global::Google.Cloud.ManagedKafka.V1.GcpConfig();
            if (platformConfigCase_ == PlatformConfigOneofCase.GcpConfig) {
              subBuilder.MergeFrom(GcpConfig);
            }
            input.ReadMessage(subBuilder);
            GcpConfig = subBuilder;
            break;
          }
          case 80: {
            State = (global::Google.Cloud.ManagedKafka.V1.Cluster.Types.State) input.ReadEnum();
            break;
          }
          case 88: {
            SatisfiesPzi = input.ReadBool();
            break;
          }
          case 96: {
            SatisfiesPzs = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Cluster message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// The state of the cluster.
      /// </summary>
      public enum State {
        /// <summary>
        /// A state was not specified.
        /// </summary>
        [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The cluster is being created.
        /// </summary>
        [pbr::OriginalName("CREATING")] Creating = 1,
        /// <summary>
        /// The cluster is active.
        /// </summary>
        [pbr::OriginalName("ACTIVE")] Active = 2,
        /// <summary>
        /// The cluster is being deleted.
        /// </summary>
        [pbr::OriginalName("DELETING")] Deleting = 3,
      }

    }
    #endregion

  }

  /// <summary>
  /// A capacity configuration of a Kafka cluster.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CapacityConfig : pb::IMessage<CapacityConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CapacityConfig> _parser = new pb::MessageParser<CapacityConfig>(() => new CapacityConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CapacityConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.ManagedKafka.V1.ResourcesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CapacityConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CapacityConfig(CapacityConfig other) : this() {
      vcpuCount_ = other.vcpuCount_;
      memoryBytes_ = other.memoryBytes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CapacityConfig Clone() {
      return new CapacityConfig(this);
    }

    /// <summary>Field number for the "vcpu_count" field.</summary>
    public const int VcpuCountFieldNumber = 1;
    private long vcpuCount_;
    /// <summary>
    /// Required. The number of vCPUs to provision for the cluster. Minimum: 3.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long VcpuCount {
      get { return vcpuCount_; }
      set {
        vcpuCount_ = value;
      }
    }

    /// <summary>Field number for the "memory_bytes" field.</summary>
    public const int MemoryBytesFieldNumber = 2;
    private long memoryBytes_;
    /// <summary>
    /// Required. The memory to provision for the cluster in bytes.
    /// The CPU:memory ratio (vCPU:GiB) must be between 1:1 and 1:8.
    /// Minimum: 3221225472 (3 GiB).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MemoryBytes {
      get { return memoryBytes_; }
      set {
        memoryBytes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CapacityConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CapacityConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VcpuCount != other.VcpuCount) return false;
      if (MemoryBytes != other.MemoryBytes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (VcpuCount != 0L) hash ^= VcpuCount.GetHashCode();
      if (MemoryBytes != 0L) hash ^= MemoryBytes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (VcpuCount != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(VcpuCount);
      }
      if (MemoryBytes != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MemoryBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (VcpuCount != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(VcpuCount);
      }
      if (MemoryBytes != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MemoryBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (VcpuCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(VcpuCount);
      }
      if (MemoryBytes != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MemoryBytes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CapacityConfig other) {
      if (other == null) {
        return;
      }
      if (other.VcpuCount != 0L) {
        VcpuCount = other.VcpuCount;
      }
      if (other.MemoryBytes != 0L) {
        MemoryBytes = other.MemoryBytes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            VcpuCount = input.ReadInt64();
            break;
          }
          case 16: {
            MemoryBytes = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            VcpuCount = input.ReadInt64();
            break;
          }
          case 16: {
            MemoryBytes = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Defines rebalancing behavior of a Kafka cluster.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class RebalanceConfig : pb::IMessage<RebalanceConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RebalanceConfig> _parser = new pb::MessageParser<RebalanceConfig>(() => new RebalanceConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RebalanceConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.ManagedKafka.V1.ResourcesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RebalanceConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RebalanceConfig(RebalanceConfig other) : this() {
      mode_ = other.mode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RebalanceConfig Clone() {
      return new RebalanceConfig(this);
    }

    /// <summary>Field number for the "mode" field.</summary>
    public const int ModeFieldNumber = 1;
    private global::Google.Cloud.ManagedKafka.V1.RebalanceConfig.Types.Mode mode_ = global::Google.Cloud.ManagedKafka.V1.RebalanceConfig.Types.Mode.Unspecified;
    /// <summary>
    /// Optional. The rebalance behavior for the cluster.
    /// When not specified, defaults to `NO_REBALANCE`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.ManagedKafka.V1.RebalanceConfig.Types.Mode Mode {
      get { return mode_; }
      set {
        mode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RebalanceConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RebalanceConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Mode != other.Mode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Mode != global::Google.Cloud.ManagedKafka.V1.RebalanceConfig.Types.Mode.Unspecified) hash ^= Mode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Mode != global::Google.Cloud.ManagedKafka.V1.RebalanceConfig.Types.Mode.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Mode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Mode != global::Google.Cloud.ManagedKafka.V1.RebalanceConfig.Types.Mode.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Mode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Mode != global::Google.Cloud.ManagedKafka.V1.RebalanceConfig.Types.Mode.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Mode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RebalanceConfig other) {
      if (other == null) {
        return;
      }
      if (other.Mode != global::Google.Cloud.ManagedKafka.V1.RebalanceConfig.Types.Mode.Unspecified) {
        Mode = other.Mode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Mode = (global::Google.Cloud.ManagedKafka.V1.RebalanceConfig.Types.Mode) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Mode = (global::Google.Cloud.ManagedKafka.V1.RebalanceConfig.Types.Mode) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the RebalanceConfig message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// The partition rebalance mode for the cluster.
      /// </summary>
      public enum Mode {
        /// <summary>
        /// A mode was not specified. Do not use.
        /// </summary>
        [pbr::OriginalName("MODE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Do not rebalance automatically.
        /// </summary>
        [pbr::OriginalName("NO_REBALANCE")] NoRebalance = 1,
        /// <summary>
        /// Automatically rebalance topic partitions among brokers when the
        /// cluster is scaled up.
        /// </summary>
        [pbr::OriginalName("AUTO_REBALANCE_ON_SCALE_UP")] AutoRebalanceOnScaleUp = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// The configuration of a Virtual Private Cloud (VPC) network that can access
  /// the Kafka cluster.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class NetworkConfig : pb::IMessage<NetworkConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NetworkConfig> _parser = new pb::MessageParser<NetworkConfig>(() => new NetworkConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NetworkConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.ManagedKafka.V1.ResourcesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NetworkConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NetworkConfig(NetworkConfig other) : this() {
      subnet_ = other.subnet_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NetworkConfig Clone() {
      return new NetworkConfig(this);
    }

    /// <summary>Field number for the "subnet" field.</summary>
    public const int SubnetFieldNumber = 2;
    private string subnet_ = "";
    /// <summary>
    /// Required. Name of the VPC subnet in which to create Private Service Connect
    /// (PSC) endpoints for the Kafka brokers and bootstrap address. Structured
    /// like: projects/{project}/regions/{region}/subnetworks/{subnet_id}
    ///
    /// The subnet must be located in the same region as the Kafka cluster. The
    /// project may differ. Multiple subnets from the same parent network must not
    /// be specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Subnet {
      get { return subnet_; }
      set {
        subnet_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NetworkConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NetworkConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Subnet != other.Subnet) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Subnet.Length != 0) hash ^= Subnet.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Subnet.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Subnet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Subnet.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Subnet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Subnet.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Subnet);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NetworkConfig other) {
      if (other == null) {
        return;
      }
      if (other.Subnet.Length != 0) {
        Subnet = other.Subnet;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            Subnet = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            Subnet = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The configuration of access to the Kafka cluster.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AccessConfig : pb::IMessage<AccessConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AccessConfig> _parser = new pb::MessageParser<AccessConfig>(() => new AccessConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AccessConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.ManagedKafka.V1.ResourcesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AccessConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AccessConfig(AccessConfig other) : this() {
      networkConfigs_ = other.networkConfigs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AccessConfig Clone() {
      return new AccessConfig(this);
    }

    /// <summary>Field number for the "network_configs" field.</summary>
    public const int NetworkConfigsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.ManagedKafka.V1.NetworkConfig> _repeated_networkConfigs_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.ManagedKafka.V1.NetworkConfig.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.ManagedKafka.V1.NetworkConfig> networkConfigs_ = new pbc::RepeatedField<global::Google.Cloud.ManagedKafka.V1.NetworkConfig>();
    /// <summary>
    /// Required. Virtual Private Cloud (VPC) networks that must be granted direct
    /// access to the Kafka cluster. Minimum of 1 network is required. Maximum 10
    /// networks can be specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.ManagedKafka.V1.NetworkConfig> NetworkConfigs {
      get { return networkConfigs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AccessConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AccessConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!networkConfigs_.Equals(other.networkConfigs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= networkConfigs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      networkConfigs_.WriteTo(output, _repeated_networkConfigs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      networkConfigs_.WriteTo(ref output, _repeated_networkConfigs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += networkConfigs_.CalculateSize(_repeated_networkConfigs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AccessConfig other) {
      if (other == null) {
        return;
      }
      networkConfigs_.Add(other.networkConfigs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            networkConfigs_.AddEntriesFrom(input, _repeated_networkConfigs_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            networkConfigs_.AddEntriesFrom(ref input, _repeated_networkConfigs_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Configuration properties for a Kafka cluster deployed to Google Cloud
  /// Platform.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GcpConfig : pb::IMessage<GcpConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GcpConfig> _parser = new pb::MessageParser<GcpConfig>(() => new GcpConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GcpConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.ManagedKafka.V1.ResourcesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GcpConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GcpConfig(GcpConfig other) : this() {
      accessConfig_ = other.accessConfig_ != null ? other.accessConfig_.Clone() : null;
      kmsKey_ = other.kmsKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GcpConfig Clone() {
      return new GcpConfig(this);
    }

    /// <summary>Field number for the "access_config" field.</summary>
    public const int AccessConfigFieldNumber = 3;
    private global::Google.Cloud.ManagedKafka.V1.AccessConfig accessConfig_;
    /// <summary>
    /// Required. Access configuration for the Kafka cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.ManagedKafka.V1.AccessConfig AccessConfig {
      get { return accessConfig_; }
      set {
        accessConfig_ = value;
      }
    }

    /// <summary>Field number for the "kms_key" field.</summary>
    public const int KmsKeyFieldNumber = 2;
    private string kmsKey_ = "";
    /// <summary>
    /// Optional. Immutable. The Cloud KMS Key name to use for encryption. The key
    /// must be located in the same region as the cluster and cannot be changed.
    /// Structured like:
    /// projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string KmsKey {
      get { return kmsKey_; }
      set {
        kmsKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GcpConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GcpConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AccessConfig, other.AccessConfig)) return false;
      if (KmsKey != other.KmsKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (accessConfig_ != null) hash ^= AccessConfig.GetHashCode();
      if (KmsKey.Length != 0) hash ^= KmsKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (KmsKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(KmsKey);
      }
      if (accessConfig_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AccessConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (KmsKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(KmsKey);
      }
      if (accessConfig_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AccessConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (accessConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccessConfig);
      }
      if (KmsKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(KmsKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GcpConfig other) {
      if (other == null) {
        return;
      }
      if (other.accessConfig_ != null) {
        if (accessConfig_ == null) {
          AccessConfig = new global::Google.Cloud.ManagedKafka.V1.AccessConfig();
        }
        AccessConfig.MergeFrom(other.AccessConfig);
      }
      if (other.KmsKey.Length != 0) {
        KmsKey = other.KmsKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            KmsKey = input.ReadString();
            break;
          }
          case 26: {
            if (accessConfig_ == null) {
              AccessConfig = new global::Google.Cloud.ManagedKafka.V1.AccessConfig();
            }
            input.ReadMessage(AccessConfig);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            KmsKey = input.ReadString();
            break;
          }
          case 26: {
            if (accessConfig_ == null) {
              AccessConfig = new global::Google.Cloud.ManagedKafka.V1.AccessConfig();
            }
            input.ReadMessage(AccessConfig);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A Kafka topic in a given cluster.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Topic : pb::IMessage<Topic>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Topic> _parser = new pb::MessageParser<Topic>(() => new Topic());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Topic> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.ManagedKafka.V1.ResourcesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Topic() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Topic(Topic other) : this() {
      name_ = other.name_;
      partitionCount_ = other.partitionCount_;
      replicationFactor_ = other.replicationFactor_;
      configs_ = other.configs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Topic Clone() {
      return new Topic(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Identifier. The name of the topic. The `topic` segment is used when
    /// connecting directly to the cluster. Structured like:
    /// projects/{project}/locations/{location}/clusters/{cluster}/topics/{topic}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "partition_count" field.</summary>
    public const int PartitionCountFieldNumber = 2;
    private int partitionCount_;
    /// <summary>
    /// Required. The number of partitions this topic has. The partition count can
    /// only be increased, not decreased. Please note that if partitions are
    /// increased for a topic that has a key, the partitioning logic or the
    /// ordering of the messages will be affected.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PartitionCount {
      get { return partitionCount_; }
      set {
        partitionCount_ = value;
      }
    }

    /// <summary>Field number for the "replication_factor" field.</summary>
    public const int ReplicationFactorFieldNumber = 3;
    private int replicationFactor_;
    /// <summary>
    /// Required. Immutable. The number of replicas of each partition. A
    /// replication factor of 3 is recommended for high availability.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ReplicationFactor {
      get { return replicationFactor_; }
      set {
        replicationFactor_ = value;
      }
    }

    /// <summary>Field number for the "configs" field.</summary>
    public const int ConfigsFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_configs_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 34);
    private readonly pbc::MapField<string, string> configs_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Optional. Configurations for the topic that are overridden from the cluster
    /// defaults. The key of the map is a Kafka topic property name, for example:
    /// `cleanup.policy`, `compression.type`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Configs {
      get { return configs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Topic);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Topic other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (PartitionCount != other.PartitionCount) return false;
      if (ReplicationFactor != other.ReplicationFactor) return false;
      if (!Configs.Equals(other.Configs)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (PartitionCount != 0) hash ^= PartitionCount.GetHashCode();
      if (ReplicationFactor != 0) hash ^= ReplicationFactor.GetHashCode();
      hash ^= Configs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (PartitionCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PartitionCount);
      }
      if (ReplicationFactor != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ReplicationFactor);
      }
      configs_.WriteTo(output, _map_configs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (PartitionCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PartitionCount);
      }
      if (ReplicationFactor != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ReplicationFactor);
      }
      configs_.WriteTo(ref output, _map_configs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (PartitionCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PartitionCount);
      }
      if (ReplicationFactor != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReplicationFactor);
      }
      size += configs_.CalculateSize(_map_configs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Topic other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.PartitionCount != 0) {
        PartitionCount = other.PartitionCount;
      }
      if (other.ReplicationFactor != 0) {
        ReplicationFactor = other.ReplicationFactor;
      }
      configs_.MergeFrom(other.configs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            PartitionCount = input.ReadInt32();
            break;
          }
          case 24: {
            ReplicationFactor = input.ReadInt32();
            break;
          }
          case 34: {
            configs_.AddEntriesFrom(input, _map_configs_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            PartitionCount = input.ReadInt32();
            break;
          }
          case 24: {
            ReplicationFactor = input.ReadInt32();
            break;
          }
          case 34: {
            configs_.AddEntriesFrom(ref input, _map_configs_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Metadata for a consumer group corresponding to a specific topic.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ConsumerTopicMetadata : pb::IMessage<ConsumerTopicMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConsumerTopicMetadata> _parser = new pb::MessageParser<ConsumerTopicMetadata>(() => new ConsumerTopicMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ConsumerTopicMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.ManagedKafka.V1.ResourcesReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConsumerTopicMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConsumerTopicMetadata(ConsumerTopicMetadata other) : this() {
      partitions_ = other.partitions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConsumerTopicMetadata Clone() {
      return new ConsumerTopicMetadata(this);
    }

    /// <summary>Field number for the "partitions" field.</summary>
    public const int PartitionsFieldNumber = 1;
    private static readonly pbc::MapField<int, global::Google.Cloud.ManagedKafka.V1.ConsumerPartitionMetadata>.Codec _map_partitions_codec
        = new pbc::MapField<int, global::Google.Cloud.ManagedKafka.V1.ConsumerPartitionMetadata>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::Google.Cloud.ManagedKafka.V1.ConsumerPartitionMetadata.Parser), 10);
    private readonly pbc::MapField<int, global::Google.Cloud.ManagedKafka.V1.ConsumerPartitionMetadata> partitions_ = new pbc::MapField<int, global::Google.Cloud.ManagedKafka.V1.ConsumerPartitionMetadata>();
    /// <summary>
    /// Optional. Metadata for this consumer group and topic for all partition
    /// indexes it has metadata for.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<int, global::Google.Cloud.ManagedKafka.V1.ConsumerPartitionMetadata> Partitions {
      get { return partitions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ConsumerTopicMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ConsumerTopicMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Partitions.Equals(other.Partitions)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Partitions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      partitions_.WriteTo(output, _map_partitions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      partitions_.WriteTo(ref output, _map_partitions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += partitions_.CalculateSize(_map_partitions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ConsumerTopicMetadata other) {
      if (other == null) {
        return;
      }
      partitions_.MergeFrom(other.partitions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            partitions_.AddEntriesFrom(input, _map_partitions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            partitions_.AddEntriesFrom(ref input, _map_partitions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Metadata for a consumer group corresponding to a specific partition.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ConsumerPartitionMetadata : pb::IMessage<ConsumerPartitionMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConsumerPartitionMetadata> _parser = new pb::MessageParser<ConsumerPartitionMetadata>(() => new ConsumerPartitionMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ConsumerPartitionMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.ManagedKafka.V1.ResourcesReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConsumerPartitionMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConsumerPartitionMetadata(ConsumerPartitionMetadata other) : this() {
      offset_ = other.offset_;
      metadata_ = other.metadata_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConsumerPartitionMetadata Clone() {
      return new ConsumerPartitionMetadata(this);
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 1;
    private long offset_;
    /// <summary>
    /// Required. The current offset for this partition, or 0 if no offset has been
    /// committed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 2;
    private string metadata_ = "";
    /// <summary>
    /// Optional. The associated metadata for this partition, or empty if it does
    /// not exist.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Metadata {
      get { return metadata_; }
      set {
        metadata_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ConsumerPartitionMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ConsumerPartitionMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Offset != other.Offset) return false;
      if (Metadata != other.Metadata) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Offset != 0L) hash ^= Offset.GetHashCode();
      if (Metadata.Length != 0) hash ^= Metadata.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Offset != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Offset);
      }
      if (Metadata.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Metadata);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Offset != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Offset);
      }
      if (Metadata.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Metadata);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Offset != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Offset);
      }
      if (Metadata.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Metadata);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ConsumerPartitionMetadata other) {
      if (other == null) {
        return;
      }
      if (other.Offset != 0L) {
        Offset = other.Offset;
      }
      if (other.Metadata.Length != 0) {
        Metadata = other.Metadata;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Offset = input.ReadInt64();
            break;
          }
          case 18: {
            Metadata = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Offset = input.ReadInt64();
            break;
          }
          case 18: {
            Metadata = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A Kafka consumer group in a given cluster.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ConsumerGroup : pb::IMessage<ConsumerGroup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConsumerGroup> _parser = new pb::MessageParser<ConsumerGroup>(() => new ConsumerGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ConsumerGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.ManagedKafka.V1.ResourcesReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConsumerGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConsumerGroup(ConsumerGroup other) : this() {
      name_ = other.name_;
      topics_ = other.topics_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConsumerGroup Clone() {
      return new ConsumerGroup(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Identifier. The name of the consumer group. The `consumer_group` segment is
    /// used when connecting directly to the cluster. Structured like:
    /// projects/{project}/locations/{location}/clusters/{cluster}/consumerGroups/{consumer_group}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "topics" field.</summary>
    public const int TopicsFieldNumber = 2;
    private static readonly pbc::MapField<string, global::Google.Cloud.ManagedKafka.V1.ConsumerTopicMetadata>.Codec _map_topics_codec
        = new pbc::MapField<string, global::Google.Cloud.ManagedKafka.V1.ConsumerTopicMetadata>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Google.Cloud.ManagedKafka.V1.ConsumerTopicMetadata.Parser), 18);
    private readonly pbc::MapField<string, global::Google.Cloud.ManagedKafka.V1.ConsumerTopicMetadata> topics_ = new pbc::MapField<string, global::Google.Cloud.ManagedKafka.V1.ConsumerTopicMetadata>();
    /// <summary>
    /// Optional. Metadata for this consumer group for all topics it has metadata
    /// for. The key of the map is a topic name, structured like:
    /// projects/{project}/locations/{location}/clusters/{cluster}/topics/{topic}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::Google.Cloud.ManagedKafka.V1.ConsumerTopicMetadata> Topics {
      get { return topics_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ConsumerGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ConsumerGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!Topics.Equals(other.Topics)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= Topics.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      topics_.WriteTo(output, _map_topics_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      topics_.WriteTo(ref output, _map_topics_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += topics_.CalculateSize(_map_topics_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ConsumerGroup other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      topics_.MergeFrom(other.topics_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            topics_.AddEntriesFrom(input, _map_topics_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            topics_.AddEntriesFrom(ref input, _map_topics_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Represents the metadata of the long-running operation.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class OperationMetadata : pb::IMessage<OperationMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OperationMetadata> _parser = new pb::MessageParser<OperationMetadata>(() => new OperationMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OperationMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.ManagedKafka.V1.ResourcesReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OperationMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OperationMetadata(OperationMetadata other) : this() {
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      target_ = other.target_;
      verb_ = other.verb_;
      statusMessage_ = other.statusMessage_;
      requestedCancellation_ = other.requestedCancellation_;
      apiVersion_ = other.apiVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OperationMetadata Clone() {
      return new OperationMetadata(this);
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. The time the operation was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    /// <summary>
    /// Output only. The time the operation finished running.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 3;
    private string target_ = "";
    /// <summary>
    /// Output only. Server-defined resource path for the target of the operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Target {
      get { return target_; }
      set {
        target_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "verb" field.</summary>
    public const int VerbFieldNumber = 4;
    private string verb_ = "";
    /// <summary>
    /// Output only. Name of the verb executed by the operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Verb {
      get { return verb_; }
      set {
        verb_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status_message" field.</summary>
    public const int StatusMessageFieldNumber = 5;
    private string statusMessage_ = "";
    /// <summary>
    /// Output only. Human-readable status of the operation, if any.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StatusMessage {
      get { return statusMessage_; }
      set {
        statusMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "requested_cancellation" field.</summary>
    public const int RequestedCancellationFieldNumber = 6;
    private bool requestedCancellation_;
    /// <summary>
    /// Output only. Identifies whether the user has requested cancellation
    /// of the operation. Operations that have been cancelled successfully
    /// have [Operation.error][] value with a
    /// [google.rpc.Status.code][google.rpc.Status.code] of 1, corresponding to
    /// `Code.CANCELLED`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool RequestedCancellation {
      get { return requestedCancellation_; }
      set {
        requestedCancellation_ = value;
      }
    }

    /// <summary>Field number for the "api_version" field.</summary>
    public const int ApiVersionFieldNumber = 7;
    private string apiVersion_ = "";
    /// <summary>
    /// Output only. API version used to start the operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ApiVersion {
      get { return apiVersion_; }
      set {
        apiVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OperationMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OperationMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      if (Target != other.Target) return false;
      if (Verb != other.Verb) return false;
      if (StatusMessage != other.StatusMessage) return false;
      if (RequestedCancellation != other.RequestedCancellation) return false;
      if (ApiVersion != other.ApiVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (Target.Length != 0) hash ^= Target.GetHashCode();
      if (Verb.Length != 0) hash ^= Verb.GetHashCode();
      if (StatusMessage.Length != 0) hash ^= StatusMessage.GetHashCode();
      if (RequestedCancellation != false) hash ^= RequestedCancellation.GetHashCode();
      if (ApiVersion.Length != 0) hash ^= ApiVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (createTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CreateTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndTime);
      }
      if (Target.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Target);
      }
      if (Verb.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Verb);
      }
      if (StatusMessage.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(StatusMessage);
      }
      if (RequestedCancellation != false) {
        output.WriteRawTag(48);
        output.WriteBool(RequestedCancellation);
      }
      if (ApiVersion.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ApiVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (createTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CreateTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndTime);
      }
      if (Target.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Target);
      }
      if (Verb.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Verb);
      }
      if (StatusMessage.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(StatusMessage);
      }
      if (RequestedCancellation != false) {
        output.WriteRawTag(48);
        output.WriteBool(RequestedCancellation);
      }
      if (ApiVersion.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ApiVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (Target.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Target);
      }
      if (Verb.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Verb);
      }
      if (StatusMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StatusMessage);
      }
      if (RequestedCancellation != false) {
        size += 1 + 1;
      }
      if (ApiVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ApiVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OperationMetadata other) {
      if (other == null) {
        return;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      if (other.Target.Length != 0) {
        Target = other.Target;
      }
      if (other.Verb.Length != 0) {
        Verb = other.Verb;
      }
      if (other.StatusMessage.Length != 0) {
        StatusMessage = other.StatusMessage;
      }
      if (other.RequestedCancellation != false) {
        RequestedCancellation = other.RequestedCancellation;
      }
      if (other.ApiVersion.Length != 0) {
        ApiVersion = other.ApiVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 18: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 26: {
            Target = input.ReadString();
            break;
          }
          case 34: {
            Verb = input.ReadString();
            break;
          }
          case 42: {
            StatusMessage = input.ReadString();
            break;
          }
          case 48: {
            RequestedCancellation = input.ReadBool();
            break;
          }
          case 58: {
            ApiVersion = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 18: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 26: {
            Target = input.ReadString();
            break;
          }
          case 34: {
            Verb = input.ReadString();
            break;
          }
          case 42: {
            StatusMessage = input.ReadString();
            break;
          }
          case 48: {
            RequestedCancellation = input.ReadBool();
            break;
          }
          case 58: {
            ApiVersion = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// An Apache Kafka Connect cluster deployed in a location.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ConnectCluster : pb::IMessage<ConnectCluster>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConnectCluster> _parser = new pb::MessageParser<ConnectCluster>(() => new ConnectCluster());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ConnectCluster> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.ManagedKafka.V1.ResourcesReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConnectCluster() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConnectCluster(ConnectCluster other) : this() {
      name_ = other.name_;
      kafkaCluster_ = other.kafkaCluster_;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      updateTime_ = other.updateTime_ != null ? other.updateTime_.Clone() : null;
      labels_ = other.labels_.Clone();
      capacityConfig_ = other.capacityConfig_ != null ? other.capacityConfig_.Clone() : null;
      state_ = other.state_;
      config_ = other.config_.Clone();
      switch (other.PlatformConfigCase) {
        case PlatformConfigOneofCase.GcpConfig:
          GcpConfig = other.GcpConfig.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConnectCluster Clone() {
      return new ConnectCluster(this);
    }

    /// <summary>Field number for the "gcp_config" field.</summary>
    public const int GcpConfigFieldNumber = 7;
    /// <summary>
    /// Required. Configuration properties for a Kafka Connect cluster deployed
    /// to Google Cloud Platform.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.ManagedKafka.V1.ConnectGcpConfig GcpConfig {
      get { return platformConfigCase_ == PlatformConfigOneofCase.GcpConfig ? (global::Google.Cloud.ManagedKafka.V1.ConnectGcpConfig) platformConfig_ : null; }
      set {
        platformConfig_ = value;
        platformConfigCase_ = value == null ? PlatformConfigOneofCase.None : PlatformConfigOneofCase.GcpConfig;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Identifier. The name of the Kafka Connect cluster. Structured like:
    /// projects/{project_number}/locations/{location}/connectClusters/{connect_cluster_id}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "kafka_cluster" field.</summary>
    public const int KafkaClusterFieldNumber = 2;
    private string kafkaCluster_ = "";
    /// <summary>
    /// Required. Immutable. The name of the Kafka cluster this Kafka Connect
    /// cluster is attached to. Structured like:
    /// projects/{project}/locations/{location}/clusters/{cluster}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string KafkaCluster {
      get { return kafkaCluster_; }
      set {
        kafkaCluster_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. The time when the cluster was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "update_time" field.</summary>
    public const int UpdateTimeFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateTime_;
    /// <summary>
    /// Output only. The time when the cluster was last updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 5;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 42);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Optional. Labels as key value pairs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "capacity_config" field.</summary>
    public const int CapacityConfigFieldNumber = 6;
    private global::Google.Cloud.ManagedKafka.V1.CapacityConfig capacityConfig_;
    /// <summary>
    /// Required. Capacity configuration for the Kafka Connect cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.ManagedKafka.V1.CapacityConfig CapacityConfig {
      get { return capacityConfig_; }
      set {
        capacityConfig_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 8;
    private global::Google.Cloud.ManagedKafka.V1.ConnectCluster.Types.State state_ = global::Google.Cloud.ManagedKafka.V1.ConnectCluster.Types.State.Unspecified;
    /// <summary>
    /// Output only. The current state of the cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.ManagedKafka.V1.ConnectCluster.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 9;
    private static readonly pbc::MapField<string, string>.Codec _map_config_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 74);
    private readonly pbc::MapField<string, string> config_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Optional. Configurations for the worker that are overridden from the
    /// defaults. The key of the map is a Kafka Connect worker property name, for
    /// example: `exactly.once.source.support`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Config {
      get { return config_; }
    }

    private object platformConfig_;
    /// <summary>Enum of possible cases for the "platform_config" oneof.</summary>
    public enum PlatformConfigOneofCase {
      None = 0,
      GcpConfig = 7,
    }
    private PlatformConfigOneofCase platformConfigCase_ = PlatformConfigOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlatformConfigOneofCase PlatformConfigCase {
      get { return platformConfigCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlatformConfig() {
      platformConfigCase_ = PlatformConfigOneofCase.None;
      platformConfig_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ConnectCluster);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ConnectCluster other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GcpConfig, other.GcpConfig)) return false;
      if (Name != other.Name) return false;
      if (KafkaCluster != other.KafkaCluster) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(UpdateTime, other.UpdateTime)) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if (!object.Equals(CapacityConfig, other.CapacityConfig)) return false;
      if (State != other.State) return false;
      if (!Config.Equals(other.Config)) return false;
      if (PlatformConfigCase != other.PlatformConfigCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (platformConfigCase_ == PlatformConfigOneofCase.GcpConfig) hash ^= GcpConfig.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (KafkaCluster.Length != 0) hash ^= KafkaCluster.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (updateTime_ != null) hash ^= UpdateTime.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (capacityConfig_ != null) hash ^= CapacityConfig.GetHashCode();
      if (State != global::Google.Cloud.ManagedKafka.V1.ConnectCluster.Types.State.Unspecified) hash ^= State.GetHashCode();
      hash ^= Config.GetHashCode();
      hash ^= (int) platformConfigCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (KafkaCluster.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(KafkaCluster);
      }
      if (createTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(UpdateTime);
      }
      labels_.WriteTo(output, _map_labels_codec);
      if (capacityConfig_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(CapacityConfig);
      }
      if (platformConfigCase_ == PlatformConfigOneofCase.GcpConfig) {
        output.WriteRawTag(58);
        output.WriteMessage(GcpConfig);
      }
      if (State != global::Google.Cloud.ManagedKafka.V1.ConnectCluster.Types.State.Unspecified) {
        output.WriteRawTag(64);
        output.WriteEnum((int) State);
      }
      config_.WriteTo(output, _map_config_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (KafkaCluster.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(KafkaCluster);
      }
      if (createTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(UpdateTime);
      }
      labels_.WriteTo(ref output, _map_labels_codec);
      if (capacityConfig_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(CapacityConfig);
      }
      if (platformConfigCase_ == PlatformConfigOneofCase.GcpConfig) {
        output.WriteRawTag(58);
        output.WriteMessage(GcpConfig);
      }
      if (State != global::Google.Cloud.ManagedKafka.V1.ConnectCluster.Types.State.Unspecified) {
        output.WriteRawTag(64);
        output.WriteEnum((int) State);
      }
      config_.WriteTo(ref output, _map_config_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (platformConfigCase_ == PlatformConfigOneofCase.GcpConfig) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GcpConfig);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (KafkaCluster.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(KafkaCluster);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (updateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateTime);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      if (capacityConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CapacityConfig);
      }
      if (State != global::Google.Cloud.ManagedKafka.V1.ConnectCluster.Types.State.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      size += config_.CalculateSize(_map_config_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ConnectCluster other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.KafkaCluster.Length != 0) {
        KafkaCluster = other.KafkaCluster;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.updateTime_ != null) {
        if (updateTime_ == null) {
          UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateTime.MergeFrom(other.UpdateTime);
      }
      labels_.MergeFrom(other.labels_);
      if (other.capacityConfig_ != null) {
        if (capacityConfig_ == null) {
          CapacityConfig = new global::Google.Cloud.ManagedKafka.V1.CapacityConfig();
        }
        CapacityConfig.MergeFrom(other.CapacityConfig);
      }
      if (other.State != global::Google.Cloud.ManagedKafka.V1.ConnectCluster.Types.State.Unspecified) {
        State = other.State;
      }
      config_.MergeFrom(other.config_);
      switch (other.PlatformConfigCase) {
        case PlatformConfigOneofCase.GcpConfig:
          if (GcpConfig == null) {
            GcpConfig = new global::Google.Cloud.ManagedKafka.V1.ConnectGcpConfig();
          }
          GcpConfig.MergeFrom(other.GcpConfig);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            KafkaCluster = input.ReadString();
            break;
          }
          case 26: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 34: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 42: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 50: {
            if (capacityConfig_ == null) {
              CapacityConfig = new global::Google.Cloud.ManagedKafka.V1.CapacityConfig();
            }
            input.ReadMessage(CapacityConfig);
            break;
          }
          case 58: {
            global::Google.Cloud.ManagedKafka.V1.ConnectGcpConfig subBuilder = new global::Google.Cloud.ManagedKafka.V1.ConnectGcpConfig();
            if (platformConfigCase_ == PlatformConfigOneofCase.GcpConfig) {
              subBuilder.MergeFrom(GcpConfig);
            }
            input.ReadMessage(subBuilder);
            GcpConfig = subBuilder;
            break;
          }
          case 64: {
            State = (global::Google.Cloud.ManagedKafka.V1.ConnectCluster.Types.State) input.ReadEnum();
            break;
          }
          case 74: {
            config_.AddEntriesFrom(input, _map_config_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            KafkaCluster = input.ReadString();
            break;
          }
          case 26: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 34: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 42: {
            labels_.AddEntriesFrom(ref input, _map_labels_codec);
            break;
          }
          case 50: {
            if (capacityConfig_ == null) {
              CapacityConfig = new global::Google.Cloud.ManagedKafka.V1.CapacityConfig();
            }
            input.ReadMessage(CapacityConfig);
            break;
          }
          case 58: {
            global::Google.Cloud.ManagedKafka.V1.ConnectGcpConfig subBuilder = new global::Google.Cloud.ManagedKafka.V1.ConnectGcpConfig();
            if (platformConfigCase_ == PlatformConfigOneofCase.GcpConfig) {
              subBuilder.MergeFrom(GcpConfig);
            }
            input.ReadMessage(subBuilder);
            GcpConfig = subBuilder;
            break;
          }
          case 64: {
            State = (global::Google.Cloud.ManagedKafka.V1.ConnectCluster.Types.State) input.ReadEnum();
            break;
          }
          case 74: {
            config_.AddEntriesFrom(ref input, _map_config_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ConnectCluster message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// The state of the cluster.
      /// </summary>
      public enum State {
        /// <summary>
        /// A state was not specified.
        /// </summary>
        [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The cluster is being created.
        /// </summary>
        [pbr::OriginalName("CREATING")] Creating = 1,
        /// <summary>
        /// The cluster is active.
        /// </summary>
        [pbr::OriginalName("ACTIVE")] Active = 2,
        /// <summary>
        /// The cluster is being deleted.
        /// </summary>
        [pbr::OriginalName("DELETING")] Deleting = 3,
      }

    }
    #endregion

  }

  /// <summary>
  /// The configuration of a Virtual Private Cloud (VPC) network that can access
  /// the Kafka Connect cluster.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ConnectNetworkConfig : pb::IMessage<ConnectNetworkConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConnectNetworkConfig> _parser = new pb::MessageParser<ConnectNetworkConfig>(() => new ConnectNetworkConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ConnectNetworkConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.ManagedKafka.V1.ResourcesReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConnectNetworkConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConnectNetworkConfig(ConnectNetworkConfig other) : this() {
      primarySubnet_ = other.primarySubnet_;
      additionalSubnets_ = other.additionalSubnets_.Clone();
      dnsDomainNames_ = other.dnsDomainNames_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConnectNetworkConfig Clone() {
      return new ConnectNetworkConfig(this);
    }

    /// <summary>Field number for the "primary_subnet" field.</summary>
    public const int PrimarySubnetFieldNumber = 3;
    private string primarySubnet_ = "";
    /// <summary>
    /// Required. VPC subnet to make available to the Kafka Connect cluster.
    /// Structured like:
    /// projects/{project}/regions/{region}/subnetworks/{subnet_id}
    ///
    /// It is used to create a Private Service Connect (PSC) interface for the
    /// Kafka Connect workers. It must be located in the same region as the
    /// Kafka Connect cluster.
    ///
    /// The CIDR range of the subnet must be within the IPv4 address ranges for
    /// private networks, as specified in RFC 1918. The primary subnet CIDR range
    /// must have a minimum size of /22 (1024 addresses).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PrimarySubnet {
      get { return primarySubnet_; }
      set {
        primarySubnet_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "additional_subnets" field.</summary>
    public const int AdditionalSubnetsFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_additionalSubnets_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> additionalSubnets_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Optional. Additional subnets may be specified. They may be in another
    /// region, but must be in the same VPC network. The Connect workers can
    /// communicate with network endpoints in either the primary or additional
    /// subnets.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> AdditionalSubnets {
      get { return additionalSubnets_; }
    }

    /// <summary>Field number for the "dns_domain_names" field.</summary>
    public const int DnsDomainNamesFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_dnsDomainNames_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> dnsDomainNames_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Optional. Additional DNS domain names from the subnet's network to be made
    /// visible to the Connect Cluster. When using MirrorMaker2, it's necessary to
    /// add the bootstrap address's dns domain name of the target cluster to make
    /// it visible to the connector. For example:
    /// my-kafka-cluster.us-central1.managedkafka.my-project.cloud.goog
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> DnsDomainNames {
      get { return dnsDomainNames_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ConnectNetworkConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ConnectNetworkConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PrimarySubnet != other.PrimarySubnet) return false;
      if(!additionalSubnets_.Equals(other.additionalSubnets_)) return false;
      if(!dnsDomainNames_.Equals(other.dnsDomainNames_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PrimarySubnet.Length != 0) hash ^= PrimarySubnet.GetHashCode();
      hash ^= additionalSubnets_.GetHashCode();
      hash ^= dnsDomainNames_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      dnsDomainNames_.WriteTo(output, _repeated_dnsDomainNames_codec);
      if (PrimarySubnet.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PrimarySubnet);
      }
      additionalSubnets_.WriteTo(output, _repeated_additionalSubnets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      dnsDomainNames_.WriteTo(ref output, _repeated_dnsDomainNames_codec);
      if (PrimarySubnet.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PrimarySubnet);
      }
      additionalSubnets_.WriteTo(ref output, _repeated_additionalSubnets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PrimarySubnet.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PrimarySubnet);
      }
      size += additionalSubnets_.CalculateSize(_repeated_additionalSubnets_codec);
      size += dnsDomainNames_.CalculateSize(_repeated_dnsDomainNames_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ConnectNetworkConfig other) {
      if (other == null) {
        return;
      }
      if (other.PrimarySubnet.Length != 0) {
        PrimarySubnet = other.PrimarySubnet;
      }
      additionalSubnets_.Add(other.additionalSubnets_);
      dnsDomainNames_.Add(other.dnsDomainNames_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            dnsDomainNames_.AddEntriesFrom(input, _repeated_dnsDomainNames_codec);
            break;
          }
          case 26: {
            PrimarySubnet = input.ReadString();
            break;
          }
          case 34: {
            additionalSubnets_.AddEntriesFrom(input, _repeated_additionalSubnets_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            dnsDomainNames_.AddEntriesFrom(ref input, _repeated_dnsDomainNames_codec);
            break;
          }
          case 26: {
            PrimarySubnet = input.ReadString();
            break;
          }
          case 34: {
            additionalSubnets_.AddEntriesFrom(ref input, _repeated_additionalSubnets_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The configuration of access to the Kafka Connect cluster.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ConnectAccessConfig : pb::IMessage<ConnectAccessConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConnectAccessConfig> _parser = new pb::MessageParser<ConnectAccessConfig>(() => new ConnectAccessConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ConnectAccessConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.ManagedKafka.V1.ResourcesReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConnectAccessConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConnectAccessConfig(ConnectAccessConfig other) : this() {
      networkConfigs_ = other.networkConfigs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConnectAccessConfig Clone() {
      return new ConnectAccessConfig(this);
    }

    /// <summary>Field number for the "network_configs" field.</summary>
    public const int NetworkConfigsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.ManagedKafka.V1.ConnectNetworkConfig> _repeated_networkConfigs_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.ManagedKafka.V1.ConnectNetworkConfig.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.ManagedKafka.V1.ConnectNetworkConfig> networkConfigs_ = new pbc::RepeatedField<global::Google.Cloud.ManagedKafka.V1.ConnectNetworkConfig>();
    /// <summary>
    /// Required.
    /// Virtual Private Cloud (VPC) networks that must be granted direct access to
    /// the Kafka Connect cluster. Minimum of 1 network is required. Maximum 10
    /// networks can be specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.ManagedKafka.V1.ConnectNetworkConfig> NetworkConfigs {
      get { return networkConfigs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ConnectAccessConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ConnectAccessConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!networkConfigs_.Equals(other.networkConfigs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= networkConfigs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      networkConfigs_.WriteTo(output, _repeated_networkConfigs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      networkConfigs_.WriteTo(ref output, _repeated_networkConfigs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += networkConfigs_.CalculateSize(_repeated_networkConfigs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ConnectAccessConfig other) {
      if (other == null) {
        return;
      }
      networkConfigs_.Add(other.networkConfigs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            networkConfigs_.AddEntriesFrom(input, _repeated_networkConfigs_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            networkConfigs_.AddEntriesFrom(ref input, _repeated_networkConfigs_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Configuration properties for a Kafka Connect cluster deployed to Google Cloud
  /// Platform.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ConnectGcpConfig : pb::IMessage<ConnectGcpConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConnectGcpConfig> _parser = new pb::MessageParser<ConnectGcpConfig>(() => new ConnectGcpConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ConnectGcpConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.ManagedKafka.V1.ResourcesReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConnectGcpConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConnectGcpConfig(ConnectGcpConfig other) : this() {
      accessConfig_ = other.accessConfig_ != null ? other.accessConfig_.Clone() : null;
      secretPaths_ = other.secretPaths_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConnectGcpConfig Clone() {
      return new ConnectGcpConfig(this);
    }

    /// <summary>Field number for the "access_config" field.</summary>
    public const int AccessConfigFieldNumber = 1;
    private global::Google.Cloud.ManagedKafka.V1.ConnectAccessConfig accessConfig_;
    /// <summary>
    /// Required. Access configuration for the Kafka Connect cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.ManagedKafka.V1.ConnectAccessConfig AccessConfig {
      get { return accessConfig_; }
      set {
        accessConfig_ = value;
      }
    }

    /// <summary>Field number for the "secret_paths" field.</summary>
    public const int SecretPathsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_secretPaths_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> secretPaths_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Optional. Secrets to load into workers. Exact SecretVersions from Secret
    /// Manager must be provided -- aliases are not supported. Up to 32 secrets may
    /// be loaded into one cluster. Format:
    /// projects/&lt;project-id>/secrets/&lt;secret-name>/versions/&lt;version-id>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> SecretPaths {
      get { return secretPaths_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ConnectGcpConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ConnectGcpConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AccessConfig, other.AccessConfig)) return false;
      if(!secretPaths_.Equals(other.secretPaths_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (accessConfig_ != null) hash ^= AccessConfig.GetHashCode();
      hash ^= secretPaths_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (accessConfig_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AccessConfig);
      }
      secretPaths_.WriteTo(output, _repeated_secretPaths_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (accessConfig_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AccessConfig);
      }
      secretPaths_.WriteTo(ref output, _repeated_secretPaths_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (accessConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccessConfig);
      }
      size += secretPaths_.CalculateSize(_repeated_secretPaths_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ConnectGcpConfig other) {
      if (other == null) {
        return;
      }
      if (other.accessConfig_ != null) {
        if (accessConfig_ == null) {
          AccessConfig = new global::Google.Cloud.ManagedKafka.V1.ConnectAccessConfig();
        }
        AccessConfig.MergeFrom(other.AccessConfig);
      }
      secretPaths_.Add(other.secretPaths_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (accessConfig_ == null) {
              AccessConfig = new global::Google.Cloud.ManagedKafka.V1.ConnectAccessConfig();
            }
            input.ReadMessage(AccessConfig);
            break;
          }
          case 18: {
            secretPaths_.AddEntriesFrom(input, _repeated_secretPaths_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (accessConfig_ == null) {
              AccessConfig = new global::Google.Cloud.ManagedKafka.V1.ConnectAccessConfig();
            }
            input.ReadMessage(AccessConfig);
            break;
          }
          case 18: {
            secretPaths_.AddEntriesFrom(ref input, _repeated_secretPaths_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A Kafka Connect connector in a given ConnectCluster.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Connector : pb::IMessage<Connector>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Connector> _parser = new pb::MessageParser<Connector>(() => new Connector());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Connector> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.ManagedKafka.V1.ResourcesReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Connector() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Connector(Connector other) : this() {
      name_ = other.name_;
      configs_ = other.configs_.Clone();
      state_ = other.state_;
      switch (other.RestartPolicyCase) {
        case RestartPolicyOneofCase.TaskRestartPolicy:
          TaskRestartPolicy = other.TaskRestartPolicy.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Connector Clone() {
      return new Connector(this);
    }

    /// <summary>Field number for the "task_restart_policy" field.</summary>
    public const int TaskRestartPolicyFieldNumber = 4;
    /// <summary>
    /// Optional. Restarts the individual tasks of a Connector.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.ManagedKafka.V1.TaskRetryPolicy TaskRestartPolicy {
      get { return restartPolicyCase_ == RestartPolicyOneofCase.TaskRestartPolicy ? (global::Google.Cloud.ManagedKafka.V1.TaskRetryPolicy) restartPolicy_ : null; }
      set {
        restartPolicy_ = value;
        restartPolicyCase_ = value == null ? RestartPolicyOneofCase.None : RestartPolicyOneofCase.TaskRestartPolicy;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Identifier. The name of the connector.
    /// Structured like:
    /// projects/{project}/locations/{location}/connectClusters/{connect_cluster}/connectors/{connector}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "configs" field.</summary>
    public const int ConfigsFieldNumber = 2;
    private static readonly pbc::MapField<string, string>.Codec _map_configs_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 18);
    private readonly pbc::MapField<string, string> configs_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Optional. Connector config as keys/values.
    /// The keys of the map are connector property names, for example:
    /// `connector.class`, `tasks.max`, `key.converter`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Configs {
      get { return configs_; }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 3;
    private global::Google.Cloud.ManagedKafka.V1.Connector.Types.State state_ = global::Google.Cloud.ManagedKafka.V1.Connector.Types.State.Unspecified;
    /// <summary>
    /// Output only. The current state of the connector.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.ManagedKafka.V1.Connector.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    private object restartPolicy_;
    /// <summary>Enum of possible cases for the "restart_policy" oneof.</summary>
    public enum RestartPolicyOneofCase {
      None = 0,
      TaskRestartPolicy = 4,
    }
    private RestartPolicyOneofCase restartPolicyCase_ = RestartPolicyOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RestartPolicyOneofCase RestartPolicyCase {
      get { return restartPolicyCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRestartPolicy() {
      restartPolicyCase_ = RestartPolicyOneofCase.None;
      restartPolicy_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Connector);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Connector other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TaskRestartPolicy, other.TaskRestartPolicy)) return false;
      if (Name != other.Name) return false;
      if (!Configs.Equals(other.Configs)) return false;
      if (State != other.State) return false;
      if (RestartPolicyCase != other.RestartPolicyCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (restartPolicyCase_ == RestartPolicyOneofCase.TaskRestartPolicy) hash ^= TaskRestartPolicy.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= Configs.GetHashCode();
      if (State != global::Google.Cloud.ManagedKafka.V1.Connector.Types.State.Unspecified) hash ^= State.GetHashCode();
      hash ^= (int) restartPolicyCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      configs_.WriteTo(output, _map_configs_codec);
      if (State != global::Google.Cloud.ManagedKafka.V1.Connector.Types.State.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) State);
      }
      if (restartPolicyCase_ == RestartPolicyOneofCase.TaskRestartPolicy) {
        output.WriteRawTag(34);
        output.WriteMessage(TaskRestartPolicy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      configs_.WriteTo(ref output, _map_configs_codec);
      if (State != global::Google.Cloud.ManagedKafka.V1.Connector.Types.State.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) State);
      }
      if (restartPolicyCase_ == RestartPolicyOneofCase.TaskRestartPolicy) {
        output.WriteRawTag(34);
        output.WriteMessage(TaskRestartPolicy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (restartPolicyCase_ == RestartPolicyOneofCase.TaskRestartPolicy) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TaskRestartPolicy);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += configs_.CalculateSize(_map_configs_codec);
      if (State != global::Google.Cloud.ManagedKafka.V1.Connector.Types.State.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Connector other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      configs_.MergeFrom(other.configs_);
      if (other.State != global::Google.Cloud.ManagedKafka.V1.Connector.Types.State.Unspecified) {
        State = other.State;
      }
      switch (other.RestartPolicyCase) {
        case RestartPolicyOneofCase.TaskRestartPolicy:
          if (TaskRestartPolicy == null) {
            TaskRestartPolicy = new global::Google.Cloud.ManagedKafka.V1.TaskRetryPolicy();
          }
          TaskRestartPolicy.MergeFrom(other.TaskRestartPolicy);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            configs_.AddEntriesFrom(input, _map_configs_codec);
            break;
          }
          case 24: {
            State = (global::Google.Cloud.ManagedKafka.V1.Connector.Types.State) input.ReadEnum();
            break;
          }
          case 34: {
            global::Google.Cloud.ManagedKafka.V1.TaskRetryPolicy subBuilder = new global::Google.Cloud.ManagedKafka.V1.TaskRetryPolicy();
            if (restartPolicyCase_ == RestartPolicyOneofCase.TaskRestartPolicy) {
              subBuilder.MergeFrom(TaskRestartPolicy);
            }
            input.ReadMessage(subBuilder);
            TaskRestartPolicy = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            configs_.AddEntriesFrom(ref input, _map_configs_codec);
            break;
          }
          case 24: {
            State = (global::Google.Cloud.ManagedKafka.V1.Connector.Types.State) input.ReadEnum();
            break;
          }
          case 34: {
            global::Google.Cloud.ManagedKafka.V1.TaskRetryPolicy subBuilder = new global::Google.Cloud.ManagedKafka.V1.TaskRetryPolicy();
            if (restartPolicyCase_ == RestartPolicyOneofCase.TaskRestartPolicy) {
              subBuilder.MergeFrom(TaskRestartPolicy);
            }
            input.ReadMessage(subBuilder);
            TaskRestartPolicy = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Connector message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// The state of the connector.
      /// </summary>
      public enum State {
        /// <summary>
        /// A state was not specified.
        /// </summary>
        [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The connector is not assigned to any tasks, usually transient.
        /// </summary>
        [pbr::OriginalName("UNASSIGNED")] Unassigned = 1,
        /// <summary>
        /// The connector is running.
        /// </summary>
        [pbr::OriginalName("RUNNING")] Running = 2,
        /// <summary>
        /// The connector has been paused.
        /// </summary>
        [pbr::OriginalName("PAUSED")] Paused = 3,
        /// <summary>
        /// The connector has failed. See logs for why.
        /// </summary>
        [pbr::OriginalName("FAILED")] Failed = 4,
        /// <summary>
        /// The connector is restarting.
        /// </summary>
        [pbr::OriginalName("RESTARTING")] Restarting = 5,
        /// <summary>
        /// The connector has been stopped.
        /// </summary>
        [pbr::OriginalName("STOPPED")] Stopped = 6,
      }

    }
    #endregion

  }

  /// <summary>
  /// Task Retry Policy is implemented on a best-effort
  /// basis.
  /// Retry delay will be exponential based on provided minimum and maximum
  /// backoffs. https://en.wikipedia.org/wiki/Exponential_backoff.
  /// Note that the delay between consecutive task restarts may not always
  /// precisely match the configured settings. This can happen when the
  /// ConnectCluster is in rebalancing state or if the ConnectCluster is
  /// unresponsive etc. The default values for minimum and maximum backoffs are
  /// 60 seconds and 30 minutes respectively.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TaskRetryPolicy : pb::IMessage<TaskRetryPolicy>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TaskRetryPolicy> _parser = new pb::MessageParser<TaskRetryPolicy>(() => new TaskRetryPolicy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TaskRetryPolicy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.ManagedKafka.V1.ResourcesReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskRetryPolicy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskRetryPolicy(TaskRetryPolicy other) : this() {
      minimumBackoff_ = other.minimumBackoff_ != null ? other.minimumBackoff_.Clone() : null;
      maximumBackoff_ = other.maximumBackoff_ != null ? other.maximumBackoff_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskRetryPolicy Clone() {
      return new TaskRetryPolicy(this);
    }

    /// <summary>Field number for the "minimum_backoff" field.</summary>
    public const int MinimumBackoffFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Duration minimumBackoff_;
    /// <summary>
    /// Optional. The minimum amount of time to wait before retrying a failed task.
    /// This sets a lower bound for the backoff delay.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration MinimumBackoff {
      get { return minimumBackoff_; }
      set {
        minimumBackoff_ = value;
      }
    }

    /// <summary>Field number for the "maximum_backoff" field.</summary>
    public const int MaximumBackoffFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Duration maximumBackoff_;
    /// <summary>
    /// Optional. The maximum amount of time to wait before retrying a failed task.
    /// This sets an upper bound for the backoff delay.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration MaximumBackoff {
      get { return maximumBackoff_; }
      set {
        maximumBackoff_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TaskRetryPolicy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TaskRetryPolicy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(MinimumBackoff, other.MinimumBackoff)) return false;
      if (!object.Equals(MaximumBackoff, other.MaximumBackoff)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (minimumBackoff_ != null) hash ^= MinimumBackoff.GetHashCode();
      if (maximumBackoff_ != null) hash ^= MaximumBackoff.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (minimumBackoff_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MinimumBackoff);
      }
      if (maximumBackoff_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MaximumBackoff);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (minimumBackoff_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MinimumBackoff);
      }
      if (maximumBackoff_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MaximumBackoff);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (minimumBackoff_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MinimumBackoff);
      }
      if (maximumBackoff_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MaximumBackoff);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TaskRetryPolicy other) {
      if (other == null) {
        return;
      }
      if (other.minimumBackoff_ != null) {
        if (minimumBackoff_ == null) {
          MinimumBackoff = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        MinimumBackoff.MergeFrom(other.MinimumBackoff);
      }
      if (other.maximumBackoff_ != null) {
        if (maximumBackoff_ == null) {
          MaximumBackoff = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        MaximumBackoff.MergeFrom(other.MaximumBackoff);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (minimumBackoff_ == null) {
              MinimumBackoff = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(MinimumBackoff);
            break;
          }
          case 18: {
            if (maximumBackoff_ == null) {
              MaximumBackoff = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(MaximumBackoff);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (minimumBackoff_ == null) {
              MinimumBackoff = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(MinimumBackoff);
            break;
          }
          case 18: {
            if (maximumBackoff_ == null) {
              MaximumBackoff = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(MaximumBackoff);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
