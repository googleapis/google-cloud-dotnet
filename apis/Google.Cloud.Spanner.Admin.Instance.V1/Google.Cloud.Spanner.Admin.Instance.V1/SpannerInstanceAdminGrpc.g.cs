// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/spanner/admin/instance/v1/spanner_instance_admin.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.Spanner.Admin.Instance.V1 {
  /// <summary>
  /// Cloud Spanner Instance Admin API
  ///
  /// The Cloud Spanner Instance Admin API can be used to create, delete,
  /// modify and list instances. Instances are dedicated Cloud Spanner serving
  /// and storage resources to be used by Cloud Spanner databases.
  ///
  /// Each instance has a "configuration", which dictates where the
  /// serving resources for the Cloud Spanner instance are located (e.g.,
  /// US-central, Europe). Configurations are created by Google based on
  /// resource availability.
  ///
  /// Cloud Spanner billing is based on the instances that exist and their
  /// sizes. After an instance exists, there are no additional
  /// per-database or per-operation charges for use of the instance
  /// (though there may be additional network bandwidth charges).
  /// Instances offer isolation: problems with databases in one instance
  /// will not affect other instances. However, within an instance
  /// databases can affect each other. For example, if one database in an
  /// instance receives a lot of requests and consumes most of the
  /// instance resources, fewer resources are available for other
  /// databases in that instance, and their performance may suffer.
  /// </summary>
  public static partial class InstanceAdmin
  {
    static readonly string __ServiceName = "google.spanner.admin.instance.v1.InstanceAdmin";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstanceConfigsRequest> __Marshaller_google_spanner_admin_instance_v1_ListInstanceConfigsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstanceConfigsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstanceConfigsResponse> __Marshaller_google_spanner_admin_instance_v1_ListInstanceConfigsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstanceConfigsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Spanner.Admin.Instance.V1.GetInstanceConfigRequest> __Marshaller_google_spanner_admin_instance_v1_GetInstanceConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Spanner.Admin.Instance.V1.GetInstanceConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Spanner.Admin.Instance.V1.InstanceConfig> __Marshaller_google_spanner_admin_instance_v1_InstanceConfig = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Spanner.Admin.Instance.V1.InstanceConfig.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Spanner.Admin.Instance.V1.CreateInstanceConfigRequest> __Marshaller_google_spanner_admin_instance_v1_CreateInstanceConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Spanner.Admin.Instance.V1.CreateInstanceConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.LongRunning.Operation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Spanner.Admin.Instance.V1.UpdateInstanceConfigRequest> __Marshaller_google_spanner_admin_instance_v1_UpdateInstanceConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Spanner.Admin.Instance.V1.UpdateInstanceConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Spanner.Admin.Instance.V1.DeleteInstanceConfigRequest> __Marshaller_google_spanner_admin_instance_v1_DeleteInstanceConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Spanner.Admin.Instance.V1.DeleteInstanceConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstanceConfigOperationsRequest> __Marshaller_google_spanner_admin_instance_v1_ListInstanceConfigOperationsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstanceConfigOperationsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstanceConfigOperationsResponse> __Marshaller_google_spanner_admin_instance_v1_ListInstanceConfigOperationsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstanceConfigOperationsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancesRequest> __Marshaller_google_spanner_admin_instance_v1_ListInstancesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancesResponse> __Marshaller_google_spanner_admin_instance_v1_ListInstancesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancePartitionsRequest> __Marshaller_google_spanner_admin_instance_v1_ListInstancePartitionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancePartitionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancePartitionsResponse> __Marshaller_google_spanner_admin_instance_v1_ListInstancePartitionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancePartitionsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Spanner.Admin.Instance.V1.GetInstanceRequest> __Marshaller_google_spanner_admin_instance_v1_GetInstanceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Spanner.Admin.Instance.V1.GetInstanceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Spanner.Admin.Instance.V1.Instance> __Marshaller_google_spanner_admin_instance_v1_Instance = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Spanner.Admin.Instance.V1.Instance.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Spanner.Admin.Instance.V1.CreateInstanceRequest> __Marshaller_google_spanner_admin_instance_v1_CreateInstanceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Spanner.Admin.Instance.V1.CreateInstanceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Spanner.Admin.Instance.V1.UpdateInstanceRequest> __Marshaller_google_spanner_admin_instance_v1_UpdateInstanceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Spanner.Admin.Instance.V1.UpdateInstanceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Spanner.Admin.Instance.V1.DeleteInstanceRequest> __Marshaller_google_spanner_admin_instance_v1_DeleteInstanceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Spanner.Admin.Instance.V1.DeleteInstanceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iam.V1.SetIamPolicyRequest> __Marshaller_google_iam_v1_SetIamPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iam.V1.SetIamPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iam.V1.Policy> __Marshaller_google_iam_v1_Policy = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iam.V1.Policy.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iam.V1.GetIamPolicyRequest> __Marshaller_google_iam_v1_GetIamPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iam.V1.GetIamPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iam.V1.TestIamPermissionsRequest> __Marshaller_google_iam_v1_TestIamPermissionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iam.V1.TestIamPermissionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iam.V1.TestIamPermissionsResponse> __Marshaller_google_iam_v1_TestIamPermissionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iam.V1.TestIamPermissionsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Spanner.Admin.Instance.V1.GetInstancePartitionRequest> __Marshaller_google_spanner_admin_instance_v1_GetInstancePartitionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Spanner.Admin.Instance.V1.GetInstancePartitionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Spanner.Admin.Instance.V1.InstancePartition> __Marshaller_google_spanner_admin_instance_v1_InstancePartition = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Spanner.Admin.Instance.V1.InstancePartition.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Spanner.Admin.Instance.V1.CreateInstancePartitionRequest> __Marshaller_google_spanner_admin_instance_v1_CreateInstancePartitionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Spanner.Admin.Instance.V1.CreateInstancePartitionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Spanner.Admin.Instance.V1.DeleteInstancePartitionRequest> __Marshaller_google_spanner_admin_instance_v1_DeleteInstancePartitionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Spanner.Admin.Instance.V1.DeleteInstancePartitionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Spanner.Admin.Instance.V1.UpdateInstancePartitionRequest> __Marshaller_google_spanner_admin_instance_v1_UpdateInstancePartitionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Spanner.Admin.Instance.V1.UpdateInstancePartitionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancePartitionOperationsRequest> __Marshaller_google_spanner_admin_instance_v1_ListInstancePartitionOperationsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancePartitionOperationsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancePartitionOperationsResponse> __Marshaller_google_spanner_admin_instance_v1_ListInstancePartitionOperationsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancePartitionOperationsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Spanner.Admin.Instance.V1.MoveInstanceRequest> __Marshaller_google_spanner_admin_instance_v1_MoveInstanceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Spanner.Admin.Instance.V1.MoveInstanceRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstanceConfigsRequest, global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstanceConfigsResponse> __Method_ListInstanceConfigs = new grpc::Method<global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstanceConfigsRequest, global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstanceConfigsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListInstanceConfigs",
        __Marshaller_google_spanner_admin_instance_v1_ListInstanceConfigsRequest,
        __Marshaller_google_spanner_admin_instance_v1_ListInstanceConfigsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Spanner.Admin.Instance.V1.GetInstanceConfigRequest, global::Google.Cloud.Spanner.Admin.Instance.V1.InstanceConfig> __Method_GetInstanceConfig = new grpc::Method<global::Google.Cloud.Spanner.Admin.Instance.V1.GetInstanceConfigRequest, global::Google.Cloud.Spanner.Admin.Instance.V1.InstanceConfig>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetInstanceConfig",
        __Marshaller_google_spanner_admin_instance_v1_GetInstanceConfigRequest,
        __Marshaller_google_spanner_admin_instance_v1_InstanceConfig);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Spanner.Admin.Instance.V1.CreateInstanceConfigRequest, global::Google.LongRunning.Operation> __Method_CreateInstanceConfig = new grpc::Method<global::Google.Cloud.Spanner.Admin.Instance.V1.CreateInstanceConfigRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateInstanceConfig",
        __Marshaller_google_spanner_admin_instance_v1_CreateInstanceConfigRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Spanner.Admin.Instance.V1.UpdateInstanceConfigRequest, global::Google.LongRunning.Operation> __Method_UpdateInstanceConfig = new grpc::Method<global::Google.Cloud.Spanner.Admin.Instance.V1.UpdateInstanceConfigRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateInstanceConfig",
        __Marshaller_google_spanner_admin_instance_v1_UpdateInstanceConfigRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Spanner.Admin.Instance.V1.DeleteInstanceConfigRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteInstanceConfig = new grpc::Method<global::Google.Cloud.Spanner.Admin.Instance.V1.DeleteInstanceConfigRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteInstanceConfig",
        __Marshaller_google_spanner_admin_instance_v1_DeleteInstanceConfigRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstanceConfigOperationsRequest, global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstanceConfigOperationsResponse> __Method_ListInstanceConfigOperations = new grpc::Method<global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstanceConfigOperationsRequest, global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstanceConfigOperationsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListInstanceConfigOperations",
        __Marshaller_google_spanner_admin_instance_v1_ListInstanceConfigOperationsRequest,
        __Marshaller_google_spanner_admin_instance_v1_ListInstanceConfigOperationsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancesRequest, global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancesResponse> __Method_ListInstances = new grpc::Method<global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancesRequest, global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListInstances",
        __Marshaller_google_spanner_admin_instance_v1_ListInstancesRequest,
        __Marshaller_google_spanner_admin_instance_v1_ListInstancesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancePartitionsRequest, global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancePartitionsResponse> __Method_ListInstancePartitions = new grpc::Method<global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancePartitionsRequest, global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancePartitionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListInstancePartitions",
        __Marshaller_google_spanner_admin_instance_v1_ListInstancePartitionsRequest,
        __Marshaller_google_spanner_admin_instance_v1_ListInstancePartitionsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Spanner.Admin.Instance.V1.GetInstanceRequest, global::Google.Cloud.Spanner.Admin.Instance.V1.Instance> __Method_GetInstance = new grpc::Method<global::Google.Cloud.Spanner.Admin.Instance.V1.GetInstanceRequest, global::Google.Cloud.Spanner.Admin.Instance.V1.Instance>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetInstance",
        __Marshaller_google_spanner_admin_instance_v1_GetInstanceRequest,
        __Marshaller_google_spanner_admin_instance_v1_Instance);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Spanner.Admin.Instance.V1.CreateInstanceRequest, global::Google.LongRunning.Operation> __Method_CreateInstance = new grpc::Method<global::Google.Cloud.Spanner.Admin.Instance.V1.CreateInstanceRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateInstance",
        __Marshaller_google_spanner_admin_instance_v1_CreateInstanceRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Spanner.Admin.Instance.V1.UpdateInstanceRequest, global::Google.LongRunning.Operation> __Method_UpdateInstance = new grpc::Method<global::Google.Cloud.Spanner.Admin.Instance.V1.UpdateInstanceRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateInstance",
        __Marshaller_google_spanner_admin_instance_v1_UpdateInstanceRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Spanner.Admin.Instance.V1.DeleteInstanceRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteInstance = new grpc::Method<global::Google.Cloud.Spanner.Admin.Instance.V1.DeleteInstanceRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteInstance",
        __Marshaller_google_spanner_admin_instance_v1_DeleteInstanceRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iam.V1.SetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy> __Method_SetIamPolicy = new grpc::Method<global::Google.Cloud.Iam.V1.SetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetIamPolicy",
        __Marshaller_google_iam_v1_SetIamPolicyRequest,
        __Marshaller_google_iam_v1_Policy);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iam.V1.GetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy> __Method_GetIamPolicy = new grpc::Method<global::Google.Cloud.Iam.V1.GetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetIamPolicy",
        __Marshaller_google_iam_v1_GetIamPolicyRequest,
        __Marshaller_google_iam_v1_Policy);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iam.V1.TestIamPermissionsRequest, global::Google.Cloud.Iam.V1.TestIamPermissionsResponse> __Method_TestIamPermissions = new grpc::Method<global::Google.Cloud.Iam.V1.TestIamPermissionsRequest, global::Google.Cloud.Iam.V1.TestIamPermissionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TestIamPermissions",
        __Marshaller_google_iam_v1_TestIamPermissionsRequest,
        __Marshaller_google_iam_v1_TestIamPermissionsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Spanner.Admin.Instance.V1.GetInstancePartitionRequest, global::Google.Cloud.Spanner.Admin.Instance.V1.InstancePartition> __Method_GetInstancePartition = new grpc::Method<global::Google.Cloud.Spanner.Admin.Instance.V1.GetInstancePartitionRequest, global::Google.Cloud.Spanner.Admin.Instance.V1.InstancePartition>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetInstancePartition",
        __Marshaller_google_spanner_admin_instance_v1_GetInstancePartitionRequest,
        __Marshaller_google_spanner_admin_instance_v1_InstancePartition);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Spanner.Admin.Instance.V1.CreateInstancePartitionRequest, global::Google.LongRunning.Operation> __Method_CreateInstancePartition = new grpc::Method<global::Google.Cloud.Spanner.Admin.Instance.V1.CreateInstancePartitionRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateInstancePartition",
        __Marshaller_google_spanner_admin_instance_v1_CreateInstancePartitionRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Spanner.Admin.Instance.V1.DeleteInstancePartitionRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteInstancePartition = new grpc::Method<global::Google.Cloud.Spanner.Admin.Instance.V1.DeleteInstancePartitionRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteInstancePartition",
        __Marshaller_google_spanner_admin_instance_v1_DeleteInstancePartitionRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Spanner.Admin.Instance.V1.UpdateInstancePartitionRequest, global::Google.LongRunning.Operation> __Method_UpdateInstancePartition = new grpc::Method<global::Google.Cloud.Spanner.Admin.Instance.V1.UpdateInstancePartitionRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateInstancePartition",
        __Marshaller_google_spanner_admin_instance_v1_UpdateInstancePartitionRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancePartitionOperationsRequest, global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancePartitionOperationsResponse> __Method_ListInstancePartitionOperations = new grpc::Method<global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancePartitionOperationsRequest, global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancePartitionOperationsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListInstancePartitionOperations",
        __Marshaller_google_spanner_admin_instance_v1_ListInstancePartitionOperationsRequest,
        __Marshaller_google_spanner_admin_instance_v1_ListInstancePartitionOperationsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Spanner.Admin.Instance.V1.MoveInstanceRequest, global::Google.LongRunning.Operation> __Method_MoveInstance = new grpc::Method<global::Google.Cloud.Spanner.Admin.Instance.V1.MoveInstanceRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "MoveInstance",
        __Marshaller_google_spanner_admin_instance_v1_MoveInstanceRequest,
        __Marshaller_google_longrunning_Operation);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.Spanner.Admin.Instance.V1.SpannerInstanceAdminReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of InstanceAdmin</summary>
    [grpc::BindServiceMethod(typeof(InstanceAdmin), "BindService")]
    public abstract partial class InstanceAdminBase
    {
      /// <summary>
      /// Lists the supported instance configurations for a given project.
      ///
      /// Returns both Google-managed configurations and user-managed
      /// configurations.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstanceConfigsResponse> ListInstanceConfigs(global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstanceConfigsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets information about a particular instance configuration.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Spanner.Admin.Instance.V1.InstanceConfig> GetInstanceConfig(global::Google.Cloud.Spanner.Admin.Instance.V1.GetInstanceConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates an instance configuration and begins preparing it to be used. The
      /// returned long-running operation
      /// can be used to track the progress of preparing the new
      /// instance configuration. The instance configuration name is assigned by the
      /// caller. If the named instance configuration already exists,
      /// `CreateInstanceConfig` returns `ALREADY_EXISTS`.
      ///
      /// Immediately after the request returns:
      ///
      ///   * The instance configuration is readable via the API, with all requested
      ///     attributes. The instance configuration's
      ///     [reconciling][google.spanner.admin.instance.v1.InstanceConfig.reconciling]
      ///     field is set to true. Its state is `CREATING`.
      ///
      /// While the operation is pending:
      ///
      ///   * Cancelling the operation renders the instance configuration immediately
      ///     unreadable via the API.
      ///   * Except for deleting the creating resource, all other attempts to modify
      ///     the instance configuration are rejected.
      ///
      /// Upon completion of the returned operation:
      ///
      ///   * Instances can be created using the instance configuration.
      ///   * The instance configuration's
      ///   [reconciling][google.spanner.admin.instance.v1.InstanceConfig.reconciling]
      ///   field becomes false. Its state becomes `READY`.
      ///
      /// The returned long-running operation will
      /// have a name of the format
      /// `&lt;instance_config_name>/operations/&lt;operation_id>` and can be used to track
      /// creation of the instance configuration. The
      /// metadata field type is
      /// [CreateInstanceConfigMetadata][google.spanner.admin.instance.v1.CreateInstanceConfigMetadata].
      /// The response field type is
      /// [InstanceConfig][google.spanner.admin.instance.v1.InstanceConfig], if
      /// successful.
      ///
      /// Authorization requires `spanner.instanceConfigs.create` permission on
      /// the resource
      /// [parent][google.spanner.admin.instance.v1.CreateInstanceConfigRequest.parent].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateInstanceConfig(global::Google.Cloud.Spanner.Admin.Instance.V1.CreateInstanceConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates an instance configuration. The returned
      /// long-running operation can be used to track
      /// the progress of updating the instance. If the named instance configuration
      /// does not exist, returns `NOT_FOUND`.
      ///
      /// Only user-managed configurations can be updated.
      ///
      /// Immediately after the request returns:
      ///
      ///   * The instance configuration's
      ///     [reconciling][google.spanner.admin.instance.v1.InstanceConfig.reconciling]
      ///     field is set to true.
      ///
      /// While the operation is pending:
      ///
      ///   * Cancelling the operation sets its metadata's
      ///     [cancel_time][google.spanner.admin.instance.v1.UpdateInstanceConfigMetadata.cancel_time].
      ///     The operation is guaranteed to succeed at undoing all changes, after
      ///     which point it terminates with a `CANCELLED` status.
      ///   * All other attempts to modify the instance configuration are rejected.
      ///   * Reading the instance configuration via the API continues to give the
      ///     pre-request values.
      ///
      /// Upon completion of the returned operation:
      ///
      ///   * Creating instances using the instance configuration uses the new
      ///     values.
      ///   * The new values of the instance configuration are readable via the API.
      ///   * The instance configuration's
      ///   [reconciling][google.spanner.admin.instance.v1.InstanceConfig.reconciling]
      ///   field becomes false.
      ///
      /// The returned long-running operation will
      /// have a name of the format
      /// `&lt;instance_config_name>/operations/&lt;operation_id>` and can be used to track
      /// the instance configuration modification.  The
      /// metadata field type is
      /// [UpdateInstanceConfigMetadata][google.spanner.admin.instance.v1.UpdateInstanceConfigMetadata].
      /// The response field type is
      /// [InstanceConfig][google.spanner.admin.instance.v1.InstanceConfig], if
      /// successful.
      ///
      /// Authorization requires `spanner.instanceConfigs.update` permission on
      /// the resource [name][google.spanner.admin.instance.v1.InstanceConfig.name].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> UpdateInstanceConfig(global::Google.Cloud.Spanner.Admin.Instance.V1.UpdateInstanceConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes the instance configuration. Deletion is only allowed when no
      /// instances are using the configuration. If any instances are using
      /// the configuration, returns `FAILED_PRECONDITION`.
      ///
      /// Only user-managed configurations can be deleted.
      ///
      /// Authorization requires `spanner.instanceConfigs.delete` permission on
      /// the resource [name][google.spanner.admin.instance.v1.InstanceConfig.name].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteInstanceConfig(global::Google.Cloud.Spanner.Admin.Instance.V1.DeleteInstanceConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists the user-managed instance configuration long-running
      /// operations in the given project. An instance
      /// configuration operation has a name of the form
      /// `projects/&lt;project>/instanceConfigs/&lt;instance_config>/operations/&lt;operation>`.
      /// The long-running operation
      /// metadata field type
      /// `metadata.type_url` describes the type of the metadata. Operations returned
      /// include those that have completed/failed/canceled within the last 7 days,
      /// and pending operations. Operations returned are ordered by
      /// `operation.metadata.value.start_time` in descending order starting
      /// from the most recently started operation.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstanceConfigOperationsResponse> ListInstanceConfigOperations(global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstanceConfigOperationsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists all instances in the given project.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancesResponse> ListInstances(global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists all instance partitions for the given instance.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancePartitionsResponse> ListInstancePartitions(global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancePartitionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets information about a particular instance.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Spanner.Admin.Instance.V1.Instance> GetInstance(global::Google.Cloud.Spanner.Admin.Instance.V1.GetInstanceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates an instance and begins preparing it to begin serving. The
      /// returned long-running operation
      /// can be used to track the progress of preparing the new
      /// instance. The instance name is assigned by the caller. If the
      /// named instance already exists, `CreateInstance` returns
      /// `ALREADY_EXISTS`.
      ///
      /// Immediately upon completion of this request:
      ///
      ///   * The instance is readable via the API, with all requested attributes
      ///     but no allocated resources. Its state is `CREATING`.
      ///
      /// Until completion of the returned operation:
      ///
      ///   * Cancelling the operation renders the instance immediately unreadable
      ///     via the API.
      ///   * The instance can be deleted.
      ///   * All other attempts to modify the instance are rejected.
      ///
      /// Upon completion of the returned operation:
      ///
      ///   * Billing for all successfully-allocated resources begins (some types
      ///     may have lower than the requested levels).
      ///   * Databases can be created in the instance.
      ///   * The instance's allocated resource levels are readable via the API.
      ///   * The instance's state becomes `READY`.
      ///
      /// The returned long-running operation will
      /// have a name of the format `&lt;instance_name>/operations/&lt;operation_id>` and
      /// can be used to track creation of the instance.  The
      /// metadata field type is
      /// [CreateInstanceMetadata][google.spanner.admin.instance.v1.CreateInstanceMetadata].
      /// The response field type is
      /// [Instance][google.spanner.admin.instance.v1.Instance], if successful.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateInstance(global::Google.Cloud.Spanner.Admin.Instance.V1.CreateInstanceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates an instance, and begins allocating or releasing resources
      /// as requested. The returned long-running operation can be used to track the
      /// progress of updating the instance. If the named instance does not
      /// exist, returns `NOT_FOUND`.
      ///
      /// Immediately upon completion of this request:
      ///
      ///   * For resource types for which a decrease in the instance's allocation
      ///     has been requested, billing is based on the newly-requested level.
      ///
      /// Until completion of the returned operation:
      ///
      ///   * Cancelling the operation sets its metadata's
      ///     [cancel_time][google.spanner.admin.instance.v1.UpdateInstanceMetadata.cancel_time],
      ///     and begins restoring resources to their pre-request values. The
      ///     operation is guaranteed to succeed at undoing all resource changes,
      ///     after which point it terminates with a `CANCELLED` status.
      ///   * All other attempts to modify the instance are rejected.
      ///   * Reading the instance via the API continues to give the pre-request
      ///     resource levels.
      ///
      /// Upon completion of the returned operation:
      ///
      ///   * Billing begins for all successfully-allocated resources (some types
      ///     may have lower than the requested levels).
      ///   * All newly-reserved resources are available for serving the instance's
      ///     tables.
      ///   * The instance's new resource levels are readable via the API.
      ///
      /// The returned long-running operation will
      /// have a name of the format `&lt;instance_name>/operations/&lt;operation_id>` and
      /// can be used to track the instance modification.  The
      /// metadata field type is
      /// [UpdateInstanceMetadata][google.spanner.admin.instance.v1.UpdateInstanceMetadata].
      /// The response field type is
      /// [Instance][google.spanner.admin.instance.v1.Instance], if successful.
      ///
      /// Authorization requires `spanner.instances.update` permission on
      /// the resource [name][google.spanner.admin.instance.v1.Instance.name].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> UpdateInstance(global::Google.Cloud.Spanner.Admin.Instance.V1.UpdateInstanceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes an instance.
      ///
      /// Immediately upon completion of the request:
      ///
      ///   * Billing ceases for all of the instance's reserved resources.
      ///
      /// Soon afterward:
      ///
      ///   * The instance and *all of its databases* immediately and
      ///     irrevocably disappear from the API. All data in the databases
      ///     is permanently deleted.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteInstance(global::Google.Cloud.Spanner.Admin.Instance.V1.DeleteInstanceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Sets the access control policy on an instance resource. Replaces any
      /// existing policy.
      ///
      /// Authorization requires `spanner.instances.setIamPolicy` on
      /// [resource][google.iam.v1.SetIamPolicyRequest.resource].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iam.V1.Policy> SetIamPolicy(global::Google.Cloud.Iam.V1.SetIamPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets the access control policy for an instance resource. Returns an empty
      /// policy if an instance exists but does not have a policy set.
      ///
      /// Authorization requires `spanner.instances.getIamPolicy` on
      /// [resource][google.iam.v1.GetIamPolicyRequest.resource].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iam.V1.Policy> GetIamPolicy(global::Google.Cloud.Iam.V1.GetIamPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns permissions that the caller has on the specified instance resource.
      ///
      /// Attempting this RPC on a non-existent Cloud Spanner instance resource will
      /// result in a NOT_FOUND error if the user has `spanner.instances.list`
      /// permission on the containing Google Cloud Project. Otherwise returns an
      /// empty set of permissions.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iam.V1.TestIamPermissionsResponse> TestIamPermissions(global::Google.Cloud.Iam.V1.TestIamPermissionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets information about a particular instance partition.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Spanner.Admin.Instance.V1.InstancePartition> GetInstancePartition(global::Google.Cloud.Spanner.Admin.Instance.V1.GetInstancePartitionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates an instance partition and begins preparing it to be used. The
      /// returned long-running operation
      /// can be used to track the progress of preparing the new instance partition.
      /// The instance partition name is assigned by the caller. If the named
      /// instance partition already exists, `CreateInstancePartition` returns
      /// `ALREADY_EXISTS`.
      ///
      /// Immediately upon completion of this request:
      ///
      ///   * The instance partition is readable via the API, with all requested
      ///     attributes but no allocated resources. Its state is `CREATING`.
      ///
      /// Until completion of the returned operation:
      ///
      ///   * Cancelling the operation renders the instance partition immediately
      ///     unreadable via the API.
      ///   * The instance partition can be deleted.
      ///   * All other attempts to modify the instance partition are rejected.
      ///
      /// Upon completion of the returned operation:
      ///
      ///   * Billing for all successfully-allocated resources begins (some types
      ///     may have lower than the requested levels).
      ///   * Databases can start using this instance partition.
      ///   * The instance partition's allocated resource levels are readable via the
      ///     API.
      ///   * The instance partition's state becomes `READY`.
      ///
      /// The returned long-running operation will
      /// have a name of the format
      /// `&lt;instance_partition_name>/operations/&lt;operation_id>` and can be used to
      /// track creation of the instance partition.  The
      /// metadata field type is
      /// [CreateInstancePartitionMetadata][google.spanner.admin.instance.v1.CreateInstancePartitionMetadata].
      /// The response field type is
      /// [InstancePartition][google.spanner.admin.instance.v1.InstancePartition], if
      /// successful.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateInstancePartition(global::Google.Cloud.Spanner.Admin.Instance.V1.CreateInstancePartitionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes an existing instance partition. Requires that the
      /// instance partition is not used by any database or backup and is not the
      /// default instance partition of an instance.
      ///
      /// Authorization requires `spanner.instancePartitions.delete` permission on
      /// the resource
      /// [name][google.spanner.admin.instance.v1.InstancePartition.name].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteInstancePartition(global::Google.Cloud.Spanner.Admin.Instance.V1.DeleteInstancePartitionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates an instance partition, and begins allocating or releasing resources
      /// as requested. The returned long-running operation can be used to track the
      /// progress of updating the instance partition. If the named instance
      /// partition does not exist, returns `NOT_FOUND`.
      ///
      /// Immediately upon completion of this request:
      ///
      ///   * For resource types for which a decrease in the instance partition's
      ///   allocation has been requested, billing is based on the newly-requested
      ///   level.
      ///
      /// Until completion of the returned operation:
      ///
      ///   * Cancelling the operation sets its metadata's
      ///     [cancel_time][google.spanner.admin.instance.v1.UpdateInstancePartitionMetadata.cancel_time],
      ///     and begins restoring resources to their pre-request values. The
      ///     operation is guaranteed to succeed at undoing all resource changes,
      ///     after which point it terminates with a `CANCELLED` status.
      ///   * All other attempts to modify the instance partition are rejected.
      ///   * Reading the instance partition via the API continues to give the
      ///     pre-request resource levels.
      ///
      /// Upon completion of the returned operation:
      ///
      ///   * Billing begins for all successfully-allocated resources (some types
      ///     may have lower than the requested levels).
      ///   * All newly-reserved resources are available for serving the instance
      ///     partition's tables.
      ///   * The instance partition's new resource levels are readable via the API.
      ///
      /// The returned long-running operation will
      /// have a name of the format
      /// `&lt;instance_partition_name>/operations/&lt;operation_id>` and can be used to
      /// track the instance partition modification. The
      /// metadata field type is
      /// [UpdateInstancePartitionMetadata][google.spanner.admin.instance.v1.UpdateInstancePartitionMetadata].
      /// The response field type is
      /// [InstancePartition][google.spanner.admin.instance.v1.InstancePartition], if
      /// successful.
      ///
      /// Authorization requires `spanner.instancePartitions.update` permission on
      /// the resource
      /// [name][google.spanner.admin.instance.v1.InstancePartition.name].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> UpdateInstancePartition(global::Google.Cloud.Spanner.Admin.Instance.V1.UpdateInstancePartitionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists instance partition long-running operations in the given instance.
      /// An instance partition operation has a name of the form
      /// `projects/&lt;project>/instances/&lt;instance>/instancePartitions/&lt;instance_partition>/operations/&lt;operation>`.
      /// The long-running operation
      /// metadata field type
      /// `metadata.type_url` describes the type of the metadata. Operations returned
      /// include those that have completed/failed/canceled within the last 7 days,
      /// and pending operations. Operations returned are ordered by
      /// `operation.metadata.value.start_time` in descending order starting from the
      /// most recently started operation.
      ///
      /// Authorization requires `spanner.instancePartitionOperations.list`
      /// permission on the resource
      /// [parent][google.spanner.admin.instance.v1.ListInstancePartitionOperationsRequest.parent].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancePartitionOperationsResponse> ListInstancePartitionOperations(global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancePartitionOperationsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Moves an instance to the target instance configuration. You can use the
      /// returned long-running operation to track
      /// the progress of moving the instance.
      ///
      /// `MoveInstance` returns `FAILED_PRECONDITION` if the instance meets any of
      /// the following criteria:
      ///
      ///   * Is undergoing a move to a different instance configuration
      ///   * Has backups
      ///   * Has an ongoing update
      ///   * Contains any CMEK-enabled databases
      ///   * Is a free trial instance
      ///
      /// While the operation is pending:
      ///
      ///   * All other attempts to modify the instance, including changes to its
      ///     compute capacity, are rejected.
      ///   * The following database and backup admin operations are rejected:
      ///
      ///     * `DatabaseAdmin.CreateDatabase`
      ///     * `DatabaseAdmin.UpdateDatabaseDdl` (disabled if default_leader is
      ///        specified in the request.)
      ///     * `DatabaseAdmin.RestoreDatabase`
      ///     * `DatabaseAdmin.CreateBackup`
      ///     * `DatabaseAdmin.CopyBackup`
      ///
      ///   * Both the source and target instance configurations are subject to
      ///     hourly compute and storage charges.
      ///   * The instance might experience higher read-write latencies and a higher
      ///     transaction abort rate. However, moving an instance doesn't cause any
      ///     downtime.
      ///
      /// The returned long-running operation has
      /// a name of the format
      /// `&lt;instance_name>/operations/&lt;operation_id>` and can be used to track
      /// the move instance operation. The
      /// metadata field type is
      /// [MoveInstanceMetadata][google.spanner.admin.instance.v1.MoveInstanceMetadata].
      /// The response field type is
      /// [Instance][google.spanner.admin.instance.v1.Instance],
      /// if successful.
      /// Cancelling the operation sets its metadata's
      /// [cancel_time][google.spanner.admin.instance.v1.MoveInstanceMetadata.cancel_time].
      /// Cancellation is not immediate because it involves moving any data
      /// previously moved to the target instance configuration back to the original
      /// instance configuration. You can use this operation to track the progress of
      /// the cancellation. Upon successful completion of the cancellation, the
      /// operation terminates with `CANCELLED` status.
      ///
      /// If not cancelled, upon completion of the returned operation:
      ///
      ///   * The instance successfully moves to the target instance
      ///     configuration.
      ///   * You are billed for compute and storage in target instance
      ///   configuration.
      ///
      /// Authorization requires the `spanner.instances.update` permission on
      /// the resource [instance][google.spanner.admin.instance.v1.Instance].
      ///
      /// For more details, see
      /// [Move an instance](https://cloud.google.com/spanner/docs/move-instance).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> MoveInstance(global::Google.Cloud.Spanner.Admin.Instance.V1.MoveInstanceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for InstanceAdmin</summary>
    public partial class InstanceAdminClient : grpc::ClientBase<InstanceAdminClient>
    {
      /// <summary>Creates a new client for InstanceAdmin</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public InstanceAdminClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for InstanceAdmin that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public InstanceAdminClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected InstanceAdminClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected InstanceAdminClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Lists the supported instance configurations for a given project.
      ///
      /// Returns both Google-managed configurations and user-managed
      /// configurations.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstanceConfigsResponse ListInstanceConfigs(global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstanceConfigsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListInstanceConfigs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the supported instance configurations for a given project.
      ///
      /// Returns both Google-managed configurations and user-managed
      /// configurations.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstanceConfigsResponse ListInstanceConfigs(global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstanceConfigsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListInstanceConfigs, null, options, request);
      }
      /// <summary>
      /// Lists the supported instance configurations for a given project.
      ///
      /// Returns both Google-managed configurations and user-managed
      /// configurations.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstanceConfigsResponse> ListInstanceConfigsAsync(global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstanceConfigsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListInstanceConfigsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the supported instance configurations for a given project.
      ///
      /// Returns both Google-managed configurations and user-managed
      /// configurations.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstanceConfigsResponse> ListInstanceConfigsAsync(global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstanceConfigsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListInstanceConfigs, null, options, request);
      }
      /// <summary>
      /// Gets information about a particular instance configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Spanner.Admin.Instance.V1.InstanceConfig GetInstanceConfig(global::Google.Cloud.Spanner.Admin.Instance.V1.GetInstanceConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetInstanceConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets information about a particular instance configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Spanner.Admin.Instance.V1.InstanceConfig GetInstanceConfig(global::Google.Cloud.Spanner.Admin.Instance.V1.GetInstanceConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetInstanceConfig, null, options, request);
      }
      /// <summary>
      /// Gets information about a particular instance configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Spanner.Admin.Instance.V1.InstanceConfig> GetInstanceConfigAsync(global::Google.Cloud.Spanner.Admin.Instance.V1.GetInstanceConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetInstanceConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets information about a particular instance configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Spanner.Admin.Instance.V1.InstanceConfig> GetInstanceConfigAsync(global::Google.Cloud.Spanner.Admin.Instance.V1.GetInstanceConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetInstanceConfig, null, options, request);
      }
      /// <summary>
      /// Creates an instance configuration and begins preparing it to be used. The
      /// returned long-running operation
      /// can be used to track the progress of preparing the new
      /// instance configuration. The instance configuration name is assigned by the
      /// caller. If the named instance configuration already exists,
      /// `CreateInstanceConfig` returns `ALREADY_EXISTS`.
      ///
      /// Immediately after the request returns:
      ///
      ///   * The instance configuration is readable via the API, with all requested
      ///     attributes. The instance configuration's
      ///     [reconciling][google.spanner.admin.instance.v1.InstanceConfig.reconciling]
      ///     field is set to true. Its state is `CREATING`.
      ///
      /// While the operation is pending:
      ///
      ///   * Cancelling the operation renders the instance configuration immediately
      ///     unreadable via the API.
      ///   * Except for deleting the creating resource, all other attempts to modify
      ///     the instance configuration are rejected.
      ///
      /// Upon completion of the returned operation:
      ///
      ///   * Instances can be created using the instance configuration.
      ///   * The instance configuration's
      ///   [reconciling][google.spanner.admin.instance.v1.InstanceConfig.reconciling]
      ///   field becomes false. Its state becomes `READY`.
      ///
      /// The returned long-running operation will
      /// have a name of the format
      /// `&lt;instance_config_name>/operations/&lt;operation_id>` and can be used to track
      /// creation of the instance configuration. The
      /// metadata field type is
      /// [CreateInstanceConfigMetadata][google.spanner.admin.instance.v1.CreateInstanceConfigMetadata].
      /// The response field type is
      /// [InstanceConfig][google.spanner.admin.instance.v1.InstanceConfig], if
      /// successful.
      ///
      /// Authorization requires `spanner.instanceConfigs.create` permission on
      /// the resource
      /// [parent][google.spanner.admin.instance.v1.CreateInstanceConfigRequest.parent].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateInstanceConfig(global::Google.Cloud.Spanner.Admin.Instance.V1.CreateInstanceConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateInstanceConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an instance configuration and begins preparing it to be used. The
      /// returned long-running operation
      /// can be used to track the progress of preparing the new
      /// instance configuration. The instance configuration name is assigned by the
      /// caller. If the named instance configuration already exists,
      /// `CreateInstanceConfig` returns `ALREADY_EXISTS`.
      ///
      /// Immediately after the request returns:
      ///
      ///   * The instance configuration is readable via the API, with all requested
      ///     attributes. The instance configuration's
      ///     [reconciling][google.spanner.admin.instance.v1.InstanceConfig.reconciling]
      ///     field is set to true. Its state is `CREATING`.
      ///
      /// While the operation is pending:
      ///
      ///   * Cancelling the operation renders the instance configuration immediately
      ///     unreadable via the API.
      ///   * Except for deleting the creating resource, all other attempts to modify
      ///     the instance configuration are rejected.
      ///
      /// Upon completion of the returned operation:
      ///
      ///   * Instances can be created using the instance configuration.
      ///   * The instance configuration's
      ///   [reconciling][google.spanner.admin.instance.v1.InstanceConfig.reconciling]
      ///   field becomes false. Its state becomes `READY`.
      ///
      /// The returned long-running operation will
      /// have a name of the format
      /// `&lt;instance_config_name>/operations/&lt;operation_id>` and can be used to track
      /// creation of the instance configuration. The
      /// metadata field type is
      /// [CreateInstanceConfigMetadata][google.spanner.admin.instance.v1.CreateInstanceConfigMetadata].
      /// The response field type is
      /// [InstanceConfig][google.spanner.admin.instance.v1.InstanceConfig], if
      /// successful.
      ///
      /// Authorization requires `spanner.instanceConfigs.create` permission on
      /// the resource
      /// [parent][google.spanner.admin.instance.v1.CreateInstanceConfigRequest.parent].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateInstanceConfig(global::Google.Cloud.Spanner.Admin.Instance.V1.CreateInstanceConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateInstanceConfig, null, options, request);
      }
      /// <summary>
      /// Creates an instance configuration and begins preparing it to be used. The
      /// returned long-running operation
      /// can be used to track the progress of preparing the new
      /// instance configuration. The instance configuration name is assigned by the
      /// caller. If the named instance configuration already exists,
      /// `CreateInstanceConfig` returns `ALREADY_EXISTS`.
      ///
      /// Immediately after the request returns:
      ///
      ///   * The instance configuration is readable via the API, with all requested
      ///     attributes. The instance configuration's
      ///     [reconciling][google.spanner.admin.instance.v1.InstanceConfig.reconciling]
      ///     field is set to true. Its state is `CREATING`.
      ///
      /// While the operation is pending:
      ///
      ///   * Cancelling the operation renders the instance configuration immediately
      ///     unreadable via the API.
      ///   * Except for deleting the creating resource, all other attempts to modify
      ///     the instance configuration are rejected.
      ///
      /// Upon completion of the returned operation:
      ///
      ///   * Instances can be created using the instance configuration.
      ///   * The instance configuration's
      ///   [reconciling][google.spanner.admin.instance.v1.InstanceConfig.reconciling]
      ///   field becomes false. Its state becomes `READY`.
      ///
      /// The returned long-running operation will
      /// have a name of the format
      /// `&lt;instance_config_name>/operations/&lt;operation_id>` and can be used to track
      /// creation of the instance configuration. The
      /// metadata field type is
      /// [CreateInstanceConfigMetadata][google.spanner.admin.instance.v1.CreateInstanceConfigMetadata].
      /// The response field type is
      /// [InstanceConfig][google.spanner.admin.instance.v1.InstanceConfig], if
      /// successful.
      ///
      /// Authorization requires `spanner.instanceConfigs.create` permission on
      /// the resource
      /// [parent][google.spanner.admin.instance.v1.CreateInstanceConfigRequest.parent].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateInstanceConfigAsync(global::Google.Cloud.Spanner.Admin.Instance.V1.CreateInstanceConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateInstanceConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an instance configuration and begins preparing it to be used. The
      /// returned long-running operation
      /// can be used to track the progress of preparing the new
      /// instance configuration. The instance configuration name is assigned by the
      /// caller. If the named instance configuration already exists,
      /// `CreateInstanceConfig` returns `ALREADY_EXISTS`.
      ///
      /// Immediately after the request returns:
      ///
      ///   * The instance configuration is readable via the API, with all requested
      ///     attributes. The instance configuration's
      ///     [reconciling][google.spanner.admin.instance.v1.InstanceConfig.reconciling]
      ///     field is set to true. Its state is `CREATING`.
      ///
      /// While the operation is pending:
      ///
      ///   * Cancelling the operation renders the instance configuration immediately
      ///     unreadable via the API.
      ///   * Except for deleting the creating resource, all other attempts to modify
      ///     the instance configuration are rejected.
      ///
      /// Upon completion of the returned operation:
      ///
      ///   * Instances can be created using the instance configuration.
      ///   * The instance configuration's
      ///   [reconciling][google.spanner.admin.instance.v1.InstanceConfig.reconciling]
      ///   field becomes false. Its state becomes `READY`.
      ///
      /// The returned long-running operation will
      /// have a name of the format
      /// `&lt;instance_config_name>/operations/&lt;operation_id>` and can be used to track
      /// creation of the instance configuration. The
      /// metadata field type is
      /// [CreateInstanceConfigMetadata][google.spanner.admin.instance.v1.CreateInstanceConfigMetadata].
      /// The response field type is
      /// [InstanceConfig][google.spanner.admin.instance.v1.InstanceConfig], if
      /// successful.
      ///
      /// Authorization requires `spanner.instanceConfigs.create` permission on
      /// the resource
      /// [parent][google.spanner.admin.instance.v1.CreateInstanceConfigRequest.parent].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateInstanceConfigAsync(global::Google.Cloud.Spanner.Admin.Instance.V1.CreateInstanceConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateInstanceConfig, null, options, request);
      }
      /// <summary>
      /// Updates an instance configuration. The returned
      /// long-running operation can be used to track
      /// the progress of updating the instance. If the named instance configuration
      /// does not exist, returns `NOT_FOUND`.
      ///
      /// Only user-managed configurations can be updated.
      ///
      /// Immediately after the request returns:
      ///
      ///   * The instance configuration's
      ///     [reconciling][google.spanner.admin.instance.v1.InstanceConfig.reconciling]
      ///     field is set to true.
      ///
      /// While the operation is pending:
      ///
      ///   * Cancelling the operation sets its metadata's
      ///     [cancel_time][google.spanner.admin.instance.v1.UpdateInstanceConfigMetadata.cancel_time].
      ///     The operation is guaranteed to succeed at undoing all changes, after
      ///     which point it terminates with a `CANCELLED` status.
      ///   * All other attempts to modify the instance configuration are rejected.
      ///   * Reading the instance configuration via the API continues to give the
      ///     pre-request values.
      ///
      /// Upon completion of the returned operation:
      ///
      ///   * Creating instances using the instance configuration uses the new
      ///     values.
      ///   * The new values of the instance configuration are readable via the API.
      ///   * The instance configuration's
      ///   [reconciling][google.spanner.admin.instance.v1.InstanceConfig.reconciling]
      ///   field becomes false.
      ///
      /// The returned long-running operation will
      /// have a name of the format
      /// `&lt;instance_config_name>/operations/&lt;operation_id>` and can be used to track
      /// the instance configuration modification.  The
      /// metadata field type is
      /// [UpdateInstanceConfigMetadata][google.spanner.admin.instance.v1.UpdateInstanceConfigMetadata].
      /// The response field type is
      /// [InstanceConfig][google.spanner.admin.instance.v1.InstanceConfig], if
      /// successful.
      ///
      /// Authorization requires `spanner.instanceConfigs.update` permission on
      /// the resource [name][google.spanner.admin.instance.v1.InstanceConfig.name].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateInstanceConfig(global::Google.Cloud.Spanner.Admin.Instance.V1.UpdateInstanceConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateInstanceConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an instance configuration. The returned
      /// long-running operation can be used to track
      /// the progress of updating the instance. If the named instance configuration
      /// does not exist, returns `NOT_FOUND`.
      ///
      /// Only user-managed configurations can be updated.
      ///
      /// Immediately after the request returns:
      ///
      ///   * The instance configuration's
      ///     [reconciling][google.spanner.admin.instance.v1.InstanceConfig.reconciling]
      ///     field is set to true.
      ///
      /// While the operation is pending:
      ///
      ///   * Cancelling the operation sets its metadata's
      ///     [cancel_time][google.spanner.admin.instance.v1.UpdateInstanceConfigMetadata.cancel_time].
      ///     The operation is guaranteed to succeed at undoing all changes, after
      ///     which point it terminates with a `CANCELLED` status.
      ///   * All other attempts to modify the instance configuration are rejected.
      ///   * Reading the instance configuration via the API continues to give the
      ///     pre-request values.
      ///
      /// Upon completion of the returned operation:
      ///
      ///   * Creating instances using the instance configuration uses the new
      ///     values.
      ///   * The new values of the instance configuration are readable via the API.
      ///   * The instance configuration's
      ///   [reconciling][google.spanner.admin.instance.v1.InstanceConfig.reconciling]
      ///   field becomes false.
      ///
      /// The returned long-running operation will
      /// have a name of the format
      /// `&lt;instance_config_name>/operations/&lt;operation_id>` and can be used to track
      /// the instance configuration modification.  The
      /// metadata field type is
      /// [UpdateInstanceConfigMetadata][google.spanner.admin.instance.v1.UpdateInstanceConfigMetadata].
      /// The response field type is
      /// [InstanceConfig][google.spanner.admin.instance.v1.InstanceConfig], if
      /// successful.
      ///
      /// Authorization requires `spanner.instanceConfigs.update` permission on
      /// the resource [name][google.spanner.admin.instance.v1.InstanceConfig.name].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateInstanceConfig(global::Google.Cloud.Spanner.Admin.Instance.V1.UpdateInstanceConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateInstanceConfig, null, options, request);
      }
      /// <summary>
      /// Updates an instance configuration. The returned
      /// long-running operation can be used to track
      /// the progress of updating the instance. If the named instance configuration
      /// does not exist, returns `NOT_FOUND`.
      ///
      /// Only user-managed configurations can be updated.
      ///
      /// Immediately after the request returns:
      ///
      ///   * The instance configuration's
      ///     [reconciling][google.spanner.admin.instance.v1.InstanceConfig.reconciling]
      ///     field is set to true.
      ///
      /// While the operation is pending:
      ///
      ///   * Cancelling the operation sets its metadata's
      ///     [cancel_time][google.spanner.admin.instance.v1.UpdateInstanceConfigMetadata.cancel_time].
      ///     The operation is guaranteed to succeed at undoing all changes, after
      ///     which point it terminates with a `CANCELLED` status.
      ///   * All other attempts to modify the instance configuration are rejected.
      ///   * Reading the instance configuration via the API continues to give the
      ///     pre-request values.
      ///
      /// Upon completion of the returned operation:
      ///
      ///   * Creating instances using the instance configuration uses the new
      ///     values.
      ///   * The new values of the instance configuration are readable via the API.
      ///   * The instance configuration's
      ///   [reconciling][google.spanner.admin.instance.v1.InstanceConfig.reconciling]
      ///   field becomes false.
      ///
      /// The returned long-running operation will
      /// have a name of the format
      /// `&lt;instance_config_name>/operations/&lt;operation_id>` and can be used to track
      /// the instance configuration modification.  The
      /// metadata field type is
      /// [UpdateInstanceConfigMetadata][google.spanner.admin.instance.v1.UpdateInstanceConfigMetadata].
      /// The response field type is
      /// [InstanceConfig][google.spanner.admin.instance.v1.InstanceConfig], if
      /// successful.
      ///
      /// Authorization requires `spanner.instanceConfigs.update` permission on
      /// the resource [name][google.spanner.admin.instance.v1.InstanceConfig.name].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateInstanceConfigAsync(global::Google.Cloud.Spanner.Admin.Instance.V1.UpdateInstanceConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateInstanceConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an instance configuration. The returned
      /// long-running operation can be used to track
      /// the progress of updating the instance. If the named instance configuration
      /// does not exist, returns `NOT_FOUND`.
      ///
      /// Only user-managed configurations can be updated.
      ///
      /// Immediately after the request returns:
      ///
      ///   * The instance configuration's
      ///     [reconciling][google.spanner.admin.instance.v1.InstanceConfig.reconciling]
      ///     field is set to true.
      ///
      /// While the operation is pending:
      ///
      ///   * Cancelling the operation sets its metadata's
      ///     [cancel_time][google.spanner.admin.instance.v1.UpdateInstanceConfigMetadata.cancel_time].
      ///     The operation is guaranteed to succeed at undoing all changes, after
      ///     which point it terminates with a `CANCELLED` status.
      ///   * All other attempts to modify the instance configuration are rejected.
      ///   * Reading the instance configuration via the API continues to give the
      ///     pre-request values.
      ///
      /// Upon completion of the returned operation:
      ///
      ///   * Creating instances using the instance configuration uses the new
      ///     values.
      ///   * The new values of the instance configuration are readable via the API.
      ///   * The instance configuration's
      ///   [reconciling][google.spanner.admin.instance.v1.InstanceConfig.reconciling]
      ///   field becomes false.
      ///
      /// The returned long-running operation will
      /// have a name of the format
      /// `&lt;instance_config_name>/operations/&lt;operation_id>` and can be used to track
      /// the instance configuration modification.  The
      /// metadata field type is
      /// [UpdateInstanceConfigMetadata][google.spanner.admin.instance.v1.UpdateInstanceConfigMetadata].
      /// The response field type is
      /// [InstanceConfig][google.spanner.admin.instance.v1.InstanceConfig], if
      /// successful.
      ///
      /// Authorization requires `spanner.instanceConfigs.update` permission on
      /// the resource [name][google.spanner.admin.instance.v1.InstanceConfig.name].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateInstanceConfigAsync(global::Google.Cloud.Spanner.Admin.Instance.V1.UpdateInstanceConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateInstanceConfig, null, options, request);
      }
      /// <summary>
      /// Deletes the instance configuration. Deletion is only allowed when no
      /// instances are using the configuration. If any instances are using
      /// the configuration, returns `FAILED_PRECONDITION`.
      ///
      /// Only user-managed configurations can be deleted.
      ///
      /// Authorization requires `spanner.instanceConfigs.delete` permission on
      /// the resource [name][google.spanner.admin.instance.v1.InstanceConfig.name].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteInstanceConfig(global::Google.Cloud.Spanner.Admin.Instance.V1.DeleteInstanceConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteInstanceConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the instance configuration. Deletion is only allowed when no
      /// instances are using the configuration. If any instances are using
      /// the configuration, returns `FAILED_PRECONDITION`.
      ///
      /// Only user-managed configurations can be deleted.
      ///
      /// Authorization requires `spanner.instanceConfigs.delete` permission on
      /// the resource [name][google.spanner.admin.instance.v1.InstanceConfig.name].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteInstanceConfig(global::Google.Cloud.Spanner.Admin.Instance.V1.DeleteInstanceConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteInstanceConfig, null, options, request);
      }
      /// <summary>
      /// Deletes the instance configuration. Deletion is only allowed when no
      /// instances are using the configuration. If any instances are using
      /// the configuration, returns `FAILED_PRECONDITION`.
      ///
      /// Only user-managed configurations can be deleted.
      ///
      /// Authorization requires `spanner.instanceConfigs.delete` permission on
      /// the resource [name][google.spanner.admin.instance.v1.InstanceConfig.name].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteInstanceConfigAsync(global::Google.Cloud.Spanner.Admin.Instance.V1.DeleteInstanceConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteInstanceConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the instance configuration. Deletion is only allowed when no
      /// instances are using the configuration. If any instances are using
      /// the configuration, returns `FAILED_PRECONDITION`.
      ///
      /// Only user-managed configurations can be deleted.
      ///
      /// Authorization requires `spanner.instanceConfigs.delete` permission on
      /// the resource [name][google.spanner.admin.instance.v1.InstanceConfig.name].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteInstanceConfigAsync(global::Google.Cloud.Spanner.Admin.Instance.V1.DeleteInstanceConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteInstanceConfig, null, options, request);
      }
      /// <summary>
      /// Lists the user-managed instance configuration long-running
      /// operations in the given project. An instance
      /// configuration operation has a name of the form
      /// `projects/&lt;project>/instanceConfigs/&lt;instance_config>/operations/&lt;operation>`.
      /// The long-running operation
      /// metadata field type
      /// `metadata.type_url` describes the type of the metadata. Operations returned
      /// include those that have completed/failed/canceled within the last 7 days,
      /// and pending operations. Operations returned are ordered by
      /// `operation.metadata.value.start_time` in descending order starting
      /// from the most recently started operation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstanceConfigOperationsResponse ListInstanceConfigOperations(global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstanceConfigOperationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListInstanceConfigOperations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the user-managed instance configuration long-running
      /// operations in the given project. An instance
      /// configuration operation has a name of the form
      /// `projects/&lt;project>/instanceConfigs/&lt;instance_config>/operations/&lt;operation>`.
      /// The long-running operation
      /// metadata field type
      /// `metadata.type_url` describes the type of the metadata. Operations returned
      /// include those that have completed/failed/canceled within the last 7 days,
      /// and pending operations. Operations returned are ordered by
      /// `operation.metadata.value.start_time` in descending order starting
      /// from the most recently started operation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstanceConfigOperationsResponse ListInstanceConfigOperations(global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstanceConfigOperationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListInstanceConfigOperations, null, options, request);
      }
      /// <summary>
      /// Lists the user-managed instance configuration long-running
      /// operations in the given project. An instance
      /// configuration operation has a name of the form
      /// `projects/&lt;project>/instanceConfigs/&lt;instance_config>/operations/&lt;operation>`.
      /// The long-running operation
      /// metadata field type
      /// `metadata.type_url` describes the type of the metadata. Operations returned
      /// include those that have completed/failed/canceled within the last 7 days,
      /// and pending operations. Operations returned are ordered by
      /// `operation.metadata.value.start_time` in descending order starting
      /// from the most recently started operation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstanceConfigOperationsResponse> ListInstanceConfigOperationsAsync(global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstanceConfigOperationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListInstanceConfigOperationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the user-managed instance configuration long-running
      /// operations in the given project. An instance
      /// configuration operation has a name of the form
      /// `projects/&lt;project>/instanceConfigs/&lt;instance_config>/operations/&lt;operation>`.
      /// The long-running operation
      /// metadata field type
      /// `metadata.type_url` describes the type of the metadata. Operations returned
      /// include those that have completed/failed/canceled within the last 7 days,
      /// and pending operations. Operations returned are ordered by
      /// `operation.metadata.value.start_time` in descending order starting
      /// from the most recently started operation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstanceConfigOperationsResponse> ListInstanceConfigOperationsAsync(global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstanceConfigOperationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListInstanceConfigOperations, null, options, request);
      }
      /// <summary>
      /// Lists all instances in the given project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancesResponse ListInstances(global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListInstances(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all instances in the given project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancesResponse ListInstances(global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListInstances, null, options, request);
      }
      /// <summary>
      /// Lists all instances in the given project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancesResponse> ListInstancesAsync(global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListInstancesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all instances in the given project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancesResponse> ListInstancesAsync(global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListInstances, null, options, request);
      }
      /// <summary>
      /// Lists all instance partitions for the given instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancePartitionsResponse ListInstancePartitions(global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancePartitionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListInstancePartitions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all instance partitions for the given instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancePartitionsResponse ListInstancePartitions(global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancePartitionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListInstancePartitions, null, options, request);
      }
      /// <summary>
      /// Lists all instance partitions for the given instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancePartitionsResponse> ListInstancePartitionsAsync(global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancePartitionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListInstancePartitionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all instance partitions for the given instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancePartitionsResponse> ListInstancePartitionsAsync(global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancePartitionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListInstancePartitions, null, options, request);
      }
      /// <summary>
      /// Gets information about a particular instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Spanner.Admin.Instance.V1.Instance GetInstance(global::Google.Cloud.Spanner.Admin.Instance.V1.GetInstanceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetInstance(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets information about a particular instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Spanner.Admin.Instance.V1.Instance GetInstance(global::Google.Cloud.Spanner.Admin.Instance.V1.GetInstanceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetInstance, null, options, request);
      }
      /// <summary>
      /// Gets information about a particular instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Spanner.Admin.Instance.V1.Instance> GetInstanceAsync(global::Google.Cloud.Spanner.Admin.Instance.V1.GetInstanceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetInstanceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets information about a particular instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Spanner.Admin.Instance.V1.Instance> GetInstanceAsync(global::Google.Cloud.Spanner.Admin.Instance.V1.GetInstanceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetInstance, null, options, request);
      }
      /// <summary>
      /// Creates an instance and begins preparing it to begin serving. The
      /// returned long-running operation
      /// can be used to track the progress of preparing the new
      /// instance. The instance name is assigned by the caller. If the
      /// named instance already exists, `CreateInstance` returns
      /// `ALREADY_EXISTS`.
      ///
      /// Immediately upon completion of this request:
      ///
      ///   * The instance is readable via the API, with all requested attributes
      ///     but no allocated resources. Its state is `CREATING`.
      ///
      /// Until completion of the returned operation:
      ///
      ///   * Cancelling the operation renders the instance immediately unreadable
      ///     via the API.
      ///   * The instance can be deleted.
      ///   * All other attempts to modify the instance are rejected.
      ///
      /// Upon completion of the returned operation:
      ///
      ///   * Billing for all successfully-allocated resources begins (some types
      ///     may have lower than the requested levels).
      ///   * Databases can be created in the instance.
      ///   * The instance's allocated resource levels are readable via the API.
      ///   * The instance's state becomes `READY`.
      ///
      /// The returned long-running operation will
      /// have a name of the format `&lt;instance_name>/operations/&lt;operation_id>` and
      /// can be used to track creation of the instance.  The
      /// metadata field type is
      /// [CreateInstanceMetadata][google.spanner.admin.instance.v1.CreateInstanceMetadata].
      /// The response field type is
      /// [Instance][google.spanner.admin.instance.v1.Instance], if successful.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateInstance(global::Google.Cloud.Spanner.Admin.Instance.V1.CreateInstanceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateInstance(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an instance and begins preparing it to begin serving. The
      /// returned long-running operation
      /// can be used to track the progress of preparing the new
      /// instance. The instance name is assigned by the caller. If the
      /// named instance already exists, `CreateInstance` returns
      /// `ALREADY_EXISTS`.
      ///
      /// Immediately upon completion of this request:
      ///
      ///   * The instance is readable via the API, with all requested attributes
      ///     but no allocated resources. Its state is `CREATING`.
      ///
      /// Until completion of the returned operation:
      ///
      ///   * Cancelling the operation renders the instance immediately unreadable
      ///     via the API.
      ///   * The instance can be deleted.
      ///   * All other attempts to modify the instance are rejected.
      ///
      /// Upon completion of the returned operation:
      ///
      ///   * Billing for all successfully-allocated resources begins (some types
      ///     may have lower than the requested levels).
      ///   * Databases can be created in the instance.
      ///   * The instance's allocated resource levels are readable via the API.
      ///   * The instance's state becomes `READY`.
      ///
      /// The returned long-running operation will
      /// have a name of the format `&lt;instance_name>/operations/&lt;operation_id>` and
      /// can be used to track creation of the instance.  The
      /// metadata field type is
      /// [CreateInstanceMetadata][google.spanner.admin.instance.v1.CreateInstanceMetadata].
      /// The response field type is
      /// [Instance][google.spanner.admin.instance.v1.Instance], if successful.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateInstance(global::Google.Cloud.Spanner.Admin.Instance.V1.CreateInstanceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateInstance, null, options, request);
      }
      /// <summary>
      /// Creates an instance and begins preparing it to begin serving. The
      /// returned long-running operation
      /// can be used to track the progress of preparing the new
      /// instance. The instance name is assigned by the caller. If the
      /// named instance already exists, `CreateInstance` returns
      /// `ALREADY_EXISTS`.
      ///
      /// Immediately upon completion of this request:
      ///
      ///   * The instance is readable via the API, with all requested attributes
      ///     but no allocated resources. Its state is `CREATING`.
      ///
      /// Until completion of the returned operation:
      ///
      ///   * Cancelling the operation renders the instance immediately unreadable
      ///     via the API.
      ///   * The instance can be deleted.
      ///   * All other attempts to modify the instance are rejected.
      ///
      /// Upon completion of the returned operation:
      ///
      ///   * Billing for all successfully-allocated resources begins (some types
      ///     may have lower than the requested levels).
      ///   * Databases can be created in the instance.
      ///   * The instance's allocated resource levels are readable via the API.
      ///   * The instance's state becomes `READY`.
      ///
      /// The returned long-running operation will
      /// have a name of the format `&lt;instance_name>/operations/&lt;operation_id>` and
      /// can be used to track creation of the instance.  The
      /// metadata field type is
      /// [CreateInstanceMetadata][google.spanner.admin.instance.v1.CreateInstanceMetadata].
      /// The response field type is
      /// [Instance][google.spanner.admin.instance.v1.Instance], if successful.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateInstanceAsync(global::Google.Cloud.Spanner.Admin.Instance.V1.CreateInstanceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateInstanceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an instance and begins preparing it to begin serving. The
      /// returned long-running operation
      /// can be used to track the progress of preparing the new
      /// instance. The instance name is assigned by the caller. If the
      /// named instance already exists, `CreateInstance` returns
      /// `ALREADY_EXISTS`.
      ///
      /// Immediately upon completion of this request:
      ///
      ///   * The instance is readable via the API, with all requested attributes
      ///     but no allocated resources. Its state is `CREATING`.
      ///
      /// Until completion of the returned operation:
      ///
      ///   * Cancelling the operation renders the instance immediately unreadable
      ///     via the API.
      ///   * The instance can be deleted.
      ///   * All other attempts to modify the instance are rejected.
      ///
      /// Upon completion of the returned operation:
      ///
      ///   * Billing for all successfully-allocated resources begins (some types
      ///     may have lower than the requested levels).
      ///   * Databases can be created in the instance.
      ///   * The instance's allocated resource levels are readable via the API.
      ///   * The instance's state becomes `READY`.
      ///
      /// The returned long-running operation will
      /// have a name of the format `&lt;instance_name>/operations/&lt;operation_id>` and
      /// can be used to track creation of the instance.  The
      /// metadata field type is
      /// [CreateInstanceMetadata][google.spanner.admin.instance.v1.CreateInstanceMetadata].
      /// The response field type is
      /// [Instance][google.spanner.admin.instance.v1.Instance], if successful.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateInstanceAsync(global::Google.Cloud.Spanner.Admin.Instance.V1.CreateInstanceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateInstance, null, options, request);
      }
      /// <summary>
      /// Updates an instance, and begins allocating or releasing resources
      /// as requested. The returned long-running operation can be used to track the
      /// progress of updating the instance. If the named instance does not
      /// exist, returns `NOT_FOUND`.
      ///
      /// Immediately upon completion of this request:
      ///
      ///   * For resource types for which a decrease in the instance's allocation
      ///     has been requested, billing is based on the newly-requested level.
      ///
      /// Until completion of the returned operation:
      ///
      ///   * Cancelling the operation sets its metadata's
      ///     [cancel_time][google.spanner.admin.instance.v1.UpdateInstanceMetadata.cancel_time],
      ///     and begins restoring resources to their pre-request values. The
      ///     operation is guaranteed to succeed at undoing all resource changes,
      ///     after which point it terminates with a `CANCELLED` status.
      ///   * All other attempts to modify the instance are rejected.
      ///   * Reading the instance via the API continues to give the pre-request
      ///     resource levels.
      ///
      /// Upon completion of the returned operation:
      ///
      ///   * Billing begins for all successfully-allocated resources (some types
      ///     may have lower than the requested levels).
      ///   * All newly-reserved resources are available for serving the instance's
      ///     tables.
      ///   * The instance's new resource levels are readable via the API.
      ///
      /// The returned long-running operation will
      /// have a name of the format `&lt;instance_name>/operations/&lt;operation_id>` and
      /// can be used to track the instance modification.  The
      /// metadata field type is
      /// [UpdateInstanceMetadata][google.spanner.admin.instance.v1.UpdateInstanceMetadata].
      /// The response field type is
      /// [Instance][google.spanner.admin.instance.v1.Instance], if successful.
      ///
      /// Authorization requires `spanner.instances.update` permission on
      /// the resource [name][google.spanner.admin.instance.v1.Instance.name].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateInstance(global::Google.Cloud.Spanner.Admin.Instance.V1.UpdateInstanceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateInstance(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an instance, and begins allocating or releasing resources
      /// as requested. The returned long-running operation can be used to track the
      /// progress of updating the instance. If the named instance does not
      /// exist, returns `NOT_FOUND`.
      ///
      /// Immediately upon completion of this request:
      ///
      ///   * For resource types for which a decrease in the instance's allocation
      ///     has been requested, billing is based on the newly-requested level.
      ///
      /// Until completion of the returned operation:
      ///
      ///   * Cancelling the operation sets its metadata's
      ///     [cancel_time][google.spanner.admin.instance.v1.UpdateInstanceMetadata.cancel_time],
      ///     and begins restoring resources to their pre-request values. The
      ///     operation is guaranteed to succeed at undoing all resource changes,
      ///     after which point it terminates with a `CANCELLED` status.
      ///   * All other attempts to modify the instance are rejected.
      ///   * Reading the instance via the API continues to give the pre-request
      ///     resource levels.
      ///
      /// Upon completion of the returned operation:
      ///
      ///   * Billing begins for all successfully-allocated resources (some types
      ///     may have lower than the requested levels).
      ///   * All newly-reserved resources are available for serving the instance's
      ///     tables.
      ///   * The instance's new resource levels are readable via the API.
      ///
      /// The returned long-running operation will
      /// have a name of the format `&lt;instance_name>/operations/&lt;operation_id>` and
      /// can be used to track the instance modification.  The
      /// metadata field type is
      /// [UpdateInstanceMetadata][google.spanner.admin.instance.v1.UpdateInstanceMetadata].
      /// The response field type is
      /// [Instance][google.spanner.admin.instance.v1.Instance], if successful.
      ///
      /// Authorization requires `spanner.instances.update` permission on
      /// the resource [name][google.spanner.admin.instance.v1.Instance.name].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateInstance(global::Google.Cloud.Spanner.Admin.Instance.V1.UpdateInstanceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateInstance, null, options, request);
      }
      /// <summary>
      /// Updates an instance, and begins allocating or releasing resources
      /// as requested. The returned long-running operation can be used to track the
      /// progress of updating the instance. If the named instance does not
      /// exist, returns `NOT_FOUND`.
      ///
      /// Immediately upon completion of this request:
      ///
      ///   * For resource types for which a decrease in the instance's allocation
      ///     has been requested, billing is based on the newly-requested level.
      ///
      /// Until completion of the returned operation:
      ///
      ///   * Cancelling the operation sets its metadata's
      ///     [cancel_time][google.spanner.admin.instance.v1.UpdateInstanceMetadata.cancel_time],
      ///     and begins restoring resources to their pre-request values. The
      ///     operation is guaranteed to succeed at undoing all resource changes,
      ///     after which point it terminates with a `CANCELLED` status.
      ///   * All other attempts to modify the instance are rejected.
      ///   * Reading the instance via the API continues to give the pre-request
      ///     resource levels.
      ///
      /// Upon completion of the returned operation:
      ///
      ///   * Billing begins for all successfully-allocated resources (some types
      ///     may have lower than the requested levels).
      ///   * All newly-reserved resources are available for serving the instance's
      ///     tables.
      ///   * The instance's new resource levels are readable via the API.
      ///
      /// The returned long-running operation will
      /// have a name of the format `&lt;instance_name>/operations/&lt;operation_id>` and
      /// can be used to track the instance modification.  The
      /// metadata field type is
      /// [UpdateInstanceMetadata][google.spanner.admin.instance.v1.UpdateInstanceMetadata].
      /// The response field type is
      /// [Instance][google.spanner.admin.instance.v1.Instance], if successful.
      ///
      /// Authorization requires `spanner.instances.update` permission on
      /// the resource [name][google.spanner.admin.instance.v1.Instance.name].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateInstanceAsync(global::Google.Cloud.Spanner.Admin.Instance.V1.UpdateInstanceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateInstanceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an instance, and begins allocating or releasing resources
      /// as requested. The returned long-running operation can be used to track the
      /// progress of updating the instance. If the named instance does not
      /// exist, returns `NOT_FOUND`.
      ///
      /// Immediately upon completion of this request:
      ///
      ///   * For resource types for which a decrease in the instance's allocation
      ///     has been requested, billing is based on the newly-requested level.
      ///
      /// Until completion of the returned operation:
      ///
      ///   * Cancelling the operation sets its metadata's
      ///     [cancel_time][google.spanner.admin.instance.v1.UpdateInstanceMetadata.cancel_time],
      ///     and begins restoring resources to their pre-request values. The
      ///     operation is guaranteed to succeed at undoing all resource changes,
      ///     after which point it terminates with a `CANCELLED` status.
      ///   * All other attempts to modify the instance are rejected.
      ///   * Reading the instance via the API continues to give the pre-request
      ///     resource levels.
      ///
      /// Upon completion of the returned operation:
      ///
      ///   * Billing begins for all successfully-allocated resources (some types
      ///     may have lower than the requested levels).
      ///   * All newly-reserved resources are available for serving the instance's
      ///     tables.
      ///   * The instance's new resource levels are readable via the API.
      ///
      /// The returned long-running operation will
      /// have a name of the format `&lt;instance_name>/operations/&lt;operation_id>` and
      /// can be used to track the instance modification.  The
      /// metadata field type is
      /// [UpdateInstanceMetadata][google.spanner.admin.instance.v1.UpdateInstanceMetadata].
      /// The response field type is
      /// [Instance][google.spanner.admin.instance.v1.Instance], if successful.
      ///
      /// Authorization requires `spanner.instances.update` permission on
      /// the resource [name][google.spanner.admin.instance.v1.Instance.name].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateInstanceAsync(global::Google.Cloud.Spanner.Admin.Instance.V1.UpdateInstanceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateInstance, null, options, request);
      }
      /// <summary>
      /// Deletes an instance.
      ///
      /// Immediately upon completion of the request:
      ///
      ///   * Billing ceases for all of the instance's reserved resources.
      ///
      /// Soon afterward:
      ///
      ///   * The instance and *all of its databases* immediately and
      ///     irrevocably disappear from the API. All data in the databases
      ///     is permanently deleted.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteInstance(global::Google.Cloud.Spanner.Admin.Instance.V1.DeleteInstanceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteInstance(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes an instance.
      ///
      /// Immediately upon completion of the request:
      ///
      ///   * Billing ceases for all of the instance's reserved resources.
      ///
      /// Soon afterward:
      ///
      ///   * The instance and *all of its databases* immediately and
      ///     irrevocably disappear from the API. All data in the databases
      ///     is permanently deleted.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteInstance(global::Google.Cloud.Spanner.Admin.Instance.V1.DeleteInstanceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteInstance, null, options, request);
      }
      /// <summary>
      /// Deletes an instance.
      ///
      /// Immediately upon completion of the request:
      ///
      ///   * Billing ceases for all of the instance's reserved resources.
      ///
      /// Soon afterward:
      ///
      ///   * The instance and *all of its databases* immediately and
      ///     irrevocably disappear from the API. All data in the databases
      ///     is permanently deleted.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteInstanceAsync(global::Google.Cloud.Spanner.Admin.Instance.V1.DeleteInstanceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteInstanceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes an instance.
      ///
      /// Immediately upon completion of the request:
      ///
      ///   * Billing ceases for all of the instance's reserved resources.
      ///
      /// Soon afterward:
      ///
      ///   * The instance and *all of its databases* immediately and
      ///     irrevocably disappear from the API. All data in the databases
      ///     is permanently deleted.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteInstanceAsync(global::Google.Cloud.Spanner.Admin.Instance.V1.DeleteInstanceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteInstance, null, options, request);
      }
      /// <summary>
      /// Sets the access control policy on an instance resource. Replaces any
      /// existing policy.
      ///
      /// Authorization requires `spanner.instances.setIamPolicy` on
      /// [resource][google.iam.v1.SetIamPolicyRequest.resource].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.Policy SetIamPolicy(global::Google.Cloud.Iam.V1.SetIamPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetIamPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sets the access control policy on an instance resource. Replaces any
      /// existing policy.
      ///
      /// Authorization requires `spanner.instances.setIamPolicy` on
      /// [resource][google.iam.v1.SetIamPolicyRequest.resource].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.Policy SetIamPolicy(global::Google.Cloud.Iam.V1.SetIamPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetIamPolicy, null, options, request);
      }
      /// <summary>
      /// Sets the access control policy on an instance resource. Replaces any
      /// existing policy.
      ///
      /// Authorization requires `spanner.instances.setIamPolicy` on
      /// [resource][google.iam.v1.SetIamPolicyRequest.resource].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.Policy> SetIamPolicyAsync(global::Google.Cloud.Iam.V1.SetIamPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetIamPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sets the access control policy on an instance resource. Replaces any
      /// existing policy.
      ///
      /// Authorization requires `spanner.instances.setIamPolicy` on
      /// [resource][google.iam.v1.SetIamPolicyRequest.resource].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.Policy> SetIamPolicyAsync(global::Google.Cloud.Iam.V1.SetIamPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetIamPolicy, null, options, request);
      }
      /// <summary>
      /// Gets the access control policy for an instance resource. Returns an empty
      /// policy if an instance exists but does not have a policy set.
      ///
      /// Authorization requires `spanner.instances.getIamPolicy` on
      /// [resource][google.iam.v1.GetIamPolicyRequest.resource].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.Policy GetIamPolicy(global::Google.Cloud.Iam.V1.GetIamPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetIamPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the access control policy for an instance resource. Returns an empty
      /// policy if an instance exists but does not have a policy set.
      ///
      /// Authorization requires `spanner.instances.getIamPolicy` on
      /// [resource][google.iam.v1.GetIamPolicyRequest.resource].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.Policy GetIamPolicy(global::Google.Cloud.Iam.V1.GetIamPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetIamPolicy, null, options, request);
      }
      /// <summary>
      /// Gets the access control policy for an instance resource. Returns an empty
      /// policy if an instance exists but does not have a policy set.
      ///
      /// Authorization requires `spanner.instances.getIamPolicy` on
      /// [resource][google.iam.v1.GetIamPolicyRequest.resource].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.Policy> GetIamPolicyAsync(global::Google.Cloud.Iam.V1.GetIamPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetIamPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the access control policy for an instance resource. Returns an empty
      /// policy if an instance exists but does not have a policy set.
      ///
      /// Authorization requires `spanner.instances.getIamPolicy` on
      /// [resource][google.iam.v1.GetIamPolicyRequest.resource].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.Policy> GetIamPolicyAsync(global::Google.Cloud.Iam.V1.GetIamPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetIamPolicy, null, options, request);
      }
      /// <summary>
      /// Returns permissions that the caller has on the specified instance resource.
      ///
      /// Attempting this RPC on a non-existent Cloud Spanner instance resource will
      /// result in a NOT_FOUND error if the user has `spanner.instances.list`
      /// permission on the containing Google Cloud Project. Otherwise returns an
      /// empty set of permissions.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.TestIamPermissionsResponse TestIamPermissions(global::Google.Cloud.Iam.V1.TestIamPermissionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TestIamPermissions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns permissions that the caller has on the specified instance resource.
      ///
      /// Attempting this RPC on a non-existent Cloud Spanner instance resource will
      /// result in a NOT_FOUND error if the user has `spanner.instances.list`
      /// permission on the containing Google Cloud Project. Otherwise returns an
      /// empty set of permissions.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.TestIamPermissionsResponse TestIamPermissions(global::Google.Cloud.Iam.V1.TestIamPermissionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TestIamPermissions, null, options, request);
      }
      /// <summary>
      /// Returns permissions that the caller has on the specified instance resource.
      ///
      /// Attempting this RPC on a non-existent Cloud Spanner instance resource will
      /// result in a NOT_FOUND error if the user has `spanner.instances.list`
      /// permission on the containing Google Cloud Project. Otherwise returns an
      /// empty set of permissions.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.TestIamPermissionsResponse> TestIamPermissionsAsync(global::Google.Cloud.Iam.V1.TestIamPermissionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TestIamPermissionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns permissions that the caller has on the specified instance resource.
      ///
      /// Attempting this RPC on a non-existent Cloud Spanner instance resource will
      /// result in a NOT_FOUND error if the user has `spanner.instances.list`
      /// permission on the containing Google Cloud Project. Otherwise returns an
      /// empty set of permissions.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.TestIamPermissionsResponse> TestIamPermissionsAsync(global::Google.Cloud.Iam.V1.TestIamPermissionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TestIamPermissions, null, options, request);
      }
      /// <summary>
      /// Gets information about a particular instance partition.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Spanner.Admin.Instance.V1.InstancePartition GetInstancePartition(global::Google.Cloud.Spanner.Admin.Instance.V1.GetInstancePartitionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetInstancePartition(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets information about a particular instance partition.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Spanner.Admin.Instance.V1.InstancePartition GetInstancePartition(global::Google.Cloud.Spanner.Admin.Instance.V1.GetInstancePartitionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetInstancePartition, null, options, request);
      }
      /// <summary>
      /// Gets information about a particular instance partition.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Spanner.Admin.Instance.V1.InstancePartition> GetInstancePartitionAsync(global::Google.Cloud.Spanner.Admin.Instance.V1.GetInstancePartitionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetInstancePartitionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets information about a particular instance partition.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Spanner.Admin.Instance.V1.InstancePartition> GetInstancePartitionAsync(global::Google.Cloud.Spanner.Admin.Instance.V1.GetInstancePartitionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetInstancePartition, null, options, request);
      }
      /// <summary>
      /// Creates an instance partition and begins preparing it to be used. The
      /// returned long-running operation
      /// can be used to track the progress of preparing the new instance partition.
      /// The instance partition name is assigned by the caller. If the named
      /// instance partition already exists, `CreateInstancePartition` returns
      /// `ALREADY_EXISTS`.
      ///
      /// Immediately upon completion of this request:
      ///
      ///   * The instance partition is readable via the API, with all requested
      ///     attributes but no allocated resources. Its state is `CREATING`.
      ///
      /// Until completion of the returned operation:
      ///
      ///   * Cancelling the operation renders the instance partition immediately
      ///     unreadable via the API.
      ///   * The instance partition can be deleted.
      ///   * All other attempts to modify the instance partition are rejected.
      ///
      /// Upon completion of the returned operation:
      ///
      ///   * Billing for all successfully-allocated resources begins (some types
      ///     may have lower than the requested levels).
      ///   * Databases can start using this instance partition.
      ///   * The instance partition's allocated resource levels are readable via the
      ///     API.
      ///   * The instance partition's state becomes `READY`.
      ///
      /// The returned long-running operation will
      /// have a name of the format
      /// `&lt;instance_partition_name>/operations/&lt;operation_id>` and can be used to
      /// track creation of the instance partition.  The
      /// metadata field type is
      /// [CreateInstancePartitionMetadata][google.spanner.admin.instance.v1.CreateInstancePartitionMetadata].
      /// The response field type is
      /// [InstancePartition][google.spanner.admin.instance.v1.InstancePartition], if
      /// successful.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateInstancePartition(global::Google.Cloud.Spanner.Admin.Instance.V1.CreateInstancePartitionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateInstancePartition(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an instance partition and begins preparing it to be used. The
      /// returned long-running operation
      /// can be used to track the progress of preparing the new instance partition.
      /// The instance partition name is assigned by the caller. If the named
      /// instance partition already exists, `CreateInstancePartition` returns
      /// `ALREADY_EXISTS`.
      ///
      /// Immediately upon completion of this request:
      ///
      ///   * The instance partition is readable via the API, with all requested
      ///     attributes but no allocated resources. Its state is `CREATING`.
      ///
      /// Until completion of the returned operation:
      ///
      ///   * Cancelling the operation renders the instance partition immediately
      ///     unreadable via the API.
      ///   * The instance partition can be deleted.
      ///   * All other attempts to modify the instance partition are rejected.
      ///
      /// Upon completion of the returned operation:
      ///
      ///   * Billing for all successfully-allocated resources begins (some types
      ///     may have lower than the requested levels).
      ///   * Databases can start using this instance partition.
      ///   * The instance partition's allocated resource levels are readable via the
      ///     API.
      ///   * The instance partition's state becomes `READY`.
      ///
      /// The returned long-running operation will
      /// have a name of the format
      /// `&lt;instance_partition_name>/operations/&lt;operation_id>` and can be used to
      /// track creation of the instance partition.  The
      /// metadata field type is
      /// [CreateInstancePartitionMetadata][google.spanner.admin.instance.v1.CreateInstancePartitionMetadata].
      /// The response field type is
      /// [InstancePartition][google.spanner.admin.instance.v1.InstancePartition], if
      /// successful.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateInstancePartition(global::Google.Cloud.Spanner.Admin.Instance.V1.CreateInstancePartitionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateInstancePartition, null, options, request);
      }
      /// <summary>
      /// Creates an instance partition and begins preparing it to be used. The
      /// returned long-running operation
      /// can be used to track the progress of preparing the new instance partition.
      /// The instance partition name is assigned by the caller. If the named
      /// instance partition already exists, `CreateInstancePartition` returns
      /// `ALREADY_EXISTS`.
      ///
      /// Immediately upon completion of this request:
      ///
      ///   * The instance partition is readable via the API, with all requested
      ///     attributes but no allocated resources. Its state is `CREATING`.
      ///
      /// Until completion of the returned operation:
      ///
      ///   * Cancelling the operation renders the instance partition immediately
      ///     unreadable via the API.
      ///   * The instance partition can be deleted.
      ///   * All other attempts to modify the instance partition are rejected.
      ///
      /// Upon completion of the returned operation:
      ///
      ///   * Billing for all successfully-allocated resources begins (some types
      ///     may have lower than the requested levels).
      ///   * Databases can start using this instance partition.
      ///   * The instance partition's allocated resource levels are readable via the
      ///     API.
      ///   * The instance partition's state becomes `READY`.
      ///
      /// The returned long-running operation will
      /// have a name of the format
      /// `&lt;instance_partition_name>/operations/&lt;operation_id>` and can be used to
      /// track creation of the instance partition.  The
      /// metadata field type is
      /// [CreateInstancePartitionMetadata][google.spanner.admin.instance.v1.CreateInstancePartitionMetadata].
      /// The response field type is
      /// [InstancePartition][google.spanner.admin.instance.v1.InstancePartition], if
      /// successful.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateInstancePartitionAsync(global::Google.Cloud.Spanner.Admin.Instance.V1.CreateInstancePartitionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateInstancePartitionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an instance partition and begins preparing it to be used. The
      /// returned long-running operation
      /// can be used to track the progress of preparing the new instance partition.
      /// The instance partition name is assigned by the caller. If the named
      /// instance partition already exists, `CreateInstancePartition` returns
      /// `ALREADY_EXISTS`.
      ///
      /// Immediately upon completion of this request:
      ///
      ///   * The instance partition is readable via the API, with all requested
      ///     attributes but no allocated resources. Its state is `CREATING`.
      ///
      /// Until completion of the returned operation:
      ///
      ///   * Cancelling the operation renders the instance partition immediately
      ///     unreadable via the API.
      ///   * The instance partition can be deleted.
      ///   * All other attempts to modify the instance partition are rejected.
      ///
      /// Upon completion of the returned operation:
      ///
      ///   * Billing for all successfully-allocated resources begins (some types
      ///     may have lower than the requested levels).
      ///   * Databases can start using this instance partition.
      ///   * The instance partition's allocated resource levels are readable via the
      ///     API.
      ///   * The instance partition's state becomes `READY`.
      ///
      /// The returned long-running operation will
      /// have a name of the format
      /// `&lt;instance_partition_name>/operations/&lt;operation_id>` and can be used to
      /// track creation of the instance partition.  The
      /// metadata field type is
      /// [CreateInstancePartitionMetadata][google.spanner.admin.instance.v1.CreateInstancePartitionMetadata].
      /// The response field type is
      /// [InstancePartition][google.spanner.admin.instance.v1.InstancePartition], if
      /// successful.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateInstancePartitionAsync(global::Google.Cloud.Spanner.Admin.Instance.V1.CreateInstancePartitionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateInstancePartition, null, options, request);
      }
      /// <summary>
      /// Deletes an existing instance partition. Requires that the
      /// instance partition is not used by any database or backup and is not the
      /// default instance partition of an instance.
      ///
      /// Authorization requires `spanner.instancePartitions.delete` permission on
      /// the resource
      /// [name][google.spanner.admin.instance.v1.InstancePartition.name].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteInstancePartition(global::Google.Cloud.Spanner.Admin.Instance.V1.DeleteInstancePartitionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteInstancePartition(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes an existing instance partition. Requires that the
      /// instance partition is not used by any database or backup and is not the
      /// default instance partition of an instance.
      ///
      /// Authorization requires `spanner.instancePartitions.delete` permission on
      /// the resource
      /// [name][google.spanner.admin.instance.v1.InstancePartition.name].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteInstancePartition(global::Google.Cloud.Spanner.Admin.Instance.V1.DeleteInstancePartitionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteInstancePartition, null, options, request);
      }
      /// <summary>
      /// Deletes an existing instance partition. Requires that the
      /// instance partition is not used by any database or backup and is not the
      /// default instance partition of an instance.
      ///
      /// Authorization requires `spanner.instancePartitions.delete` permission on
      /// the resource
      /// [name][google.spanner.admin.instance.v1.InstancePartition.name].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteInstancePartitionAsync(global::Google.Cloud.Spanner.Admin.Instance.V1.DeleteInstancePartitionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteInstancePartitionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes an existing instance partition. Requires that the
      /// instance partition is not used by any database or backup and is not the
      /// default instance partition of an instance.
      ///
      /// Authorization requires `spanner.instancePartitions.delete` permission on
      /// the resource
      /// [name][google.spanner.admin.instance.v1.InstancePartition.name].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteInstancePartitionAsync(global::Google.Cloud.Spanner.Admin.Instance.V1.DeleteInstancePartitionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteInstancePartition, null, options, request);
      }
      /// <summary>
      /// Updates an instance partition, and begins allocating or releasing resources
      /// as requested. The returned long-running operation can be used to track the
      /// progress of updating the instance partition. If the named instance
      /// partition does not exist, returns `NOT_FOUND`.
      ///
      /// Immediately upon completion of this request:
      ///
      ///   * For resource types for which a decrease in the instance partition's
      ///   allocation has been requested, billing is based on the newly-requested
      ///   level.
      ///
      /// Until completion of the returned operation:
      ///
      ///   * Cancelling the operation sets its metadata's
      ///     [cancel_time][google.spanner.admin.instance.v1.UpdateInstancePartitionMetadata.cancel_time],
      ///     and begins restoring resources to their pre-request values. The
      ///     operation is guaranteed to succeed at undoing all resource changes,
      ///     after which point it terminates with a `CANCELLED` status.
      ///   * All other attempts to modify the instance partition are rejected.
      ///   * Reading the instance partition via the API continues to give the
      ///     pre-request resource levels.
      ///
      /// Upon completion of the returned operation:
      ///
      ///   * Billing begins for all successfully-allocated resources (some types
      ///     may have lower than the requested levels).
      ///   * All newly-reserved resources are available for serving the instance
      ///     partition's tables.
      ///   * The instance partition's new resource levels are readable via the API.
      ///
      /// The returned long-running operation will
      /// have a name of the format
      /// `&lt;instance_partition_name>/operations/&lt;operation_id>` and can be used to
      /// track the instance partition modification. The
      /// metadata field type is
      /// [UpdateInstancePartitionMetadata][google.spanner.admin.instance.v1.UpdateInstancePartitionMetadata].
      /// The response field type is
      /// [InstancePartition][google.spanner.admin.instance.v1.InstancePartition], if
      /// successful.
      ///
      /// Authorization requires `spanner.instancePartitions.update` permission on
      /// the resource
      /// [name][google.spanner.admin.instance.v1.InstancePartition.name].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateInstancePartition(global::Google.Cloud.Spanner.Admin.Instance.V1.UpdateInstancePartitionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateInstancePartition(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an instance partition, and begins allocating or releasing resources
      /// as requested. The returned long-running operation can be used to track the
      /// progress of updating the instance partition. If the named instance
      /// partition does not exist, returns `NOT_FOUND`.
      ///
      /// Immediately upon completion of this request:
      ///
      ///   * For resource types for which a decrease in the instance partition's
      ///   allocation has been requested, billing is based on the newly-requested
      ///   level.
      ///
      /// Until completion of the returned operation:
      ///
      ///   * Cancelling the operation sets its metadata's
      ///     [cancel_time][google.spanner.admin.instance.v1.UpdateInstancePartitionMetadata.cancel_time],
      ///     and begins restoring resources to their pre-request values. The
      ///     operation is guaranteed to succeed at undoing all resource changes,
      ///     after which point it terminates with a `CANCELLED` status.
      ///   * All other attempts to modify the instance partition are rejected.
      ///   * Reading the instance partition via the API continues to give the
      ///     pre-request resource levels.
      ///
      /// Upon completion of the returned operation:
      ///
      ///   * Billing begins for all successfully-allocated resources (some types
      ///     may have lower than the requested levels).
      ///   * All newly-reserved resources are available for serving the instance
      ///     partition's tables.
      ///   * The instance partition's new resource levels are readable via the API.
      ///
      /// The returned long-running operation will
      /// have a name of the format
      /// `&lt;instance_partition_name>/operations/&lt;operation_id>` and can be used to
      /// track the instance partition modification. The
      /// metadata field type is
      /// [UpdateInstancePartitionMetadata][google.spanner.admin.instance.v1.UpdateInstancePartitionMetadata].
      /// The response field type is
      /// [InstancePartition][google.spanner.admin.instance.v1.InstancePartition], if
      /// successful.
      ///
      /// Authorization requires `spanner.instancePartitions.update` permission on
      /// the resource
      /// [name][google.spanner.admin.instance.v1.InstancePartition.name].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateInstancePartition(global::Google.Cloud.Spanner.Admin.Instance.V1.UpdateInstancePartitionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateInstancePartition, null, options, request);
      }
      /// <summary>
      /// Updates an instance partition, and begins allocating or releasing resources
      /// as requested. The returned long-running operation can be used to track the
      /// progress of updating the instance partition. If the named instance
      /// partition does not exist, returns `NOT_FOUND`.
      ///
      /// Immediately upon completion of this request:
      ///
      ///   * For resource types for which a decrease in the instance partition's
      ///   allocation has been requested, billing is based on the newly-requested
      ///   level.
      ///
      /// Until completion of the returned operation:
      ///
      ///   * Cancelling the operation sets its metadata's
      ///     [cancel_time][google.spanner.admin.instance.v1.UpdateInstancePartitionMetadata.cancel_time],
      ///     and begins restoring resources to their pre-request values. The
      ///     operation is guaranteed to succeed at undoing all resource changes,
      ///     after which point it terminates with a `CANCELLED` status.
      ///   * All other attempts to modify the instance partition are rejected.
      ///   * Reading the instance partition via the API continues to give the
      ///     pre-request resource levels.
      ///
      /// Upon completion of the returned operation:
      ///
      ///   * Billing begins for all successfully-allocated resources (some types
      ///     may have lower than the requested levels).
      ///   * All newly-reserved resources are available for serving the instance
      ///     partition's tables.
      ///   * The instance partition's new resource levels are readable via the API.
      ///
      /// The returned long-running operation will
      /// have a name of the format
      /// `&lt;instance_partition_name>/operations/&lt;operation_id>` and can be used to
      /// track the instance partition modification. The
      /// metadata field type is
      /// [UpdateInstancePartitionMetadata][google.spanner.admin.instance.v1.UpdateInstancePartitionMetadata].
      /// The response field type is
      /// [InstancePartition][google.spanner.admin.instance.v1.InstancePartition], if
      /// successful.
      ///
      /// Authorization requires `spanner.instancePartitions.update` permission on
      /// the resource
      /// [name][google.spanner.admin.instance.v1.InstancePartition.name].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateInstancePartitionAsync(global::Google.Cloud.Spanner.Admin.Instance.V1.UpdateInstancePartitionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateInstancePartitionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an instance partition, and begins allocating or releasing resources
      /// as requested. The returned long-running operation can be used to track the
      /// progress of updating the instance partition. If the named instance
      /// partition does not exist, returns `NOT_FOUND`.
      ///
      /// Immediately upon completion of this request:
      ///
      ///   * For resource types for which a decrease in the instance partition's
      ///   allocation has been requested, billing is based on the newly-requested
      ///   level.
      ///
      /// Until completion of the returned operation:
      ///
      ///   * Cancelling the operation sets its metadata's
      ///     [cancel_time][google.spanner.admin.instance.v1.UpdateInstancePartitionMetadata.cancel_time],
      ///     and begins restoring resources to their pre-request values. The
      ///     operation is guaranteed to succeed at undoing all resource changes,
      ///     after which point it terminates with a `CANCELLED` status.
      ///   * All other attempts to modify the instance partition are rejected.
      ///   * Reading the instance partition via the API continues to give the
      ///     pre-request resource levels.
      ///
      /// Upon completion of the returned operation:
      ///
      ///   * Billing begins for all successfully-allocated resources (some types
      ///     may have lower than the requested levels).
      ///   * All newly-reserved resources are available for serving the instance
      ///     partition's tables.
      ///   * The instance partition's new resource levels are readable via the API.
      ///
      /// The returned long-running operation will
      /// have a name of the format
      /// `&lt;instance_partition_name>/operations/&lt;operation_id>` and can be used to
      /// track the instance partition modification. The
      /// metadata field type is
      /// [UpdateInstancePartitionMetadata][google.spanner.admin.instance.v1.UpdateInstancePartitionMetadata].
      /// The response field type is
      /// [InstancePartition][google.spanner.admin.instance.v1.InstancePartition], if
      /// successful.
      ///
      /// Authorization requires `spanner.instancePartitions.update` permission on
      /// the resource
      /// [name][google.spanner.admin.instance.v1.InstancePartition.name].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateInstancePartitionAsync(global::Google.Cloud.Spanner.Admin.Instance.V1.UpdateInstancePartitionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateInstancePartition, null, options, request);
      }
      /// <summary>
      /// Lists instance partition long-running operations in the given instance.
      /// An instance partition operation has a name of the form
      /// `projects/&lt;project>/instances/&lt;instance>/instancePartitions/&lt;instance_partition>/operations/&lt;operation>`.
      /// The long-running operation
      /// metadata field type
      /// `metadata.type_url` describes the type of the metadata. Operations returned
      /// include those that have completed/failed/canceled within the last 7 days,
      /// and pending operations. Operations returned are ordered by
      /// `operation.metadata.value.start_time` in descending order starting from the
      /// most recently started operation.
      ///
      /// Authorization requires `spanner.instancePartitionOperations.list`
      /// permission on the resource
      /// [parent][google.spanner.admin.instance.v1.ListInstancePartitionOperationsRequest.parent].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancePartitionOperationsResponse ListInstancePartitionOperations(global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancePartitionOperationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListInstancePartitionOperations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists instance partition long-running operations in the given instance.
      /// An instance partition operation has a name of the form
      /// `projects/&lt;project>/instances/&lt;instance>/instancePartitions/&lt;instance_partition>/operations/&lt;operation>`.
      /// The long-running operation
      /// metadata field type
      /// `metadata.type_url` describes the type of the metadata. Operations returned
      /// include those that have completed/failed/canceled within the last 7 days,
      /// and pending operations. Operations returned are ordered by
      /// `operation.metadata.value.start_time` in descending order starting from the
      /// most recently started operation.
      ///
      /// Authorization requires `spanner.instancePartitionOperations.list`
      /// permission on the resource
      /// [parent][google.spanner.admin.instance.v1.ListInstancePartitionOperationsRequest.parent].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancePartitionOperationsResponse ListInstancePartitionOperations(global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancePartitionOperationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListInstancePartitionOperations, null, options, request);
      }
      /// <summary>
      /// Lists instance partition long-running operations in the given instance.
      /// An instance partition operation has a name of the form
      /// `projects/&lt;project>/instances/&lt;instance>/instancePartitions/&lt;instance_partition>/operations/&lt;operation>`.
      /// The long-running operation
      /// metadata field type
      /// `metadata.type_url` describes the type of the metadata. Operations returned
      /// include those that have completed/failed/canceled within the last 7 days,
      /// and pending operations. Operations returned are ordered by
      /// `operation.metadata.value.start_time` in descending order starting from the
      /// most recently started operation.
      ///
      /// Authorization requires `spanner.instancePartitionOperations.list`
      /// permission on the resource
      /// [parent][google.spanner.admin.instance.v1.ListInstancePartitionOperationsRequest.parent].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancePartitionOperationsResponse> ListInstancePartitionOperationsAsync(global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancePartitionOperationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListInstancePartitionOperationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists instance partition long-running operations in the given instance.
      /// An instance partition operation has a name of the form
      /// `projects/&lt;project>/instances/&lt;instance>/instancePartitions/&lt;instance_partition>/operations/&lt;operation>`.
      /// The long-running operation
      /// metadata field type
      /// `metadata.type_url` describes the type of the metadata. Operations returned
      /// include those that have completed/failed/canceled within the last 7 days,
      /// and pending operations. Operations returned are ordered by
      /// `operation.metadata.value.start_time` in descending order starting from the
      /// most recently started operation.
      ///
      /// Authorization requires `spanner.instancePartitionOperations.list`
      /// permission on the resource
      /// [parent][google.spanner.admin.instance.v1.ListInstancePartitionOperationsRequest.parent].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancePartitionOperationsResponse> ListInstancePartitionOperationsAsync(global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancePartitionOperationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListInstancePartitionOperations, null, options, request);
      }
      /// <summary>
      /// Moves an instance to the target instance configuration. You can use the
      /// returned long-running operation to track
      /// the progress of moving the instance.
      ///
      /// `MoveInstance` returns `FAILED_PRECONDITION` if the instance meets any of
      /// the following criteria:
      ///
      ///   * Is undergoing a move to a different instance configuration
      ///   * Has backups
      ///   * Has an ongoing update
      ///   * Contains any CMEK-enabled databases
      ///   * Is a free trial instance
      ///
      /// While the operation is pending:
      ///
      ///   * All other attempts to modify the instance, including changes to its
      ///     compute capacity, are rejected.
      ///   * The following database and backup admin operations are rejected:
      ///
      ///     * `DatabaseAdmin.CreateDatabase`
      ///     * `DatabaseAdmin.UpdateDatabaseDdl` (disabled if default_leader is
      ///        specified in the request.)
      ///     * `DatabaseAdmin.RestoreDatabase`
      ///     * `DatabaseAdmin.CreateBackup`
      ///     * `DatabaseAdmin.CopyBackup`
      ///
      ///   * Both the source and target instance configurations are subject to
      ///     hourly compute and storage charges.
      ///   * The instance might experience higher read-write latencies and a higher
      ///     transaction abort rate. However, moving an instance doesn't cause any
      ///     downtime.
      ///
      /// The returned long-running operation has
      /// a name of the format
      /// `&lt;instance_name>/operations/&lt;operation_id>` and can be used to track
      /// the move instance operation. The
      /// metadata field type is
      /// [MoveInstanceMetadata][google.spanner.admin.instance.v1.MoveInstanceMetadata].
      /// The response field type is
      /// [Instance][google.spanner.admin.instance.v1.Instance],
      /// if successful.
      /// Cancelling the operation sets its metadata's
      /// [cancel_time][google.spanner.admin.instance.v1.MoveInstanceMetadata.cancel_time].
      /// Cancellation is not immediate because it involves moving any data
      /// previously moved to the target instance configuration back to the original
      /// instance configuration. You can use this operation to track the progress of
      /// the cancellation. Upon successful completion of the cancellation, the
      /// operation terminates with `CANCELLED` status.
      ///
      /// If not cancelled, upon completion of the returned operation:
      ///
      ///   * The instance successfully moves to the target instance
      ///     configuration.
      ///   * You are billed for compute and storage in target instance
      ///   configuration.
      ///
      /// Authorization requires the `spanner.instances.update` permission on
      /// the resource [instance][google.spanner.admin.instance.v1.Instance].
      ///
      /// For more details, see
      /// [Move an instance](https://cloud.google.com/spanner/docs/move-instance).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation MoveInstance(global::Google.Cloud.Spanner.Admin.Instance.V1.MoveInstanceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MoveInstance(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Moves an instance to the target instance configuration. You can use the
      /// returned long-running operation to track
      /// the progress of moving the instance.
      ///
      /// `MoveInstance` returns `FAILED_PRECONDITION` if the instance meets any of
      /// the following criteria:
      ///
      ///   * Is undergoing a move to a different instance configuration
      ///   * Has backups
      ///   * Has an ongoing update
      ///   * Contains any CMEK-enabled databases
      ///   * Is a free trial instance
      ///
      /// While the operation is pending:
      ///
      ///   * All other attempts to modify the instance, including changes to its
      ///     compute capacity, are rejected.
      ///   * The following database and backup admin operations are rejected:
      ///
      ///     * `DatabaseAdmin.CreateDatabase`
      ///     * `DatabaseAdmin.UpdateDatabaseDdl` (disabled if default_leader is
      ///        specified in the request.)
      ///     * `DatabaseAdmin.RestoreDatabase`
      ///     * `DatabaseAdmin.CreateBackup`
      ///     * `DatabaseAdmin.CopyBackup`
      ///
      ///   * Both the source and target instance configurations are subject to
      ///     hourly compute and storage charges.
      ///   * The instance might experience higher read-write latencies and a higher
      ///     transaction abort rate. However, moving an instance doesn't cause any
      ///     downtime.
      ///
      /// The returned long-running operation has
      /// a name of the format
      /// `&lt;instance_name>/operations/&lt;operation_id>` and can be used to track
      /// the move instance operation. The
      /// metadata field type is
      /// [MoveInstanceMetadata][google.spanner.admin.instance.v1.MoveInstanceMetadata].
      /// The response field type is
      /// [Instance][google.spanner.admin.instance.v1.Instance],
      /// if successful.
      /// Cancelling the operation sets its metadata's
      /// [cancel_time][google.spanner.admin.instance.v1.MoveInstanceMetadata.cancel_time].
      /// Cancellation is not immediate because it involves moving any data
      /// previously moved to the target instance configuration back to the original
      /// instance configuration. You can use this operation to track the progress of
      /// the cancellation. Upon successful completion of the cancellation, the
      /// operation terminates with `CANCELLED` status.
      ///
      /// If not cancelled, upon completion of the returned operation:
      ///
      ///   * The instance successfully moves to the target instance
      ///     configuration.
      ///   * You are billed for compute and storage in target instance
      ///   configuration.
      ///
      /// Authorization requires the `spanner.instances.update` permission on
      /// the resource [instance][google.spanner.admin.instance.v1.Instance].
      ///
      /// For more details, see
      /// [Move an instance](https://cloud.google.com/spanner/docs/move-instance).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation MoveInstance(global::Google.Cloud.Spanner.Admin.Instance.V1.MoveInstanceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_MoveInstance, null, options, request);
      }
      /// <summary>
      /// Moves an instance to the target instance configuration. You can use the
      /// returned long-running operation to track
      /// the progress of moving the instance.
      ///
      /// `MoveInstance` returns `FAILED_PRECONDITION` if the instance meets any of
      /// the following criteria:
      ///
      ///   * Is undergoing a move to a different instance configuration
      ///   * Has backups
      ///   * Has an ongoing update
      ///   * Contains any CMEK-enabled databases
      ///   * Is a free trial instance
      ///
      /// While the operation is pending:
      ///
      ///   * All other attempts to modify the instance, including changes to its
      ///     compute capacity, are rejected.
      ///   * The following database and backup admin operations are rejected:
      ///
      ///     * `DatabaseAdmin.CreateDatabase`
      ///     * `DatabaseAdmin.UpdateDatabaseDdl` (disabled if default_leader is
      ///        specified in the request.)
      ///     * `DatabaseAdmin.RestoreDatabase`
      ///     * `DatabaseAdmin.CreateBackup`
      ///     * `DatabaseAdmin.CopyBackup`
      ///
      ///   * Both the source and target instance configurations are subject to
      ///     hourly compute and storage charges.
      ///   * The instance might experience higher read-write latencies and a higher
      ///     transaction abort rate. However, moving an instance doesn't cause any
      ///     downtime.
      ///
      /// The returned long-running operation has
      /// a name of the format
      /// `&lt;instance_name>/operations/&lt;operation_id>` and can be used to track
      /// the move instance operation. The
      /// metadata field type is
      /// [MoveInstanceMetadata][google.spanner.admin.instance.v1.MoveInstanceMetadata].
      /// The response field type is
      /// [Instance][google.spanner.admin.instance.v1.Instance],
      /// if successful.
      /// Cancelling the operation sets its metadata's
      /// [cancel_time][google.spanner.admin.instance.v1.MoveInstanceMetadata.cancel_time].
      /// Cancellation is not immediate because it involves moving any data
      /// previously moved to the target instance configuration back to the original
      /// instance configuration. You can use this operation to track the progress of
      /// the cancellation. Upon successful completion of the cancellation, the
      /// operation terminates with `CANCELLED` status.
      ///
      /// If not cancelled, upon completion of the returned operation:
      ///
      ///   * The instance successfully moves to the target instance
      ///     configuration.
      ///   * You are billed for compute and storage in target instance
      ///   configuration.
      ///
      /// Authorization requires the `spanner.instances.update` permission on
      /// the resource [instance][google.spanner.admin.instance.v1.Instance].
      ///
      /// For more details, see
      /// [Move an instance](https://cloud.google.com/spanner/docs/move-instance).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> MoveInstanceAsync(global::Google.Cloud.Spanner.Admin.Instance.V1.MoveInstanceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MoveInstanceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Moves an instance to the target instance configuration. You can use the
      /// returned long-running operation to track
      /// the progress of moving the instance.
      ///
      /// `MoveInstance` returns `FAILED_PRECONDITION` if the instance meets any of
      /// the following criteria:
      ///
      ///   * Is undergoing a move to a different instance configuration
      ///   * Has backups
      ///   * Has an ongoing update
      ///   * Contains any CMEK-enabled databases
      ///   * Is a free trial instance
      ///
      /// While the operation is pending:
      ///
      ///   * All other attempts to modify the instance, including changes to its
      ///     compute capacity, are rejected.
      ///   * The following database and backup admin operations are rejected:
      ///
      ///     * `DatabaseAdmin.CreateDatabase`
      ///     * `DatabaseAdmin.UpdateDatabaseDdl` (disabled if default_leader is
      ///        specified in the request.)
      ///     * `DatabaseAdmin.RestoreDatabase`
      ///     * `DatabaseAdmin.CreateBackup`
      ///     * `DatabaseAdmin.CopyBackup`
      ///
      ///   * Both the source and target instance configurations are subject to
      ///     hourly compute and storage charges.
      ///   * The instance might experience higher read-write latencies and a higher
      ///     transaction abort rate. However, moving an instance doesn't cause any
      ///     downtime.
      ///
      /// The returned long-running operation has
      /// a name of the format
      /// `&lt;instance_name>/operations/&lt;operation_id>` and can be used to track
      /// the move instance operation. The
      /// metadata field type is
      /// [MoveInstanceMetadata][google.spanner.admin.instance.v1.MoveInstanceMetadata].
      /// The response field type is
      /// [Instance][google.spanner.admin.instance.v1.Instance],
      /// if successful.
      /// Cancelling the operation sets its metadata's
      /// [cancel_time][google.spanner.admin.instance.v1.MoveInstanceMetadata.cancel_time].
      /// Cancellation is not immediate because it involves moving any data
      /// previously moved to the target instance configuration back to the original
      /// instance configuration. You can use this operation to track the progress of
      /// the cancellation. Upon successful completion of the cancellation, the
      /// operation terminates with `CANCELLED` status.
      ///
      /// If not cancelled, upon completion of the returned operation:
      ///
      ///   * The instance successfully moves to the target instance
      ///     configuration.
      ///   * You are billed for compute and storage in target instance
      ///   configuration.
      ///
      /// Authorization requires the `spanner.instances.update` permission on
      /// the resource [instance][google.spanner.admin.instance.v1.Instance].
      ///
      /// For more details, see
      /// [Move an instance](https://cloud.google.com/spanner/docs/move-instance).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> MoveInstanceAsync(global::Google.Cloud.Spanner.Admin.Instance.V1.MoveInstanceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_MoveInstance, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override InstanceAdminClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new InstanceAdminClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(InstanceAdminBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ListInstanceConfigs, serviceImpl.ListInstanceConfigs)
          .AddMethod(__Method_GetInstanceConfig, serviceImpl.GetInstanceConfig)
          .AddMethod(__Method_CreateInstanceConfig, serviceImpl.CreateInstanceConfig)
          .AddMethod(__Method_UpdateInstanceConfig, serviceImpl.UpdateInstanceConfig)
          .AddMethod(__Method_DeleteInstanceConfig, serviceImpl.DeleteInstanceConfig)
          .AddMethod(__Method_ListInstanceConfigOperations, serviceImpl.ListInstanceConfigOperations)
          .AddMethod(__Method_ListInstances, serviceImpl.ListInstances)
          .AddMethod(__Method_ListInstancePartitions, serviceImpl.ListInstancePartitions)
          .AddMethod(__Method_GetInstance, serviceImpl.GetInstance)
          .AddMethod(__Method_CreateInstance, serviceImpl.CreateInstance)
          .AddMethod(__Method_UpdateInstance, serviceImpl.UpdateInstance)
          .AddMethod(__Method_DeleteInstance, serviceImpl.DeleteInstance)
          .AddMethod(__Method_SetIamPolicy, serviceImpl.SetIamPolicy)
          .AddMethod(__Method_GetIamPolicy, serviceImpl.GetIamPolicy)
          .AddMethod(__Method_TestIamPermissions, serviceImpl.TestIamPermissions)
          .AddMethod(__Method_GetInstancePartition, serviceImpl.GetInstancePartition)
          .AddMethod(__Method_CreateInstancePartition, serviceImpl.CreateInstancePartition)
          .AddMethod(__Method_DeleteInstancePartition, serviceImpl.DeleteInstancePartition)
          .AddMethod(__Method_UpdateInstancePartition, serviceImpl.UpdateInstancePartition)
          .AddMethod(__Method_ListInstancePartitionOperations, serviceImpl.ListInstancePartitionOperations)
          .AddMethod(__Method_MoveInstance, serviceImpl.MoveInstance).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, InstanceAdminBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_ListInstanceConfigs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstanceConfigsRequest, global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstanceConfigsResponse>(serviceImpl.ListInstanceConfigs));
      serviceBinder.AddMethod(__Method_GetInstanceConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Spanner.Admin.Instance.V1.GetInstanceConfigRequest, global::Google.Cloud.Spanner.Admin.Instance.V1.InstanceConfig>(serviceImpl.GetInstanceConfig));
      serviceBinder.AddMethod(__Method_CreateInstanceConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Spanner.Admin.Instance.V1.CreateInstanceConfigRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateInstanceConfig));
      serviceBinder.AddMethod(__Method_UpdateInstanceConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Spanner.Admin.Instance.V1.UpdateInstanceConfigRequest, global::Google.LongRunning.Operation>(serviceImpl.UpdateInstanceConfig));
      serviceBinder.AddMethod(__Method_DeleteInstanceConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Spanner.Admin.Instance.V1.DeleteInstanceConfigRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteInstanceConfig));
      serviceBinder.AddMethod(__Method_ListInstanceConfigOperations, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstanceConfigOperationsRequest, global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstanceConfigOperationsResponse>(serviceImpl.ListInstanceConfigOperations));
      serviceBinder.AddMethod(__Method_ListInstances, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancesRequest, global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancesResponse>(serviceImpl.ListInstances));
      serviceBinder.AddMethod(__Method_ListInstancePartitions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancePartitionsRequest, global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancePartitionsResponse>(serviceImpl.ListInstancePartitions));
      serviceBinder.AddMethod(__Method_GetInstance, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Spanner.Admin.Instance.V1.GetInstanceRequest, global::Google.Cloud.Spanner.Admin.Instance.V1.Instance>(serviceImpl.GetInstance));
      serviceBinder.AddMethod(__Method_CreateInstance, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Spanner.Admin.Instance.V1.CreateInstanceRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateInstance));
      serviceBinder.AddMethod(__Method_UpdateInstance, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Spanner.Admin.Instance.V1.UpdateInstanceRequest, global::Google.LongRunning.Operation>(serviceImpl.UpdateInstance));
      serviceBinder.AddMethod(__Method_DeleteInstance, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Spanner.Admin.Instance.V1.DeleteInstanceRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteInstance));
      serviceBinder.AddMethod(__Method_SetIamPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iam.V1.SetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy>(serviceImpl.SetIamPolicy));
      serviceBinder.AddMethod(__Method_GetIamPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iam.V1.GetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy>(serviceImpl.GetIamPolicy));
      serviceBinder.AddMethod(__Method_TestIamPermissions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iam.V1.TestIamPermissionsRequest, global::Google.Cloud.Iam.V1.TestIamPermissionsResponse>(serviceImpl.TestIamPermissions));
      serviceBinder.AddMethod(__Method_GetInstancePartition, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Spanner.Admin.Instance.V1.GetInstancePartitionRequest, global::Google.Cloud.Spanner.Admin.Instance.V1.InstancePartition>(serviceImpl.GetInstancePartition));
      serviceBinder.AddMethod(__Method_CreateInstancePartition, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Spanner.Admin.Instance.V1.CreateInstancePartitionRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateInstancePartition));
      serviceBinder.AddMethod(__Method_DeleteInstancePartition, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Spanner.Admin.Instance.V1.DeleteInstancePartitionRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteInstancePartition));
      serviceBinder.AddMethod(__Method_UpdateInstancePartition, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Spanner.Admin.Instance.V1.UpdateInstancePartitionRequest, global::Google.LongRunning.Operation>(serviceImpl.UpdateInstancePartition));
      serviceBinder.AddMethod(__Method_ListInstancePartitionOperations, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancePartitionOperationsRequest, global::Google.Cloud.Spanner.Admin.Instance.V1.ListInstancePartitionOperationsResponse>(serviceImpl.ListInstancePartitionOperations));
      serviceBinder.AddMethod(__Method_MoveInstance, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Spanner.Admin.Instance.V1.MoveInstanceRequest, global::Google.LongRunning.Operation>(serviceImpl.MoveInstance));
    }

  }
}
#endregion
