// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/capacityplanner/v1beta/usage_service.proto
// </auto-generated>
// Original file comments:
// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.CapacityPlanner.V1Beta {
  /// <summary>
  /// Provides access to historical and forecasted usage data.
  /// </summary>
  public static partial class UsageService
  {
    static readonly string __ServiceName = "google.cloud.capacityplanner.v1beta.UsageService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CapacityPlanner.V1Beta.QueryUsageHistoriesRequest> __Marshaller_google_cloud_capacityplanner_v1beta_QueryUsageHistoriesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CapacityPlanner.V1Beta.QueryUsageHistoriesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CapacityPlanner.V1Beta.QueryUsageHistoriesResponse> __Marshaller_google_cloud_capacityplanner_v1beta_QueryUsageHistoriesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CapacityPlanner.V1Beta.QueryUsageHistoriesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CapacityPlanner.V1Beta.QueryForecastsRequest> __Marshaller_google_cloud_capacityplanner_v1beta_QueryForecastsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CapacityPlanner.V1Beta.QueryForecastsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CapacityPlanner.V1Beta.QueryForecastsResponse> __Marshaller_google_cloud_capacityplanner_v1beta_QueryForecastsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CapacityPlanner.V1Beta.QueryForecastsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CapacityPlanner.V1Beta.QueryReservationsRequest> __Marshaller_google_cloud_capacityplanner_v1beta_QueryReservationsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CapacityPlanner.V1Beta.QueryReservationsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CapacityPlanner.V1Beta.QueryReservationsResponse> __Marshaller_google_cloud_capacityplanner_v1beta_QueryReservationsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CapacityPlanner.V1Beta.QueryReservationsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CapacityPlanner.V1Beta.ExportUsageHistoriesRequest> __Marshaller_google_cloud_capacityplanner_v1beta_ExportUsageHistoriesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CapacityPlanner.V1Beta.ExportUsageHistoriesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.LongRunning.Operation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CapacityPlanner.V1Beta.ExportForecastsRequest> __Marshaller_google_cloud_capacityplanner_v1beta_ExportForecastsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CapacityPlanner.V1Beta.ExportForecastsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CapacityPlanner.V1Beta.ExportReservationsUsageRequest> __Marshaller_google_cloud_capacityplanner_v1beta_ExportReservationsUsageRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CapacityPlanner.V1Beta.ExportReservationsUsageRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.CapacityPlanner.V1Beta.QueryUsageHistoriesRequest, global::Google.Cloud.CapacityPlanner.V1Beta.QueryUsageHistoriesResponse> __Method_QueryUsageHistories = new grpc::Method<global::Google.Cloud.CapacityPlanner.V1Beta.QueryUsageHistoriesRequest, global::Google.Cloud.CapacityPlanner.V1Beta.QueryUsageHistoriesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "QueryUsageHistories",
        __Marshaller_google_cloud_capacityplanner_v1beta_QueryUsageHistoriesRequest,
        __Marshaller_google_cloud_capacityplanner_v1beta_QueryUsageHistoriesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.CapacityPlanner.V1Beta.QueryForecastsRequest, global::Google.Cloud.CapacityPlanner.V1Beta.QueryForecastsResponse> __Method_QueryForecasts = new grpc::Method<global::Google.Cloud.CapacityPlanner.V1Beta.QueryForecastsRequest, global::Google.Cloud.CapacityPlanner.V1Beta.QueryForecastsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "QueryForecasts",
        __Marshaller_google_cloud_capacityplanner_v1beta_QueryForecastsRequest,
        __Marshaller_google_cloud_capacityplanner_v1beta_QueryForecastsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.CapacityPlanner.V1Beta.QueryReservationsRequest, global::Google.Cloud.CapacityPlanner.V1Beta.QueryReservationsResponse> __Method_QueryReservations = new grpc::Method<global::Google.Cloud.CapacityPlanner.V1Beta.QueryReservationsRequest, global::Google.Cloud.CapacityPlanner.V1Beta.QueryReservationsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "QueryReservations",
        __Marshaller_google_cloud_capacityplanner_v1beta_QueryReservationsRequest,
        __Marshaller_google_cloud_capacityplanner_v1beta_QueryReservationsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.CapacityPlanner.V1Beta.ExportUsageHistoriesRequest, global::Google.LongRunning.Operation> __Method_ExportUsageHistories = new grpc::Method<global::Google.Cloud.CapacityPlanner.V1Beta.ExportUsageHistoriesRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ExportUsageHistories",
        __Marshaller_google_cloud_capacityplanner_v1beta_ExportUsageHistoriesRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.CapacityPlanner.V1Beta.ExportForecastsRequest, global::Google.LongRunning.Operation> __Method_ExportForecasts = new grpc::Method<global::Google.Cloud.CapacityPlanner.V1Beta.ExportForecastsRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ExportForecasts",
        __Marshaller_google_cloud_capacityplanner_v1beta_ExportForecastsRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.CapacityPlanner.V1Beta.ExportReservationsUsageRequest, global::Google.LongRunning.Operation> __Method_ExportReservationsUsage = new grpc::Method<global::Google.Cloud.CapacityPlanner.V1Beta.ExportReservationsUsageRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ExportReservationsUsage",
        __Marshaller_google_cloud_capacityplanner_v1beta_ExportReservationsUsageRequest,
        __Marshaller_google_longrunning_Operation);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.CapacityPlanner.V1Beta.UsageServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of UsageService</summary>
    [grpc::BindServiceMethod(typeof(UsageService), "BindService")]
    public abstract partial class UsageServiceBase
    {
      /// <summary>
      /// Returns a list of the usage histories that are in the parent parameter
      /// and match your specified filters.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.CapacityPlanner.V1Beta.QueryUsageHistoriesResponse> QueryUsageHistories(global::Google.Cloud.CapacityPlanner.V1Beta.QueryUsageHistoriesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns a list of the forecasts that are in the parent parameter
      /// and match your specified filters.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.CapacityPlanner.V1Beta.QueryForecastsResponse> QueryForecasts(global::Google.Cloud.CapacityPlanner.V1Beta.QueryForecastsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns a list of the reservations that are in the parent parameter
      /// and match your specified filters.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.CapacityPlanner.V1Beta.QueryReservationsResponse> QueryReservations(global::Google.Cloud.CapacityPlanner.V1Beta.QueryReservationsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Exports historical usage data requested by user into either an existing
      /// Cloud Storage bucket or a BigQuery table.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> ExportUsageHistories(global::Google.Cloud.CapacityPlanner.V1Beta.ExportUsageHistoriesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Exports forecasted usage data requested by user into either an existing
      /// Cloud Storage bucket or a BigQuery table.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> ExportForecasts(global::Google.Cloud.CapacityPlanner.V1Beta.ExportForecastsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Exports reservations usage data requested by user into either an existing
      /// Cloud Storage bucket or a new/existing BigQuery table.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> ExportReservationsUsage(global::Google.Cloud.CapacityPlanner.V1Beta.ExportReservationsUsageRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for UsageService</summary>
    public partial class UsageServiceClient : grpc::ClientBase<UsageServiceClient>
    {
      /// <summary>Creates a new client for UsageService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public UsageServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for UsageService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public UsageServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected UsageServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected UsageServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Returns a list of the usage histories that are in the parent parameter
      /// and match your specified filters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CapacityPlanner.V1Beta.QueryUsageHistoriesResponse QueryUsageHistories(global::Google.Cloud.CapacityPlanner.V1Beta.QueryUsageHistoriesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryUsageHistories(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns a list of the usage histories that are in the parent parameter
      /// and match your specified filters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CapacityPlanner.V1Beta.QueryUsageHistoriesResponse QueryUsageHistories(global::Google.Cloud.CapacityPlanner.V1Beta.QueryUsageHistoriesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_QueryUsageHistories, null, options, request);
      }
      /// <summary>
      /// Returns a list of the usage histories that are in the parent parameter
      /// and match your specified filters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CapacityPlanner.V1Beta.QueryUsageHistoriesResponse> QueryUsageHistoriesAsync(global::Google.Cloud.CapacityPlanner.V1Beta.QueryUsageHistoriesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryUsageHistoriesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns a list of the usage histories that are in the parent parameter
      /// and match your specified filters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CapacityPlanner.V1Beta.QueryUsageHistoriesResponse> QueryUsageHistoriesAsync(global::Google.Cloud.CapacityPlanner.V1Beta.QueryUsageHistoriesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_QueryUsageHistories, null, options, request);
      }
      /// <summary>
      /// Returns a list of the forecasts that are in the parent parameter
      /// and match your specified filters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CapacityPlanner.V1Beta.QueryForecastsResponse QueryForecasts(global::Google.Cloud.CapacityPlanner.V1Beta.QueryForecastsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryForecasts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns a list of the forecasts that are in the parent parameter
      /// and match your specified filters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CapacityPlanner.V1Beta.QueryForecastsResponse QueryForecasts(global::Google.Cloud.CapacityPlanner.V1Beta.QueryForecastsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_QueryForecasts, null, options, request);
      }
      /// <summary>
      /// Returns a list of the forecasts that are in the parent parameter
      /// and match your specified filters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CapacityPlanner.V1Beta.QueryForecastsResponse> QueryForecastsAsync(global::Google.Cloud.CapacityPlanner.V1Beta.QueryForecastsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryForecastsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns a list of the forecasts that are in the parent parameter
      /// and match your specified filters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CapacityPlanner.V1Beta.QueryForecastsResponse> QueryForecastsAsync(global::Google.Cloud.CapacityPlanner.V1Beta.QueryForecastsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_QueryForecasts, null, options, request);
      }
      /// <summary>
      /// Returns a list of the reservations that are in the parent parameter
      /// and match your specified filters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CapacityPlanner.V1Beta.QueryReservationsResponse QueryReservations(global::Google.Cloud.CapacityPlanner.V1Beta.QueryReservationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryReservations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns a list of the reservations that are in the parent parameter
      /// and match your specified filters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CapacityPlanner.V1Beta.QueryReservationsResponse QueryReservations(global::Google.Cloud.CapacityPlanner.V1Beta.QueryReservationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_QueryReservations, null, options, request);
      }
      /// <summary>
      /// Returns a list of the reservations that are in the parent parameter
      /// and match your specified filters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CapacityPlanner.V1Beta.QueryReservationsResponse> QueryReservationsAsync(global::Google.Cloud.CapacityPlanner.V1Beta.QueryReservationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryReservationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns a list of the reservations that are in the parent parameter
      /// and match your specified filters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CapacityPlanner.V1Beta.QueryReservationsResponse> QueryReservationsAsync(global::Google.Cloud.CapacityPlanner.V1Beta.QueryReservationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_QueryReservations, null, options, request);
      }
      /// <summary>
      /// Exports historical usage data requested by user into either an existing
      /// Cloud Storage bucket or a BigQuery table.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ExportUsageHistories(global::Google.Cloud.CapacityPlanner.V1Beta.ExportUsageHistoriesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExportUsageHistories(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Exports historical usage data requested by user into either an existing
      /// Cloud Storage bucket or a BigQuery table.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ExportUsageHistories(global::Google.Cloud.CapacityPlanner.V1Beta.ExportUsageHistoriesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ExportUsageHistories, null, options, request);
      }
      /// <summary>
      /// Exports historical usage data requested by user into either an existing
      /// Cloud Storage bucket or a BigQuery table.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ExportUsageHistoriesAsync(global::Google.Cloud.CapacityPlanner.V1Beta.ExportUsageHistoriesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExportUsageHistoriesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Exports historical usage data requested by user into either an existing
      /// Cloud Storage bucket or a BigQuery table.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ExportUsageHistoriesAsync(global::Google.Cloud.CapacityPlanner.V1Beta.ExportUsageHistoriesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ExportUsageHistories, null, options, request);
      }
      /// <summary>
      /// Exports forecasted usage data requested by user into either an existing
      /// Cloud Storage bucket or a BigQuery table.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ExportForecasts(global::Google.Cloud.CapacityPlanner.V1Beta.ExportForecastsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExportForecasts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Exports forecasted usage data requested by user into either an existing
      /// Cloud Storage bucket or a BigQuery table.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ExportForecasts(global::Google.Cloud.CapacityPlanner.V1Beta.ExportForecastsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ExportForecasts, null, options, request);
      }
      /// <summary>
      /// Exports forecasted usage data requested by user into either an existing
      /// Cloud Storage bucket or a BigQuery table.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ExportForecastsAsync(global::Google.Cloud.CapacityPlanner.V1Beta.ExportForecastsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExportForecastsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Exports forecasted usage data requested by user into either an existing
      /// Cloud Storage bucket or a BigQuery table.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ExportForecastsAsync(global::Google.Cloud.CapacityPlanner.V1Beta.ExportForecastsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ExportForecasts, null, options, request);
      }
      /// <summary>
      /// Exports reservations usage data requested by user into either an existing
      /// Cloud Storage bucket or a new/existing BigQuery table.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ExportReservationsUsage(global::Google.Cloud.CapacityPlanner.V1Beta.ExportReservationsUsageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExportReservationsUsage(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Exports reservations usage data requested by user into either an existing
      /// Cloud Storage bucket or a new/existing BigQuery table.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ExportReservationsUsage(global::Google.Cloud.CapacityPlanner.V1Beta.ExportReservationsUsageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ExportReservationsUsage, null, options, request);
      }
      /// <summary>
      /// Exports reservations usage data requested by user into either an existing
      /// Cloud Storage bucket or a new/existing BigQuery table.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ExportReservationsUsageAsync(global::Google.Cloud.CapacityPlanner.V1Beta.ExportReservationsUsageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExportReservationsUsageAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Exports reservations usage data requested by user into either an existing
      /// Cloud Storage bucket or a new/existing BigQuery table.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ExportReservationsUsageAsync(global::Google.Cloud.CapacityPlanner.V1Beta.ExportReservationsUsageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ExportReservationsUsage, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override UsageServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new UsageServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(UsageServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_QueryUsageHistories, serviceImpl.QueryUsageHistories)
          .AddMethod(__Method_QueryForecasts, serviceImpl.QueryForecasts)
          .AddMethod(__Method_QueryReservations, serviceImpl.QueryReservations)
          .AddMethod(__Method_ExportUsageHistories, serviceImpl.ExportUsageHistories)
          .AddMethod(__Method_ExportForecasts, serviceImpl.ExportForecasts)
          .AddMethod(__Method_ExportReservationsUsage, serviceImpl.ExportReservationsUsage).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, UsageServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_QueryUsageHistories, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.CapacityPlanner.V1Beta.QueryUsageHistoriesRequest, global::Google.Cloud.CapacityPlanner.V1Beta.QueryUsageHistoriesResponse>(serviceImpl.QueryUsageHistories));
      serviceBinder.AddMethod(__Method_QueryForecasts, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.CapacityPlanner.V1Beta.QueryForecastsRequest, global::Google.Cloud.CapacityPlanner.V1Beta.QueryForecastsResponse>(serviceImpl.QueryForecasts));
      serviceBinder.AddMethod(__Method_QueryReservations, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.CapacityPlanner.V1Beta.QueryReservationsRequest, global::Google.Cloud.CapacityPlanner.V1Beta.QueryReservationsResponse>(serviceImpl.QueryReservations));
      serviceBinder.AddMethod(__Method_ExportUsageHistories, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.CapacityPlanner.V1Beta.ExportUsageHistoriesRequest, global::Google.LongRunning.Operation>(serviceImpl.ExportUsageHistories));
      serviceBinder.AddMethod(__Method_ExportForecasts, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.CapacityPlanner.V1Beta.ExportForecastsRequest, global::Google.LongRunning.Operation>(serviceImpl.ExportForecasts));
      serviceBinder.AddMethod(__Method_ExportReservationsUsage, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.CapacityPlanner.V1Beta.ExportReservationsUsageRequest, global::Google.LongRunning.Operation>(serviceImpl.ExportReservationsUsage));
    }

  }
}
#endregion
