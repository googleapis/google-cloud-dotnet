// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/capacityplanner/v1beta/capacity_planning_service.proto
// </auto-generated>
// Original file comments:
// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.CapacityPlanner.V1Beta {
  /// <summary>
  /// This API allows users to plan for GCP capacity associated with their
  /// projects. Users can request additional capacity for GCP resources such as
  /// VMs, PDs, etc.
  /// </summary>
  public static partial class CapacityPlanningService
  {
    static readonly string __ServiceName = "google.cloud.capacityplanner.v1beta.CapacityPlanningService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CapacityPlanner.V1Beta.GetCapacityPlanRequest> __Marshaller_google_cloud_capacityplanner_v1beta_GetCapacityPlanRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CapacityPlanner.V1Beta.GetCapacityPlanRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CapacityPlanner.V1Beta.CapacityPlan> __Marshaller_google_cloud_capacityplanner_v1beta_CapacityPlan = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CapacityPlanner.V1Beta.CapacityPlan.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CapacityPlanner.V1Beta.QueryCapacityPlansRequest> __Marshaller_google_cloud_capacityplanner_v1beta_QueryCapacityPlansRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CapacityPlanner.V1Beta.QueryCapacityPlansRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CapacityPlanner.V1Beta.QueryCapacityPlansResponse> __Marshaller_google_cloud_capacityplanner_v1beta_QueryCapacityPlansResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CapacityPlanner.V1Beta.QueryCapacityPlansResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CapacityPlanner.V1Beta.QueryCapacityPlanInsightsRequest> __Marshaller_google_cloud_capacityplanner_v1beta_QueryCapacityPlanInsightsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CapacityPlanner.V1Beta.QueryCapacityPlanInsightsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CapacityPlanner.V1Beta.QueryCapacityPlanInsightsResponse> __Marshaller_google_cloud_capacityplanner_v1beta_QueryCapacityPlanInsightsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CapacityPlanner.V1Beta.QueryCapacityPlanInsightsResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.CapacityPlanner.V1Beta.GetCapacityPlanRequest, global::Google.Cloud.CapacityPlanner.V1Beta.CapacityPlan> __Method_GetCapacityPlan = new grpc::Method<global::Google.Cloud.CapacityPlanner.V1Beta.GetCapacityPlanRequest, global::Google.Cloud.CapacityPlanner.V1Beta.CapacityPlan>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCapacityPlan",
        __Marshaller_google_cloud_capacityplanner_v1beta_GetCapacityPlanRequest,
        __Marshaller_google_cloud_capacityplanner_v1beta_CapacityPlan);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.CapacityPlanner.V1Beta.QueryCapacityPlansRequest, global::Google.Cloud.CapacityPlanner.V1Beta.QueryCapacityPlansResponse> __Method_QueryCapacityPlans = new grpc::Method<global::Google.Cloud.CapacityPlanner.V1Beta.QueryCapacityPlansRequest, global::Google.Cloud.CapacityPlanner.V1Beta.QueryCapacityPlansResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "QueryCapacityPlans",
        __Marshaller_google_cloud_capacityplanner_v1beta_QueryCapacityPlansRequest,
        __Marshaller_google_cloud_capacityplanner_v1beta_QueryCapacityPlansResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.CapacityPlanner.V1Beta.QueryCapacityPlanInsightsRequest, global::Google.Cloud.CapacityPlanner.V1Beta.QueryCapacityPlanInsightsResponse> __Method_QueryCapacityPlanInsights = new grpc::Method<global::Google.Cloud.CapacityPlanner.V1Beta.QueryCapacityPlanInsightsRequest, global::Google.Cloud.CapacityPlanner.V1Beta.QueryCapacityPlanInsightsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "QueryCapacityPlanInsights",
        __Marshaller_google_cloud_capacityplanner_v1beta_QueryCapacityPlanInsightsRequest,
        __Marshaller_google_cloud_capacityplanner_v1beta_QueryCapacityPlanInsightsResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.CapacityPlanner.V1Beta.CapacityPlanningServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of CapacityPlanningService</summary>
    [grpc::BindServiceMethod(typeof(CapacityPlanningService), "BindService")]
    public abstract partial class CapacityPlanningServiceBase
    {
      /// <summary>
      /// Returns information about the capacity plan.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.CapacityPlanner.V1Beta.CapacityPlan> GetCapacityPlan(global::Google.Cloud.CapacityPlanner.V1Beta.GetCapacityPlanRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns a list of the capacity plans that are in the parent parameter and
      /// match your specified filters.
      /// (The maximum list length is limited by the pageSize parameter.)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.CapacityPlanner.V1Beta.QueryCapacityPlansResponse> QueryCapacityPlans(global::Google.Cloud.CapacityPlanner.V1Beta.QueryCapacityPlansRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Query capacity plan insights that are in the parent parameter and match
      /// your specified filters.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.CapacityPlanner.V1Beta.QueryCapacityPlanInsightsResponse> QueryCapacityPlanInsights(global::Google.Cloud.CapacityPlanner.V1Beta.QueryCapacityPlanInsightsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for CapacityPlanningService</summary>
    public partial class CapacityPlanningServiceClient : grpc::ClientBase<CapacityPlanningServiceClient>
    {
      /// <summary>Creates a new client for CapacityPlanningService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public CapacityPlanningServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for CapacityPlanningService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public CapacityPlanningServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected CapacityPlanningServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected CapacityPlanningServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Returns information about the capacity plan.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CapacityPlanner.V1Beta.CapacityPlan GetCapacityPlan(global::Google.Cloud.CapacityPlanner.V1Beta.GetCapacityPlanRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCapacityPlan(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns information about the capacity plan.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CapacityPlanner.V1Beta.CapacityPlan GetCapacityPlan(global::Google.Cloud.CapacityPlanner.V1Beta.GetCapacityPlanRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCapacityPlan, null, options, request);
      }
      /// <summary>
      /// Returns information about the capacity plan.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CapacityPlanner.V1Beta.CapacityPlan> GetCapacityPlanAsync(global::Google.Cloud.CapacityPlanner.V1Beta.GetCapacityPlanRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCapacityPlanAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns information about the capacity plan.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CapacityPlanner.V1Beta.CapacityPlan> GetCapacityPlanAsync(global::Google.Cloud.CapacityPlanner.V1Beta.GetCapacityPlanRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCapacityPlan, null, options, request);
      }
      /// <summary>
      /// Returns a list of the capacity plans that are in the parent parameter and
      /// match your specified filters.
      /// (The maximum list length is limited by the pageSize parameter.)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CapacityPlanner.V1Beta.QueryCapacityPlansResponse QueryCapacityPlans(global::Google.Cloud.CapacityPlanner.V1Beta.QueryCapacityPlansRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryCapacityPlans(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns a list of the capacity plans that are in the parent parameter and
      /// match your specified filters.
      /// (The maximum list length is limited by the pageSize parameter.)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CapacityPlanner.V1Beta.QueryCapacityPlansResponse QueryCapacityPlans(global::Google.Cloud.CapacityPlanner.V1Beta.QueryCapacityPlansRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_QueryCapacityPlans, null, options, request);
      }
      /// <summary>
      /// Returns a list of the capacity plans that are in the parent parameter and
      /// match your specified filters.
      /// (The maximum list length is limited by the pageSize parameter.)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CapacityPlanner.V1Beta.QueryCapacityPlansResponse> QueryCapacityPlansAsync(global::Google.Cloud.CapacityPlanner.V1Beta.QueryCapacityPlansRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryCapacityPlansAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns a list of the capacity plans that are in the parent parameter and
      /// match your specified filters.
      /// (The maximum list length is limited by the pageSize parameter.)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CapacityPlanner.V1Beta.QueryCapacityPlansResponse> QueryCapacityPlansAsync(global::Google.Cloud.CapacityPlanner.V1Beta.QueryCapacityPlansRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_QueryCapacityPlans, null, options, request);
      }
      /// <summary>
      /// Query capacity plan insights that are in the parent parameter and match
      /// your specified filters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CapacityPlanner.V1Beta.QueryCapacityPlanInsightsResponse QueryCapacityPlanInsights(global::Google.Cloud.CapacityPlanner.V1Beta.QueryCapacityPlanInsightsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryCapacityPlanInsights(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Query capacity plan insights that are in the parent parameter and match
      /// your specified filters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CapacityPlanner.V1Beta.QueryCapacityPlanInsightsResponse QueryCapacityPlanInsights(global::Google.Cloud.CapacityPlanner.V1Beta.QueryCapacityPlanInsightsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_QueryCapacityPlanInsights, null, options, request);
      }
      /// <summary>
      /// Query capacity plan insights that are in the parent parameter and match
      /// your specified filters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CapacityPlanner.V1Beta.QueryCapacityPlanInsightsResponse> QueryCapacityPlanInsightsAsync(global::Google.Cloud.CapacityPlanner.V1Beta.QueryCapacityPlanInsightsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryCapacityPlanInsightsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Query capacity plan insights that are in the parent parameter and match
      /// your specified filters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CapacityPlanner.V1Beta.QueryCapacityPlanInsightsResponse> QueryCapacityPlanInsightsAsync(global::Google.Cloud.CapacityPlanner.V1Beta.QueryCapacityPlanInsightsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_QueryCapacityPlanInsights, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override CapacityPlanningServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new CapacityPlanningServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(CapacityPlanningServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetCapacityPlan, serviceImpl.GetCapacityPlan)
          .AddMethod(__Method_QueryCapacityPlans, serviceImpl.QueryCapacityPlans)
          .AddMethod(__Method_QueryCapacityPlanInsights, serviceImpl.QueryCapacityPlanInsights).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, CapacityPlanningServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetCapacityPlan, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.CapacityPlanner.V1Beta.GetCapacityPlanRequest, global::Google.Cloud.CapacityPlanner.V1Beta.CapacityPlan>(serviceImpl.GetCapacityPlan));
      serviceBinder.AddMethod(__Method_QueryCapacityPlans, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.CapacityPlanner.V1Beta.QueryCapacityPlansRequest, global::Google.Cloud.CapacityPlanner.V1Beta.QueryCapacityPlansResponse>(serviceImpl.QueryCapacityPlans));
      serviceBinder.AddMethod(__Method_QueryCapacityPlanInsights, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.CapacityPlanner.V1Beta.QueryCapacityPlanInsightsRequest, global::Google.Cloud.CapacityPlanner.V1Beta.QueryCapacityPlanInsightsResponse>(serviceImpl.QueryCapacityPlanInsights));
    }

  }
}
#endregion
