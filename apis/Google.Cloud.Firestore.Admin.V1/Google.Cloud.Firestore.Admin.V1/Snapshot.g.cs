// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/firestore/admin/v1/snapshot.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Firestore.Admin.V1 {

  /// <summary>Holder for reflection information generated from google/firestore/admin/v1/snapshot.proto</summary>
  public static partial class SnapshotReflection {

    #region Descriptor
    /// <summary>File descriptor for google/firestore/admin/v1/snapshot.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SnapshotReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cihnb29nbGUvZmlyZXN0b3JlL2FkbWluL3YxL3NuYXBzaG90LnByb3RvEhln",
            "b29nbGUuZmlyZXN0b3JlLmFkbWluLnYxGh9nb29nbGUvYXBpL2ZpZWxkX2Jl",
            "aGF2aW9yLnByb3RvGhlnb29nbGUvYXBpL3Jlc291cmNlLnByb3RvGh9nb29n",
            "bGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3RvIp4BCgxQaXRyU25hcHNob3QS",
            "OwoIZGF0YWJhc2UYASABKAlCKeBBAvpBIwohZmlyZXN0b3JlLmdvb2dsZWFw",
            "aXMuY29tL0RhdGFiYXNlEhkKDGRhdGFiYXNlX3VpZBgCIAEoDEID4EEDEjYK",
            "DXNuYXBzaG90X3RpbWUYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0",
            "YW1wQgPgQQJC4AEKHWNvbS5nb29nbGUuZmlyZXN0b3JlLmFkbWluLnYxQhFQ",
            "aXRyU25hcHNob3RQcm90b1ABWjljbG91ZC5nb29nbGUuY29tL2dvL2ZpcmVz",
            "dG9yZS9hcGl2MS9hZG1pbi9hZG1pbnBiO2FkbWlucGKiAgRHQ0ZTqgIfR29v",
            "Z2xlLkNsb3VkLkZpcmVzdG9yZS5BZG1pbi5WMcoCH0dvb2dsZVxDbG91ZFxG",
            "aXJlc3RvcmVcQWRtaW5cVjHqAiNHb29nbGU6OkNsb3VkOjpGaXJlc3RvcmU6",
            "OkFkbWluOjpWMWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Firestore.Admin.V1.PitrSnapshot), global::Google.Cloud.Firestore.Admin.V1.PitrSnapshot.Parser, new[]{ "Database", "DatabaseUid", "SnapshotTime" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A consistent snapshot of a database at a specific point in time.
  /// A PITR (Point-in-time recovery) snapshot with previous versions of a
  /// database's data is available for every minute up to the associated database's
  /// data retention period. If the PITR feature is enabled, the retention period
  /// is 7 days; otherwise, it is one hour.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PitrSnapshot : pb::IMessage<PitrSnapshot>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PitrSnapshot> _parser = new pb::MessageParser<PitrSnapshot>(() => new PitrSnapshot());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PitrSnapshot> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Firestore.Admin.V1.SnapshotReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PitrSnapshot() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PitrSnapshot(PitrSnapshot other) : this() {
      database_ = other.database_;
      databaseUid_ = other.databaseUid_;
      snapshotTime_ = other.snapshotTime_ != null ? other.snapshotTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PitrSnapshot Clone() {
      return new PitrSnapshot(this);
    }

    /// <summary>Field number for the "database" field.</summary>
    public const int DatabaseFieldNumber = 1;
    private string database_ = "";
    /// <summary>
    /// Required. The name of the database that this was a snapshot of. Format:
    /// `projects/{project}/databases/{database}`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Database {
      get { return database_; }
      set {
        database_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "database_uid" field.</summary>
    public const int DatabaseUidFieldNumber = 2;
    private pb::ByteString databaseUid_ = pb::ByteString.Empty;
    /// <summary>
    /// Output only. Public UUID of the database the snapshot was associated with.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString DatabaseUid {
      get { return databaseUid_; }
      set {
        databaseUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "snapshot_time" field.</summary>
    public const int SnapshotTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp snapshotTime_;
    /// <summary>
    /// Required. Snapshot time of the database.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp SnapshotTime {
      get { return snapshotTime_; }
      set {
        snapshotTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PitrSnapshot);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PitrSnapshot other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Database != other.Database) return false;
      if (DatabaseUid != other.DatabaseUid) return false;
      if (!object.Equals(SnapshotTime, other.SnapshotTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Database.Length != 0) hash ^= Database.GetHashCode();
      if (DatabaseUid.Length != 0) hash ^= DatabaseUid.GetHashCode();
      if (snapshotTime_ != null) hash ^= SnapshotTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Database.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Database);
      }
      if (DatabaseUid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(DatabaseUid);
      }
      if (snapshotTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SnapshotTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Database.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Database);
      }
      if (DatabaseUid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(DatabaseUid);
      }
      if (snapshotTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SnapshotTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Database.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Database);
      }
      if (DatabaseUid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DatabaseUid);
      }
      if (snapshotTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SnapshotTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PitrSnapshot other) {
      if (other == null) {
        return;
      }
      if (other.Database.Length != 0) {
        Database = other.Database;
      }
      if (other.DatabaseUid.Length != 0) {
        DatabaseUid = other.DatabaseUid;
      }
      if (other.snapshotTime_ != null) {
        if (snapshotTime_ == null) {
          SnapshotTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        SnapshotTime.MergeFrom(other.SnapshotTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Database = input.ReadString();
            break;
          }
          case 18: {
            DatabaseUid = input.ReadBytes();
            break;
          }
          case 26: {
            if (snapshotTime_ == null) {
              SnapshotTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(SnapshotTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Database = input.ReadString();
            break;
          }
          case 18: {
            DatabaseUid = input.ReadBytes();
            break;
          }
          case 26: {
            if (snapshotTime_ == null) {
              SnapshotTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(SnapshotTime);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
