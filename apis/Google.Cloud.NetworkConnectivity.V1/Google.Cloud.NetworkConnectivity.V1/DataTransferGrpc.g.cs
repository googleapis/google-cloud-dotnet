// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/networkconnectivity/v1/data_transfer.proto
// </auto-generated>
// Original file comments:
// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.NetworkConnectivity.V1 {
  /// <summary>
  /// DataTransferService is the service for the Data Transfer API.
  /// </summary>
  public static partial class DataTransferService
  {
    static readonly string __ServiceName = "google.cloud.networkconnectivity.v1.DataTransferService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.NetworkConnectivity.V1.ListMulticloudDataTransferConfigsRequest> __Marshaller_google_cloud_networkconnectivity_v1_ListMulticloudDataTransferConfigsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.NetworkConnectivity.V1.ListMulticloudDataTransferConfigsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.NetworkConnectivity.V1.ListMulticloudDataTransferConfigsResponse> __Marshaller_google_cloud_networkconnectivity_v1_ListMulticloudDataTransferConfigsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.NetworkConnectivity.V1.ListMulticloudDataTransferConfigsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.NetworkConnectivity.V1.GetMulticloudDataTransferConfigRequest> __Marshaller_google_cloud_networkconnectivity_v1_GetMulticloudDataTransferConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.NetworkConnectivity.V1.GetMulticloudDataTransferConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.NetworkConnectivity.V1.MulticloudDataTransferConfig> __Marshaller_google_cloud_networkconnectivity_v1_MulticloudDataTransferConfig = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.NetworkConnectivity.V1.MulticloudDataTransferConfig.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.NetworkConnectivity.V1.CreateMulticloudDataTransferConfigRequest> __Marshaller_google_cloud_networkconnectivity_v1_CreateMulticloudDataTransferConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.NetworkConnectivity.V1.CreateMulticloudDataTransferConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.LongRunning.Operation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.NetworkConnectivity.V1.UpdateMulticloudDataTransferConfigRequest> __Marshaller_google_cloud_networkconnectivity_v1_UpdateMulticloudDataTransferConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.NetworkConnectivity.V1.UpdateMulticloudDataTransferConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.NetworkConnectivity.V1.DeleteMulticloudDataTransferConfigRequest> __Marshaller_google_cloud_networkconnectivity_v1_DeleteMulticloudDataTransferConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.NetworkConnectivity.V1.DeleteMulticloudDataTransferConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.NetworkConnectivity.V1.ListDestinationsRequest> __Marshaller_google_cloud_networkconnectivity_v1_ListDestinationsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.NetworkConnectivity.V1.ListDestinationsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.NetworkConnectivity.V1.ListDestinationsResponse> __Marshaller_google_cloud_networkconnectivity_v1_ListDestinationsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.NetworkConnectivity.V1.ListDestinationsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.NetworkConnectivity.V1.GetDestinationRequest> __Marshaller_google_cloud_networkconnectivity_v1_GetDestinationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.NetworkConnectivity.V1.GetDestinationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.NetworkConnectivity.V1.Destination> __Marshaller_google_cloud_networkconnectivity_v1_Destination = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.NetworkConnectivity.V1.Destination.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.NetworkConnectivity.V1.CreateDestinationRequest> __Marshaller_google_cloud_networkconnectivity_v1_CreateDestinationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.NetworkConnectivity.V1.CreateDestinationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.NetworkConnectivity.V1.UpdateDestinationRequest> __Marshaller_google_cloud_networkconnectivity_v1_UpdateDestinationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.NetworkConnectivity.V1.UpdateDestinationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.NetworkConnectivity.V1.DeleteDestinationRequest> __Marshaller_google_cloud_networkconnectivity_v1_DeleteDestinationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.NetworkConnectivity.V1.DeleteDestinationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.NetworkConnectivity.V1.GetMulticloudDataTransferSupportedServiceRequest> __Marshaller_google_cloud_networkconnectivity_v1_GetMulticloudDataTransferSupportedServiceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.NetworkConnectivity.V1.GetMulticloudDataTransferSupportedServiceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.NetworkConnectivity.V1.MulticloudDataTransferSupportedService> __Marshaller_google_cloud_networkconnectivity_v1_MulticloudDataTransferSupportedService = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.NetworkConnectivity.V1.MulticloudDataTransferSupportedService.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.NetworkConnectivity.V1.ListMulticloudDataTransferSupportedServicesRequest> __Marshaller_google_cloud_networkconnectivity_v1_ListMulticloudDataTransferSupportedServicesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.NetworkConnectivity.V1.ListMulticloudDataTransferSupportedServicesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.NetworkConnectivity.V1.ListMulticloudDataTransferSupportedServicesResponse> __Marshaller_google_cloud_networkconnectivity_v1_ListMulticloudDataTransferSupportedServicesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.NetworkConnectivity.V1.ListMulticloudDataTransferSupportedServicesResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.NetworkConnectivity.V1.ListMulticloudDataTransferConfigsRequest, global::Google.Cloud.NetworkConnectivity.V1.ListMulticloudDataTransferConfigsResponse> __Method_ListMulticloudDataTransferConfigs = new grpc::Method<global::Google.Cloud.NetworkConnectivity.V1.ListMulticloudDataTransferConfigsRequest, global::Google.Cloud.NetworkConnectivity.V1.ListMulticloudDataTransferConfigsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListMulticloudDataTransferConfigs",
        __Marshaller_google_cloud_networkconnectivity_v1_ListMulticloudDataTransferConfigsRequest,
        __Marshaller_google_cloud_networkconnectivity_v1_ListMulticloudDataTransferConfigsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.NetworkConnectivity.V1.GetMulticloudDataTransferConfigRequest, global::Google.Cloud.NetworkConnectivity.V1.MulticloudDataTransferConfig> __Method_GetMulticloudDataTransferConfig = new grpc::Method<global::Google.Cloud.NetworkConnectivity.V1.GetMulticloudDataTransferConfigRequest, global::Google.Cloud.NetworkConnectivity.V1.MulticloudDataTransferConfig>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetMulticloudDataTransferConfig",
        __Marshaller_google_cloud_networkconnectivity_v1_GetMulticloudDataTransferConfigRequest,
        __Marshaller_google_cloud_networkconnectivity_v1_MulticloudDataTransferConfig);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.NetworkConnectivity.V1.CreateMulticloudDataTransferConfigRequest, global::Google.LongRunning.Operation> __Method_CreateMulticloudDataTransferConfig = new grpc::Method<global::Google.Cloud.NetworkConnectivity.V1.CreateMulticloudDataTransferConfigRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateMulticloudDataTransferConfig",
        __Marshaller_google_cloud_networkconnectivity_v1_CreateMulticloudDataTransferConfigRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.NetworkConnectivity.V1.UpdateMulticloudDataTransferConfigRequest, global::Google.LongRunning.Operation> __Method_UpdateMulticloudDataTransferConfig = new grpc::Method<global::Google.Cloud.NetworkConnectivity.V1.UpdateMulticloudDataTransferConfigRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateMulticloudDataTransferConfig",
        __Marshaller_google_cloud_networkconnectivity_v1_UpdateMulticloudDataTransferConfigRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.NetworkConnectivity.V1.DeleteMulticloudDataTransferConfigRequest, global::Google.LongRunning.Operation> __Method_DeleteMulticloudDataTransferConfig = new grpc::Method<global::Google.Cloud.NetworkConnectivity.V1.DeleteMulticloudDataTransferConfigRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteMulticloudDataTransferConfig",
        __Marshaller_google_cloud_networkconnectivity_v1_DeleteMulticloudDataTransferConfigRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.NetworkConnectivity.V1.ListDestinationsRequest, global::Google.Cloud.NetworkConnectivity.V1.ListDestinationsResponse> __Method_ListDestinations = new grpc::Method<global::Google.Cloud.NetworkConnectivity.V1.ListDestinationsRequest, global::Google.Cloud.NetworkConnectivity.V1.ListDestinationsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListDestinations",
        __Marshaller_google_cloud_networkconnectivity_v1_ListDestinationsRequest,
        __Marshaller_google_cloud_networkconnectivity_v1_ListDestinationsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.NetworkConnectivity.V1.GetDestinationRequest, global::Google.Cloud.NetworkConnectivity.V1.Destination> __Method_GetDestination = new grpc::Method<global::Google.Cloud.NetworkConnectivity.V1.GetDestinationRequest, global::Google.Cloud.NetworkConnectivity.V1.Destination>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDestination",
        __Marshaller_google_cloud_networkconnectivity_v1_GetDestinationRequest,
        __Marshaller_google_cloud_networkconnectivity_v1_Destination);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.NetworkConnectivity.V1.CreateDestinationRequest, global::Google.LongRunning.Operation> __Method_CreateDestination = new grpc::Method<global::Google.Cloud.NetworkConnectivity.V1.CreateDestinationRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateDestination",
        __Marshaller_google_cloud_networkconnectivity_v1_CreateDestinationRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.NetworkConnectivity.V1.UpdateDestinationRequest, global::Google.LongRunning.Operation> __Method_UpdateDestination = new grpc::Method<global::Google.Cloud.NetworkConnectivity.V1.UpdateDestinationRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateDestination",
        __Marshaller_google_cloud_networkconnectivity_v1_UpdateDestinationRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.NetworkConnectivity.V1.DeleteDestinationRequest, global::Google.LongRunning.Operation> __Method_DeleteDestination = new grpc::Method<global::Google.Cloud.NetworkConnectivity.V1.DeleteDestinationRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteDestination",
        __Marshaller_google_cloud_networkconnectivity_v1_DeleteDestinationRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.NetworkConnectivity.V1.GetMulticloudDataTransferSupportedServiceRequest, global::Google.Cloud.NetworkConnectivity.V1.MulticloudDataTransferSupportedService> __Method_GetMulticloudDataTransferSupportedService = new grpc::Method<global::Google.Cloud.NetworkConnectivity.V1.GetMulticloudDataTransferSupportedServiceRequest, global::Google.Cloud.NetworkConnectivity.V1.MulticloudDataTransferSupportedService>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetMulticloudDataTransferSupportedService",
        __Marshaller_google_cloud_networkconnectivity_v1_GetMulticloudDataTransferSupportedServiceRequest,
        __Marshaller_google_cloud_networkconnectivity_v1_MulticloudDataTransferSupportedService);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.NetworkConnectivity.V1.ListMulticloudDataTransferSupportedServicesRequest, global::Google.Cloud.NetworkConnectivity.V1.ListMulticloudDataTransferSupportedServicesResponse> __Method_ListMulticloudDataTransferSupportedServices = new grpc::Method<global::Google.Cloud.NetworkConnectivity.V1.ListMulticloudDataTransferSupportedServicesRequest, global::Google.Cloud.NetworkConnectivity.V1.ListMulticloudDataTransferSupportedServicesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListMulticloudDataTransferSupportedServices",
        __Marshaller_google_cloud_networkconnectivity_v1_ListMulticloudDataTransferSupportedServicesRequest,
        __Marshaller_google_cloud_networkconnectivity_v1_ListMulticloudDataTransferSupportedServicesResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.NetworkConnectivity.V1.DataTransferReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of DataTransferService</summary>
    [grpc::BindServiceMethod(typeof(DataTransferService), "BindService")]
    public abstract partial class DataTransferServiceBase
    {
      /// <summary>
      /// Lists the `MulticloudDataTransferConfig` resources in a specified project
      /// and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.NetworkConnectivity.V1.ListMulticloudDataTransferConfigsResponse> ListMulticloudDataTransferConfigs(global::Google.Cloud.NetworkConnectivity.V1.ListMulticloudDataTransferConfigsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets the details of a `MulticloudDataTransferConfig` resource.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.NetworkConnectivity.V1.MulticloudDataTransferConfig> GetMulticloudDataTransferConfig(global::Google.Cloud.NetworkConnectivity.V1.GetMulticloudDataTransferConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a `MulticloudDataTransferConfig` resource in a specified project
      /// and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateMulticloudDataTransferConfig(global::Google.Cloud.NetworkConnectivity.V1.CreateMulticloudDataTransferConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a `MulticloudDataTransferConfig` resource in a specified project
      /// and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> UpdateMulticloudDataTransferConfig(global::Google.Cloud.NetworkConnectivity.V1.UpdateMulticloudDataTransferConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a `MulticloudDataTransferConfig` resource.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteMulticloudDataTransferConfig(global::Google.Cloud.NetworkConnectivity.V1.DeleteMulticloudDataTransferConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists the `Destination` resources in a specified project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.NetworkConnectivity.V1.ListDestinationsResponse> ListDestinations(global::Google.Cloud.NetworkConnectivity.V1.ListDestinationsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets the details of a `Destination` resource.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.NetworkConnectivity.V1.Destination> GetDestination(global::Google.Cloud.NetworkConnectivity.V1.GetDestinationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a `Destination` resource in a specified project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateDestination(global::Google.Cloud.NetworkConnectivity.V1.CreateDestinationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a `Destination` resource in a specified project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> UpdateDestination(global::Google.Cloud.NetworkConnectivity.V1.UpdateDestinationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a `Destination` resource.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteDestination(global::Google.Cloud.NetworkConnectivity.V1.DeleteDestinationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets the details of a service that is supported for Data Transfer
      /// Essentials.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.NetworkConnectivity.V1.MulticloudDataTransferSupportedService> GetMulticloudDataTransferSupportedService(global::Google.Cloud.NetworkConnectivity.V1.GetMulticloudDataTransferSupportedServiceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists the services in the project for a region that are supported for
      /// Data Transfer Essentials.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.NetworkConnectivity.V1.ListMulticloudDataTransferSupportedServicesResponse> ListMulticloudDataTransferSupportedServices(global::Google.Cloud.NetworkConnectivity.V1.ListMulticloudDataTransferSupportedServicesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for DataTransferService</summary>
    public partial class DataTransferServiceClient : grpc::ClientBase<DataTransferServiceClient>
    {
      /// <summary>Creates a new client for DataTransferService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public DataTransferServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for DataTransferService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public DataTransferServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected DataTransferServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected DataTransferServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Lists the `MulticloudDataTransferConfig` resources in a specified project
      /// and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.NetworkConnectivity.V1.ListMulticloudDataTransferConfigsResponse ListMulticloudDataTransferConfigs(global::Google.Cloud.NetworkConnectivity.V1.ListMulticloudDataTransferConfigsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListMulticloudDataTransferConfigs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the `MulticloudDataTransferConfig` resources in a specified project
      /// and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.NetworkConnectivity.V1.ListMulticloudDataTransferConfigsResponse ListMulticloudDataTransferConfigs(global::Google.Cloud.NetworkConnectivity.V1.ListMulticloudDataTransferConfigsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListMulticloudDataTransferConfigs, null, options, request);
      }
      /// <summary>
      /// Lists the `MulticloudDataTransferConfig` resources in a specified project
      /// and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.NetworkConnectivity.V1.ListMulticloudDataTransferConfigsResponse> ListMulticloudDataTransferConfigsAsync(global::Google.Cloud.NetworkConnectivity.V1.ListMulticloudDataTransferConfigsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListMulticloudDataTransferConfigsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the `MulticloudDataTransferConfig` resources in a specified project
      /// and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.NetworkConnectivity.V1.ListMulticloudDataTransferConfigsResponse> ListMulticloudDataTransferConfigsAsync(global::Google.Cloud.NetworkConnectivity.V1.ListMulticloudDataTransferConfigsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListMulticloudDataTransferConfigs, null, options, request);
      }
      /// <summary>
      /// Gets the details of a `MulticloudDataTransferConfig` resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.NetworkConnectivity.V1.MulticloudDataTransferConfig GetMulticloudDataTransferConfig(global::Google.Cloud.NetworkConnectivity.V1.GetMulticloudDataTransferConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetMulticloudDataTransferConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the details of a `MulticloudDataTransferConfig` resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.NetworkConnectivity.V1.MulticloudDataTransferConfig GetMulticloudDataTransferConfig(global::Google.Cloud.NetworkConnectivity.V1.GetMulticloudDataTransferConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetMulticloudDataTransferConfig, null, options, request);
      }
      /// <summary>
      /// Gets the details of a `MulticloudDataTransferConfig` resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.NetworkConnectivity.V1.MulticloudDataTransferConfig> GetMulticloudDataTransferConfigAsync(global::Google.Cloud.NetworkConnectivity.V1.GetMulticloudDataTransferConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetMulticloudDataTransferConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the details of a `MulticloudDataTransferConfig` resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.NetworkConnectivity.V1.MulticloudDataTransferConfig> GetMulticloudDataTransferConfigAsync(global::Google.Cloud.NetworkConnectivity.V1.GetMulticloudDataTransferConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetMulticloudDataTransferConfig, null, options, request);
      }
      /// <summary>
      /// Creates a `MulticloudDataTransferConfig` resource in a specified project
      /// and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateMulticloudDataTransferConfig(global::Google.Cloud.NetworkConnectivity.V1.CreateMulticloudDataTransferConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateMulticloudDataTransferConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a `MulticloudDataTransferConfig` resource in a specified project
      /// and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateMulticloudDataTransferConfig(global::Google.Cloud.NetworkConnectivity.V1.CreateMulticloudDataTransferConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateMulticloudDataTransferConfig, null, options, request);
      }
      /// <summary>
      /// Creates a `MulticloudDataTransferConfig` resource in a specified project
      /// and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateMulticloudDataTransferConfigAsync(global::Google.Cloud.NetworkConnectivity.V1.CreateMulticloudDataTransferConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateMulticloudDataTransferConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a `MulticloudDataTransferConfig` resource in a specified project
      /// and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateMulticloudDataTransferConfigAsync(global::Google.Cloud.NetworkConnectivity.V1.CreateMulticloudDataTransferConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateMulticloudDataTransferConfig, null, options, request);
      }
      /// <summary>
      /// Updates a `MulticloudDataTransferConfig` resource in a specified project
      /// and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateMulticloudDataTransferConfig(global::Google.Cloud.NetworkConnectivity.V1.UpdateMulticloudDataTransferConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateMulticloudDataTransferConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a `MulticloudDataTransferConfig` resource in a specified project
      /// and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateMulticloudDataTransferConfig(global::Google.Cloud.NetworkConnectivity.V1.UpdateMulticloudDataTransferConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateMulticloudDataTransferConfig, null, options, request);
      }
      /// <summary>
      /// Updates a `MulticloudDataTransferConfig` resource in a specified project
      /// and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateMulticloudDataTransferConfigAsync(global::Google.Cloud.NetworkConnectivity.V1.UpdateMulticloudDataTransferConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateMulticloudDataTransferConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a `MulticloudDataTransferConfig` resource in a specified project
      /// and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateMulticloudDataTransferConfigAsync(global::Google.Cloud.NetworkConnectivity.V1.UpdateMulticloudDataTransferConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateMulticloudDataTransferConfig, null, options, request);
      }
      /// <summary>
      /// Deletes a `MulticloudDataTransferConfig` resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteMulticloudDataTransferConfig(global::Google.Cloud.NetworkConnectivity.V1.DeleteMulticloudDataTransferConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteMulticloudDataTransferConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a `MulticloudDataTransferConfig` resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteMulticloudDataTransferConfig(global::Google.Cloud.NetworkConnectivity.V1.DeleteMulticloudDataTransferConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteMulticloudDataTransferConfig, null, options, request);
      }
      /// <summary>
      /// Deletes a `MulticloudDataTransferConfig` resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteMulticloudDataTransferConfigAsync(global::Google.Cloud.NetworkConnectivity.V1.DeleteMulticloudDataTransferConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteMulticloudDataTransferConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a `MulticloudDataTransferConfig` resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteMulticloudDataTransferConfigAsync(global::Google.Cloud.NetworkConnectivity.V1.DeleteMulticloudDataTransferConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteMulticloudDataTransferConfig, null, options, request);
      }
      /// <summary>
      /// Lists the `Destination` resources in a specified project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.NetworkConnectivity.V1.ListDestinationsResponse ListDestinations(global::Google.Cloud.NetworkConnectivity.V1.ListDestinationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDestinations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the `Destination` resources in a specified project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.NetworkConnectivity.V1.ListDestinationsResponse ListDestinations(global::Google.Cloud.NetworkConnectivity.V1.ListDestinationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListDestinations, null, options, request);
      }
      /// <summary>
      /// Lists the `Destination` resources in a specified project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.NetworkConnectivity.V1.ListDestinationsResponse> ListDestinationsAsync(global::Google.Cloud.NetworkConnectivity.V1.ListDestinationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDestinationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the `Destination` resources in a specified project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.NetworkConnectivity.V1.ListDestinationsResponse> ListDestinationsAsync(global::Google.Cloud.NetworkConnectivity.V1.ListDestinationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListDestinations, null, options, request);
      }
      /// <summary>
      /// Gets the details of a `Destination` resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.NetworkConnectivity.V1.Destination GetDestination(global::Google.Cloud.NetworkConnectivity.V1.GetDestinationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDestination(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the details of a `Destination` resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.NetworkConnectivity.V1.Destination GetDestination(global::Google.Cloud.NetworkConnectivity.V1.GetDestinationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDestination, null, options, request);
      }
      /// <summary>
      /// Gets the details of a `Destination` resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.NetworkConnectivity.V1.Destination> GetDestinationAsync(global::Google.Cloud.NetworkConnectivity.V1.GetDestinationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDestinationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the details of a `Destination` resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.NetworkConnectivity.V1.Destination> GetDestinationAsync(global::Google.Cloud.NetworkConnectivity.V1.GetDestinationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDestination, null, options, request);
      }
      /// <summary>
      /// Creates a `Destination` resource in a specified project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateDestination(global::Google.Cloud.NetworkConnectivity.V1.CreateDestinationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateDestination(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a `Destination` resource in a specified project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateDestination(global::Google.Cloud.NetworkConnectivity.V1.CreateDestinationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateDestination, null, options, request);
      }
      /// <summary>
      /// Creates a `Destination` resource in a specified project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateDestinationAsync(global::Google.Cloud.NetworkConnectivity.V1.CreateDestinationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateDestinationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a `Destination` resource in a specified project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateDestinationAsync(global::Google.Cloud.NetworkConnectivity.V1.CreateDestinationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateDestination, null, options, request);
      }
      /// <summary>
      /// Updates a `Destination` resource in a specified project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateDestination(global::Google.Cloud.NetworkConnectivity.V1.UpdateDestinationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateDestination(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a `Destination` resource in a specified project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateDestination(global::Google.Cloud.NetworkConnectivity.V1.UpdateDestinationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateDestination, null, options, request);
      }
      /// <summary>
      /// Updates a `Destination` resource in a specified project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateDestinationAsync(global::Google.Cloud.NetworkConnectivity.V1.UpdateDestinationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateDestinationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a `Destination` resource in a specified project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateDestinationAsync(global::Google.Cloud.NetworkConnectivity.V1.UpdateDestinationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateDestination, null, options, request);
      }
      /// <summary>
      /// Deletes a `Destination` resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteDestination(global::Google.Cloud.NetworkConnectivity.V1.DeleteDestinationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteDestination(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a `Destination` resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteDestination(global::Google.Cloud.NetworkConnectivity.V1.DeleteDestinationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteDestination, null, options, request);
      }
      /// <summary>
      /// Deletes a `Destination` resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteDestinationAsync(global::Google.Cloud.NetworkConnectivity.V1.DeleteDestinationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteDestinationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a `Destination` resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteDestinationAsync(global::Google.Cloud.NetworkConnectivity.V1.DeleteDestinationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteDestination, null, options, request);
      }
      /// <summary>
      /// Gets the details of a service that is supported for Data Transfer
      /// Essentials.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.NetworkConnectivity.V1.MulticloudDataTransferSupportedService GetMulticloudDataTransferSupportedService(global::Google.Cloud.NetworkConnectivity.V1.GetMulticloudDataTransferSupportedServiceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetMulticloudDataTransferSupportedService(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the details of a service that is supported for Data Transfer
      /// Essentials.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.NetworkConnectivity.V1.MulticloudDataTransferSupportedService GetMulticloudDataTransferSupportedService(global::Google.Cloud.NetworkConnectivity.V1.GetMulticloudDataTransferSupportedServiceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetMulticloudDataTransferSupportedService, null, options, request);
      }
      /// <summary>
      /// Gets the details of a service that is supported for Data Transfer
      /// Essentials.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.NetworkConnectivity.V1.MulticloudDataTransferSupportedService> GetMulticloudDataTransferSupportedServiceAsync(global::Google.Cloud.NetworkConnectivity.V1.GetMulticloudDataTransferSupportedServiceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetMulticloudDataTransferSupportedServiceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the details of a service that is supported for Data Transfer
      /// Essentials.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.NetworkConnectivity.V1.MulticloudDataTransferSupportedService> GetMulticloudDataTransferSupportedServiceAsync(global::Google.Cloud.NetworkConnectivity.V1.GetMulticloudDataTransferSupportedServiceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetMulticloudDataTransferSupportedService, null, options, request);
      }
      /// <summary>
      /// Lists the services in the project for a region that are supported for
      /// Data Transfer Essentials.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.NetworkConnectivity.V1.ListMulticloudDataTransferSupportedServicesResponse ListMulticloudDataTransferSupportedServices(global::Google.Cloud.NetworkConnectivity.V1.ListMulticloudDataTransferSupportedServicesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListMulticloudDataTransferSupportedServices(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the services in the project for a region that are supported for
      /// Data Transfer Essentials.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.NetworkConnectivity.V1.ListMulticloudDataTransferSupportedServicesResponse ListMulticloudDataTransferSupportedServices(global::Google.Cloud.NetworkConnectivity.V1.ListMulticloudDataTransferSupportedServicesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListMulticloudDataTransferSupportedServices, null, options, request);
      }
      /// <summary>
      /// Lists the services in the project for a region that are supported for
      /// Data Transfer Essentials.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.NetworkConnectivity.V1.ListMulticloudDataTransferSupportedServicesResponse> ListMulticloudDataTransferSupportedServicesAsync(global::Google.Cloud.NetworkConnectivity.V1.ListMulticloudDataTransferSupportedServicesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListMulticloudDataTransferSupportedServicesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the services in the project for a region that are supported for
      /// Data Transfer Essentials.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.NetworkConnectivity.V1.ListMulticloudDataTransferSupportedServicesResponse> ListMulticloudDataTransferSupportedServicesAsync(global::Google.Cloud.NetworkConnectivity.V1.ListMulticloudDataTransferSupportedServicesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListMulticloudDataTransferSupportedServices, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override DataTransferServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new DataTransferServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(DataTransferServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ListMulticloudDataTransferConfigs, serviceImpl.ListMulticloudDataTransferConfigs)
          .AddMethod(__Method_GetMulticloudDataTransferConfig, serviceImpl.GetMulticloudDataTransferConfig)
          .AddMethod(__Method_CreateMulticloudDataTransferConfig, serviceImpl.CreateMulticloudDataTransferConfig)
          .AddMethod(__Method_UpdateMulticloudDataTransferConfig, serviceImpl.UpdateMulticloudDataTransferConfig)
          .AddMethod(__Method_DeleteMulticloudDataTransferConfig, serviceImpl.DeleteMulticloudDataTransferConfig)
          .AddMethod(__Method_ListDestinations, serviceImpl.ListDestinations)
          .AddMethod(__Method_GetDestination, serviceImpl.GetDestination)
          .AddMethod(__Method_CreateDestination, serviceImpl.CreateDestination)
          .AddMethod(__Method_UpdateDestination, serviceImpl.UpdateDestination)
          .AddMethod(__Method_DeleteDestination, serviceImpl.DeleteDestination)
          .AddMethod(__Method_GetMulticloudDataTransferSupportedService, serviceImpl.GetMulticloudDataTransferSupportedService)
          .AddMethod(__Method_ListMulticloudDataTransferSupportedServices, serviceImpl.ListMulticloudDataTransferSupportedServices).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, DataTransferServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_ListMulticloudDataTransferConfigs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.NetworkConnectivity.V1.ListMulticloudDataTransferConfigsRequest, global::Google.Cloud.NetworkConnectivity.V1.ListMulticloudDataTransferConfigsResponse>(serviceImpl.ListMulticloudDataTransferConfigs));
      serviceBinder.AddMethod(__Method_GetMulticloudDataTransferConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.NetworkConnectivity.V1.GetMulticloudDataTransferConfigRequest, global::Google.Cloud.NetworkConnectivity.V1.MulticloudDataTransferConfig>(serviceImpl.GetMulticloudDataTransferConfig));
      serviceBinder.AddMethod(__Method_CreateMulticloudDataTransferConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.NetworkConnectivity.V1.CreateMulticloudDataTransferConfigRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateMulticloudDataTransferConfig));
      serviceBinder.AddMethod(__Method_UpdateMulticloudDataTransferConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.NetworkConnectivity.V1.UpdateMulticloudDataTransferConfigRequest, global::Google.LongRunning.Operation>(serviceImpl.UpdateMulticloudDataTransferConfig));
      serviceBinder.AddMethod(__Method_DeleteMulticloudDataTransferConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.NetworkConnectivity.V1.DeleteMulticloudDataTransferConfigRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteMulticloudDataTransferConfig));
      serviceBinder.AddMethod(__Method_ListDestinations, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.NetworkConnectivity.V1.ListDestinationsRequest, global::Google.Cloud.NetworkConnectivity.V1.ListDestinationsResponse>(serviceImpl.ListDestinations));
      serviceBinder.AddMethod(__Method_GetDestination, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.NetworkConnectivity.V1.GetDestinationRequest, global::Google.Cloud.NetworkConnectivity.V1.Destination>(serviceImpl.GetDestination));
      serviceBinder.AddMethod(__Method_CreateDestination, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.NetworkConnectivity.V1.CreateDestinationRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateDestination));
      serviceBinder.AddMethod(__Method_UpdateDestination, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.NetworkConnectivity.V1.UpdateDestinationRequest, global::Google.LongRunning.Operation>(serviceImpl.UpdateDestination));
      serviceBinder.AddMethod(__Method_DeleteDestination, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.NetworkConnectivity.V1.DeleteDestinationRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteDestination));
      serviceBinder.AddMethod(__Method_GetMulticloudDataTransferSupportedService, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.NetworkConnectivity.V1.GetMulticloudDataTransferSupportedServiceRequest, global::Google.Cloud.NetworkConnectivity.V1.MulticloudDataTransferSupportedService>(serviceImpl.GetMulticloudDataTransferSupportedService));
      serviceBinder.AddMethod(__Method_ListMulticloudDataTransferSupportedServices, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.NetworkConnectivity.V1.ListMulticloudDataTransferSupportedServicesRequest, global::Google.Cloud.NetworkConnectivity.V1.ListMulticloudDataTransferSupportedServicesResponse>(serviceImpl.ListMulticloudDataTransferSupportedServices));
    }

  }
}
#endregion
