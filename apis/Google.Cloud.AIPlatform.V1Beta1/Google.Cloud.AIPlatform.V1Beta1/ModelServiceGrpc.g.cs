// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/aiplatform/v1beta1/model_service.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.AIPlatform.V1Beta1 {
  /// <summary>
  /// A service for managing Vertex AI's machine learning Models.
  /// </summary>
  public static partial class ModelService
  {
    static readonly string __ServiceName = "google.cloud.aiplatform.v1beta1.ModelService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.UploadModelRequest> __Marshaller_google_cloud_aiplatform_v1beta1_UploadModelRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.UploadModelRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.LongRunning.Operation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.GetModelRequest> __Marshaller_google_cloud_aiplatform_v1beta1_GetModelRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.GetModelRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.Model> __Marshaller_google_cloud_aiplatform_v1beta1_Model = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.Model.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.ListModelsRequest> __Marshaller_google_cloud_aiplatform_v1beta1_ListModelsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.ListModelsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.ListModelsResponse> __Marshaller_google_cloud_aiplatform_v1beta1_ListModelsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.ListModelsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.ListModelVersionsRequest> __Marshaller_google_cloud_aiplatform_v1beta1_ListModelVersionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.ListModelVersionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.ListModelVersionsResponse> __Marshaller_google_cloud_aiplatform_v1beta1_ListModelVersionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.ListModelVersionsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.ListModelVersionCheckpointsRequest> __Marshaller_google_cloud_aiplatform_v1beta1_ListModelVersionCheckpointsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.ListModelVersionCheckpointsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.ListModelVersionCheckpointsResponse> __Marshaller_google_cloud_aiplatform_v1beta1_ListModelVersionCheckpointsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.ListModelVersionCheckpointsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.UpdateModelRequest> __Marshaller_google_cloud_aiplatform_v1beta1_UpdateModelRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.UpdateModelRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.UpdateExplanationDatasetRequest> __Marshaller_google_cloud_aiplatform_v1beta1_UpdateExplanationDatasetRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.UpdateExplanationDatasetRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.DeleteModelRequest> __Marshaller_google_cloud_aiplatform_v1beta1_DeleteModelRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.DeleteModelRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.DeleteModelVersionRequest> __Marshaller_google_cloud_aiplatform_v1beta1_DeleteModelVersionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.DeleteModelVersionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.MergeVersionAliasesRequest> __Marshaller_google_cloud_aiplatform_v1beta1_MergeVersionAliasesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.MergeVersionAliasesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.ExportModelRequest> __Marshaller_google_cloud_aiplatform_v1beta1_ExportModelRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.ExportModelRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.CopyModelRequest> __Marshaller_google_cloud_aiplatform_v1beta1_CopyModelRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.CopyModelRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.ImportModelEvaluationRequest> __Marshaller_google_cloud_aiplatform_v1beta1_ImportModelEvaluationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.ImportModelEvaluationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.ModelEvaluation> __Marshaller_google_cloud_aiplatform_v1beta1_ModelEvaluation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.ModelEvaluation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.BatchImportModelEvaluationSlicesRequest> __Marshaller_google_cloud_aiplatform_v1beta1_BatchImportModelEvaluationSlicesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.BatchImportModelEvaluationSlicesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.BatchImportModelEvaluationSlicesResponse> __Marshaller_google_cloud_aiplatform_v1beta1_BatchImportModelEvaluationSlicesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.BatchImportModelEvaluationSlicesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.BatchImportEvaluatedAnnotationsRequest> __Marshaller_google_cloud_aiplatform_v1beta1_BatchImportEvaluatedAnnotationsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.BatchImportEvaluatedAnnotationsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.BatchImportEvaluatedAnnotationsResponse> __Marshaller_google_cloud_aiplatform_v1beta1_BatchImportEvaluatedAnnotationsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.BatchImportEvaluatedAnnotationsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.GetModelEvaluationRequest> __Marshaller_google_cloud_aiplatform_v1beta1_GetModelEvaluationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.GetModelEvaluationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.ListModelEvaluationsRequest> __Marshaller_google_cloud_aiplatform_v1beta1_ListModelEvaluationsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.ListModelEvaluationsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.ListModelEvaluationsResponse> __Marshaller_google_cloud_aiplatform_v1beta1_ListModelEvaluationsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.ListModelEvaluationsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.GetModelEvaluationSliceRequest> __Marshaller_google_cloud_aiplatform_v1beta1_GetModelEvaluationSliceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.GetModelEvaluationSliceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.ModelEvaluationSlice> __Marshaller_google_cloud_aiplatform_v1beta1_ModelEvaluationSlice = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.ModelEvaluationSlice.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.ListModelEvaluationSlicesRequest> __Marshaller_google_cloud_aiplatform_v1beta1_ListModelEvaluationSlicesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.ListModelEvaluationSlicesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.ListModelEvaluationSlicesResponse> __Marshaller_google_cloud_aiplatform_v1beta1_ListModelEvaluationSlicesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.ListModelEvaluationSlicesResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.UploadModelRequest, global::Google.LongRunning.Operation> __Method_UploadModel = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.UploadModelRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UploadModel",
        __Marshaller_google_cloud_aiplatform_v1beta1_UploadModelRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.GetModelRequest, global::Google.Cloud.AIPlatform.V1Beta1.Model> __Method_GetModel = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.GetModelRequest, global::Google.Cloud.AIPlatform.V1Beta1.Model>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetModel",
        __Marshaller_google_cloud_aiplatform_v1beta1_GetModelRequest,
        __Marshaller_google_cloud_aiplatform_v1beta1_Model);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.ListModelsRequest, global::Google.Cloud.AIPlatform.V1Beta1.ListModelsResponse> __Method_ListModels = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.ListModelsRequest, global::Google.Cloud.AIPlatform.V1Beta1.ListModelsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListModels",
        __Marshaller_google_cloud_aiplatform_v1beta1_ListModelsRequest,
        __Marshaller_google_cloud_aiplatform_v1beta1_ListModelsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.ListModelVersionsRequest, global::Google.Cloud.AIPlatform.V1Beta1.ListModelVersionsResponse> __Method_ListModelVersions = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.ListModelVersionsRequest, global::Google.Cloud.AIPlatform.V1Beta1.ListModelVersionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListModelVersions",
        __Marshaller_google_cloud_aiplatform_v1beta1_ListModelVersionsRequest,
        __Marshaller_google_cloud_aiplatform_v1beta1_ListModelVersionsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.ListModelVersionCheckpointsRequest, global::Google.Cloud.AIPlatform.V1Beta1.ListModelVersionCheckpointsResponse> __Method_ListModelVersionCheckpoints = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.ListModelVersionCheckpointsRequest, global::Google.Cloud.AIPlatform.V1Beta1.ListModelVersionCheckpointsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListModelVersionCheckpoints",
        __Marshaller_google_cloud_aiplatform_v1beta1_ListModelVersionCheckpointsRequest,
        __Marshaller_google_cloud_aiplatform_v1beta1_ListModelVersionCheckpointsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.UpdateModelRequest, global::Google.Cloud.AIPlatform.V1Beta1.Model> __Method_UpdateModel = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.UpdateModelRequest, global::Google.Cloud.AIPlatform.V1Beta1.Model>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateModel",
        __Marshaller_google_cloud_aiplatform_v1beta1_UpdateModelRequest,
        __Marshaller_google_cloud_aiplatform_v1beta1_Model);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.UpdateExplanationDatasetRequest, global::Google.LongRunning.Operation> __Method_UpdateExplanationDataset = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.UpdateExplanationDatasetRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateExplanationDataset",
        __Marshaller_google_cloud_aiplatform_v1beta1_UpdateExplanationDatasetRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.DeleteModelRequest, global::Google.LongRunning.Operation> __Method_DeleteModel = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.DeleteModelRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteModel",
        __Marshaller_google_cloud_aiplatform_v1beta1_DeleteModelRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.DeleteModelVersionRequest, global::Google.LongRunning.Operation> __Method_DeleteModelVersion = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.DeleteModelVersionRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteModelVersion",
        __Marshaller_google_cloud_aiplatform_v1beta1_DeleteModelVersionRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.MergeVersionAliasesRequest, global::Google.Cloud.AIPlatform.V1Beta1.Model> __Method_MergeVersionAliases = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.MergeVersionAliasesRequest, global::Google.Cloud.AIPlatform.V1Beta1.Model>(
        grpc::MethodType.Unary,
        __ServiceName,
        "MergeVersionAliases",
        __Marshaller_google_cloud_aiplatform_v1beta1_MergeVersionAliasesRequest,
        __Marshaller_google_cloud_aiplatform_v1beta1_Model);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.ExportModelRequest, global::Google.LongRunning.Operation> __Method_ExportModel = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.ExportModelRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ExportModel",
        __Marshaller_google_cloud_aiplatform_v1beta1_ExportModelRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.CopyModelRequest, global::Google.LongRunning.Operation> __Method_CopyModel = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.CopyModelRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CopyModel",
        __Marshaller_google_cloud_aiplatform_v1beta1_CopyModelRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.ImportModelEvaluationRequest, global::Google.Cloud.AIPlatform.V1Beta1.ModelEvaluation> __Method_ImportModelEvaluation = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.ImportModelEvaluationRequest, global::Google.Cloud.AIPlatform.V1Beta1.ModelEvaluation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ImportModelEvaluation",
        __Marshaller_google_cloud_aiplatform_v1beta1_ImportModelEvaluationRequest,
        __Marshaller_google_cloud_aiplatform_v1beta1_ModelEvaluation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.BatchImportModelEvaluationSlicesRequest, global::Google.Cloud.AIPlatform.V1Beta1.BatchImportModelEvaluationSlicesResponse> __Method_BatchImportModelEvaluationSlices = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.BatchImportModelEvaluationSlicesRequest, global::Google.Cloud.AIPlatform.V1Beta1.BatchImportModelEvaluationSlicesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BatchImportModelEvaluationSlices",
        __Marshaller_google_cloud_aiplatform_v1beta1_BatchImportModelEvaluationSlicesRequest,
        __Marshaller_google_cloud_aiplatform_v1beta1_BatchImportModelEvaluationSlicesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.BatchImportEvaluatedAnnotationsRequest, global::Google.Cloud.AIPlatform.V1Beta1.BatchImportEvaluatedAnnotationsResponse> __Method_BatchImportEvaluatedAnnotations = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.BatchImportEvaluatedAnnotationsRequest, global::Google.Cloud.AIPlatform.V1Beta1.BatchImportEvaluatedAnnotationsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BatchImportEvaluatedAnnotations",
        __Marshaller_google_cloud_aiplatform_v1beta1_BatchImportEvaluatedAnnotationsRequest,
        __Marshaller_google_cloud_aiplatform_v1beta1_BatchImportEvaluatedAnnotationsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.GetModelEvaluationRequest, global::Google.Cloud.AIPlatform.V1Beta1.ModelEvaluation> __Method_GetModelEvaluation = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.GetModelEvaluationRequest, global::Google.Cloud.AIPlatform.V1Beta1.ModelEvaluation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetModelEvaluation",
        __Marshaller_google_cloud_aiplatform_v1beta1_GetModelEvaluationRequest,
        __Marshaller_google_cloud_aiplatform_v1beta1_ModelEvaluation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.ListModelEvaluationsRequest, global::Google.Cloud.AIPlatform.V1Beta1.ListModelEvaluationsResponse> __Method_ListModelEvaluations = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.ListModelEvaluationsRequest, global::Google.Cloud.AIPlatform.V1Beta1.ListModelEvaluationsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListModelEvaluations",
        __Marshaller_google_cloud_aiplatform_v1beta1_ListModelEvaluationsRequest,
        __Marshaller_google_cloud_aiplatform_v1beta1_ListModelEvaluationsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.GetModelEvaluationSliceRequest, global::Google.Cloud.AIPlatform.V1Beta1.ModelEvaluationSlice> __Method_GetModelEvaluationSlice = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.GetModelEvaluationSliceRequest, global::Google.Cloud.AIPlatform.V1Beta1.ModelEvaluationSlice>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetModelEvaluationSlice",
        __Marshaller_google_cloud_aiplatform_v1beta1_GetModelEvaluationSliceRequest,
        __Marshaller_google_cloud_aiplatform_v1beta1_ModelEvaluationSlice);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.ListModelEvaluationSlicesRequest, global::Google.Cloud.AIPlatform.V1Beta1.ListModelEvaluationSlicesResponse> __Method_ListModelEvaluationSlices = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.ListModelEvaluationSlicesRequest, global::Google.Cloud.AIPlatform.V1Beta1.ListModelEvaluationSlicesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListModelEvaluationSlices",
        __Marshaller_google_cloud_aiplatform_v1beta1_ListModelEvaluationSlicesRequest,
        __Marshaller_google_cloud_aiplatform_v1beta1_ListModelEvaluationSlicesResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.AIPlatform.V1Beta1.ModelServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of ModelService</summary>
    [grpc::BindServiceMethod(typeof(ModelService), "BindService")]
    public abstract partial class ModelServiceBase
    {
      /// <summary>
      /// Uploads a Model artifact into Vertex AI.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> UploadModel(global::Google.Cloud.AIPlatform.V1Beta1.UploadModelRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a Model.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.AIPlatform.V1Beta1.Model> GetModel(global::Google.Cloud.AIPlatform.V1Beta1.GetModelRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists Models in a Location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.AIPlatform.V1Beta1.ListModelsResponse> ListModels(global::Google.Cloud.AIPlatform.V1Beta1.ListModelsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists versions of the specified model.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.AIPlatform.V1Beta1.ListModelVersionsResponse> ListModelVersions(global::Google.Cloud.AIPlatform.V1Beta1.ListModelVersionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists checkpoints of the specified model version.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.AIPlatform.V1Beta1.ListModelVersionCheckpointsResponse> ListModelVersionCheckpoints(global::Google.Cloud.AIPlatform.V1Beta1.ListModelVersionCheckpointsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a Model.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.AIPlatform.V1Beta1.Model> UpdateModel(global::Google.Cloud.AIPlatform.V1Beta1.UpdateModelRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Incrementally update the dataset used for an examples model.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> UpdateExplanationDataset(global::Google.Cloud.AIPlatform.V1Beta1.UpdateExplanationDatasetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a Model.
      ///
      /// A model cannot be deleted if any
      /// [Endpoint][google.cloud.aiplatform.v1beta1.Endpoint] resource has a
      /// [DeployedModel][google.cloud.aiplatform.v1beta1.DeployedModel] based on the
      /// model in its
      /// [deployed_models][google.cloud.aiplatform.v1beta1.Endpoint.deployed_models]
      /// field.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteModel(global::Google.Cloud.AIPlatform.V1Beta1.DeleteModelRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a Model version.
      ///
      /// Model version can only be deleted if there are no
      /// [DeployedModels][google.cloud.aiplatform.v1beta1.DeployedModel] created
      /// from it. Deleting the only version in the Model is not allowed. Use
      /// [DeleteModel][google.cloud.aiplatform.v1beta1.ModelService.DeleteModel] for
      /// deleting the Model instead.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteModelVersion(global::Google.Cloud.AIPlatform.V1Beta1.DeleteModelVersionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Merges a set of aliases for a Model version.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.AIPlatform.V1Beta1.Model> MergeVersionAliases(global::Google.Cloud.AIPlatform.V1Beta1.MergeVersionAliasesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Exports a trained, exportable Model to a location specified by the
      /// user. A Model is considered to be exportable if it has at least one
      /// [supported export
      /// format][google.cloud.aiplatform.v1beta1.Model.supported_export_formats].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> ExportModel(global::Google.Cloud.AIPlatform.V1Beta1.ExportModelRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Copies an already existing Vertex AI Model into the specified Location.
      /// The source Model must exist in the same Project.
      /// When copying custom Models, the users themselves are responsible for
      /// [Model.metadata][google.cloud.aiplatform.v1beta1.Model.metadata] content to
      /// be region-agnostic, as well as making sure that any resources (e.g. files)
      /// it depends on remain accessible.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CopyModel(global::Google.Cloud.AIPlatform.V1Beta1.CopyModelRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Imports an externally generated ModelEvaluation.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.AIPlatform.V1Beta1.ModelEvaluation> ImportModelEvaluation(global::Google.Cloud.AIPlatform.V1Beta1.ImportModelEvaluationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Imports a list of externally generated ModelEvaluationSlice.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.AIPlatform.V1Beta1.BatchImportModelEvaluationSlicesResponse> BatchImportModelEvaluationSlices(global::Google.Cloud.AIPlatform.V1Beta1.BatchImportModelEvaluationSlicesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Imports a list of externally generated EvaluatedAnnotations.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.AIPlatform.V1Beta1.BatchImportEvaluatedAnnotationsResponse> BatchImportEvaluatedAnnotations(global::Google.Cloud.AIPlatform.V1Beta1.BatchImportEvaluatedAnnotationsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a ModelEvaluation.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.AIPlatform.V1Beta1.ModelEvaluation> GetModelEvaluation(global::Google.Cloud.AIPlatform.V1Beta1.GetModelEvaluationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists ModelEvaluations in a Model.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.AIPlatform.V1Beta1.ListModelEvaluationsResponse> ListModelEvaluations(global::Google.Cloud.AIPlatform.V1Beta1.ListModelEvaluationsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a ModelEvaluationSlice.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.AIPlatform.V1Beta1.ModelEvaluationSlice> GetModelEvaluationSlice(global::Google.Cloud.AIPlatform.V1Beta1.GetModelEvaluationSliceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists ModelEvaluationSlices in a ModelEvaluation.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.AIPlatform.V1Beta1.ListModelEvaluationSlicesResponse> ListModelEvaluationSlices(global::Google.Cloud.AIPlatform.V1Beta1.ListModelEvaluationSlicesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for ModelService</summary>
    public partial class ModelServiceClient : grpc::ClientBase<ModelServiceClient>
    {
      /// <summary>Creates a new client for ModelService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ModelServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ModelService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ModelServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ModelServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ModelServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Uploads a Model artifact into Vertex AI.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UploadModel(global::Google.Cloud.AIPlatform.V1Beta1.UploadModelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UploadModel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Uploads a Model artifact into Vertex AI.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UploadModel(global::Google.Cloud.AIPlatform.V1Beta1.UploadModelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UploadModel, null, options, request);
      }
      /// <summary>
      /// Uploads a Model artifact into Vertex AI.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UploadModelAsync(global::Google.Cloud.AIPlatform.V1Beta1.UploadModelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UploadModelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Uploads a Model artifact into Vertex AI.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UploadModelAsync(global::Google.Cloud.AIPlatform.V1Beta1.UploadModelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UploadModel, null, options, request);
      }
      /// <summary>
      /// Gets a Model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.Model GetModel(global::Google.Cloud.AIPlatform.V1Beta1.GetModelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetModel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a Model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.Model GetModel(global::Google.Cloud.AIPlatform.V1Beta1.GetModelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetModel, null, options, request);
      }
      /// <summary>
      /// Gets a Model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.Model> GetModelAsync(global::Google.Cloud.AIPlatform.V1Beta1.GetModelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetModelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a Model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.Model> GetModelAsync(global::Google.Cloud.AIPlatform.V1Beta1.GetModelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetModel, null, options, request);
      }
      /// <summary>
      /// Lists Models in a Location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.ListModelsResponse ListModels(global::Google.Cloud.AIPlatform.V1Beta1.ListModelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListModels(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists Models in a Location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.ListModelsResponse ListModels(global::Google.Cloud.AIPlatform.V1Beta1.ListModelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListModels, null, options, request);
      }
      /// <summary>
      /// Lists Models in a Location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.ListModelsResponse> ListModelsAsync(global::Google.Cloud.AIPlatform.V1Beta1.ListModelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListModelsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists Models in a Location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.ListModelsResponse> ListModelsAsync(global::Google.Cloud.AIPlatform.V1Beta1.ListModelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListModels, null, options, request);
      }
      /// <summary>
      /// Lists versions of the specified model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.ListModelVersionsResponse ListModelVersions(global::Google.Cloud.AIPlatform.V1Beta1.ListModelVersionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListModelVersions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists versions of the specified model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.ListModelVersionsResponse ListModelVersions(global::Google.Cloud.AIPlatform.V1Beta1.ListModelVersionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListModelVersions, null, options, request);
      }
      /// <summary>
      /// Lists versions of the specified model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.ListModelVersionsResponse> ListModelVersionsAsync(global::Google.Cloud.AIPlatform.V1Beta1.ListModelVersionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListModelVersionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists versions of the specified model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.ListModelVersionsResponse> ListModelVersionsAsync(global::Google.Cloud.AIPlatform.V1Beta1.ListModelVersionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListModelVersions, null, options, request);
      }
      /// <summary>
      /// Lists checkpoints of the specified model version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.ListModelVersionCheckpointsResponse ListModelVersionCheckpoints(global::Google.Cloud.AIPlatform.V1Beta1.ListModelVersionCheckpointsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListModelVersionCheckpoints(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists checkpoints of the specified model version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.ListModelVersionCheckpointsResponse ListModelVersionCheckpoints(global::Google.Cloud.AIPlatform.V1Beta1.ListModelVersionCheckpointsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListModelVersionCheckpoints, null, options, request);
      }
      /// <summary>
      /// Lists checkpoints of the specified model version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.ListModelVersionCheckpointsResponse> ListModelVersionCheckpointsAsync(global::Google.Cloud.AIPlatform.V1Beta1.ListModelVersionCheckpointsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListModelVersionCheckpointsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists checkpoints of the specified model version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.ListModelVersionCheckpointsResponse> ListModelVersionCheckpointsAsync(global::Google.Cloud.AIPlatform.V1Beta1.ListModelVersionCheckpointsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListModelVersionCheckpoints, null, options, request);
      }
      /// <summary>
      /// Updates a Model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.Model UpdateModel(global::Google.Cloud.AIPlatform.V1Beta1.UpdateModelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateModel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a Model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.Model UpdateModel(global::Google.Cloud.AIPlatform.V1Beta1.UpdateModelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateModel, null, options, request);
      }
      /// <summary>
      /// Updates a Model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.Model> UpdateModelAsync(global::Google.Cloud.AIPlatform.V1Beta1.UpdateModelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateModelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a Model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.Model> UpdateModelAsync(global::Google.Cloud.AIPlatform.V1Beta1.UpdateModelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateModel, null, options, request);
      }
      /// <summary>
      /// Incrementally update the dataset used for an examples model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateExplanationDataset(global::Google.Cloud.AIPlatform.V1Beta1.UpdateExplanationDatasetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateExplanationDataset(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Incrementally update the dataset used for an examples model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateExplanationDataset(global::Google.Cloud.AIPlatform.V1Beta1.UpdateExplanationDatasetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateExplanationDataset, null, options, request);
      }
      /// <summary>
      /// Incrementally update the dataset used for an examples model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateExplanationDatasetAsync(global::Google.Cloud.AIPlatform.V1Beta1.UpdateExplanationDatasetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateExplanationDatasetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Incrementally update the dataset used for an examples model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateExplanationDatasetAsync(global::Google.Cloud.AIPlatform.V1Beta1.UpdateExplanationDatasetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateExplanationDataset, null, options, request);
      }
      /// <summary>
      /// Deletes a Model.
      ///
      /// A model cannot be deleted if any
      /// [Endpoint][google.cloud.aiplatform.v1beta1.Endpoint] resource has a
      /// [DeployedModel][google.cloud.aiplatform.v1beta1.DeployedModel] based on the
      /// model in its
      /// [deployed_models][google.cloud.aiplatform.v1beta1.Endpoint.deployed_models]
      /// field.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteModel(global::Google.Cloud.AIPlatform.V1Beta1.DeleteModelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteModel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a Model.
      ///
      /// A model cannot be deleted if any
      /// [Endpoint][google.cloud.aiplatform.v1beta1.Endpoint] resource has a
      /// [DeployedModel][google.cloud.aiplatform.v1beta1.DeployedModel] based on the
      /// model in its
      /// [deployed_models][google.cloud.aiplatform.v1beta1.Endpoint.deployed_models]
      /// field.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteModel(global::Google.Cloud.AIPlatform.V1Beta1.DeleteModelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteModel, null, options, request);
      }
      /// <summary>
      /// Deletes a Model.
      ///
      /// A model cannot be deleted if any
      /// [Endpoint][google.cloud.aiplatform.v1beta1.Endpoint] resource has a
      /// [DeployedModel][google.cloud.aiplatform.v1beta1.DeployedModel] based on the
      /// model in its
      /// [deployed_models][google.cloud.aiplatform.v1beta1.Endpoint.deployed_models]
      /// field.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteModelAsync(global::Google.Cloud.AIPlatform.V1Beta1.DeleteModelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteModelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a Model.
      ///
      /// A model cannot be deleted if any
      /// [Endpoint][google.cloud.aiplatform.v1beta1.Endpoint] resource has a
      /// [DeployedModel][google.cloud.aiplatform.v1beta1.DeployedModel] based on the
      /// model in its
      /// [deployed_models][google.cloud.aiplatform.v1beta1.Endpoint.deployed_models]
      /// field.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteModelAsync(global::Google.Cloud.AIPlatform.V1Beta1.DeleteModelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteModel, null, options, request);
      }
      /// <summary>
      /// Deletes a Model version.
      ///
      /// Model version can only be deleted if there are no
      /// [DeployedModels][google.cloud.aiplatform.v1beta1.DeployedModel] created
      /// from it. Deleting the only version in the Model is not allowed. Use
      /// [DeleteModel][google.cloud.aiplatform.v1beta1.ModelService.DeleteModel] for
      /// deleting the Model instead.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteModelVersion(global::Google.Cloud.AIPlatform.V1Beta1.DeleteModelVersionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteModelVersion(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a Model version.
      ///
      /// Model version can only be deleted if there are no
      /// [DeployedModels][google.cloud.aiplatform.v1beta1.DeployedModel] created
      /// from it. Deleting the only version in the Model is not allowed. Use
      /// [DeleteModel][google.cloud.aiplatform.v1beta1.ModelService.DeleteModel] for
      /// deleting the Model instead.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteModelVersion(global::Google.Cloud.AIPlatform.V1Beta1.DeleteModelVersionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteModelVersion, null, options, request);
      }
      /// <summary>
      /// Deletes a Model version.
      ///
      /// Model version can only be deleted if there are no
      /// [DeployedModels][google.cloud.aiplatform.v1beta1.DeployedModel] created
      /// from it. Deleting the only version in the Model is not allowed. Use
      /// [DeleteModel][google.cloud.aiplatform.v1beta1.ModelService.DeleteModel] for
      /// deleting the Model instead.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteModelVersionAsync(global::Google.Cloud.AIPlatform.V1Beta1.DeleteModelVersionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteModelVersionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a Model version.
      ///
      /// Model version can only be deleted if there are no
      /// [DeployedModels][google.cloud.aiplatform.v1beta1.DeployedModel] created
      /// from it. Deleting the only version in the Model is not allowed. Use
      /// [DeleteModel][google.cloud.aiplatform.v1beta1.ModelService.DeleteModel] for
      /// deleting the Model instead.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteModelVersionAsync(global::Google.Cloud.AIPlatform.V1Beta1.DeleteModelVersionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteModelVersion, null, options, request);
      }
      /// <summary>
      /// Merges a set of aliases for a Model version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.Model MergeVersionAliases(global::Google.Cloud.AIPlatform.V1Beta1.MergeVersionAliasesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MergeVersionAliases(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Merges a set of aliases for a Model version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.Model MergeVersionAliases(global::Google.Cloud.AIPlatform.V1Beta1.MergeVersionAliasesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_MergeVersionAliases, null, options, request);
      }
      /// <summary>
      /// Merges a set of aliases for a Model version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.Model> MergeVersionAliasesAsync(global::Google.Cloud.AIPlatform.V1Beta1.MergeVersionAliasesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MergeVersionAliasesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Merges a set of aliases for a Model version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.Model> MergeVersionAliasesAsync(global::Google.Cloud.AIPlatform.V1Beta1.MergeVersionAliasesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_MergeVersionAliases, null, options, request);
      }
      /// <summary>
      /// Exports a trained, exportable Model to a location specified by the
      /// user. A Model is considered to be exportable if it has at least one
      /// [supported export
      /// format][google.cloud.aiplatform.v1beta1.Model.supported_export_formats].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ExportModel(global::Google.Cloud.AIPlatform.V1Beta1.ExportModelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExportModel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Exports a trained, exportable Model to a location specified by the
      /// user. A Model is considered to be exportable if it has at least one
      /// [supported export
      /// format][google.cloud.aiplatform.v1beta1.Model.supported_export_formats].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ExportModel(global::Google.Cloud.AIPlatform.V1Beta1.ExportModelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ExportModel, null, options, request);
      }
      /// <summary>
      /// Exports a trained, exportable Model to a location specified by the
      /// user. A Model is considered to be exportable if it has at least one
      /// [supported export
      /// format][google.cloud.aiplatform.v1beta1.Model.supported_export_formats].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ExportModelAsync(global::Google.Cloud.AIPlatform.V1Beta1.ExportModelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExportModelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Exports a trained, exportable Model to a location specified by the
      /// user. A Model is considered to be exportable if it has at least one
      /// [supported export
      /// format][google.cloud.aiplatform.v1beta1.Model.supported_export_formats].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ExportModelAsync(global::Google.Cloud.AIPlatform.V1Beta1.ExportModelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ExportModel, null, options, request);
      }
      /// <summary>
      /// Copies an already existing Vertex AI Model into the specified Location.
      /// The source Model must exist in the same Project.
      /// When copying custom Models, the users themselves are responsible for
      /// [Model.metadata][google.cloud.aiplatform.v1beta1.Model.metadata] content to
      /// be region-agnostic, as well as making sure that any resources (e.g. files)
      /// it depends on remain accessible.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CopyModel(global::Google.Cloud.AIPlatform.V1Beta1.CopyModelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CopyModel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Copies an already existing Vertex AI Model into the specified Location.
      /// The source Model must exist in the same Project.
      /// When copying custom Models, the users themselves are responsible for
      /// [Model.metadata][google.cloud.aiplatform.v1beta1.Model.metadata] content to
      /// be region-agnostic, as well as making sure that any resources (e.g. files)
      /// it depends on remain accessible.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CopyModel(global::Google.Cloud.AIPlatform.V1Beta1.CopyModelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CopyModel, null, options, request);
      }
      /// <summary>
      /// Copies an already existing Vertex AI Model into the specified Location.
      /// The source Model must exist in the same Project.
      /// When copying custom Models, the users themselves are responsible for
      /// [Model.metadata][google.cloud.aiplatform.v1beta1.Model.metadata] content to
      /// be region-agnostic, as well as making sure that any resources (e.g. files)
      /// it depends on remain accessible.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CopyModelAsync(global::Google.Cloud.AIPlatform.V1Beta1.CopyModelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CopyModelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Copies an already existing Vertex AI Model into the specified Location.
      /// The source Model must exist in the same Project.
      /// When copying custom Models, the users themselves are responsible for
      /// [Model.metadata][google.cloud.aiplatform.v1beta1.Model.metadata] content to
      /// be region-agnostic, as well as making sure that any resources (e.g. files)
      /// it depends on remain accessible.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CopyModelAsync(global::Google.Cloud.AIPlatform.V1Beta1.CopyModelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CopyModel, null, options, request);
      }
      /// <summary>
      /// Imports an externally generated ModelEvaluation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.ModelEvaluation ImportModelEvaluation(global::Google.Cloud.AIPlatform.V1Beta1.ImportModelEvaluationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ImportModelEvaluation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Imports an externally generated ModelEvaluation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.ModelEvaluation ImportModelEvaluation(global::Google.Cloud.AIPlatform.V1Beta1.ImportModelEvaluationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ImportModelEvaluation, null, options, request);
      }
      /// <summary>
      /// Imports an externally generated ModelEvaluation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.ModelEvaluation> ImportModelEvaluationAsync(global::Google.Cloud.AIPlatform.V1Beta1.ImportModelEvaluationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ImportModelEvaluationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Imports an externally generated ModelEvaluation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.ModelEvaluation> ImportModelEvaluationAsync(global::Google.Cloud.AIPlatform.V1Beta1.ImportModelEvaluationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ImportModelEvaluation, null, options, request);
      }
      /// <summary>
      /// Imports a list of externally generated ModelEvaluationSlice.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.BatchImportModelEvaluationSlicesResponse BatchImportModelEvaluationSlices(global::Google.Cloud.AIPlatform.V1Beta1.BatchImportModelEvaluationSlicesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchImportModelEvaluationSlices(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Imports a list of externally generated ModelEvaluationSlice.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.BatchImportModelEvaluationSlicesResponse BatchImportModelEvaluationSlices(global::Google.Cloud.AIPlatform.V1Beta1.BatchImportModelEvaluationSlicesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BatchImportModelEvaluationSlices, null, options, request);
      }
      /// <summary>
      /// Imports a list of externally generated ModelEvaluationSlice.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.BatchImportModelEvaluationSlicesResponse> BatchImportModelEvaluationSlicesAsync(global::Google.Cloud.AIPlatform.V1Beta1.BatchImportModelEvaluationSlicesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchImportModelEvaluationSlicesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Imports a list of externally generated ModelEvaluationSlice.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.BatchImportModelEvaluationSlicesResponse> BatchImportModelEvaluationSlicesAsync(global::Google.Cloud.AIPlatform.V1Beta1.BatchImportModelEvaluationSlicesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BatchImportModelEvaluationSlices, null, options, request);
      }
      /// <summary>
      /// Imports a list of externally generated EvaluatedAnnotations.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.BatchImportEvaluatedAnnotationsResponse BatchImportEvaluatedAnnotations(global::Google.Cloud.AIPlatform.V1Beta1.BatchImportEvaluatedAnnotationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchImportEvaluatedAnnotations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Imports a list of externally generated EvaluatedAnnotations.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.BatchImportEvaluatedAnnotationsResponse BatchImportEvaluatedAnnotations(global::Google.Cloud.AIPlatform.V1Beta1.BatchImportEvaluatedAnnotationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BatchImportEvaluatedAnnotations, null, options, request);
      }
      /// <summary>
      /// Imports a list of externally generated EvaluatedAnnotations.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.BatchImportEvaluatedAnnotationsResponse> BatchImportEvaluatedAnnotationsAsync(global::Google.Cloud.AIPlatform.V1Beta1.BatchImportEvaluatedAnnotationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchImportEvaluatedAnnotationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Imports a list of externally generated EvaluatedAnnotations.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.BatchImportEvaluatedAnnotationsResponse> BatchImportEvaluatedAnnotationsAsync(global::Google.Cloud.AIPlatform.V1Beta1.BatchImportEvaluatedAnnotationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BatchImportEvaluatedAnnotations, null, options, request);
      }
      /// <summary>
      /// Gets a ModelEvaluation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.ModelEvaluation GetModelEvaluation(global::Google.Cloud.AIPlatform.V1Beta1.GetModelEvaluationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetModelEvaluation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a ModelEvaluation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.ModelEvaluation GetModelEvaluation(global::Google.Cloud.AIPlatform.V1Beta1.GetModelEvaluationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetModelEvaluation, null, options, request);
      }
      /// <summary>
      /// Gets a ModelEvaluation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.ModelEvaluation> GetModelEvaluationAsync(global::Google.Cloud.AIPlatform.V1Beta1.GetModelEvaluationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetModelEvaluationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a ModelEvaluation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.ModelEvaluation> GetModelEvaluationAsync(global::Google.Cloud.AIPlatform.V1Beta1.GetModelEvaluationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetModelEvaluation, null, options, request);
      }
      /// <summary>
      /// Lists ModelEvaluations in a Model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.ListModelEvaluationsResponse ListModelEvaluations(global::Google.Cloud.AIPlatform.V1Beta1.ListModelEvaluationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListModelEvaluations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists ModelEvaluations in a Model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.ListModelEvaluationsResponse ListModelEvaluations(global::Google.Cloud.AIPlatform.V1Beta1.ListModelEvaluationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListModelEvaluations, null, options, request);
      }
      /// <summary>
      /// Lists ModelEvaluations in a Model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.ListModelEvaluationsResponse> ListModelEvaluationsAsync(global::Google.Cloud.AIPlatform.V1Beta1.ListModelEvaluationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListModelEvaluationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists ModelEvaluations in a Model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.ListModelEvaluationsResponse> ListModelEvaluationsAsync(global::Google.Cloud.AIPlatform.V1Beta1.ListModelEvaluationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListModelEvaluations, null, options, request);
      }
      /// <summary>
      /// Gets a ModelEvaluationSlice.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.ModelEvaluationSlice GetModelEvaluationSlice(global::Google.Cloud.AIPlatform.V1Beta1.GetModelEvaluationSliceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetModelEvaluationSlice(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a ModelEvaluationSlice.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.ModelEvaluationSlice GetModelEvaluationSlice(global::Google.Cloud.AIPlatform.V1Beta1.GetModelEvaluationSliceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetModelEvaluationSlice, null, options, request);
      }
      /// <summary>
      /// Gets a ModelEvaluationSlice.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.ModelEvaluationSlice> GetModelEvaluationSliceAsync(global::Google.Cloud.AIPlatform.V1Beta1.GetModelEvaluationSliceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetModelEvaluationSliceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a ModelEvaluationSlice.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.ModelEvaluationSlice> GetModelEvaluationSliceAsync(global::Google.Cloud.AIPlatform.V1Beta1.GetModelEvaluationSliceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetModelEvaluationSlice, null, options, request);
      }
      /// <summary>
      /// Lists ModelEvaluationSlices in a ModelEvaluation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.ListModelEvaluationSlicesResponse ListModelEvaluationSlices(global::Google.Cloud.AIPlatform.V1Beta1.ListModelEvaluationSlicesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListModelEvaluationSlices(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists ModelEvaluationSlices in a ModelEvaluation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.ListModelEvaluationSlicesResponse ListModelEvaluationSlices(global::Google.Cloud.AIPlatform.V1Beta1.ListModelEvaluationSlicesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListModelEvaluationSlices, null, options, request);
      }
      /// <summary>
      /// Lists ModelEvaluationSlices in a ModelEvaluation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.ListModelEvaluationSlicesResponse> ListModelEvaluationSlicesAsync(global::Google.Cloud.AIPlatform.V1Beta1.ListModelEvaluationSlicesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListModelEvaluationSlicesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists ModelEvaluationSlices in a ModelEvaluation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.ListModelEvaluationSlicesResponse> ListModelEvaluationSlicesAsync(global::Google.Cloud.AIPlatform.V1Beta1.ListModelEvaluationSlicesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListModelEvaluationSlices, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override ModelServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ModelServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(ModelServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_UploadModel, serviceImpl.UploadModel)
          .AddMethod(__Method_GetModel, serviceImpl.GetModel)
          .AddMethod(__Method_ListModels, serviceImpl.ListModels)
          .AddMethod(__Method_ListModelVersions, serviceImpl.ListModelVersions)
          .AddMethod(__Method_ListModelVersionCheckpoints, serviceImpl.ListModelVersionCheckpoints)
          .AddMethod(__Method_UpdateModel, serviceImpl.UpdateModel)
          .AddMethod(__Method_UpdateExplanationDataset, serviceImpl.UpdateExplanationDataset)
          .AddMethod(__Method_DeleteModel, serviceImpl.DeleteModel)
          .AddMethod(__Method_DeleteModelVersion, serviceImpl.DeleteModelVersion)
          .AddMethod(__Method_MergeVersionAliases, serviceImpl.MergeVersionAliases)
          .AddMethod(__Method_ExportModel, serviceImpl.ExportModel)
          .AddMethod(__Method_CopyModel, serviceImpl.CopyModel)
          .AddMethod(__Method_ImportModelEvaluation, serviceImpl.ImportModelEvaluation)
          .AddMethod(__Method_BatchImportModelEvaluationSlices, serviceImpl.BatchImportModelEvaluationSlices)
          .AddMethod(__Method_BatchImportEvaluatedAnnotations, serviceImpl.BatchImportEvaluatedAnnotations)
          .AddMethod(__Method_GetModelEvaluation, serviceImpl.GetModelEvaluation)
          .AddMethod(__Method_ListModelEvaluations, serviceImpl.ListModelEvaluations)
          .AddMethod(__Method_GetModelEvaluationSlice, serviceImpl.GetModelEvaluationSlice)
          .AddMethod(__Method_ListModelEvaluationSlices, serviceImpl.ListModelEvaluationSlices).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ModelServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_UploadModel, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.UploadModelRequest, global::Google.LongRunning.Operation>(serviceImpl.UploadModel));
      serviceBinder.AddMethod(__Method_GetModel, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.GetModelRequest, global::Google.Cloud.AIPlatform.V1Beta1.Model>(serviceImpl.GetModel));
      serviceBinder.AddMethod(__Method_ListModels, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.ListModelsRequest, global::Google.Cloud.AIPlatform.V1Beta1.ListModelsResponse>(serviceImpl.ListModels));
      serviceBinder.AddMethod(__Method_ListModelVersions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.ListModelVersionsRequest, global::Google.Cloud.AIPlatform.V1Beta1.ListModelVersionsResponse>(serviceImpl.ListModelVersions));
      serviceBinder.AddMethod(__Method_ListModelVersionCheckpoints, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.ListModelVersionCheckpointsRequest, global::Google.Cloud.AIPlatform.V1Beta1.ListModelVersionCheckpointsResponse>(serviceImpl.ListModelVersionCheckpoints));
      serviceBinder.AddMethod(__Method_UpdateModel, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.UpdateModelRequest, global::Google.Cloud.AIPlatform.V1Beta1.Model>(serviceImpl.UpdateModel));
      serviceBinder.AddMethod(__Method_UpdateExplanationDataset, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.UpdateExplanationDatasetRequest, global::Google.LongRunning.Operation>(serviceImpl.UpdateExplanationDataset));
      serviceBinder.AddMethod(__Method_DeleteModel, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.DeleteModelRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteModel));
      serviceBinder.AddMethod(__Method_DeleteModelVersion, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.DeleteModelVersionRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteModelVersion));
      serviceBinder.AddMethod(__Method_MergeVersionAliases, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.MergeVersionAliasesRequest, global::Google.Cloud.AIPlatform.V1Beta1.Model>(serviceImpl.MergeVersionAliases));
      serviceBinder.AddMethod(__Method_ExportModel, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.ExportModelRequest, global::Google.LongRunning.Operation>(serviceImpl.ExportModel));
      serviceBinder.AddMethod(__Method_CopyModel, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.CopyModelRequest, global::Google.LongRunning.Operation>(serviceImpl.CopyModel));
      serviceBinder.AddMethod(__Method_ImportModelEvaluation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.ImportModelEvaluationRequest, global::Google.Cloud.AIPlatform.V1Beta1.ModelEvaluation>(serviceImpl.ImportModelEvaluation));
      serviceBinder.AddMethod(__Method_BatchImportModelEvaluationSlices, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.BatchImportModelEvaluationSlicesRequest, global::Google.Cloud.AIPlatform.V1Beta1.BatchImportModelEvaluationSlicesResponse>(serviceImpl.BatchImportModelEvaluationSlices));
      serviceBinder.AddMethod(__Method_BatchImportEvaluatedAnnotations, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.BatchImportEvaluatedAnnotationsRequest, global::Google.Cloud.AIPlatform.V1Beta1.BatchImportEvaluatedAnnotationsResponse>(serviceImpl.BatchImportEvaluatedAnnotations));
      serviceBinder.AddMethod(__Method_GetModelEvaluation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.GetModelEvaluationRequest, global::Google.Cloud.AIPlatform.V1Beta1.ModelEvaluation>(serviceImpl.GetModelEvaluation));
      serviceBinder.AddMethod(__Method_ListModelEvaluations, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.ListModelEvaluationsRequest, global::Google.Cloud.AIPlatform.V1Beta1.ListModelEvaluationsResponse>(serviceImpl.ListModelEvaluations));
      serviceBinder.AddMethod(__Method_GetModelEvaluationSlice, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.GetModelEvaluationSliceRequest, global::Google.Cloud.AIPlatform.V1Beta1.ModelEvaluationSlice>(serviceImpl.GetModelEvaluationSlice));
      serviceBinder.AddMethod(__Method_ListModelEvaluationSlices, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.ListModelEvaluationSlicesRequest, global::Google.Cloud.AIPlatform.V1Beta1.ListModelEvaluationSlicesResponse>(serviceImpl.ListModelEvaluationSlices));
    }

  }
}
#endregion
