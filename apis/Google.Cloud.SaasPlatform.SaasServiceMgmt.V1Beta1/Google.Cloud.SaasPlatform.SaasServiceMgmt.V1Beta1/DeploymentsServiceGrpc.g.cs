// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/saasplatform/saasservicemgmt/v1beta1/deployments_service.proto
// </auto-generated>
// Original file comments:
// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1 {
  /// <summary>
  /// Manages the deployment of SaaS services.
  /// </summary>
  public static partial class SaasDeployments
  {
    static readonly string __ServiceName = "google.cloud.saasplatform.saasservicemgmt.v1beta1.SaasDeployments";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListSaasRequest> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_ListSaasRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListSaasRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListSaasResponse> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_ListSaasResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListSaasResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetSaasRequest> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_GetSaasRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetSaasRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Saas> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_Saas = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Saas.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateSaasRequest> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_CreateSaasRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateSaasRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateSaasRequest> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_UpdateSaasRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateSaasRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteSaasRequest> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_DeleteSaasRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteSaasRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListTenantsRequest> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_ListTenantsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListTenantsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListTenantsResponse> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_ListTenantsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListTenantsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetTenantRequest> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_GetTenantRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetTenantRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Tenant> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_Tenant = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Tenant.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateTenantRequest> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_CreateTenantRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateTenantRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateTenantRequest> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_UpdateTenantRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateTenantRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteTenantRequest> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_DeleteTenantRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteTenantRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitKindsRequest> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_ListUnitKindsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitKindsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitKindsResponse> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_ListUnitKindsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitKindsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetUnitKindRequest> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_GetUnitKindRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetUnitKindRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitKind> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_UnitKind = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitKind.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateUnitKindRequest> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_CreateUnitKindRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateUnitKindRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateUnitKindRequest> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_UpdateUnitKindRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateUnitKindRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteUnitKindRequest> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_DeleteUnitKindRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteUnitKindRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitsRequest> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_ListUnitsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitsResponse> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_ListUnitsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetUnitRequest> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_GetUnitRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetUnitRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Unit> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_Unit = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Unit.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateUnitRequest> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_CreateUnitRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateUnitRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateUnitRequest> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_UpdateUnitRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateUnitRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteUnitRequest> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_DeleteUnitRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteUnitRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitOperationsRequest> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_ListUnitOperationsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitOperationsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitOperationsResponse> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_ListUnitOperationsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitOperationsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetUnitOperationRequest> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_GetUnitOperationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetUnitOperationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitOperation> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_UnitOperation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitOperation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateUnitOperationRequest> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_CreateUnitOperationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateUnitOperationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateUnitOperationRequest> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_UpdateUnitOperationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateUnitOperationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteUnitOperationRequest> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_DeleteUnitOperationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteUnitOperationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListReleasesRequest> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_ListReleasesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListReleasesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListReleasesResponse> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_ListReleasesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListReleasesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetReleaseRequest> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_GetReleaseRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetReleaseRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Release> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_Release = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Release.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateReleaseRequest> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_CreateReleaseRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateReleaseRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateReleaseRequest> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_UpdateReleaseRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateReleaseRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteReleaseRequest> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_DeleteReleaseRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteReleaseRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListSaasRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListSaasResponse> __Method_ListSaas = new grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListSaasRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListSaasResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListSaas",
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_ListSaasRequest,
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_ListSaasResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetSaasRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Saas> __Method_GetSaas = new grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetSaasRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Saas>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSaas",
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_GetSaasRequest,
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_Saas);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateSaasRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Saas> __Method_CreateSaas = new grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateSaasRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Saas>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateSaas",
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_CreateSaasRequest,
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_Saas);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateSaasRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Saas> __Method_UpdateSaas = new grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateSaasRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Saas>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateSaas",
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_UpdateSaasRequest,
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_Saas);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteSaasRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteSaas = new grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteSaasRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteSaas",
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_DeleteSaasRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListTenantsRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListTenantsResponse> __Method_ListTenants = new grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListTenantsRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListTenantsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListTenants",
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_ListTenantsRequest,
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_ListTenantsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetTenantRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Tenant> __Method_GetTenant = new grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetTenantRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Tenant>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetTenant",
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_GetTenantRequest,
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_Tenant);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateTenantRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Tenant> __Method_CreateTenant = new grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateTenantRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Tenant>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateTenant",
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_CreateTenantRequest,
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_Tenant);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateTenantRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Tenant> __Method_UpdateTenant = new grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateTenantRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Tenant>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateTenant",
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_UpdateTenantRequest,
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_Tenant);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteTenantRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteTenant = new grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteTenantRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteTenant",
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_DeleteTenantRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitKindsRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitKindsResponse> __Method_ListUnitKinds = new grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitKindsRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitKindsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListUnitKinds",
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_ListUnitKindsRequest,
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_ListUnitKindsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetUnitKindRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitKind> __Method_GetUnitKind = new grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetUnitKindRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitKind>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetUnitKind",
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_GetUnitKindRequest,
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_UnitKind);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateUnitKindRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitKind> __Method_CreateUnitKind = new grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateUnitKindRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitKind>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateUnitKind",
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_CreateUnitKindRequest,
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_UnitKind);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateUnitKindRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitKind> __Method_UpdateUnitKind = new grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateUnitKindRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitKind>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateUnitKind",
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_UpdateUnitKindRequest,
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_UnitKind);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteUnitKindRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteUnitKind = new grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteUnitKindRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteUnitKind",
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_DeleteUnitKindRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitsRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitsResponse> __Method_ListUnits = new grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitsRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListUnits",
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_ListUnitsRequest,
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_ListUnitsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetUnitRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Unit> __Method_GetUnit = new grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetUnitRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Unit>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetUnit",
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_GetUnitRequest,
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_Unit);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateUnitRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Unit> __Method_CreateUnit = new grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateUnitRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Unit>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateUnit",
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_CreateUnitRequest,
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_Unit);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateUnitRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Unit> __Method_UpdateUnit = new grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateUnitRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Unit>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateUnit",
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_UpdateUnitRequest,
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_Unit);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteUnitRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteUnit = new grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteUnitRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteUnit",
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_DeleteUnitRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitOperationsRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitOperationsResponse> __Method_ListUnitOperations = new grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitOperationsRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitOperationsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListUnitOperations",
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_ListUnitOperationsRequest,
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_ListUnitOperationsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetUnitOperationRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitOperation> __Method_GetUnitOperation = new grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetUnitOperationRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitOperation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetUnitOperation",
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_GetUnitOperationRequest,
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_UnitOperation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateUnitOperationRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitOperation> __Method_CreateUnitOperation = new grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateUnitOperationRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitOperation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateUnitOperation",
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_CreateUnitOperationRequest,
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_UnitOperation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateUnitOperationRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitOperation> __Method_UpdateUnitOperation = new grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateUnitOperationRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitOperation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateUnitOperation",
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_UpdateUnitOperationRequest,
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_UnitOperation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteUnitOperationRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteUnitOperation = new grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteUnitOperationRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteUnitOperation",
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_DeleteUnitOperationRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListReleasesRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListReleasesResponse> __Method_ListReleases = new grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListReleasesRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListReleasesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListReleases",
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_ListReleasesRequest,
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_ListReleasesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetReleaseRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Release> __Method_GetRelease = new grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetReleaseRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Release>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetRelease",
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_GetReleaseRequest,
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_Release);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateReleaseRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Release> __Method_CreateRelease = new grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateReleaseRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Release>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateRelease",
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_CreateReleaseRequest,
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_Release);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateReleaseRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Release> __Method_UpdateRelease = new grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateReleaseRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Release>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateRelease",
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_UpdateReleaseRequest,
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_Release);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteReleaseRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteRelease = new grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteReleaseRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteRelease",
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_DeleteReleaseRequest,
        __Marshaller_google_protobuf_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeploymentsServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of SaasDeployments</summary>
    [grpc::BindServiceMethod(typeof(SaasDeployments), "BindService")]
    public abstract partial class SaasDeploymentsBase
    {
      /// <summary>
      /// Retrieve a collection of saas.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListSaasResponse> ListSaas(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListSaasRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieve a single saas.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Saas> GetSaas(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetSaasRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Create a new saas.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Saas> CreateSaas(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateSaasRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update a single saas.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Saas> UpdateSaas(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateSaasRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Delete a single saas.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteSaas(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteSaasRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieve a collection of tenants.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListTenantsResponse> ListTenants(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListTenantsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieve a single tenant.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Tenant> GetTenant(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetTenantRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Create a new tenant.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Tenant> CreateTenant(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateTenantRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update a single tenant.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Tenant> UpdateTenant(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateTenantRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Delete a single tenant.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteTenant(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteTenantRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieve a collection of unit kinds.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitKindsResponse> ListUnitKinds(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitKindsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieve a single unit kind.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitKind> GetUnitKind(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetUnitKindRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Create a new unit kind.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitKind> CreateUnitKind(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateUnitKindRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update a single unit kind.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitKind> UpdateUnitKind(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateUnitKindRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Delete a single unit kind.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteUnitKind(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteUnitKindRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieve a collection of units.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitsResponse> ListUnits(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieve a single unit.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Unit> GetUnit(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetUnitRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Create a new unit.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Unit> CreateUnit(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateUnitRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update a single unit.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Unit> UpdateUnit(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateUnitRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Delete a single unit.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteUnit(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteUnitRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieve a collection of unit operations.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitOperationsResponse> ListUnitOperations(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitOperationsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieve a single unit operation.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitOperation> GetUnitOperation(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetUnitOperationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Create a new unit operation.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitOperation> CreateUnitOperation(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateUnitOperationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update a single unit operation.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitOperation> UpdateUnitOperation(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateUnitOperationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Delete a single unit operation.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteUnitOperation(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteUnitOperationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieve a collection of releases.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListReleasesResponse> ListReleases(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListReleasesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieve a single release.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Release> GetRelease(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetReleaseRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Create a new release.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Release> CreateRelease(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateReleaseRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update a single release.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Release> UpdateRelease(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateReleaseRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Delete a single release.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteRelease(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteReleaseRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for SaasDeployments</summary>
    public partial class SaasDeploymentsClient : grpc::ClientBase<SaasDeploymentsClient>
    {
      /// <summary>Creates a new client for SaasDeployments</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public SaasDeploymentsClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for SaasDeployments that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public SaasDeploymentsClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected SaasDeploymentsClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected SaasDeploymentsClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Retrieve a collection of saas.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListSaasResponse ListSaas(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListSaasRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSaas(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve a collection of saas.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListSaasResponse ListSaas(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListSaasRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListSaas, null, options, request);
      }
      /// <summary>
      /// Retrieve a collection of saas.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListSaasResponse> ListSaasAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListSaasRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSaasAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve a collection of saas.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListSaasResponse> ListSaasAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListSaasRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListSaas, null, options, request);
      }
      /// <summary>
      /// Retrieve a single saas.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Saas GetSaas(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetSaasRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSaas(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve a single saas.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Saas GetSaas(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetSaasRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSaas, null, options, request);
      }
      /// <summary>
      /// Retrieve a single saas.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Saas> GetSaasAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetSaasRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSaasAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve a single saas.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Saas> GetSaasAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetSaasRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSaas, null, options, request);
      }
      /// <summary>
      /// Create a new saas.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Saas CreateSaas(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateSaasRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateSaas(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a new saas.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Saas CreateSaas(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateSaasRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateSaas, null, options, request);
      }
      /// <summary>
      /// Create a new saas.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Saas> CreateSaasAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateSaasRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateSaasAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a new saas.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Saas> CreateSaasAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateSaasRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateSaas, null, options, request);
      }
      /// <summary>
      /// Update a single saas.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Saas UpdateSaas(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateSaasRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateSaas(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update a single saas.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Saas UpdateSaas(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateSaasRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateSaas, null, options, request);
      }
      /// <summary>
      /// Update a single saas.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Saas> UpdateSaasAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateSaasRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateSaasAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update a single saas.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Saas> UpdateSaasAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateSaasRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateSaas, null, options, request);
      }
      /// <summary>
      /// Delete a single saas.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteSaas(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteSaasRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteSaas(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete a single saas.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteSaas(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteSaasRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteSaas, null, options, request);
      }
      /// <summary>
      /// Delete a single saas.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteSaasAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteSaasRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteSaasAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete a single saas.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteSaasAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteSaasRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteSaas, null, options, request);
      }
      /// <summary>
      /// Retrieve a collection of tenants.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListTenantsResponse ListTenants(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListTenantsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListTenants(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve a collection of tenants.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListTenantsResponse ListTenants(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListTenantsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListTenants, null, options, request);
      }
      /// <summary>
      /// Retrieve a collection of tenants.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListTenantsResponse> ListTenantsAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListTenantsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListTenantsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve a collection of tenants.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListTenantsResponse> ListTenantsAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListTenantsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListTenants, null, options, request);
      }
      /// <summary>
      /// Retrieve a single tenant.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Tenant GetTenant(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetTenantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTenant(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve a single tenant.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Tenant GetTenant(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetTenantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetTenant, null, options, request);
      }
      /// <summary>
      /// Retrieve a single tenant.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Tenant> GetTenantAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetTenantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTenantAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve a single tenant.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Tenant> GetTenantAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetTenantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetTenant, null, options, request);
      }
      /// <summary>
      /// Create a new tenant.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Tenant CreateTenant(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateTenantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateTenant(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a new tenant.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Tenant CreateTenant(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateTenantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateTenant, null, options, request);
      }
      /// <summary>
      /// Create a new tenant.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Tenant> CreateTenantAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateTenantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateTenantAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a new tenant.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Tenant> CreateTenantAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateTenantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateTenant, null, options, request);
      }
      /// <summary>
      /// Update a single tenant.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Tenant UpdateTenant(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateTenantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateTenant(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update a single tenant.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Tenant UpdateTenant(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateTenantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateTenant, null, options, request);
      }
      /// <summary>
      /// Update a single tenant.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Tenant> UpdateTenantAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateTenantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateTenantAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update a single tenant.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Tenant> UpdateTenantAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateTenantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateTenant, null, options, request);
      }
      /// <summary>
      /// Delete a single tenant.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteTenant(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteTenantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteTenant(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete a single tenant.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteTenant(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteTenantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteTenant, null, options, request);
      }
      /// <summary>
      /// Delete a single tenant.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteTenantAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteTenantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteTenantAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete a single tenant.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteTenantAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteTenantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteTenant, null, options, request);
      }
      /// <summary>
      /// Retrieve a collection of unit kinds.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitKindsResponse ListUnitKinds(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitKindsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListUnitKinds(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve a collection of unit kinds.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitKindsResponse ListUnitKinds(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitKindsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListUnitKinds, null, options, request);
      }
      /// <summary>
      /// Retrieve a collection of unit kinds.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitKindsResponse> ListUnitKindsAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitKindsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListUnitKindsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve a collection of unit kinds.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitKindsResponse> ListUnitKindsAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitKindsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListUnitKinds, null, options, request);
      }
      /// <summary>
      /// Retrieve a single unit kind.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitKind GetUnitKind(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetUnitKindRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUnitKind(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve a single unit kind.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitKind GetUnitKind(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetUnitKindRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetUnitKind, null, options, request);
      }
      /// <summary>
      /// Retrieve a single unit kind.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitKind> GetUnitKindAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetUnitKindRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUnitKindAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve a single unit kind.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitKind> GetUnitKindAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetUnitKindRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetUnitKind, null, options, request);
      }
      /// <summary>
      /// Create a new unit kind.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitKind CreateUnitKind(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateUnitKindRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateUnitKind(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a new unit kind.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitKind CreateUnitKind(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateUnitKindRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateUnitKind, null, options, request);
      }
      /// <summary>
      /// Create a new unit kind.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitKind> CreateUnitKindAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateUnitKindRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateUnitKindAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a new unit kind.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitKind> CreateUnitKindAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateUnitKindRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateUnitKind, null, options, request);
      }
      /// <summary>
      /// Update a single unit kind.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitKind UpdateUnitKind(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateUnitKindRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateUnitKind(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update a single unit kind.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitKind UpdateUnitKind(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateUnitKindRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateUnitKind, null, options, request);
      }
      /// <summary>
      /// Update a single unit kind.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitKind> UpdateUnitKindAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateUnitKindRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateUnitKindAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update a single unit kind.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitKind> UpdateUnitKindAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateUnitKindRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateUnitKind, null, options, request);
      }
      /// <summary>
      /// Delete a single unit kind.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteUnitKind(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteUnitKindRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteUnitKind(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete a single unit kind.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteUnitKind(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteUnitKindRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteUnitKind, null, options, request);
      }
      /// <summary>
      /// Delete a single unit kind.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteUnitKindAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteUnitKindRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteUnitKindAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete a single unit kind.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteUnitKindAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteUnitKindRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteUnitKind, null, options, request);
      }
      /// <summary>
      /// Retrieve a collection of units.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitsResponse ListUnits(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListUnits(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve a collection of units.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitsResponse ListUnits(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListUnits, null, options, request);
      }
      /// <summary>
      /// Retrieve a collection of units.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitsResponse> ListUnitsAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListUnitsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve a collection of units.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitsResponse> ListUnitsAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListUnits, null, options, request);
      }
      /// <summary>
      /// Retrieve a single unit.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Unit GetUnit(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetUnitRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUnit(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve a single unit.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Unit GetUnit(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetUnitRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetUnit, null, options, request);
      }
      /// <summary>
      /// Retrieve a single unit.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Unit> GetUnitAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetUnitRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUnitAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve a single unit.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Unit> GetUnitAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetUnitRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetUnit, null, options, request);
      }
      /// <summary>
      /// Create a new unit.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Unit CreateUnit(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateUnitRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateUnit(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a new unit.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Unit CreateUnit(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateUnitRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateUnit, null, options, request);
      }
      /// <summary>
      /// Create a new unit.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Unit> CreateUnitAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateUnitRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateUnitAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a new unit.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Unit> CreateUnitAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateUnitRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateUnit, null, options, request);
      }
      /// <summary>
      /// Update a single unit.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Unit UpdateUnit(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateUnitRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateUnit(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update a single unit.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Unit UpdateUnit(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateUnitRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateUnit, null, options, request);
      }
      /// <summary>
      /// Update a single unit.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Unit> UpdateUnitAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateUnitRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateUnitAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update a single unit.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Unit> UpdateUnitAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateUnitRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateUnit, null, options, request);
      }
      /// <summary>
      /// Delete a single unit.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteUnit(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteUnitRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteUnit(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete a single unit.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteUnit(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteUnitRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteUnit, null, options, request);
      }
      /// <summary>
      /// Delete a single unit.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteUnitAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteUnitRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteUnitAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete a single unit.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteUnitAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteUnitRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteUnit, null, options, request);
      }
      /// <summary>
      /// Retrieve a collection of unit operations.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitOperationsResponse ListUnitOperations(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitOperationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListUnitOperations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve a collection of unit operations.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitOperationsResponse ListUnitOperations(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitOperationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListUnitOperations, null, options, request);
      }
      /// <summary>
      /// Retrieve a collection of unit operations.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitOperationsResponse> ListUnitOperationsAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitOperationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListUnitOperationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve a collection of unit operations.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitOperationsResponse> ListUnitOperationsAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitOperationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListUnitOperations, null, options, request);
      }
      /// <summary>
      /// Retrieve a single unit operation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitOperation GetUnitOperation(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetUnitOperationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUnitOperation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve a single unit operation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitOperation GetUnitOperation(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetUnitOperationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetUnitOperation, null, options, request);
      }
      /// <summary>
      /// Retrieve a single unit operation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitOperation> GetUnitOperationAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetUnitOperationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUnitOperationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve a single unit operation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitOperation> GetUnitOperationAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetUnitOperationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetUnitOperation, null, options, request);
      }
      /// <summary>
      /// Create a new unit operation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitOperation CreateUnitOperation(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateUnitOperationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateUnitOperation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a new unit operation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitOperation CreateUnitOperation(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateUnitOperationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateUnitOperation, null, options, request);
      }
      /// <summary>
      /// Create a new unit operation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitOperation> CreateUnitOperationAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateUnitOperationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateUnitOperationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a new unit operation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitOperation> CreateUnitOperationAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateUnitOperationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateUnitOperation, null, options, request);
      }
      /// <summary>
      /// Update a single unit operation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitOperation UpdateUnitOperation(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateUnitOperationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateUnitOperation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update a single unit operation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitOperation UpdateUnitOperation(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateUnitOperationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateUnitOperation, null, options, request);
      }
      /// <summary>
      /// Update a single unit operation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitOperation> UpdateUnitOperationAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateUnitOperationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateUnitOperationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update a single unit operation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitOperation> UpdateUnitOperationAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateUnitOperationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateUnitOperation, null, options, request);
      }
      /// <summary>
      /// Delete a single unit operation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteUnitOperation(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteUnitOperationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteUnitOperation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete a single unit operation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteUnitOperation(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteUnitOperationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteUnitOperation, null, options, request);
      }
      /// <summary>
      /// Delete a single unit operation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteUnitOperationAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteUnitOperationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteUnitOperationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete a single unit operation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteUnitOperationAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteUnitOperationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteUnitOperation, null, options, request);
      }
      /// <summary>
      /// Retrieve a collection of releases.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListReleasesResponse ListReleases(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListReleasesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListReleases(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve a collection of releases.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListReleasesResponse ListReleases(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListReleasesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListReleases, null, options, request);
      }
      /// <summary>
      /// Retrieve a collection of releases.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListReleasesResponse> ListReleasesAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListReleasesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListReleasesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve a collection of releases.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListReleasesResponse> ListReleasesAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListReleasesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListReleases, null, options, request);
      }
      /// <summary>
      /// Retrieve a single release.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Release GetRelease(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetReleaseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRelease(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve a single release.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Release GetRelease(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetReleaseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetRelease, null, options, request);
      }
      /// <summary>
      /// Retrieve a single release.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Release> GetReleaseAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetReleaseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetReleaseAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve a single release.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Release> GetReleaseAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetReleaseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetRelease, null, options, request);
      }
      /// <summary>
      /// Create a new release.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Release CreateRelease(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateReleaseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateRelease(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a new release.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Release CreateRelease(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateReleaseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateRelease, null, options, request);
      }
      /// <summary>
      /// Create a new release.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Release> CreateReleaseAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateReleaseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateReleaseAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a new release.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Release> CreateReleaseAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateReleaseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateRelease, null, options, request);
      }
      /// <summary>
      /// Update a single release.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Release UpdateRelease(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateReleaseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateRelease(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update a single release.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Release UpdateRelease(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateReleaseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateRelease, null, options, request);
      }
      /// <summary>
      /// Update a single release.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Release> UpdateReleaseAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateReleaseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateReleaseAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update a single release.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Release> UpdateReleaseAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateReleaseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateRelease, null, options, request);
      }
      /// <summary>
      /// Delete a single release.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteRelease(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteReleaseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteRelease(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete a single release.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteRelease(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteReleaseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteRelease, null, options, request);
      }
      /// <summary>
      /// Delete a single release.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteReleaseAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteReleaseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteReleaseAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete a single release.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteReleaseAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteReleaseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteRelease, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override SaasDeploymentsClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new SaasDeploymentsClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(SaasDeploymentsBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ListSaas, serviceImpl.ListSaas)
          .AddMethod(__Method_GetSaas, serviceImpl.GetSaas)
          .AddMethod(__Method_CreateSaas, serviceImpl.CreateSaas)
          .AddMethod(__Method_UpdateSaas, serviceImpl.UpdateSaas)
          .AddMethod(__Method_DeleteSaas, serviceImpl.DeleteSaas)
          .AddMethod(__Method_ListTenants, serviceImpl.ListTenants)
          .AddMethod(__Method_GetTenant, serviceImpl.GetTenant)
          .AddMethod(__Method_CreateTenant, serviceImpl.CreateTenant)
          .AddMethod(__Method_UpdateTenant, serviceImpl.UpdateTenant)
          .AddMethod(__Method_DeleteTenant, serviceImpl.DeleteTenant)
          .AddMethod(__Method_ListUnitKinds, serviceImpl.ListUnitKinds)
          .AddMethod(__Method_GetUnitKind, serviceImpl.GetUnitKind)
          .AddMethod(__Method_CreateUnitKind, serviceImpl.CreateUnitKind)
          .AddMethod(__Method_UpdateUnitKind, serviceImpl.UpdateUnitKind)
          .AddMethod(__Method_DeleteUnitKind, serviceImpl.DeleteUnitKind)
          .AddMethod(__Method_ListUnits, serviceImpl.ListUnits)
          .AddMethod(__Method_GetUnit, serviceImpl.GetUnit)
          .AddMethod(__Method_CreateUnit, serviceImpl.CreateUnit)
          .AddMethod(__Method_UpdateUnit, serviceImpl.UpdateUnit)
          .AddMethod(__Method_DeleteUnit, serviceImpl.DeleteUnit)
          .AddMethod(__Method_ListUnitOperations, serviceImpl.ListUnitOperations)
          .AddMethod(__Method_GetUnitOperation, serviceImpl.GetUnitOperation)
          .AddMethod(__Method_CreateUnitOperation, serviceImpl.CreateUnitOperation)
          .AddMethod(__Method_UpdateUnitOperation, serviceImpl.UpdateUnitOperation)
          .AddMethod(__Method_DeleteUnitOperation, serviceImpl.DeleteUnitOperation)
          .AddMethod(__Method_ListReleases, serviceImpl.ListReleases)
          .AddMethod(__Method_GetRelease, serviceImpl.GetRelease)
          .AddMethod(__Method_CreateRelease, serviceImpl.CreateRelease)
          .AddMethod(__Method_UpdateRelease, serviceImpl.UpdateRelease)
          .AddMethod(__Method_DeleteRelease, serviceImpl.DeleteRelease).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, SaasDeploymentsBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_ListSaas, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListSaasRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListSaasResponse>(serviceImpl.ListSaas));
      serviceBinder.AddMethod(__Method_GetSaas, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetSaasRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Saas>(serviceImpl.GetSaas));
      serviceBinder.AddMethod(__Method_CreateSaas, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateSaasRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Saas>(serviceImpl.CreateSaas));
      serviceBinder.AddMethod(__Method_UpdateSaas, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateSaasRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Saas>(serviceImpl.UpdateSaas));
      serviceBinder.AddMethod(__Method_DeleteSaas, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteSaasRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteSaas));
      serviceBinder.AddMethod(__Method_ListTenants, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListTenantsRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListTenantsResponse>(serviceImpl.ListTenants));
      serviceBinder.AddMethod(__Method_GetTenant, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetTenantRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Tenant>(serviceImpl.GetTenant));
      serviceBinder.AddMethod(__Method_CreateTenant, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateTenantRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Tenant>(serviceImpl.CreateTenant));
      serviceBinder.AddMethod(__Method_UpdateTenant, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateTenantRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Tenant>(serviceImpl.UpdateTenant));
      serviceBinder.AddMethod(__Method_DeleteTenant, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteTenantRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteTenant));
      serviceBinder.AddMethod(__Method_ListUnitKinds, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitKindsRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitKindsResponse>(serviceImpl.ListUnitKinds));
      serviceBinder.AddMethod(__Method_GetUnitKind, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetUnitKindRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitKind>(serviceImpl.GetUnitKind));
      serviceBinder.AddMethod(__Method_CreateUnitKind, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateUnitKindRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitKind>(serviceImpl.CreateUnitKind));
      serviceBinder.AddMethod(__Method_UpdateUnitKind, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateUnitKindRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitKind>(serviceImpl.UpdateUnitKind));
      serviceBinder.AddMethod(__Method_DeleteUnitKind, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteUnitKindRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteUnitKind));
      serviceBinder.AddMethod(__Method_ListUnits, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitsRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitsResponse>(serviceImpl.ListUnits));
      serviceBinder.AddMethod(__Method_GetUnit, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetUnitRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Unit>(serviceImpl.GetUnit));
      serviceBinder.AddMethod(__Method_CreateUnit, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateUnitRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Unit>(serviceImpl.CreateUnit));
      serviceBinder.AddMethod(__Method_UpdateUnit, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateUnitRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Unit>(serviceImpl.UpdateUnit));
      serviceBinder.AddMethod(__Method_DeleteUnit, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteUnitRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteUnit));
      serviceBinder.AddMethod(__Method_ListUnitOperations, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitOperationsRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListUnitOperationsResponse>(serviceImpl.ListUnitOperations));
      serviceBinder.AddMethod(__Method_GetUnitOperation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetUnitOperationRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitOperation>(serviceImpl.GetUnitOperation));
      serviceBinder.AddMethod(__Method_CreateUnitOperation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateUnitOperationRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitOperation>(serviceImpl.CreateUnitOperation));
      serviceBinder.AddMethod(__Method_UpdateUnitOperation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateUnitOperationRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UnitOperation>(serviceImpl.UpdateUnitOperation));
      serviceBinder.AddMethod(__Method_DeleteUnitOperation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteUnitOperationRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteUnitOperation));
      serviceBinder.AddMethod(__Method_ListReleases, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListReleasesRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListReleasesResponse>(serviceImpl.ListReleases));
      serviceBinder.AddMethod(__Method_GetRelease, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetReleaseRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Release>(serviceImpl.GetRelease));
      serviceBinder.AddMethod(__Method_CreateRelease, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateReleaseRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Release>(serviceImpl.CreateRelease));
      serviceBinder.AddMethod(__Method_UpdateRelease, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateReleaseRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Release>(serviceImpl.UpdateRelease));
      serviceBinder.AddMethod(__Method_DeleteRelease, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteReleaseRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteRelease));
    }

  }
}
#endregion
