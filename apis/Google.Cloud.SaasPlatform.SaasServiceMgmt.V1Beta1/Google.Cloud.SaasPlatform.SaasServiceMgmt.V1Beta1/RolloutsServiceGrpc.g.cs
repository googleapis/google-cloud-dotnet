// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/saasplatform/saasservicemgmt/v1beta1/rollouts_service.proto
// </auto-generated>
// Original file comments:
// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1 {
  /// <summary>
  /// Manages the rollout of SaaS services.
  /// </summary>
  public static partial class SaasRollouts
  {
    static readonly string __ServiceName = "google.cloud.saasplatform.saasservicemgmt.v1beta1.SaasRollouts";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListRolloutsRequest> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_ListRolloutsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListRolloutsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListRolloutsResponse> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_ListRolloutsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListRolloutsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetRolloutRequest> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_GetRolloutRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetRolloutRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Rollout> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_Rollout = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Rollout.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateRolloutRequest> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_CreateRolloutRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateRolloutRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateRolloutRequest> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_UpdateRolloutRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateRolloutRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteRolloutRequest> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_DeleteRolloutRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteRolloutRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListRolloutKindsRequest> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_ListRolloutKindsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListRolloutKindsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListRolloutKindsResponse> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_ListRolloutKindsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListRolloutKindsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetRolloutKindRequest> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_GetRolloutKindRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetRolloutKindRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.RolloutKind> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_RolloutKind = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.RolloutKind.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateRolloutKindRequest> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_CreateRolloutKindRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateRolloutKindRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateRolloutKindRequest> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_UpdateRolloutKindRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateRolloutKindRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteRolloutKindRequest> __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_DeleteRolloutKindRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteRolloutKindRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListRolloutsRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListRolloutsResponse> __Method_ListRollouts = new grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListRolloutsRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListRolloutsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListRollouts",
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_ListRolloutsRequest,
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_ListRolloutsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetRolloutRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Rollout> __Method_GetRollout = new grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetRolloutRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Rollout>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetRollout",
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_GetRolloutRequest,
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_Rollout);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateRolloutRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Rollout> __Method_CreateRollout = new grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateRolloutRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Rollout>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateRollout",
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_CreateRolloutRequest,
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_Rollout);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateRolloutRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Rollout> __Method_UpdateRollout = new grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateRolloutRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Rollout>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateRollout",
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_UpdateRolloutRequest,
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_Rollout);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteRolloutRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteRollout = new grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteRolloutRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteRollout",
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_DeleteRolloutRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListRolloutKindsRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListRolloutKindsResponse> __Method_ListRolloutKinds = new grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListRolloutKindsRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListRolloutKindsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListRolloutKinds",
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_ListRolloutKindsRequest,
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_ListRolloutKindsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetRolloutKindRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.RolloutKind> __Method_GetRolloutKind = new grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetRolloutKindRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.RolloutKind>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetRolloutKind",
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_GetRolloutKindRequest,
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_RolloutKind);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateRolloutKindRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.RolloutKind> __Method_CreateRolloutKind = new grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateRolloutKindRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.RolloutKind>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateRolloutKind",
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_CreateRolloutKindRequest,
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_RolloutKind);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateRolloutKindRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.RolloutKind> __Method_UpdateRolloutKind = new grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateRolloutKindRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.RolloutKind>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateRolloutKind",
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_UpdateRolloutKindRequest,
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_RolloutKind);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteRolloutKindRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteRolloutKind = new grpc::Method<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteRolloutKindRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteRolloutKind",
        __Marshaller_google_cloud_saasplatform_saasservicemgmt_v1beta1_DeleteRolloutKindRequest,
        __Marshaller_google_protobuf_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.RolloutsServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of SaasRollouts</summary>
    [grpc::BindServiceMethod(typeof(SaasRollouts), "BindService")]
    public abstract partial class SaasRolloutsBase
    {
      /// <summary>
      /// Retrieve a collection of rollouts.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListRolloutsResponse> ListRollouts(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListRolloutsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieve a single rollout.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Rollout> GetRollout(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetRolloutRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Create a new rollout.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Rollout> CreateRollout(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateRolloutRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update a single rollout.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Rollout> UpdateRollout(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateRolloutRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Delete a single rollout.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteRollout(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteRolloutRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieve a collection of rollout kinds.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListRolloutKindsResponse> ListRolloutKinds(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListRolloutKindsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieve a single rollout kind.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.RolloutKind> GetRolloutKind(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetRolloutKindRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Create a new rollout kind.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.RolloutKind> CreateRolloutKind(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateRolloutKindRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update a single rollout kind.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.RolloutKind> UpdateRolloutKind(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateRolloutKindRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Delete a single rollout kind.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteRolloutKind(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteRolloutKindRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for SaasRollouts</summary>
    public partial class SaasRolloutsClient : grpc::ClientBase<SaasRolloutsClient>
    {
      /// <summary>Creates a new client for SaasRollouts</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public SaasRolloutsClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for SaasRollouts that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public SaasRolloutsClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected SaasRolloutsClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected SaasRolloutsClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Retrieve a collection of rollouts.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListRolloutsResponse ListRollouts(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListRolloutsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListRollouts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve a collection of rollouts.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListRolloutsResponse ListRollouts(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListRolloutsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListRollouts, null, options, request);
      }
      /// <summary>
      /// Retrieve a collection of rollouts.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListRolloutsResponse> ListRolloutsAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListRolloutsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListRolloutsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve a collection of rollouts.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListRolloutsResponse> ListRolloutsAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListRolloutsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListRollouts, null, options, request);
      }
      /// <summary>
      /// Retrieve a single rollout.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Rollout GetRollout(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetRolloutRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRollout(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve a single rollout.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Rollout GetRollout(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetRolloutRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetRollout, null, options, request);
      }
      /// <summary>
      /// Retrieve a single rollout.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Rollout> GetRolloutAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetRolloutRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRolloutAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve a single rollout.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Rollout> GetRolloutAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetRolloutRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetRollout, null, options, request);
      }
      /// <summary>
      /// Create a new rollout.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Rollout CreateRollout(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateRolloutRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateRollout(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a new rollout.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Rollout CreateRollout(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateRolloutRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateRollout, null, options, request);
      }
      /// <summary>
      /// Create a new rollout.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Rollout> CreateRolloutAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateRolloutRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateRolloutAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a new rollout.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Rollout> CreateRolloutAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateRolloutRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateRollout, null, options, request);
      }
      /// <summary>
      /// Update a single rollout.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Rollout UpdateRollout(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateRolloutRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateRollout(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update a single rollout.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Rollout UpdateRollout(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateRolloutRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateRollout, null, options, request);
      }
      /// <summary>
      /// Update a single rollout.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Rollout> UpdateRolloutAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateRolloutRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateRolloutAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update a single rollout.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Rollout> UpdateRolloutAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateRolloutRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateRollout, null, options, request);
      }
      /// <summary>
      /// Delete a single rollout.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteRollout(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteRolloutRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteRollout(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete a single rollout.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteRollout(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteRolloutRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteRollout, null, options, request);
      }
      /// <summary>
      /// Delete a single rollout.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteRolloutAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteRolloutRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteRolloutAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete a single rollout.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteRolloutAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteRolloutRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteRollout, null, options, request);
      }
      /// <summary>
      /// Retrieve a collection of rollout kinds.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListRolloutKindsResponse ListRolloutKinds(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListRolloutKindsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListRolloutKinds(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve a collection of rollout kinds.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListRolloutKindsResponse ListRolloutKinds(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListRolloutKindsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListRolloutKinds, null, options, request);
      }
      /// <summary>
      /// Retrieve a collection of rollout kinds.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListRolloutKindsResponse> ListRolloutKindsAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListRolloutKindsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListRolloutKindsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve a collection of rollout kinds.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListRolloutKindsResponse> ListRolloutKindsAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListRolloutKindsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListRolloutKinds, null, options, request);
      }
      /// <summary>
      /// Retrieve a single rollout kind.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.RolloutKind GetRolloutKind(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetRolloutKindRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRolloutKind(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve a single rollout kind.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.RolloutKind GetRolloutKind(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetRolloutKindRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetRolloutKind, null, options, request);
      }
      /// <summary>
      /// Retrieve a single rollout kind.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.RolloutKind> GetRolloutKindAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetRolloutKindRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRolloutKindAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve a single rollout kind.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.RolloutKind> GetRolloutKindAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetRolloutKindRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetRolloutKind, null, options, request);
      }
      /// <summary>
      /// Create a new rollout kind.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.RolloutKind CreateRolloutKind(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateRolloutKindRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateRolloutKind(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a new rollout kind.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.RolloutKind CreateRolloutKind(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateRolloutKindRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateRolloutKind, null, options, request);
      }
      /// <summary>
      /// Create a new rollout kind.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.RolloutKind> CreateRolloutKindAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateRolloutKindRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateRolloutKindAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a new rollout kind.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.RolloutKind> CreateRolloutKindAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateRolloutKindRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateRolloutKind, null, options, request);
      }
      /// <summary>
      /// Update a single rollout kind.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.RolloutKind UpdateRolloutKind(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateRolloutKindRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateRolloutKind(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update a single rollout kind.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.RolloutKind UpdateRolloutKind(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateRolloutKindRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateRolloutKind, null, options, request);
      }
      /// <summary>
      /// Update a single rollout kind.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.RolloutKind> UpdateRolloutKindAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateRolloutKindRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateRolloutKindAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update a single rollout kind.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.RolloutKind> UpdateRolloutKindAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateRolloutKindRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateRolloutKind, null, options, request);
      }
      /// <summary>
      /// Delete a single rollout kind.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteRolloutKind(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteRolloutKindRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteRolloutKind(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete a single rollout kind.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteRolloutKind(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteRolloutKindRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteRolloutKind, null, options, request);
      }
      /// <summary>
      /// Delete a single rollout kind.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteRolloutKindAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteRolloutKindRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteRolloutKindAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete a single rollout kind.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteRolloutKindAsync(global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteRolloutKindRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteRolloutKind, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override SaasRolloutsClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new SaasRolloutsClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(SaasRolloutsBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ListRollouts, serviceImpl.ListRollouts)
          .AddMethod(__Method_GetRollout, serviceImpl.GetRollout)
          .AddMethod(__Method_CreateRollout, serviceImpl.CreateRollout)
          .AddMethod(__Method_UpdateRollout, serviceImpl.UpdateRollout)
          .AddMethod(__Method_DeleteRollout, serviceImpl.DeleteRollout)
          .AddMethod(__Method_ListRolloutKinds, serviceImpl.ListRolloutKinds)
          .AddMethod(__Method_GetRolloutKind, serviceImpl.GetRolloutKind)
          .AddMethod(__Method_CreateRolloutKind, serviceImpl.CreateRolloutKind)
          .AddMethod(__Method_UpdateRolloutKind, serviceImpl.UpdateRolloutKind)
          .AddMethod(__Method_DeleteRolloutKind, serviceImpl.DeleteRolloutKind).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, SaasRolloutsBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_ListRollouts, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListRolloutsRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListRolloutsResponse>(serviceImpl.ListRollouts));
      serviceBinder.AddMethod(__Method_GetRollout, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetRolloutRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Rollout>(serviceImpl.GetRollout));
      serviceBinder.AddMethod(__Method_CreateRollout, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateRolloutRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Rollout>(serviceImpl.CreateRollout));
      serviceBinder.AddMethod(__Method_UpdateRollout, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateRolloutRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.Rollout>(serviceImpl.UpdateRollout));
      serviceBinder.AddMethod(__Method_DeleteRollout, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteRolloutRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteRollout));
      serviceBinder.AddMethod(__Method_ListRolloutKinds, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListRolloutKindsRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.ListRolloutKindsResponse>(serviceImpl.ListRolloutKinds));
      serviceBinder.AddMethod(__Method_GetRolloutKind, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.GetRolloutKindRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.RolloutKind>(serviceImpl.GetRolloutKind));
      serviceBinder.AddMethod(__Method_CreateRolloutKind, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.CreateRolloutKindRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.RolloutKind>(serviceImpl.CreateRolloutKind));
      serviceBinder.AddMethod(__Method_UpdateRolloutKind, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.UpdateRolloutKindRequest, global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.RolloutKind>(serviceImpl.UpdateRolloutKind));
      serviceBinder.AddMethod(__Method_DeleteRolloutKind, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SaasPlatform.SaasServiceMgmt.V1Beta1.DeleteRolloutKindRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteRolloutKind));
    }

  }
}
#endregion
