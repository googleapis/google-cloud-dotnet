// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/admanager/v1/operating_system_version_messages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.AdManager.V1 {

  /// <summary>Holder for reflection information generated from google/ads/admanager/v1/operating_system_version_messages.proto</summary>
  public static partial class OperatingSystemVersionMessagesReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/admanager/v1/operating_system_version_messages.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OperatingSystemVersionMessagesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cj9nb29nbGUvYWRzL2FkbWFuYWdlci92MS9vcGVyYXRpbmdfc3lzdGVtX3Zl",
            "cnNpb25fbWVzc2FnZXMucHJvdG8SF2dvb2dsZS5hZHMuYWRtYW5hZ2VyLnYx",
            "Gh9nb29nbGUvYXBpL2ZpZWxkX2JlaGF2aW9yLnByb3RvGhlnb29nbGUvYXBp",
            "L3Jlc291cmNlLnByb3RvIvkCChZPcGVyYXRpbmdTeXN0ZW1WZXJzaW9uEhEK",
            "BG5hbWUYASABKAlCA+BBCBIfCg1tYWpvcl92ZXJzaW9uGAIgASgFQgPgQQNI",
            "AIgBARIfCg1taW5vcl92ZXJzaW9uGAMgASgFQgPgQQNIAYgBARIfCg1taWNy",
            "b192ZXJzaW9uGAQgASgFQgPgQQNIAogBATqyAepBrgEKL2FkbWFuYWdlci5n",
            "b29nbGVhcGlzLmNvbS9PcGVyYXRpbmdTeXN0ZW1WZXJzaW9uEkpuZXR3b3Jr",
            "cy97bmV0d29ya19jb2RlfS9vcGVyYXRpbmdTeXN0ZW1WZXJzaW9ucy97b3Bl",
            "cmF0aW5nX3N5c3RlbV92ZXJzaW9ufSoXb3BlcmF0aW5nU3lzdGVtVmVyc2lv",
            "bnMyFm9wZXJhdGluZ1N5c3RlbVZlcnNpb25CEAoOX21ham9yX3ZlcnNpb25C",
            "EAoOX21pbm9yX3ZlcnNpb25CEAoOX21pY3JvX3ZlcnNpb25C1wEKG2NvbS5n",
            "b29nbGUuYWRzLmFkbWFuYWdlci52MUIjT3BlcmF0aW5nU3lzdGVtVmVyc2lv",
            "bk1lc3NhZ2VzUHJvdG9QAVpAZ29vZ2xlLmdvbGFuZy5vcmcvZ2VucHJvdG8v",
            "Z29vZ2xlYXBpcy9hZHMvYWRtYW5hZ2VyL3YxO2FkbWFuYWdlcqoCF0dvb2ds",
            "ZS5BZHMuQWRNYW5hZ2VyLlYxygIXR29vZ2xlXEFkc1xBZE1hbmFnZXJcVjHq",
            "AhpHb29nbGU6OkFkczo6QWRNYW5hZ2VyOjpWMWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.OperatingSystemVersion), global::Google.Ads.AdManager.V1.OperatingSystemVersion.Parser, new[]{ "Name", "MajorVersion", "MinorVersion", "MicroVersion" }, new[]{ "MajorVersion", "MinorVersion", "MicroVersion" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Represents a specific version of an operating system.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class OperatingSystemVersion : pb::IMessage<OperatingSystemVersion>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OperatingSystemVersion> _parser = new pb::MessageParser<OperatingSystemVersion>(() => new OperatingSystemVersion());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OperatingSystemVersion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.AdManager.V1.OperatingSystemVersionMessagesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OperatingSystemVersion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OperatingSystemVersion(OperatingSystemVersion other) : this() {
      _hasBits0 = other._hasBits0;
      name_ = other.name_;
      majorVersion_ = other.majorVersion_;
      minorVersion_ = other.minorVersion_;
      microVersion_ = other.microVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OperatingSystemVersion Clone() {
      return new OperatingSystemVersion(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Identifier. The resource name of the `OperatingSystemVersion`.
    /// Format:
    /// `networks/{network_code}/operatingSystemVersions/{operating_system_version_id}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "major_version" field.</summary>
    public const int MajorVersionFieldNumber = 2;
    private readonly static int MajorVersionDefaultValue = 0;

    private int majorVersion_;
    /// <summary>
    /// Output only. The major version of the operating system.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MajorVersion {
      get { if ((_hasBits0 & 1) != 0) { return majorVersion_; } else { return MajorVersionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        majorVersion_ = value;
      }
    }
    /// <summary>Gets whether the "major_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMajorVersion {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "major_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMajorVersion() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "minor_version" field.</summary>
    public const int MinorVersionFieldNumber = 3;
    private readonly static int MinorVersionDefaultValue = 0;

    private int minorVersion_;
    /// <summary>
    /// Output only. The minor version of the operating system.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MinorVersion {
      get { if ((_hasBits0 & 2) != 0) { return minorVersion_; } else { return MinorVersionDefaultValue; } }
      set {
        _hasBits0 |= 2;
        minorVersion_ = value;
      }
    }
    /// <summary>Gets whether the "minor_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMinorVersion {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "minor_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMinorVersion() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "micro_version" field.</summary>
    public const int MicroVersionFieldNumber = 4;
    private readonly static int MicroVersionDefaultValue = 0;

    private int microVersion_;
    /// <summary>
    /// Output only. The micro version of the operating system.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MicroVersion {
      get { if ((_hasBits0 & 4) != 0) { return microVersion_; } else { return MicroVersionDefaultValue; } }
      set {
        _hasBits0 |= 4;
        microVersion_ = value;
      }
    }
    /// <summary>Gets whether the "micro_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMicroVersion {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "micro_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMicroVersion() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OperatingSystemVersion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OperatingSystemVersion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (MajorVersion != other.MajorVersion) return false;
      if (MinorVersion != other.MinorVersion) return false;
      if (MicroVersion != other.MicroVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (HasMajorVersion) hash ^= MajorVersion.GetHashCode();
      if (HasMinorVersion) hash ^= MinorVersion.GetHashCode();
      if (HasMicroVersion) hash ^= MicroVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasMajorVersion) {
        output.WriteRawTag(16);
        output.WriteInt32(MajorVersion);
      }
      if (HasMinorVersion) {
        output.WriteRawTag(24);
        output.WriteInt32(MinorVersion);
      }
      if (HasMicroVersion) {
        output.WriteRawTag(32);
        output.WriteInt32(MicroVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasMajorVersion) {
        output.WriteRawTag(16);
        output.WriteInt32(MajorVersion);
      }
      if (HasMinorVersion) {
        output.WriteRawTag(24);
        output.WriteInt32(MinorVersion);
      }
      if (HasMicroVersion) {
        output.WriteRawTag(32);
        output.WriteInt32(MicroVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasMajorVersion) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MajorVersion);
      }
      if (HasMinorVersion) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinorVersion);
      }
      if (HasMicroVersion) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MicroVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OperatingSystemVersion other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.HasMajorVersion) {
        MajorVersion = other.MajorVersion;
      }
      if (other.HasMinorVersion) {
        MinorVersion = other.MinorVersion;
      }
      if (other.HasMicroVersion) {
        MicroVersion = other.MicroVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            MajorVersion = input.ReadInt32();
            break;
          }
          case 24: {
            MinorVersion = input.ReadInt32();
            break;
          }
          case 32: {
            MicroVersion = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            MajorVersion = input.ReadInt32();
            break;
          }
          case 24: {
            MinorVersion = input.ReadInt32();
            break;
          }
          case 32: {
            MicroVersion = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
