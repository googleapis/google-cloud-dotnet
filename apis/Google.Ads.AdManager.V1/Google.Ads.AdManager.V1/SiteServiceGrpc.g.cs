// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/admanager/v1/site_service.proto
// </auto-generated>
// Original file comments:
// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Ads.AdManager.V1 {
  /// <summary>
  /// Provides methods for handling `Site` objects.
  /// </summary>
  public static partial class SiteService
  {
    static readonly string __ServiceName = "google.ads.admanager.v1.SiteService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.AdManager.V1.GetSiteRequest> __Marshaller_google_ads_admanager_v1_GetSiteRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.AdManager.V1.GetSiteRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.AdManager.V1.Site> __Marshaller_google_ads_admanager_v1_Site = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.AdManager.V1.Site.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.AdManager.V1.ListSitesRequest> __Marshaller_google_ads_admanager_v1_ListSitesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.AdManager.V1.ListSitesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.AdManager.V1.ListSitesResponse> __Marshaller_google_ads_admanager_v1_ListSitesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.AdManager.V1.ListSitesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.AdManager.V1.CreateSiteRequest> __Marshaller_google_ads_admanager_v1_CreateSiteRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.AdManager.V1.CreateSiteRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.AdManager.V1.BatchCreateSitesRequest> __Marshaller_google_ads_admanager_v1_BatchCreateSitesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.AdManager.V1.BatchCreateSitesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.AdManager.V1.BatchCreateSitesResponse> __Marshaller_google_ads_admanager_v1_BatchCreateSitesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.AdManager.V1.BatchCreateSitesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.AdManager.V1.UpdateSiteRequest> __Marshaller_google_ads_admanager_v1_UpdateSiteRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.AdManager.V1.UpdateSiteRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.AdManager.V1.BatchUpdateSitesRequest> __Marshaller_google_ads_admanager_v1_BatchUpdateSitesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.AdManager.V1.BatchUpdateSitesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.AdManager.V1.BatchUpdateSitesResponse> __Marshaller_google_ads_admanager_v1_BatchUpdateSitesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.AdManager.V1.BatchUpdateSitesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.AdManager.V1.BatchDeactivateSitesRequest> __Marshaller_google_ads_admanager_v1_BatchDeactivateSitesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.AdManager.V1.BatchDeactivateSitesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.AdManager.V1.BatchDeactivateSitesResponse> __Marshaller_google_ads_admanager_v1_BatchDeactivateSitesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.AdManager.V1.BatchDeactivateSitesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.AdManager.V1.BatchSubmitSitesForApprovalRequest> __Marshaller_google_ads_admanager_v1_BatchSubmitSitesForApprovalRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.AdManager.V1.BatchSubmitSitesForApprovalRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.AdManager.V1.BatchSubmitSitesForApprovalResponse> __Marshaller_google_ads_admanager_v1_BatchSubmitSitesForApprovalResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.AdManager.V1.BatchSubmitSitesForApprovalResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Ads.AdManager.V1.GetSiteRequest, global::Google.Ads.AdManager.V1.Site> __Method_GetSite = new grpc::Method<global::Google.Ads.AdManager.V1.GetSiteRequest, global::Google.Ads.AdManager.V1.Site>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSite",
        __Marshaller_google_ads_admanager_v1_GetSiteRequest,
        __Marshaller_google_ads_admanager_v1_Site);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Ads.AdManager.V1.ListSitesRequest, global::Google.Ads.AdManager.V1.ListSitesResponse> __Method_ListSites = new grpc::Method<global::Google.Ads.AdManager.V1.ListSitesRequest, global::Google.Ads.AdManager.V1.ListSitesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListSites",
        __Marshaller_google_ads_admanager_v1_ListSitesRequest,
        __Marshaller_google_ads_admanager_v1_ListSitesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Ads.AdManager.V1.CreateSiteRequest, global::Google.Ads.AdManager.V1.Site> __Method_CreateSite = new grpc::Method<global::Google.Ads.AdManager.V1.CreateSiteRequest, global::Google.Ads.AdManager.V1.Site>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateSite",
        __Marshaller_google_ads_admanager_v1_CreateSiteRequest,
        __Marshaller_google_ads_admanager_v1_Site);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Ads.AdManager.V1.BatchCreateSitesRequest, global::Google.Ads.AdManager.V1.BatchCreateSitesResponse> __Method_BatchCreateSites = new grpc::Method<global::Google.Ads.AdManager.V1.BatchCreateSitesRequest, global::Google.Ads.AdManager.V1.BatchCreateSitesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BatchCreateSites",
        __Marshaller_google_ads_admanager_v1_BatchCreateSitesRequest,
        __Marshaller_google_ads_admanager_v1_BatchCreateSitesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Ads.AdManager.V1.UpdateSiteRequest, global::Google.Ads.AdManager.V1.Site> __Method_UpdateSite = new grpc::Method<global::Google.Ads.AdManager.V1.UpdateSiteRequest, global::Google.Ads.AdManager.V1.Site>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateSite",
        __Marshaller_google_ads_admanager_v1_UpdateSiteRequest,
        __Marshaller_google_ads_admanager_v1_Site);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Ads.AdManager.V1.BatchUpdateSitesRequest, global::Google.Ads.AdManager.V1.BatchUpdateSitesResponse> __Method_BatchUpdateSites = new grpc::Method<global::Google.Ads.AdManager.V1.BatchUpdateSitesRequest, global::Google.Ads.AdManager.V1.BatchUpdateSitesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BatchUpdateSites",
        __Marshaller_google_ads_admanager_v1_BatchUpdateSitesRequest,
        __Marshaller_google_ads_admanager_v1_BatchUpdateSitesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Ads.AdManager.V1.BatchDeactivateSitesRequest, global::Google.Ads.AdManager.V1.BatchDeactivateSitesResponse> __Method_BatchDeactivateSites = new grpc::Method<global::Google.Ads.AdManager.V1.BatchDeactivateSitesRequest, global::Google.Ads.AdManager.V1.BatchDeactivateSitesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BatchDeactivateSites",
        __Marshaller_google_ads_admanager_v1_BatchDeactivateSitesRequest,
        __Marshaller_google_ads_admanager_v1_BatchDeactivateSitesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Ads.AdManager.V1.BatchSubmitSitesForApprovalRequest, global::Google.Ads.AdManager.V1.BatchSubmitSitesForApprovalResponse> __Method_BatchSubmitSitesForApproval = new grpc::Method<global::Google.Ads.AdManager.V1.BatchSubmitSitesForApprovalRequest, global::Google.Ads.AdManager.V1.BatchSubmitSitesForApprovalResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BatchSubmitSitesForApproval",
        __Marshaller_google_ads_admanager_v1_BatchSubmitSitesForApprovalRequest,
        __Marshaller_google_ads_admanager_v1_BatchSubmitSitesForApprovalResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Ads.AdManager.V1.SiteServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of SiteService</summary>
    [grpc::BindServiceMethod(typeof(SiteService), "BindService")]
    public abstract partial class SiteServiceBase
    {
      /// <summary>
      /// API to retrieve a `Site` object.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Ads.AdManager.V1.Site> GetSite(global::Google.Ads.AdManager.V1.GetSiteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// API to retrieve a list of `Site` objects.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Ads.AdManager.V1.ListSitesResponse> ListSites(global::Google.Ads.AdManager.V1.ListSitesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// API to create a `Site` object.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Ads.AdManager.V1.Site> CreateSite(global::Google.Ads.AdManager.V1.CreateSiteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// API to batch create `Site` objects.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Ads.AdManager.V1.BatchCreateSitesResponse> BatchCreateSites(global::Google.Ads.AdManager.V1.BatchCreateSitesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// API to update a `Site` object.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Ads.AdManager.V1.Site> UpdateSite(global::Google.Ads.AdManager.V1.UpdateSiteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// API to batch update `Site` objects.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Ads.AdManager.V1.BatchUpdateSitesResponse> BatchUpdateSites(global::Google.Ads.AdManager.V1.BatchUpdateSitesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deactivates a list of `Site` objects.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Ads.AdManager.V1.BatchDeactivateSitesResponse> BatchDeactivateSites(global::Google.Ads.AdManager.V1.BatchDeactivateSitesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Submits a list of `Site` objects for approval.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Ads.AdManager.V1.BatchSubmitSitesForApprovalResponse> BatchSubmitSitesForApproval(global::Google.Ads.AdManager.V1.BatchSubmitSitesForApprovalRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for SiteService</summary>
    public partial class SiteServiceClient : grpc::ClientBase<SiteServiceClient>
    {
      /// <summary>Creates a new client for SiteService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public SiteServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for SiteService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public SiteServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected SiteServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected SiteServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// API to retrieve a `Site` object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.AdManager.V1.Site GetSite(global::Google.Ads.AdManager.V1.GetSiteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSite(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// API to retrieve a `Site` object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.AdManager.V1.Site GetSite(global::Google.Ads.AdManager.V1.GetSiteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSite, null, options, request);
      }
      /// <summary>
      /// API to retrieve a `Site` object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.AdManager.V1.Site> GetSiteAsync(global::Google.Ads.AdManager.V1.GetSiteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSiteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// API to retrieve a `Site` object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.AdManager.V1.Site> GetSiteAsync(global::Google.Ads.AdManager.V1.GetSiteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSite, null, options, request);
      }
      /// <summary>
      /// API to retrieve a list of `Site` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.AdManager.V1.ListSitesResponse ListSites(global::Google.Ads.AdManager.V1.ListSitesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSites(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// API to retrieve a list of `Site` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.AdManager.V1.ListSitesResponse ListSites(global::Google.Ads.AdManager.V1.ListSitesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListSites, null, options, request);
      }
      /// <summary>
      /// API to retrieve a list of `Site` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.AdManager.V1.ListSitesResponse> ListSitesAsync(global::Google.Ads.AdManager.V1.ListSitesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSitesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// API to retrieve a list of `Site` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.AdManager.V1.ListSitesResponse> ListSitesAsync(global::Google.Ads.AdManager.V1.ListSitesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListSites, null, options, request);
      }
      /// <summary>
      /// API to create a `Site` object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.AdManager.V1.Site CreateSite(global::Google.Ads.AdManager.V1.CreateSiteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateSite(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// API to create a `Site` object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.AdManager.V1.Site CreateSite(global::Google.Ads.AdManager.V1.CreateSiteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateSite, null, options, request);
      }
      /// <summary>
      /// API to create a `Site` object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.AdManager.V1.Site> CreateSiteAsync(global::Google.Ads.AdManager.V1.CreateSiteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateSiteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// API to create a `Site` object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.AdManager.V1.Site> CreateSiteAsync(global::Google.Ads.AdManager.V1.CreateSiteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateSite, null, options, request);
      }
      /// <summary>
      /// API to batch create `Site` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.AdManager.V1.BatchCreateSitesResponse BatchCreateSites(global::Google.Ads.AdManager.V1.BatchCreateSitesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchCreateSites(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// API to batch create `Site` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.AdManager.V1.BatchCreateSitesResponse BatchCreateSites(global::Google.Ads.AdManager.V1.BatchCreateSitesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BatchCreateSites, null, options, request);
      }
      /// <summary>
      /// API to batch create `Site` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.AdManager.V1.BatchCreateSitesResponse> BatchCreateSitesAsync(global::Google.Ads.AdManager.V1.BatchCreateSitesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchCreateSitesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// API to batch create `Site` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.AdManager.V1.BatchCreateSitesResponse> BatchCreateSitesAsync(global::Google.Ads.AdManager.V1.BatchCreateSitesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BatchCreateSites, null, options, request);
      }
      /// <summary>
      /// API to update a `Site` object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.AdManager.V1.Site UpdateSite(global::Google.Ads.AdManager.V1.UpdateSiteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateSite(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// API to update a `Site` object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.AdManager.V1.Site UpdateSite(global::Google.Ads.AdManager.V1.UpdateSiteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateSite, null, options, request);
      }
      /// <summary>
      /// API to update a `Site` object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.AdManager.V1.Site> UpdateSiteAsync(global::Google.Ads.AdManager.V1.UpdateSiteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateSiteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// API to update a `Site` object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.AdManager.V1.Site> UpdateSiteAsync(global::Google.Ads.AdManager.V1.UpdateSiteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateSite, null, options, request);
      }
      /// <summary>
      /// API to batch update `Site` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.AdManager.V1.BatchUpdateSitesResponse BatchUpdateSites(global::Google.Ads.AdManager.V1.BatchUpdateSitesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchUpdateSites(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// API to batch update `Site` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.AdManager.V1.BatchUpdateSitesResponse BatchUpdateSites(global::Google.Ads.AdManager.V1.BatchUpdateSitesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BatchUpdateSites, null, options, request);
      }
      /// <summary>
      /// API to batch update `Site` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.AdManager.V1.BatchUpdateSitesResponse> BatchUpdateSitesAsync(global::Google.Ads.AdManager.V1.BatchUpdateSitesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchUpdateSitesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// API to batch update `Site` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.AdManager.V1.BatchUpdateSitesResponse> BatchUpdateSitesAsync(global::Google.Ads.AdManager.V1.BatchUpdateSitesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BatchUpdateSites, null, options, request);
      }
      /// <summary>
      /// Deactivates a list of `Site` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.AdManager.V1.BatchDeactivateSitesResponse BatchDeactivateSites(global::Google.Ads.AdManager.V1.BatchDeactivateSitesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchDeactivateSites(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deactivates a list of `Site` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.AdManager.V1.BatchDeactivateSitesResponse BatchDeactivateSites(global::Google.Ads.AdManager.V1.BatchDeactivateSitesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BatchDeactivateSites, null, options, request);
      }
      /// <summary>
      /// Deactivates a list of `Site` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.AdManager.V1.BatchDeactivateSitesResponse> BatchDeactivateSitesAsync(global::Google.Ads.AdManager.V1.BatchDeactivateSitesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchDeactivateSitesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deactivates a list of `Site` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.AdManager.V1.BatchDeactivateSitesResponse> BatchDeactivateSitesAsync(global::Google.Ads.AdManager.V1.BatchDeactivateSitesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BatchDeactivateSites, null, options, request);
      }
      /// <summary>
      /// Submits a list of `Site` objects for approval.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.AdManager.V1.BatchSubmitSitesForApprovalResponse BatchSubmitSitesForApproval(global::Google.Ads.AdManager.V1.BatchSubmitSitesForApprovalRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchSubmitSitesForApproval(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Submits a list of `Site` objects for approval.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.AdManager.V1.BatchSubmitSitesForApprovalResponse BatchSubmitSitesForApproval(global::Google.Ads.AdManager.V1.BatchSubmitSitesForApprovalRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BatchSubmitSitesForApproval, null, options, request);
      }
      /// <summary>
      /// Submits a list of `Site` objects for approval.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.AdManager.V1.BatchSubmitSitesForApprovalResponse> BatchSubmitSitesForApprovalAsync(global::Google.Ads.AdManager.V1.BatchSubmitSitesForApprovalRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchSubmitSitesForApprovalAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Submits a list of `Site` objects for approval.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.AdManager.V1.BatchSubmitSitesForApprovalResponse> BatchSubmitSitesForApprovalAsync(global::Google.Ads.AdManager.V1.BatchSubmitSitesForApprovalRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BatchSubmitSitesForApproval, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override SiteServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new SiteServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(SiteServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetSite, serviceImpl.GetSite)
          .AddMethod(__Method_ListSites, serviceImpl.ListSites)
          .AddMethod(__Method_CreateSite, serviceImpl.CreateSite)
          .AddMethod(__Method_BatchCreateSites, serviceImpl.BatchCreateSites)
          .AddMethod(__Method_UpdateSite, serviceImpl.UpdateSite)
          .AddMethod(__Method_BatchUpdateSites, serviceImpl.BatchUpdateSites)
          .AddMethod(__Method_BatchDeactivateSites, serviceImpl.BatchDeactivateSites)
          .AddMethod(__Method_BatchSubmitSitesForApproval, serviceImpl.BatchSubmitSitesForApproval).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, SiteServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetSite, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Ads.AdManager.V1.GetSiteRequest, global::Google.Ads.AdManager.V1.Site>(serviceImpl.GetSite));
      serviceBinder.AddMethod(__Method_ListSites, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Ads.AdManager.V1.ListSitesRequest, global::Google.Ads.AdManager.V1.ListSitesResponse>(serviceImpl.ListSites));
      serviceBinder.AddMethod(__Method_CreateSite, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Ads.AdManager.V1.CreateSiteRequest, global::Google.Ads.AdManager.V1.Site>(serviceImpl.CreateSite));
      serviceBinder.AddMethod(__Method_BatchCreateSites, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Ads.AdManager.V1.BatchCreateSitesRequest, global::Google.Ads.AdManager.V1.BatchCreateSitesResponse>(serviceImpl.BatchCreateSites));
      serviceBinder.AddMethod(__Method_UpdateSite, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Ads.AdManager.V1.UpdateSiteRequest, global::Google.Ads.AdManager.V1.Site>(serviceImpl.UpdateSite));
      serviceBinder.AddMethod(__Method_BatchUpdateSites, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Ads.AdManager.V1.BatchUpdateSitesRequest, global::Google.Ads.AdManager.V1.BatchUpdateSitesResponse>(serviceImpl.BatchUpdateSites));
      serviceBinder.AddMethod(__Method_BatchDeactivateSites, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Ads.AdManager.V1.BatchDeactivateSitesRequest, global::Google.Ads.AdManager.V1.BatchDeactivateSitesResponse>(serviceImpl.BatchDeactivateSites));
      serviceBinder.AddMethod(__Method_BatchSubmitSitesForApproval, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Ads.AdManager.V1.BatchSubmitSitesForApprovalRequest, global::Google.Ads.AdManager.V1.BatchSubmitSitesForApprovalResponse>(serviceImpl.BatchSubmitSitesForApproval));
    }

  }
}
#endregion
