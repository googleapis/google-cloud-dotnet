// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/admanager/v1/team_service.proto
// </auto-generated>
// Original file comments:
// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Ads.AdManager.V1 {
  /// <summary>
  /// Provides methods for handling `Team` objects.
  /// </summary>
  public static partial class TeamService
  {
    static readonly string __ServiceName = "google.ads.admanager.v1.TeamService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.AdManager.V1.GetTeamRequest> __Marshaller_google_ads_admanager_v1_GetTeamRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.AdManager.V1.GetTeamRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.AdManager.V1.Team> __Marshaller_google_ads_admanager_v1_Team = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.AdManager.V1.Team.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.AdManager.V1.ListTeamsRequest> __Marshaller_google_ads_admanager_v1_ListTeamsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.AdManager.V1.ListTeamsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.AdManager.V1.ListTeamsResponse> __Marshaller_google_ads_admanager_v1_ListTeamsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.AdManager.V1.ListTeamsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.AdManager.V1.CreateTeamRequest> __Marshaller_google_ads_admanager_v1_CreateTeamRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.AdManager.V1.CreateTeamRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.AdManager.V1.BatchCreateTeamsRequest> __Marshaller_google_ads_admanager_v1_BatchCreateTeamsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.AdManager.V1.BatchCreateTeamsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.AdManager.V1.BatchCreateTeamsResponse> __Marshaller_google_ads_admanager_v1_BatchCreateTeamsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.AdManager.V1.BatchCreateTeamsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.AdManager.V1.UpdateTeamRequest> __Marshaller_google_ads_admanager_v1_UpdateTeamRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.AdManager.V1.UpdateTeamRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.AdManager.V1.BatchUpdateTeamsRequest> __Marshaller_google_ads_admanager_v1_BatchUpdateTeamsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.AdManager.V1.BatchUpdateTeamsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.AdManager.V1.BatchUpdateTeamsResponse> __Marshaller_google_ads_admanager_v1_BatchUpdateTeamsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.AdManager.V1.BatchUpdateTeamsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.AdManager.V1.BatchActivateTeamsRequest> __Marshaller_google_ads_admanager_v1_BatchActivateTeamsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.AdManager.V1.BatchActivateTeamsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.AdManager.V1.BatchActivateTeamsResponse> __Marshaller_google_ads_admanager_v1_BatchActivateTeamsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.AdManager.V1.BatchActivateTeamsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.AdManager.V1.BatchDeactivateTeamsRequest> __Marshaller_google_ads_admanager_v1_BatchDeactivateTeamsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.AdManager.V1.BatchDeactivateTeamsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.AdManager.V1.BatchDeactivateTeamsResponse> __Marshaller_google_ads_admanager_v1_BatchDeactivateTeamsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.AdManager.V1.BatchDeactivateTeamsResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Ads.AdManager.V1.GetTeamRequest, global::Google.Ads.AdManager.V1.Team> __Method_GetTeam = new grpc::Method<global::Google.Ads.AdManager.V1.GetTeamRequest, global::Google.Ads.AdManager.V1.Team>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetTeam",
        __Marshaller_google_ads_admanager_v1_GetTeamRequest,
        __Marshaller_google_ads_admanager_v1_Team);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Ads.AdManager.V1.ListTeamsRequest, global::Google.Ads.AdManager.V1.ListTeamsResponse> __Method_ListTeams = new grpc::Method<global::Google.Ads.AdManager.V1.ListTeamsRequest, global::Google.Ads.AdManager.V1.ListTeamsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListTeams",
        __Marshaller_google_ads_admanager_v1_ListTeamsRequest,
        __Marshaller_google_ads_admanager_v1_ListTeamsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Ads.AdManager.V1.CreateTeamRequest, global::Google.Ads.AdManager.V1.Team> __Method_CreateTeam = new grpc::Method<global::Google.Ads.AdManager.V1.CreateTeamRequest, global::Google.Ads.AdManager.V1.Team>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateTeam",
        __Marshaller_google_ads_admanager_v1_CreateTeamRequest,
        __Marshaller_google_ads_admanager_v1_Team);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Ads.AdManager.V1.BatchCreateTeamsRequest, global::Google.Ads.AdManager.V1.BatchCreateTeamsResponse> __Method_BatchCreateTeams = new grpc::Method<global::Google.Ads.AdManager.V1.BatchCreateTeamsRequest, global::Google.Ads.AdManager.V1.BatchCreateTeamsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BatchCreateTeams",
        __Marshaller_google_ads_admanager_v1_BatchCreateTeamsRequest,
        __Marshaller_google_ads_admanager_v1_BatchCreateTeamsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Ads.AdManager.V1.UpdateTeamRequest, global::Google.Ads.AdManager.V1.Team> __Method_UpdateTeam = new grpc::Method<global::Google.Ads.AdManager.V1.UpdateTeamRequest, global::Google.Ads.AdManager.V1.Team>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateTeam",
        __Marshaller_google_ads_admanager_v1_UpdateTeamRequest,
        __Marshaller_google_ads_admanager_v1_Team);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Ads.AdManager.V1.BatchUpdateTeamsRequest, global::Google.Ads.AdManager.V1.BatchUpdateTeamsResponse> __Method_BatchUpdateTeams = new grpc::Method<global::Google.Ads.AdManager.V1.BatchUpdateTeamsRequest, global::Google.Ads.AdManager.V1.BatchUpdateTeamsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BatchUpdateTeams",
        __Marshaller_google_ads_admanager_v1_BatchUpdateTeamsRequest,
        __Marshaller_google_ads_admanager_v1_BatchUpdateTeamsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Ads.AdManager.V1.BatchActivateTeamsRequest, global::Google.Ads.AdManager.V1.BatchActivateTeamsResponse> __Method_BatchActivateTeams = new grpc::Method<global::Google.Ads.AdManager.V1.BatchActivateTeamsRequest, global::Google.Ads.AdManager.V1.BatchActivateTeamsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BatchActivateTeams",
        __Marshaller_google_ads_admanager_v1_BatchActivateTeamsRequest,
        __Marshaller_google_ads_admanager_v1_BatchActivateTeamsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Ads.AdManager.V1.BatchDeactivateTeamsRequest, global::Google.Ads.AdManager.V1.BatchDeactivateTeamsResponse> __Method_BatchDeactivateTeams = new grpc::Method<global::Google.Ads.AdManager.V1.BatchDeactivateTeamsRequest, global::Google.Ads.AdManager.V1.BatchDeactivateTeamsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BatchDeactivateTeams",
        __Marshaller_google_ads_admanager_v1_BatchDeactivateTeamsRequest,
        __Marshaller_google_ads_admanager_v1_BatchDeactivateTeamsResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Ads.AdManager.V1.TeamServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of TeamService</summary>
    [grpc::BindServiceMethod(typeof(TeamService), "BindService")]
    public abstract partial class TeamServiceBase
    {
      /// <summary>
      /// API to retrieve a `Team` object.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Ads.AdManager.V1.Team> GetTeam(global::Google.Ads.AdManager.V1.GetTeamRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// API to retrieve a list of `Team` objects.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Ads.AdManager.V1.ListTeamsResponse> ListTeams(global::Google.Ads.AdManager.V1.ListTeamsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// API to create a `Team` object.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Ads.AdManager.V1.Team> CreateTeam(global::Google.Ads.AdManager.V1.CreateTeamRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// API to batch create `Team` objects.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Ads.AdManager.V1.BatchCreateTeamsResponse> BatchCreateTeams(global::Google.Ads.AdManager.V1.BatchCreateTeamsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// API to update a `Team` object.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Ads.AdManager.V1.Team> UpdateTeam(global::Google.Ads.AdManager.V1.UpdateTeamRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// API to batch update `Team` objects.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Ads.AdManager.V1.BatchUpdateTeamsResponse> BatchUpdateTeams(global::Google.Ads.AdManager.V1.BatchUpdateTeamsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// API to batch activate `Team` objects.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Ads.AdManager.V1.BatchActivateTeamsResponse> BatchActivateTeams(global::Google.Ads.AdManager.V1.BatchActivateTeamsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// API to batch deactivate `Team` objects.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Ads.AdManager.V1.BatchDeactivateTeamsResponse> BatchDeactivateTeams(global::Google.Ads.AdManager.V1.BatchDeactivateTeamsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for TeamService</summary>
    public partial class TeamServiceClient : grpc::ClientBase<TeamServiceClient>
    {
      /// <summary>Creates a new client for TeamService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public TeamServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for TeamService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public TeamServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected TeamServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected TeamServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// API to retrieve a `Team` object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.AdManager.V1.Team GetTeam(global::Google.Ads.AdManager.V1.GetTeamRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTeam(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// API to retrieve a `Team` object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.AdManager.V1.Team GetTeam(global::Google.Ads.AdManager.V1.GetTeamRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetTeam, null, options, request);
      }
      /// <summary>
      /// API to retrieve a `Team` object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.AdManager.V1.Team> GetTeamAsync(global::Google.Ads.AdManager.V1.GetTeamRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTeamAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// API to retrieve a `Team` object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.AdManager.V1.Team> GetTeamAsync(global::Google.Ads.AdManager.V1.GetTeamRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetTeam, null, options, request);
      }
      /// <summary>
      /// API to retrieve a list of `Team` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.AdManager.V1.ListTeamsResponse ListTeams(global::Google.Ads.AdManager.V1.ListTeamsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListTeams(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// API to retrieve a list of `Team` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.AdManager.V1.ListTeamsResponse ListTeams(global::Google.Ads.AdManager.V1.ListTeamsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListTeams, null, options, request);
      }
      /// <summary>
      /// API to retrieve a list of `Team` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.AdManager.V1.ListTeamsResponse> ListTeamsAsync(global::Google.Ads.AdManager.V1.ListTeamsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListTeamsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// API to retrieve a list of `Team` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.AdManager.V1.ListTeamsResponse> ListTeamsAsync(global::Google.Ads.AdManager.V1.ListTeamsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListTeams, null, options, request);
      }
      /// <summary>
      /// API to create a `Team` object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.AdManager.V1.Team CreateTeam(global::Google.Ads.AdManager.V1.CreateTeamRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateTeam(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// API to create a `Team` object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.AdManager.V1.Team CreateTeam(global::Google.Ads.AdManager.V1.CreateTeamRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateTeam, null, options, request);
      }
      /// <summary>
      /// API to create a `Team` object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.AdManager.V1.Team> CreateTeamAsync(global::Google.Ads.AdManager.V1.CreateTeamRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateTeamAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// API to create a `Team` object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.AdManager.V1.Team> CreateTeamAsync(global::Google.Ads.AdManager.V1.CreateTeamRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateTeam, null, options, request);
      }
      /// <summary>
      /// API to batch create `Team` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.AdManager.V1.BatchCreateTeamsResponse BatchCreateTeams(global::Google.Ads.AdManager.V1.BatchCreateTeamsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchCreateTeams(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// API to batch create `Team` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.AdManager.V1.BatchCreateTeamsResponse BatchCreateTeams(global::Google.Ads.AdManager.V1.BatchCreateTeamsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BatchCreateTeams, null, options, request);
      }
      /// <summary>
      /// API to batch create `Team` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.AdManager.V1.BatchCreateTeamsResponse> BatchCreateTeamsAsync(global::Google.Ads.AdManager.V1.BatchCreateTeamsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchCreateTeamsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// API to batch create `Team` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.AdManager.V1.BatchCreateTeamsResponse> BatchCreateTeamsAsync(global::Google.Ads.AdManager.V1.BatchCreateTeamsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BatchCreateTeams, null, options, request);
      }
      /// <summary>
      /// API to update a `Team` object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.AdManager.V1.Team UpdateTeam(global::Google.Ads.AdManager.V1.UpdateTeamRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateTeam(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// API to update a `Team` object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.AdManager.V1.Team UpdateTeam(global::Google.Ads.AdManager.V1.UpdateTeamRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateTeam, null, options, request);
      }
      /// <summary>
      /// API to update a `Team` object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.AdManager.V1.Team> UpdateTeamAsync(global::Google.Ads.AdManager.V1.UpdateTeamRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateTeamAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// API to update a `Team` object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.AdManager.V1.Team> UpdateTeamAsync(global::Google.Ads.AdManager.V1.UpdateTeamRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateTeam, null, options, request);
      }
      /// <summary>
      /// API to batch update `Team` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.AdManager.V1.BatchUpdateTeamsResponse BatchUpdateTeams(global::Google.Ads.AdManager.V1.BatchUpdateTeamsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchUpdateTeams(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// API to batch update `Team` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.AdManager.V1.BatchUpdateTeamsResponse BatchUpdateTeams(global::Google.Ads.AdManager.V1.BatchUpdateTeamsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BatchUpdateTeams, null, options, request);
      }
      /// <summary>
      /// API to batch update `Team` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.AdManager.V1.BatchUpdateTeamsResponse> BatchUpdateTeamsAsync(global::Google.Ads.AdManager.V1.BatchUpdateTeamsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchUpdateTeamsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// API to batch update `Team` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.AdManager.V1.BatchUpdateTeamsResponse> BatchUpdateTeamsAsync(global::Google.Ads.AdManager.V1.BatchUpdateTeamsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BatchUpdateTeams, null, options, request);
      }
      /// <summary>
      /// API to batch activate `Team` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.AdManager.V1.BatchActivateTeamsResponse BatchActivateTeams(global::Google.Ads.AdManager.V1.BatchActivateTeamsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchActivateTeams(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// API to batch activate `Team` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.AdManager.V1.BatchActivateTeamsResponse BatchActivateTeams(global::Google.Ads.AdManager.V1.BatchActivateTeamsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BatchActivateTeams, null, options, request);
      }
      /// <summary>
      /// API to batch activate `Team` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.AdManager.V1.BatchActivateTeamsResponse> BatchActivateTeamsAsync(global::Google.Ads.AdManager.V1.BatchActivateTeamsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchActivateTeamsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// API to batch activate `Team` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.AdManager.V1.BatchActivateTeamsResponse> BatchActivateTeamsAsync(global::Google.Ads.AdManager.V1.BatchActivateTeamsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BatchActivateTeams, null, options, request);
      }
      /// <summary>
      /// API to batch deactivate `Team` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.AdManager.V1.BatchDeactivateTeamsResponse BatchDeactivateTeams(global::Google.Ads.AdManager.V1.BatchDeactivateTeamsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchDeactivateTeams(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// API to batch deactivate `Team` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.AdManager.V1.BatchDeactivateTeamsResponse BatchDeactivateTeams(global::Google.Ads.AdManager.V1.BatchDeactivateTeamsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BatchDeactivateTeams, null, options, request);
      }
      /// <summary>
      /// API to batch deactivate `Team` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.AdManager.V1.BatchDeactivateTeamsResponse> BatchDeactivateTeamsAsync(global::Google.Ads.AdManager.V1.BatchDeactivateTeamsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchDeactivateTeamsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// API to batch deactivate `Team` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.AdManager.V1.BatchDeactivateTeamsResponse> BatchDeactivateTeamsAsync(global::Google.Ads.AdManager.V1.BatchDeactivateTeamsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BatchDeactivateTeams, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override TeamServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new TeamServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(TeamServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetTeam, serviceImpl.GetTeam)
          .AddMethod(__Method_ListTeams, serviceImpl.ListTeams)
          .AddMethod(__Method_CreateTeam, serviceImpl.CreateTeam)
          .AddMethod(__Method_BatchCreateTeams, serviceImpl.BatchCreateTeams)
          .AddMethod(__Method_UpdateTeam, serviceImpl.UpdateTeam)
          .AddMethod(__Method_BatchUpdateTeams, serviceImpl.BatchUpdateTeams)
          .AddMethod(__Method_BatchActivateTeams, serviceImpl.BatchActivateTeams)
          .AddMethod(__Method_BatchDeactivateTeams, serviceImpl.BatchDeactivateTeams).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, TeamServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetTeam, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Ads.AdManager.V1.GetTeamRequest, global::Google.Ads.AdManager.V1.Team>(serviceImpl.GetTeam));
      serviceBinder.AddMethod(__Method_ListTeams, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Ads.AdManager.V1.ListTeamsRequest, global::Google.Ads.AdManager.V1.ListTeamsResponse>(serviceImpl.ListTeams));
      serviceBinder.AddMethod(__Method_CreateTeam, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Ads.AdManager.V1.CreateTeamRequest, global::Google.Ads.AdManager.V1.Team>(serviceImpl.CreateTeam));
      serviceBinder.AddMethod(__Method_BatchCreateTeams, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Ads.AdManager.V1.BatchCreateTeamsRequest, global::Google.Ads.AdManager.V1.BatchCreateTeamsResponse>(serviceImpl.BatchCreateTeams));
      serviceBinder.AddMethod(__Method_UpdateTeam, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Ads.AdManager.V1.UpdateTeamRequest, global::Google.Ads.AdManager.V1.Team>(serviceImpl.UpdateTeam));
      serviceBinder.AddMethod(__Method_BatchUpdateTeams, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Ads.AdManager.V1.BatchUpdateTeamsRequest, global::Google.Ads.AdManager.V1.BatchUpdateTeamsResponse>(serviceImpl.BatchUpdateTeams));
      serviceBinder.AddMethod(__Method_BatchActivateTeams, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Ads.AdManager.V1.BatchActivateTeamsRequest, global::Google.Ads.AdManager.V1.BatchActivateTeamsResponse>(serviceImpl.BatchActivateTeams));
      serviceBinder.AddMethod(__Method_BatchDeactivateTeams, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Ads.AdManager.V1.BatchDeactivateTeamsRequest, global::Google.Ads.AdManager.V1.BatchDeactivateTeamsResponse>(serviceImpl.BatchDeactivateTeams));
    }

  }
}
#endregion
