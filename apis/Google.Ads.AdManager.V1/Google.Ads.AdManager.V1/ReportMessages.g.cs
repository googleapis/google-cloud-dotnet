// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/admanager/v1/report_messages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.AdManager.V1 {

  /// <summary>Holder for reflection information generated from google/ads/admanager/v1/report_messages.proto</summary>
  public static partial class ReportMessagesReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/admanager/v1/report_messages.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ReportMessagesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci1nb29nbGUvYWRzL2FkbWFuYWdlci92MS9yZXBvcnRfbWVzc2FnZXMucHJv",
            "dG8SF2dvb2dsZS5hZHMuYWRtYW5hZ2VyLnYxGh9nb29nbGUvYXBpL2ZpZWxk",
            "X2JlaGF2aW9yLnByb3RvGhlnb29nbGUvYXBpL3Jlc291cmNlLnByb3RvGh9n",
            "b29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3RvGhZnb29nbGUvdHlwZS9k",
            "YXRlLnByb3RvGhtnb29nbGUvdHlwZS9kYXlvZndlZWsucHJvdG8aG2dvb2ds",
            "ZS90eXBlL3RpbWVvZmRheS5wcm90byK16QEKBlJlcG9ydBIRCgRuYW1lGAEg",
            "ASgJQgPgQQgSFgoJcmVwb3J0X2lkGAMgASgDQgPgQQMSQwoKdmlzaWJpbGl0",
            "eRgCIAEoDjIqLmdvb2dsZS5hZHMuYWRtYW5hZ2VyLnYxLlJlcG9ydC5WaXNp",
            "YmlsaXR5QgPgQQESSQoRcmVwb3J0X2RlZmluaXRpb24YBCABKAsyKS5nb29n",
            "bGUuYWRzLmFkbWFuYWdlci52MS5SZXBvcnREZWZpbml0aW9uQgPgQQISGQoM",
            "ZGlzcGxheV9uYW1lGAUgASgJQgPgQQESNAoLdXBkYXRlX3RpbWUYBiABKAsy",
            "Gi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMSNAoLY3JlYXRlX3Rp",
            "bWUYByABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMSEwoG",
            "bG9jYWxlGAggASgJQgPgQQMSRwoQc2NoZWR1bGVfb3B0aW9ucxgJIAEoCzIo",
            "Lmdvb2dsZS5hZHMuYWRtYW5hZ2VyLnYxLlNjaGVkdWxlT3B0aW9uc0ID4EEB",
            "GtMCCgVWYWx1ZRITCglpbnRfdmFsdWUYASABKANIABIWCgxkb3VibGVfdmFs",
            "dWUYAiABKAFIABIWCgxzdHJpbmdfdmFsdWUYAyABKAlIABIUCgpib29sX3Zh",
            "bHVlGAQgASgISAASRwoOaW50X2xpc3RfdmFsdWUYBiABKAsyLS5nb29nbGUu",
            "YWRzLmFkbWFuYWdlci52MS5SZXBvcnQuVmFsdWUuSW50TGlzdEgAEk0KEXN0",
            "cmluZ19saXN0X3ZhbHVlGAcgASgLMjAuZ29vZ2xlLmFkcy5hZG1hbmFnZXIu",
            "djEuUmVwb3J0LlZhbHVlLlN0cmluZ0xpc3RIABIVCgtieXRlc192YWx1ZRgI",
            "IAEoDEgAGhkKB0ludExpc3QSDgoGdmFsdWVzGAEgAygDGhwKClN0cmluZ0xp",
            "c3QSDgoGdmFsdWVzGAEgAygJQgcKBXZhbHVlGssCCgRTb3J0EjkKBWZpZWxk",
            "GAEgASgLMiUuZ29vZ2xlLmFkcy5hZG1hbmFnZXIudjEuUmVwb3J0LkZpZWxk",
            "QgPgQQISFwoKZGVzY2VuZGluZxgCIAEoCEID4EEBEj4KBXNsaWNlGAMgASgL",
            "MiUuZ29vZ2xlLmFkcy5hZG1hbmFnZXIudjEuUmVwb3J0LlNsaWNlQgPgQQFI",
            "AIgBARIjChF0aW1lX3BlcmlvZF9pbmRleBgEIAEoBUID4EEBSAGIAQESVAoR",
            "bWV0cmljX3ZhbHVlX3R5cGUYBSABKA4yLy5nb29nbGUuYWRzLmFkbWFuYWdl",
            "ci52MS5SZXBvcnQuTWV0cmljVmFsdWVUeXBlQgPgQQFIAogBAUIICgZfc2xp",
            "Y2VCFAoSX3RpbWVfcGVyaW9kX2luZGV4QhQKEl9tZXRyaWNfdmFsdWVfdHlw",
            "ZRqJBQoJRGF0YVRhYmxlGp8BCgNSb3cSPwoQZGltZW5zaW9uX3ZhbHVlcxgB",
            "IAMoCzIlLmdvb2dsZS5hZHMuYWRtYW5hZ2VyLnYxLlJlcG9ydC5WYWx1ZRJX",
            "ChNtZXRyaWNfdmFsdWVfZ3JvdXBzGAIgAygLMjouZ29vZ2xlLmFkcy5hZG1h",
            "bmFnZXIudjEuUmVwb3J0LkRhdGFUYWJsZS5NZXRyaWNWYWx1ZUdyb3VwGtkD",
            "ChBNZXRyaWNWYWx1ZUdyb3VwEj0KDnByaW1hcnlfdmFsdWVzGAEgAygLMiUu",
            "Z29vZ2xlLmFkcy5hZG1hbmFnZXIudjEuUmVwb3J0LlZhbHVlEk4KH3ByaW1h",
            "cnlfcGVyY2VudF9vZl90b3RhbF92YWx1ZXMYAiADKAsyJS5nb29nbGUuYWRz",
            "LmFkbWFuYWdlci52MS5SZXBvcnQuVmFsdWUSQAoRY29tcGFyaXNvbl92YWx1",
            "ZXMYAyADKAsyJS5nb29nbGUuYWRzLmFkbWFuYWdlci52MS5SZXBvcnQuVmFs",
            "dWUSUQoiY29tcGFyaXNvbl9wZXJjZW50X29mX3RvdGFsX3ZhbHVlcxgEIAMo",
            "CzIlLmdvb2dsZS5hZHMuYWRtYW5hZ2VyLnYxLlJlcG9ydC5WYWx1ZRJFChZh",
            "YnNvbHV0ZV9jaGFuZ2VfdmFsdWVzGAUgAygLMiUuZ29vZ2xlLmFkcy5hZG1h",
            "bmFnZXIudjEuUmVwb3J0LlZhbHVlEkUKFnJlbGF0aXZlX2NoYW5nZV92YWx1",
            "ZXMYBiADKAsyJS5nb29nbGUuYWRzLmFkbWFuYWdlci52MS5SZXBvcnQuVmFs",
            "dWUSEwoLZmxhZ192YWx1ZXMYByADKAgaigEKBUZpZWxkEj4KCWRpbWVuc2lv",
            "bhgBIAEoDjIpLmdvb2dsZS5hZHMuYWRtYW5hZ2VyLnYxLlJlcG9ydC5EaW1l",
            "bnNpb25IABI4CgZtZXRyaWMYAiABKA4yJi5nb29nbGUuYWRzLmFkbWFuYWdl",
            "ci52MS5SZXBvcnQuTWV0cmljSABCBwoFZmllbGQahQEKBVNsaWNlEkEKCWRp",
            "bWVuc2lvbhgBIAEoDjIpLmdvb2dsZS5hZHMuYWRtYW5hZ2VyLnYxLlJlcG9y",
            "dC5EaW1lbnNpb25CA+BBAhI5CgV2YWx1ZRgCIAEoCzIlLmdvb2dsZS5hZHMu",
            "YWRtYW5hZ2VyLnYxLlJlcG9ydC5WYWx1ZUID4EECGvYHCgZGaWx0ZXISSgoM",
            "ZmllbGRfZmlsdGVyGAEgASgLMjIuZ29vZ2xlLmFkcy5hZG1hbmFnZXIudjEu",
            "UmVwb3J0LkZpbHRlci5GaWVsZEZpbHRlckgAEjwKCm5vdF9maWx0ZXIYAiAB",
            "KAsyJi5nb29nbGUuYWRzLmFkbWFuYWdlci52MS5SZXBvcnQuRmlsdGVySAAS",
            "RwoKYW5kX2ZpbHRlchgDIAEoCzIxLmdvb2dsZS5hZHMuYWRtYW5hZ2VyLnYx",
            "LlJlcG9ydC5GaWx0ZXIuRmlsdGVyTGlzdEgAEkYKCW9yX2ZpbHRlchgEIAEo",
            "CzIxLmdvb2dsZS5hZHMuYWRtYW5hZ2VyLnYxLlJlcG9ydC5GaWx0ZXIuRmls",
            "dGVyTGlzdEgAGr8DCgtGaWVsZEZpbHRlchI5CgVmaWVsZBgBIAEoCzIlLmdv",
            "b2dsZS5hZHMuYWRtYW5hZ2VyLnYxLlJlcG9ydC5GaWVsZEID4EECEkgKCW9w",
            "ZXJhdGlvbhgCIAEoDjIwLmdvb2dsZS5hZHMuYWRtYW5hZ2VyLnYxLlJlcG9y",
            "dC5GaWx0ZXIuT3BlcmF0aW9uQgPgQQISOgoGdmFsdWVzGAMgAygLMiUuZ29v",
            "Z2xlLmFkcy5hZG1hbmFnZXIudjEuUmVwb3J0LlZhbHVlQgPgQQISPgoFc2xp",
            "Y2UYBCABKAsyJS5nb29nbGUuYWRzLmFkbWFuYWdlci52MS5SZXBvcnQuU2xp",
            "Y2VCA+BBAUgAiAEBEiMKEXRpbWVfcGVyaW9kX2luZGV4GAUgASgFQgPgQQFI",
            "AYgBARJUChFtZXRyaWNfdmFsdWVfdHlwZRgGIAEoDjIvLmdvb2dsZS5hZHMu",
            "YWRtYW5hZ2VyLnYxLlJlcG9ydC5NZXRyaWNWYWx1ZVR5cGVCA+BBAUgCiAEB",
            "QggKBl9zbGljZUIUChJfdGltZV9wZXJpb2RfaW5kZXhCFAoSX21ldHJpY192",
            "YWx1ZV90eXBlGkoKCkZpbHRlckxpc3QSPAoHZmlsdGVycxgBIAMoCzImLmdv",
            "b2dsZS5hZHMuYWRtYW5hZ2VyLnYxLlJlcG9ydC5GaWx0ZXJCA+BBAiK6AQoJ",
            "T3BlcmF0aW9uEgYKAklOEAASCgoGTk9UX0lOEAESDAoIQ09OVEFJTlMQAhIQ",
            "CgxOT1RfQ09OVEFJTlMQAxINCglMRVNTX1RIQU4QBBIUChBMRVNTX1RIQU5f",
            "RVFVQUxTEAUSEAoMR1JFQVRFUl9USEFOEAYSFwoTR1JFQVRFUl9USEFOX0VR",
            "VUFMUxAHEgsKB0JFVFdFRU4QCBILCgdNQVRDSEVTEAkSDwoLTk9UX01BVENI",
            "RVMQCkIGCgR0eXBlGlcKBEZsYWcSPAoHZmlsdGVycxgBIAMoCzImLmdvb2ds",
            "ZS5hZHMuYWRtYW5hZ2VyLnYxLlJlcG9ydC5GaWx0ZXJCA+BBAhIRCgRuYW1l",
            "GAIgASgJQgPgQQEa2AYKCURhdGVSYW5nZRJJCgVmaXhlZBgBIAEoCzI4Lmdv",
            "b2dsZS5hZHMuYWRtYW5hZ2VyLnYxLlJlcG9ydC5EYXRlUmFuZ2UuRml4ZWRE",
            "YXRlUmFuZ2VIABJPCghyZWxhdGl2ZRgCIAEoDjI7Lmdvb2dsZS5hZHMuYWRt",
            "YW5hZ2VyLnYxLlJlcG9ydC5EYXRlUmFuZ2UuUmVsYXRpdmVEYXRlUmFuZ2VI",
            "ABpmCg5GaXhlZERhdGVSYW5nZRIqCgpzdGFydF9kYXRlGAEgASgLMhEuZ29v",
            "Z2xlLnR5cGUuRGF0ZUID4EECEigKCGVuZF9kYXRlGAIgASgLMhEuZ29vZ2xl",
            "LnR5cGUuRGF0ZUID4EECIrMEChFSZWxhdGl2ZURhdGVSYW5nZRIjCh9SRUxB",
            "VElWRV9EQVRFX1JBTkdFX1VOU1BFQ0lGSUVEEAASCQoFVE9EQVkQARINCglZ",
            "RVNURVJEQVkQAhINCglUSElTX1dFRUsQAxIVChFUSElTX1dFRUtfVE9fREFU",
            "RRAdEg4KClRISVNfTU9OVEgQBBIWChJUSElTX01PTlRIX1RPX0RBVEUQGhIQ",
            "CgxUSElTX1FVQVJURVIQBRIYChRUSElTX1FVQVJURVJfVE9fREFURRAbEg0K",
            "CVRISVNfWUVBUhAGEhUKEVRISVNfWUVBUl9UT19EQVRFEBwSDQoJTEFTVF9X",
            "RUVLEAcSDgoKTEFTVF9NT05USBAIEhAKDExBU1RfUVVBUlRFUhAJEg0KCUxB",
            "U1RfWUVBUhAKEg8KC0xBU1RfN19EQVlTEAsSEAoMTEFTVF8zMF9EQVlTEAwS",
            "EAoMTEFTVF82MF9EQVlTEA0SEAoMTEFTVF85MF9EQVlTEA4SEQoNTEFTVF8x",
            "ODBfREFZUxAPEhEKDUxBU1RfMzYwX0RBWVMQEBIRCg1MQVNUXzM2NV9EQVlT",
            "EBESEQoNTEFTVF8zX01PTlRIUxASEhEKDUxBU1RfNl9NT05USFMQExISCg5M",
            "QVNUXzEyX01PTlRIUxAUEhEKDUFMTF9BVkFJTEFCTEUQFRITCg9QUkVWSU9V",
            "U19QRVJJT0QQFhIdChlTQU1FX1BFUklPRF9QUkVWSU9VU19ZRUFSEBhCEQoP",
            "ZGF0ZV9yYW5nZV90eXBlIq4BChBUaW1lUGVyaW9kQ29sdW1uEiIKHlRJTUVf",
            "UEVSSU9EX0NPTFVNTl9VTlNQRUNJRklFRBAAEhsKF1RJTUVfUEVSSU9EX0NP",
            "TFVNTl9EQVRFEAESGwoXVElNRV9QRVJJT0RfQ09MVU1OX1dFRUsQAhIcChhU",
            "SU1FX1BFUklPRF9DT0xVTU5fTU9OVEgQAxIeChpUSU1FX1BFUklPRF9DT0xV",
            "TU5fUVVBUlRFUhAEIvSSAQoJRGltZW5zaW9uEhkKFURJTUVOU0lPTl9VTlNQ",
            "RUNJRklFRBAAEhsKFkFEVkVSVElTRVJfRE9NQUlOX05BTUUQ8gESGwoWQURW",
            "RVJUSVNFUl9FWFRFUk5BTF9JRBDkARISCg1BRFZFUlRJU0VSX0lEEIMBEhYK",
            "EUFEVkVSVElTRVJfTEFCRUxTEOYBEhkKFEFEVkVSVElTRVJfTEFCRUxfSURT",
            "EOUBEhQKD0FEVkVSVElTRVJfTkFNRRCEARIfChpBRFZFUlRJU0VSX1BSSU1B",
            "UllfQ09OVEFDVBDjARIQCgtBRF9MT0NBVElPThCGAxIVChBBRF9MT0NBVElP",
            "Tl9OQU1FEIcDEhAKDEFEX1VOSVRfQ09ERRBAEhgKFEFEX1VOSVRfQ09ERV9M",
            "RVZFTF8xEEESGQoVQURfVU5JVF9DT0RFX0xFVkVMXzEwEEoSGQoVQURfVU5J",
            "VF9DT0RFX0xFVkVMXzExEEsSGQoVQURfVU5JVF9DT0RFX0xFVkVMXzEyEEwS",
            "GQoVQURfVU5JVF9DT0RFX0xFVkVMXzEzEE0SGQoVQURfVU5JVF9DT0RFX0xF",
            "VkVMXzE0EE4SGQoVQURfVU5JVF9DT0RFX0xFVkVMXzE1EE8SGQoVQURfVU5J",
            "VF9DT0RFX0xFVkVMXzE2EFASGAoUQURfVU5JVF9DT0RFX0xFVkVMXzIQQhIY",
            "ChRBRF9VTklUX0NPREVfTEVWRUxfMxBDEhgKFEFEX1VOSVRfQ09ERV9MRVZF",
            "TF80EEQSGAoUQURfVU5JVF9DT0RFX0xFVkVMXzUQRRIYChRBRF9VTklUX0NP",
            "REVfTEVWRUxfNhBGEhgKFEFEX1VOSVRfQ09ERV9MRVZFTF83EEcSGAoUQURf",
            "VU5JVF9DT0RFX0xFVkVMXzgQSBIYChRBRF9VTklUX0NPREVfTEVWRUxfORBJ",
            "EhEKDUFEX1VOSVRfREVQVEgQZRIOCgpBRF9VTklUX0lEEBkSGAoUQURfVU5J",
            "VF9JRF9BTExfTEVWRUwQGxIWChJBRF9VTklUX0lEX0xFVkVMXzEQHhIXChNB",
            "RF9VTklUX0lEX0xFVkVMXzEwEDASFwoTQURfVU5JVF9JRF9MRVZFTF8xMRAy",
            "EhcKE0FEX1VOSVRfSURfTEVWRUxfMTIQNBIXChNBRF9VTklUX0lEX0xFVkVM",
            "XzEzEDYSFwoTQURfVU5JVF9JRF9MRVZFTF8xNBA4EhcKE0FEX1VOSVRfSURf",
            "TEVWRUxfMTUQOhIXChNBRF9VTklUX0lEX0xFVkVMXzE2EDwSFgoSQURfVU5J",
            "VF9JRF9MRVZFTF8yECASFgoSQURfVU5JVF9JRF9MRVZFTF8zECISFgoSQURf",
            "VU5JVF9JRF9MRVZFTF80ECQSFgoSQURfVU5JVF9JRF9MRVZFTF81ECYSFgoS",
            "QURfVU5JVF9JRF9MRVZFTF82ECgSFgoSQURfVU5JVF9JRF9MRVZFTF83ECoS",
            "FgoSQURfVU5JVF9JRF9MRVZFTF84ECwSFgoSQURfVU5JVF9JRF9MRVZFTF85",
            "EC4SGQoUQURfVU5JVF9JRF9UT1BfTEVWRUwQjgESEAoMQURfVU5JVF9OQU1F",
            "EBoSGgoWQURfVU5JVF9OQU1FX0FMTF9MRVZFTBAdEhgKFEFEX1VOSVRfTkFN",
            "RV9MRVZFTF8xEB8SGQoVQURfVU5JVF9OQU1FX0xFVkVMXzEwEDESGQoVQURf",
            "VU5JVF9OQU1FX0xFVkVMXzExEDMSGQoVQURfVU5JVF9OQU1FX0xFVkVMXzEy",
            "EDUSGQoVQURfVU5JVF9OQU1FX0xFVkVMXzEzEDcSGQoVQURfVU5JVF9OQU1F",
            "X0xFVkVMXzE0EDkSGQoVQURfVU5JVF9OQU1FX0xFVkVMXzE1EDsSGQoVQURf",
            "VU5JVF9OQU1FX0xFVkVMXzE2ED0SGAoUQURfVU5JVF9OQU1FX0xFVkVMXzIQ",
            "IRIYChRBRF9VTklUX05BTUVfTEVWRUxfMxAjEhgKFEFEX1VOSVRfTkFNRV9M",
            "RVZFTF80ECUSGAoUQURfVU5JVF9OQU1FX0xFVkVMXzUQJxIYChRBRF9VTklU",
            "X05BTUVfTEVWRUxfNhApEhgKFEFEX1VOSVRfTkFNRV9MRVZFTF83ECsSGAoU",
            "QURfVU5JVF9OQU1FX0xFVkVMXzgQLRIYChRBRF9VTklUX05BTUVfTEVWRUxf",
            "ORAvEhsKFkFEX1VOSVRfTkFNRV9UT1BfTEVWRUwQjwESGQoVQURfVU5JVF9S",
            "RVdBUkRfQU1PVU5UED8SFwoTQURfVU5JVF9SRVdBUkRfVFlQRRA+EhMKDkFE",
            "X1VOSVRfU1RBVFVTEM4BEhgKE0FEX1VOSVRfU1RBVFVTX05BTUUQzwESEAoL",
            "QVBQX1ZFUlNJT04QiAMSJAofQkFDS0ZJTExfQURWRVJUSVNFUl9FWFRFUk5B",
            "TF9JRBDdAhIbChZCQUNLRklMTF9BRFZFUlRJU0VSX0lEENoCEh8KGkJBQ0tG",
            "SUxMX0FEVkVSVElTRVJfTEFCRUxTEN8CEiIKHUJBQ0tGSUxMX0FEVkVSVElT",
            "RVJfTEFCRUxfSURTEN4CEh0KGEJBQ0tGSUxMX0FEVkVSVElTRVJfTkFNRRDb",
            "AhIoCiNCQUNLRklMTF9BRFZFUlRJU0VSX1BSSU1BUllfQ09OVEFDVBDcAhIj",
            "Ch5CQUNLRklMTF9DUkVBVElWRV9CSUxMSU5HX1RZUEUQ+gISKAojQkFDS0ZJ",
            "TExfQ1JFQVRJVkVfQklMTElOR19UWVBFX05BTUUQ+wISKAojQkFDS0ZJTExf",
            "Q1JFQVRJVkVfQ0xJQ0tfVEhST1VHSF9VUkwQ+AISGQoUQkFDS0ZJTExfQ1JF",
            "QVRJVkVfSUQQ8gISGwoWQkFDS0ZJTExfQ1JFQVRJVkVfTkFNRRDzAhIpCiRC",
            "QUNLRklMTF9DUkVBVElWRV9USElSRF9QQVJUWV9WRU5ET1IQ+QISGwoWQkFD",
            "S0ZJTExfQ1JFQVRJVkVfVFlQRRD2AhIgChtCQUNLRklMTF9DUkVBVElWRV9U",
            "WVBFX05BTUUQ9wISIAobQkFDS0ZJTExfTElORV9JVEVNX0FSQ0hJVkVEEJYC",
            "EjEKLEJBQ0tGSUxMX0xJTkVfSVRFTV9DT01QQU5JT05fREVMSVZFUllfT1BU",
            "SU9OEIICEjYKMUJBQ0tGSUxMX0xJTkVfSVRFTV9DT01QQU5JT05fREVMSVZF",
            "UllfT1BUSU9OX05BTUUQgwISJwoiQkFDS0ZJTExfTElORV9JVEVNX0NPTVBV",
            "VEVEX1NUQVRVUxCoAhIsCidCQUNLRklMTF9MSU5FX0lURU1fQ09NUFVURURf",
            "U1RBVFVTX05BTUUQqQISKwomQkFDS0ZJTExfTElORV9JVEVNX0NPTlRSQUNU",
            "RURfUVVBTlRJVFkQmAISJQogQkFDS0ZJTExfTElORV9JVEVNX0NPU1RfUEVS",
            "X1VOSVQQkAISIQocQkFDS0ZJTExfTElORV9JVEVNX0NPU1RfVFlQRRCIAhIm",
            "CiFCQUNLRklMTF9MSU5FX0lURU1fQ09TVF9UWVBFX05BTUUQiQISKQokQkFD",
            "S0ZJTExfTElORV9JVEVNX0NSRUFUSVZFX0VORF9EQVRFEP0CEi4KKUJBQ0tG",
            "SUxMX0xJTkVfSVRFTV9DUkVBVElWRV9ST1RBVElPTl9UWVBFEKICEjMKLkJB",
            "Q0tGSUxMX0xJTkVfSVRFTV9DUkVBVElWRV9ST1RBVElPTl9UWVBFX05BTUUQ",
            "owISKwomQkFDS0ZJTExfTElORV9JVEVNX0NSRUFUSVZFX1NUQVJUX0RBVEUQ",
            "/AISJQogQkFDS0ZJTExfTElORV9JVEVNX0NVUlJFTkNZX0NPREUQoAISKgol",
            "QkFDS0ZJTExfTElORV9JVEVNX0RFTElWRVJZX0lORElDQVRPUhCSAhIqCiVC",
            "QUNLRklMTF9MSU5FX0lURU1fREVMSVZFUllfUkFURV9UWVBFEKQCEi8KKkJB",
            "Q0tGSUxMX0xJTkVfSVRFTV9ERUxJVkVSWV9SQVRFX1RZUEVfTkFNRRClAhIp",
            "CiRCQUNLRklMTF9MSU5FX0lURU1fRElTQ09VTlRfQUJTT0xVVEUQpgISKwom",
            "QkFDS0ZJTExfTElORV9JVEVNX0RJU0NPVU5UX1BFUkNFTlRBR0UQpwISIAob",
            "QkFDS0ZJTExfTElORV9JVEVNX0VORF9EQVRFEIsCEiUKIEJBQ0tGSUxMX0xJ",
            "TkVfSVRFTV9FTkRfREFURV9USU1FEI0CEigKI0JBQ0tGSUxMX0xJTkVfSVRF",
            "TV9FTlZJUk9OTUVOVF9UWVBFEK4CEi0KKEJBQ0tGSUxMX0xJTkVfSVRFTV9F",
            "TlZJUk9OTUVOVF9UWVBFX05BTUUQgQISKAojQkFDS0ZJTExfTElORV9JVEVN",
            "X0VYVEVSTkFMX0RFQUxfSUQQnQISIwoeQkFDS0ZJTExfTElORV9JVEVNX0VY",
            "VEVSTkFMX0lEEJECEiUKIEJBQ0tGSUxMX0xJTkVfSVRFTV9GUkVRVUVOQ1lf",
            "Q0FQEK8CEhoKFUJBQ0tGSUxMX0xJTkVfSVRFTV9JRBCqAhIsCidCQUNLRklM",
            "TF9MSU5FX0lURU1fTEFTVF9NT0RJRklFRF9CWV9BUFAQoQISJwoiQkFDS0ZJ",
            "TExfTElORV9JVEVNX0xJRkVUSU1FX0NMSUNLUxCbAhIsCidCQUNLRklMTF9M",
            "SU5FX0lURU1fTElGRVRJTUVfSU1QUkVTU0lPTlMQmgISNQowQkFDS0ZJTExf",
            "TElORV9JVEVNX0xJRkVUSU1FX1ZJRVdBQkxFX0lNUFJFU1NJT05TEJwCEiAK",
            "G0JBQ0tGSUxMX0xJTkVfSVRFTV9NQUtFR09PRBCUAhIcChdCQUNLRklMTF9M",
            "SU5FX0lURU1fTkFNRRCrAhIuCilCQUNLRklMTF9MSU5FX0lURU1fTk9OX0NQ",
            "RF9CT09LRURfUkVWRU5VRRCeAhIjCh5CQUNLRklMTF9MSU5FX0lURU1fT1BU",
            "SU1JWkFCTEUQlQISKQokQkFDS0ZJTExfTElORV9JVEVNX1BSSU1BUllfR09B",
            "TF9UWVBFEIYCEi4KKUJBQ0tGSUxMX0xJTkVfSVRFTV9QUklNQVJZX0dPQUxf",
            "VFlQRV9OQU1FEIcCEi4KKUJBQ0tGSUxMX0xJTkVfSVRFTV9QUklNQVJZX0dP",
            "QUxfVU5JVF9UWVBFEIQCEjMKLkJBQ0tGSUxMX0xJTkVfSVRFTV9QUklNQVJZ",
            "X0dPQUxfVU5JVF9UWVBFX05BTUUQhQISIAobQkFDS0ZJTExfTElORV9JVEVN",
            "X1BSSU9SSVRZEIoCEioKJUJBQ0tGSUxMX0xJTkVfSVRFTV9SRVNFUlZBVElP",
            "Tl9TVEFUVVMQsgISLwoqQkFDS0ZJTExfTElORV9JVEVNX1JFU0VSVkFUSU9O",
            "X1NUQVRVU19OQU1FELMCEiIKHUJBQ0tGSUxMX0xJTkVfSVRFTV9TVEFSVF9E",
            "QVRFEIwCEicKIkJBQ0tGSUxMX0xJTkVfSVRFTV9TVEFSVF9EQVRFX1RJTUUQ",
            "jgISHAoXQkFDS0ZJTExfTElORV9JVEVNX1RZUEUQrAISIQocQkFDS0ZJTExf",
            "TElORV9JVEVNX1RZUEVfTkFNRRCtAhIlCiBCQUNLRklMTF9MSU5FX0lURU1f",
            "VU5MSU1JVEVEX0VORBCPAhIrCiZCQUNLRklMTF9MSU5FX0lURU1fVkFMVUVf",
            "Q09TVF9QRVJfVU5JVBCTAhIpCiRCQUNLRklMTF9MSU5FX0lURU1fV0VCX1BS",
            "T1BFUlRZX0NPREUQnwISKgolQkFDS0ZJTExfTUFTVEVSX0NPTVBBTklPTl9D",
            "UkVBVElWRV9JRBD0AhIsCidCQUNLRklMTF9NQVNURVJfQ09NUEFOSU9OX0NS",
            "RUFUSVZFX05BTUUQ9QISGgoVQkFDS0ZJTExfT1JERVJfQUdFTkNZELkCEh0K",
            "GEJBQ0tGSUxMX09SREVSX0FHRU5DWV9JRBC6AhIeChlCQUNLRklMTF9PUkRF",
            "Ul9CT09LRURfQ1BDELsCEh4KGUJBQ0tGSUxMX09SREVSX0JPT0tFRF9DUE0Q",
            "vAISIwoeQkFDS0ZJTExfT1JERVJfREVMSVZFUllfU1RBVFVTENQCEigKI0JB",
            "Q0tGSUxMX09SREVSX0RFTElWRVJZX1NUQVRVU19OQU1FENUCEhwKF0JBQ0tG",
            "SUxMX09SREVSX0VORF9EQVRFEL0CEiEKHEJBQ0tGSUxMX09SREVSX0VORF9E",
            "QVRFX1RJTUUQvwISHwoaQkFDS0ZJTExfT1JERVJfRVhURVJOQUxfSUQQwAIS",
            "FgoRQkFDS0ZJTExfT1JERVJfSUQQ0gISGgoVQkFDS0ZJTExfT1JERVJfTEFC",
            "RUxTEM4CEh0KGEJBQ0tGSUxMX09SREVSX0xBQkVMX0lEUxDPAhIjCh5CQUNL",
            "RklMTF9PUkRFUl9MSUZFVElNRV9DTElDS1MQwgISKAojQkFDS0ZJTExfT1JE",
            "RVJfTElGRVRJTUVfSU1QUkVTU0lPTlMQwwISGAoTQkFDS0ZJTExfT1JERVJf",
            "TkFNRRDTAhIdChhCQUNLRklMTF9PUkRFUl9QT19OVU1CRVIQxAISIAobQkFD",
            "S0ZJTExfT1JERVJfUFJPR1JBTU1BVElDEMECEh8KGkJBQ0tGSUxMX09SREVS",
            "X1NBTEVTUEVSU09OEMUCEikKJEJBQ0tGSUxMX09SREVSX1NFQ09OREFSWV9T",
            "QUxFU1BFT1BMRRDJAhIsCidCQUNLRklMTF9PUkRFUl9TRUNPTkRBUllfU0FM",
            "RVNQRU9QTEVfSUQQyAISKQokQkFDS0ZJTExfT1JERVJfU0VDT05EQVJZX1RS",
            "QUZGSUNLRVJTEMsCEiwKJ0JBQ0tGSUxMX09SREVSX1NFQ09OREFSWV9UUkFG",
            "RklDS0VSU19JRBDKAhIeChlCQUNLRklMTF9PUkRFUl9TVEFSVF9EQVRFEMwC",
            "EiMKHkJBQ0tGSUxMX09SREVSX1NUQVJUX0RBVEVfVElNRRDNAhIeChlCQUNL",
            "RklMTF9PUkRFUl9UUkFGRklDS0VSEMYCEiEKHEJBQ0tGSUxMX09SREVSX1RS",
            "QUZGSUNLRVJfSUQQxwISIQocQkFDS0ZJTExfT1JERVJfVU5MSU1JVEVEX0VO",
            "RBC+AhIjCh5CQUNLRklMTF9QUk9HUkFNTUFUSUNfQlVZRVJfSUQQ0AISJQog",
            "QkFDS0ZJTExfUFJPR1JBTU1BVElDX0JVWUVSX05BTUUQ0QISEgoNQlJBTkRJ",
            "TkdfVFlQRRD/AhIXChJCUkFORElOR19UWVBFX05BTUUQgAMSFAoQQlJPV1NF",
            "Ul9DQVRFR09SWRB3EhkKFUJST1dTRVJfQ0FURUdPUllfTkFNRRB4Eg8KCkJS",
            "T1dTRVJfSUQQ6wESEQoMQlJPV1NFUl9OQU1FEOwBEg8KCkNBUlJJRVJfSUQQ",
            "8QISEQoMQ0FSUklFUl9OQU1FEPACEh0KGENMQVNTSUZJRURfQURWRVJUSVNF",
            "Ul9JRBCFARIfChpDTEFTU0lGSUVEX0FEVkVSVElTRVJfTkFNRRCGARIYChND",
            "TEFTU0lGSUVEX0JSQU5EX0lEEPMBEhoKFUNMQVNTSUZJRURfQlJBTkRfTkFN",
            "RRD0ARIPCgpDT05URU5UX0lEEPYBEhEKDENPTlRFTlRfTkFNRRD3ARIOCgpD",
            "T1VOVFJZX0lEEAsSEAoMQ09VTlRSWV9OQU1FEAwSGgoVQ1JFQVRJVkVfQklM",
            "TElOR19UWVBFEO4CEh8KGkNSRUFUSVZFX0JJTExJTkdfVFlQRV9OQU1FEO8C",
            "Eh8KGkNSRUFUSVZFX0NMSUNLX1RIUk9VR0hfVVJMEK4BEhAKC0NSRUFUSVZF",
            "X0lEEIoBEhIKDUNSRUFUSVZFX05BTUUQiwESGAoTQ1JFQVRJVkVfVEVDSE5P",
            "TE9HWRCUARIdChhDUkVBVElWRV9URUNITk9MT0dZX05BTUUQlQESIAobQ1JF",
            "QVRJVkVfVEhJUkRfUEFSVFlfVkVORE9SEOkCEhIKDUNSRUFUSVZFX1RZUEUQ",
            "2AISFwoSQ1JFQVRJVkVfVFlQRV9OQU1FENkCEggKBERBVEUQAxIPCgtEQVlf",
            "T0ZfV0VFSxAEEhIKDkRFTUFORF9DSEFOTkVMEAkSFwoTREVNQU5EX0NIQU5O",
            "RUxfTkFNRRAKEhUKEURFTUFORF9TVUJDSEFOTkVMEBYSGgoWREVNQU5EX1NV",
            "QkNIQU5ORUxfTkFNRRAXEgsKBkRFVklDRRDiARITCg9ERVZJQ0VfQ0FURUdP",
            "UlkQDxIYChRERVZJQ0VfQ0FURUdPUllfTkFNRRAQEhAKC0RFVklDRV9OQU1F",
            "EOEBEiQKH0VYQ0hBTkdFX1RISVJEX1BBUlRZX0NPTVBBTllfSUQQuQESJgoh",
            "RVhDSEFOR0VfVEhJUkRfUEFSVFlfQ09NUEFOWV9OQU1FELoBEh8KGkZJUlNU",
            "X0xPT0tfUFJJQ0lOR19SVUxFX0lEEPgBEiEKHEZJUlNUX0xPT0tfUFJJQ0lO",
            "R19SVUxFX05BTUUQ+QESCAoESE9VUhBkEhUKEElOVEVSQUNUSU9OX1RZUEUQ",
            "3wESGgoVSU5URVJBQ1RJT05fVFlQRV9OQU1FEOABEhQKEElOVkVOVE9SWV9G",
            "T1JNQVQQERIZChVJTlZFTlRPUllfRk9STUFUX05BTUUQEhISCg5JTlZFTlRP",
            "UllfVFlQRRATEhcKE0lOVkVOVE9SWV9UWVBFX05BTUUQFBISCg1JU19BRFhf",
            "RElSRUNUEP4CEhcKEklTX0ZJUlNUX0xPT0tfREVBTBCRAxISCg1LRVlfVkFM",
            "VUVTX0lEENYBEhQKD0tFWV9WQUxVRVNfTkFNRRDXARIXChJMSU5FX0lURU1f",
            "QVJDSElWRUQQvAESKAojTElORV9JVEVNX0NPTVBBTklPTl9ERUxJVkVSWV9P",
            "UFRJT04QzAESLQooTElORV9JVEVNX0NPTVBBTklPTl9ERUxJVkVSWV9PUFRJ",
            "T05fTkFNRRDNARIeChlMSU5FX0lURU1fQ09NUFVURURfU1RBVFVTEPoBEiMK",
            "HkxJTkVfSVRFTV9DT01QVVRFRF9TVEFUVVNfTkFNRRD7ARIhCh1MSU5FX0lU",
            "RU1fQ09OVFJBQ1RFRF9RVUFOVElUWRBcEhsKF0xJTkVfSVRFTV9DT1NUX1BF",
            "Ul9VTklUEFUSGAoTTElORV9JVEVNX0NPU1RfVFlQRRDUARIdChhMSU5FX0lU",
            "RU1fQ09TVF9UWVBFX05BTUUQ1QESIAobTElORV9JVEVNX0NSRUFUSVZFX0VO",
            "RF9EQVRFELABEiUKIExJTkVfSVRFTV9DUkVBVElWRV9ST1RBVElPTl9UWVBF",
            "EL0BEioKJUxJTkVfSVRFTV9DUkVBVElWRV9ST1RBVElPTl9UWVBFX05BTUUQ",
            "vgESIgodTElORV9JVEVNX0NSRUFUSVZFX1NUQVJUX0RBVEUQrwESHAoXTElO",
            "RV9JVEVNX0NVUlJFTkNZX0NPREUQtAESIAocTElORV9JVEVNX0RFTElWRVJZ",
            "X0lORElDQVRPUhBXEiEKHExJTkVfSVRFTV9ERUxJVkVSWV9SQVRFX1RZUEUQ",
            "vwESJgohTElORV9JVEVNX0RFTElWRVJZX1JBVEVfVFlQRV9OQU1FEMABEiAK",
            "G0xJTkVfSVRFTV9ESVNDT1VOVF9BQlNPTFVURRDDARIiCh1MSU5FX0lURU1f",
            "RElTQ09VTlRfUEVSQ0VOVEFHRRDEARIWChJMSU5FX0lURU1fRU5EX0RBVEUQ",
            "URIbChdMSU5FX0lURU1fRU5EX0RBVEVfVElNRRBTEh8KGkxJTkVfSVRFTV9F",
            "TlZJUk9OTUVOVF9UWVBFEMkBEiQKH0xJTkVfSVRFTV9FTlZJUk9OTUVOVF9U",
            "WVBFX05BTUUQygESHgoaTElORV9JVEVNX0VYVEVSTkFMX0RFQUxfSUQQYRIZ",
            "ChVMSU5FX0lURU1fRVhURVJOQUxfSUQQVhIcChdMSU5FX0lURU1fRlJFUVVF",
            "TkNZX0NBUBCAAhIQCgxMSU5FX0lURU1fSUQQARIjCh5MSU5FX0lURU1fTEFT",
            "VF9NT0RJRklFRF9CWV9BUFAQtQESHQoZTElORV9JVEVNX0xJRkVUSU1FX0NM",
            "SUNLUxBfEiIKHkxJTkVfSVRFTV9MSUZFVElNRV9JTVBSRVNTSU9OUxBeEisK",
            "J0xJTkVfSVRFTV9MSUZFVElNRV9WSUVXQUJMRV9JTVBSRVNTSU9OUxBgEhYK",
            "EkxJTkVfSVRFTV9NQUtFR09PRBBZEhIKDkxJTkVfSVRFTV9OQU1FEAISJAog",
            "TElORV9JVEVNX05PTl9DUERfQk9PS0VEX1JFVkVOVUUQYhIZChVMSU5FX0lU",
            "RU1fT1BUSU1JWkFCTEUQWhIgChtMSU5FX0lURU1fUFJJTUFSWV9HT0FMX1RZ",
            "UEUQ0gESJQogTElORV9JVEVNX1BSSU1BUllfR09BTF9UWVBFX05BTUUQ0wES",
            "KQolTElORV9JVEVNX1BSSU1BUllfR09BTF9VTklUU19BQlNPTFVURRBdEiwK",
            "J0xJTkVfSVRFTV9QUklNQVJZX0dPQUxfVU5JVFNfUEVSQ0VOVEFHRRCMAxIl",
            "CiBMSU5FX0lURU1fUFJJTUFSWV9HT0FMX1VOSVRfVFlQRRDQARIqCiVMSU5F",
            "X0lURU1fUFJJTUFSWV9HT0FMX1VOSVRfVFlQRV9OQU1FENEBEhYKEkxJTkVf",
            "SVRFTV9QUklPUklUWRAYEiEKHExJTkVfSVRFTV9SRVNFUlZBVElPTl9TVEFU",
            "VVMQsAISJgohTElORV9JVEVNX1JFU0VSVkFUSU9OX1NUQVRVU19OQU1FELEC",
            "EhgKFExJTkVfSVRFTV9TVEFSVF9EQVRFEFISHQoZTElORV9JVEVNX1NUQVJU",
            "X0RBVEVfVElNRRBUEhMKDkxJTkVfSVRFTV9UWVBFEMEBEhgKE0xJTkVfSVRF",
            "TV9UWVBFX05BTUUQwgESHAoXTElORV9JVEVNX1VOTElNSVRFRF9FTkQQuwES",
            "IQodTElORV9JVEVNX1ZBTFVFX0NPU1RfUEVSX1VOSVQQWBIgChtMSU5FX0lU",
            "RU1fV0VCX1BST1BFUlRZX0NPREUQswESIQocTUFTVEVSX0NPTVBBTklPTl9D",
            "UkVBVElWRV9JRBCMARIjCh5NQVNURVJfQ09NUEFOSU9OX0NSRUFUSVZFX05B",
            "TUUQjQESFAoPTU9CSUxFX0FQUF9GUkVFEIABEhgKE01PQklMRV9BUFBfSUNP",
            "Tl9VUkwQgQESEQoNTU9CSUxFX0FQUF9JRBB7EhMKD01PQklMRV9BUFBfTkFN",
            "RRB/EiAKG01PQklMRV9BUFBfT1dORVJTSElQX1NUQVRVUxC3AhIlCiBNT0JJ",
            "TEVfQVBQX09XTkVSU0hJUF9TVEFUVVNfTkFNRRC4AhIUChBNT0JJTEVfQVBQ",
            "X1NUT1JFEH0SGgoVTU9CSUxFX0FQUF9TVE9SRV9OQU1FEPUBEhkKFU1PQklM",
            "RV9JTlZFTlRPUllfVFlQRRBjEh4KGk1PQklMRV9JTlZFTlRPUllfVFlQRV9O",
            "QU1FEBUSHAoXTU9CSUxFX1NES19WRVJTSU9OX05BTUUQggESDgoKTU9OVEhf",
            "WUVBUhAGEhgKE05BVElWRV9BRF9GT1JNQVRfSUQQ/wESGgoVTkFUSVZFX0FE",
            "X0ZPUk1BVF9OQU1FEP4BEhQKD05BVElWRV9TVFlMRV9JRBD9ARIWChFOQVRJ",
            "VkVfU1RZTEVfTkFNRRD8ARIdChlPUEVSQVRJTkdfU1lTVEVNX0NBVEVHT1JZ",
            "EHUSIgoeT1BFUkFUSU5HX1NZU1RFTV9DQVRFR09SWV9OQU1FEHYSIAobT1BF",
            "UkFUSU5HX1NZU1RFTV9WRVJTSU9OX0lEEO4BEiIKHU9QRVJBVElOR19TWVNU",
            "RU1fVkVSU0lPTl9OQU1FEO0BEhEKDE9SREVSX0FHRU5DWRCWARIUCg9PUkRF",
            "Ul9BR0VOQ1lfSUQQlwESFQoQT1JERVJfQk9PS0VEX0NQQxCYARIVChBPUkRF",
            "Ul9CT09LRURfQ1BNEJkBEhoKFU9SREVSX0RFTElWRVJZX1NUQVRVUxDnARIf",
            "ChpPUkRFUl9ERUxJVkVSWV9TVEFUVVNfTkFNRRDvARITCg5PUkRFUl9FTkRf",
            "REFURRCaARIYChNPUkRFUl9FTkRfREFURV9USU1FEJsBEhYKEU9SREVSX0VY",
            "VEVSTkFMX0lEEJwBEgwKCE9SREVSX0lEEAcSEQoMT1JERVJfTEFCRUxTEKoB",
            "EhQKD09SREVSX0xBQkVMX0lEUxCrARIaChVPUkRFUl9MSUZFVElNRV9DTElD",
            "S1MQngESHwoaT1JERVJfTElGRVRJTUVfSU1QUkVTU0lPTlMQnwESDgoKT1JE",
            "RVJfTkFNRRAIEhQKD09SREVSX1BPX05VTUJFUhCgARIXChJPUkRFUl9QUk9H",
            "UkFNTUFUSUMQnQESFgoRT1JERVJfU0FMRVNQRVJTT04QoQESIAobT1JERVJf",
            "U0VDT05EQVJZX1NBTEVTUEVPUExFEKQBEiMKHk9SREVSX1NFQ09OREFSWV9T",
            "QUxFU1BFT1BMRV9JRBClARIgChtPUkRFUl9TRUNPTkRBUllfVFJBRkZJQ0tF",
            "UlMQpgESIwoeT1JERVJfU0VDT05EQVJZX1RSQUZGSUNLRVJTX0lEEKcBEhUK",
            "EE9SREVSX1NUQVJUX0RBVEUQqAESGgoVT1JERVJfU1RBUlRfREFURV9USU1F",
            "EKkBEhUKEE9SREVSX1RSQUZGSUNLRVIQogESGAoTT1JERVJfVFJBRkZJQ0tF",
            "Ul9JRBCjARIYChNPUkRFUl9VTkxJTUlURURfRU5EEMsBEhAKDFBMQUNFTUVO",
            "VF9JRBBxEhUKEFBMQUNFTUVOVF9JRF9BTEwQkAESEgoOUExBQ0VNRU5UX05B",
            "TUUQchIXChJQTEFDRU1FTlRfTkFNRV9BTEwQkQESFQoQUExBQ0VNRU5UX1NU",
            "QVRVUxDqAhIZChRQTEFDRU1FTlRfU1RBVFVTX0FMTBDrAhIaChVQTEFDRU1F",
            "TlRfU1RBVFVTX05BTUUQ7AISHgoZUExBQ0VNRU5UX1NUQVRVU19OQU1FX0FM",
            "TBDtAhIaChVQUk9HUkFNTUFUSUNfQlVZRVJfSUQQ8AESHAoXUFJPR1JBTU1B",
            "VElDX0JVWUVSX05BTUUQ8QESGAoUUFJPR1JBTU1BVElDX0NIQU5ORUwQDRId",
            "ChlQUk9HUkFNTUFUSUNfQ0hBTk5FTF9OQU1FEA4SGwoWUkVOREVSRURfQ1JF",
            "QVRJVkVfU0laRRDXAhIXChJSRVFVRVNURURfQURfU0laRVMQ4AISEQoMUkVR",
            "VUVTVF9UWVBFEJIBEhYKEVJFUVVFU1RfVFlQRV9OQU1FEJMBEiQKH1NFUlZF",
            "Ul9TSURFX1VOV1JBUFBJTkdfRUxJR0lCTEUQ1QQSCQoEU0lURRCDAxIRCgxU",
            "QVJHRVRJTkdfSUQQ6AESEwoOVEFSR0VUSU5HX05BTUUQ6QESEwoOVEFSR0VU",
            "SU5HX1RZUEUQgQMSGAoTVEFSR0VUSU5HX1RZUEVfTkFNRRCCAxITCg5UUkFG",
            "RklDX1NPVVJDRRCEAxIYChNUUkFGRklDX1NPVVJDRV9OQU1FEIUDEhwKF1VO",
            "SUZJRURfUFJJQ0lOR19SVUxFX0lEEIkDEh4KGVVOSUZJRURfUFJJQ0lOR19S",
            "VUxFX05BTUUQigMSEAoLVklERU9fUExDTVQQrAESFQoQVklERU9fUExDTVRf",
            "TkFNRRCtARIICgRXRUVLEAUSGwoWWUlFTERfR1JPVVBfQlVZRVJfTkFNRRC4",
            "ARITCg5ZSUVMRF9HUk9VUF9JRBC2ARIVChBZSUVMRF9HUk9VUF9OQU1FELcB",
            "EicKIkxJTkVfSVRFTV9DVVNUT01fRklFTERfMF9PUFRJT05fSUQQkE4SJwoi",
            "TElORV9JVEVNX0NVU1RPTV9GSUVMRF8xX09QVElPTl9JRBCRThInCiJMSU5F",
            "X0lURU1fQ1VTVE9NX0ZJRUxEXzJfT1BUSU9OX0lEEJJOEicKIkxJTkVfSVRF",
            "TV9DVVNUT01fRklFTERfM19PUFRJT05fSUQQk04SJwoiTElORV9JVEVNX0NV",
            "U1RPTV9GSUVMRF80X09QVElPTl9JRBCUThInCiJMSU5FX0lURU1fQ1VTVE9N",
            "X0ZJRUxEXzVfT1BUSU9OX0lEEJVOEicKIkxJTkVfSVRFTV9DVVNUT01fRklF",
            "TERfNl9PUFRJT05fSUQQlk4SJwoiTElORV9JVEVNX0NVU1RPTV9GSUVMRF83",
            "X09QVElPTl9JRBCXThInCiJMSU5FX0lURU1fQ1VTVE9NX0ZJRUxEXzhfT1BU",
            "SU9OX0lEEJhOEicKIkxJTkVfSVRFTV9DVVNUT01fRklFTERfOV9PUFRJT05f",
            "SUQQmU4SKAojTElORV9JVEVNX0NVU1RPTV9GSUVMRF8xMF9PUFRJT05fSUQQ",
            "mk4SKAojTElORV9JVEVNX0NVU1RPTV9GSUVMRF8xMV9PUFRJT05fSUQQm04S",
            "KAojTElORV9JVEVNX0NVU1RPTV9GSUVMRF8xMl9PUFRJT05fSUQQnE4SKAoj",
            "TElORV9JVEVNX0NVU1RPTV9GSUVMRF8xM19PUFRJT05fSUQQnU4SKAojTElO",
            "RV9JVEVNX0NVU1RPTV9GSUVMRF8xNF9PUFRJT05fSUQQnk4SIwoeTElORV9J",
            "VEVNX0NVU1RPTV9GSUVMRF8wX1ZBTFVFEPhVEiMKHkxJTkVfSVRFTV9DVVNU",
            "T01fRklFTERfMV9WQUxVRRD5VRIjCh5MSU5FX0lURU1fQ1VTVE9NX0ZJRUxE",
            "XzJfVkFMVUUQ+lUSIwoeTElORV9JVEVNX0NVU1RPTV9GSUVMRF8zX1ZBTFVF",
            "EPtVEiMKHkxJTkVfSVRFTV9DVVNUT01fRklFTERfNF9WQUxVRRD8VRIjCh5M",
            "SU5FX0lURU1fQ1VTVE9NX0ZJRUxEXzVfVkFMVUUQ/VUSIwoeTElORV9JVEVN",
            "X0NVU1RPTV9GSUVMRF82X1ZBTFVFEP5VEiMKHkxJTkVfSVRFTV9DVVNUT01f",
            "RklFTERfN19WQUxVRRD/VRIjCh5MSU5FX0lURU1fQ1VTVE9NX0ZJRUxEXzhf",
            "VkFMVUUQgFYSIwoeTElORV9JVEVNX0NVU1RPTV9GSUVMRF85X1ZBTFVFEIFW",
            "EiQKH0xJTkVfSVRFTV9DVVNUT01fRklFTERfMTBfVkFMVUUQglYSJAofTElO",
            "RV9JVEVNX0NVU1RPTV9GSUVMRF8xMV9WQUxVRRCDVhIkCh9MSU5FX0lURU1f",
            "Q1VTVE9NX0ZJRUxEXzEyX1ZBTFVFEIRWEiQKH0xJTkVfSVRFTV9DVVNUT01f",
            "RklFTERfMTNfVkFMVUUQhVYSJAofTElORV9JVEVNX0NVU1RPTV9GSUVMRF8x",
            "NF9WQUxVRRCGVhIjCh5PUkRFUl9DVVNUT01fRklFTERfMF9PUFRJT05fSUQQ",
            "4F0SIwoeT1JERVJfQ1VTVE9NX0ZJRUxEXzFfT1BUSU9OX0lEEOFdEiMKHk9S",
            "REVSX0NVU1RPTV9GSUVMRF8yX09QVElPTl9JRBDiXRIjCh5PUkRFUl9DVVNU",
            "T01fRklFTERfM19PUFRJT05fSUQQ410SIwoeT1JERVJfQ1VTVE9NX0ZJRUxE",
            "XzRfT1BUSU9OX0lEEORdEiMKHk9SREVSX0NVU1RPTV9GSUVMRF81X09QVElP",
            "Tl9JRBDlXRIjCh5PUkRFUl9DVVNUT01fRklFTERfNl9PUFRJT05fSUQQ5l0S",
            "IwoeT1JERVJfQ1VTVE9NX0ZJRUxEXzdfT1BUSU9OX0lEEOddEiMKHk9SREVS",
            "X0NVU1RPTV9GSUVMRF84X09QVElPTl9JRBDoXRIjCh5PUkRFUl9DVVNUT01f",
            "RklFTERfOV9PUFRJT05fSUQQ6V0SJAofT1JERVJfQ1VTVE9NX0ZJRUxEXzEw",
            "X09QVElPTl9JRBDqXRIkCh9PUkRFUl9DVVNUT01fRklFTERfMTFfT1BUSU9O",
            "X0lEEOtdEiQKH09SREVSX0NVU1RPTV9GSUVMRF8xMl9PUFRJT05fSUQQ7F0S",
            "JAofT1JERVJfQ1VTVE9NX0ZJRUxEXzEzX09QVElPTl9JRBDtXRIkCh9PUkRF",
            "Ul9DVVNUT01fRklFTERfMTRfT1BUSU9OX0lEEO5dEh8KGk9SREVSX0NVU1RP",
            "TV9GSUVMRF8wX1ZBTFVFEMhlEh8KGk9SREVSX0NVU1RPTV9GSUVMRF8xX1ZB",
            "TFVFEMllEh8KGk9SREVSX0NVU1RPTV9GSUVMRF8yX1ZBTFVFEMplEh8KGk9S",
            "REVSX0NVU1RPTV9GSUVMRF8zX1ZBTFVFEMtlEh8KGk9SREVSX0NVU1RPTV9G",
            "SUVMRF80X1ZBTFVFEMxlEh8KGk9SREVSX0NVU1RPTV9GSUVMRF81X1ZBTFVF",
            "EM1lEh8KGk9SREVSX0NVU1RPTV9GSUVMRF82X1ZBTFVFEM5lEh8KGk9SREVS",
            "X0NVU1RPTV9GSUVMRF83X1ZBTFVFEM9lEh8KGk9SREVSX0NVU1RPTV9GSUVM",
            "RF84X1ZBTFVFENBlEh8KGk9SREVSX0NVU1RPTV9GSUVMRF85X1ZBTFVFENFl",
            "EiAKG09SREVSX0NVU1RPTV9GSUVMRF8xMF9WQUxVRRDSZRIgChtPUkRFUl9D",
            "VVNUT01fRklFTERfMTFfVkFMVUUQ02USIAobT1JERVJfQ1VTVE9NX0ZJRUxE",
            "XzEyX1ZBTFVFENRlEiAKG09SREVSX0NVU1RPTV9GSUVMRF8xM19WQUxVRRDV",
            "ZRIgChtPUkRFUl9DVVNUT01fRklFTERfMTRfVkFMVUUQ1mUSJgohQ1JFQVRJ",
            "VkVfQ1VTVE9NX0ZJRUxEXzBfT1BUSU9OX0lEELBtEiYKIUNSRUFUSVZFX0NV",
            "U1RPTV9GSUVMRF8xX09QVElPTl9JRBCxbRImCiFDUkVBVElWRV9DVVNUT01f",
            "RklFTERfMl9PUFRJT05fSUQQsm0SJgohQ1JFQVRJVkVfQ1VTVE9NX0ZJRUxE",
            "XzNfT1BUSU9OX0lEELNtEiYKIUNSRUFUSVZFX0NVU1RPTV9GSUVMRF80X09Q",
            "VElPTl9JRBC0bRImCiFDUkVBVElWRV9DVVNUT01fRklFTERfNV9PUFRJT05f",
            "SUQQtW0SJgohQ1JFQVRJVkVfQ1VTVE9NX0ZJRUxEXzZfT1BUSU9OX0lEELZt",
            "EiYKIUNSRUFUSVZFX0NVU1RPTV9GSUVMRF83X09QVElPTl9JRBC3bRImCiFD",
            "UkVBVElWRV9DVVNUT01fRklFTERfOF9PUFRJT05fSUQQuG0SJgohQ1JFQVRJ",
            "VkVfQ1VTVE9NX0ZJRUxEXzlfT1BUSU9OX0lEELltEicKIkNSRUFUSVZFX0NV",
            "U1RPTV9GSUVMRF8xMF9PUFRJT05fSUQQum0SJwoiQ1JFQVRJVkVfQ1VTVE9N",
            "X0ZJRUxEXzExX09QVElPTl9JRBC7bRInCiJDUkVBVElWRV9DVVNUT01fRklF",
            "TERfMTJfT1BUSU9OX0lEELxtEicKIkNSRUFUSVZFX0NVU1RPTV9GSUVMRF8x",
            "M19PUFRJT05fSUQQvW0SJwoiQ1JFQVRJVkVfQ1VTVE9NX0ZJRUxEXzE0X09Q",
            "VElPTl9JRBC+bRIiCh1DUkVBVElWRV9DVVNUT01fRklFTERfMF9WQUxVRRCY",
            "dRIiCh1DUkVBVElWRV9DVVNUT01fRklFTERfMV9WQUxVRRCZdRIiCh1DUkVB",
            "VElWRV9DVVNUT01fRklFTERfMl9WQUxVRRCadRIiCh1DUkVBVElWRV9DVVNU",
            "T01fRklFTERfM19WQUxVRRCbdRIiCh1DUkVBVElWRV9DVVNUT01fRklFTERf",
            "NF9WQUxVRRCcdRIiCh1DUkVBVElWRV9DVVNUT01fRklFTERfNV9WQUxVRRCd",
            "dRIiCh1DUkVBVElWRV9DVVNUT01fRklFTERfNl9WQUxVRRCedRIiCh1DUkVB",
            "VElWRV9DVVNUT01fRklFTERfN19WQUxVRRCfdRIiCh1DUkVBVElWRV9DVVNU",
            "T01fRklFTERfOF9WQUxVRRCgdRIiCh1DUkVBVElWRV9DVVNUT01fRklFTERf",
            "OV9WQUxVRRChdRIjCh5DUkVBVElWRV9DVVNUT01fRklFTERfMTBfVkFMVUUQ",
            "onUSIwoeQ1JFQVRJVkVfQ1VTVE9NX0ZJRUxEXzExX1ZBTFVFEKN1EiMKHkNS",
            "RUFUSVZFX0NVU1RPTV9GSUVMRF8xMl9WQUxVRRCkdRIjCh5DUkVBVElWRV9D",
            "VVNUT01fRklFTERfMTNfVkFMVUUQpXUSIwoeQ1JFQVRJVkVfQ1VTVE9NX0ZJ",
            "RUxEXzE0X1ZBTFVFEKZ1EjAKK0JBQ0tGSUxMX0xJTkVfSVRFTV9DVVNUT01f",
            "RklFTERfMF9PUFRJT05fSUQQgH0SMAorQkFDS0ZJTExfTElORV9JVEVNX0NV",
            "U1RPTV9GSUVMRF8xX09QVElPTl9JRBCBfRIwCitCQUNLRklMTF9MSU5FX0lU",
            "RU1fQ1VTVE9NX0ZJRUxEXzJfT1BUSU9OX0lEEIJ9EjAKK0JBQ0tGSUxMX0xJ",
            "TkVfSVRFTV9DVVNUT01fRklFTERfM19PUFRJT05fSUQQg30SMAorQkFDS0ZJ",
            "TExfTElORV9JVEVNX0NVU1RPTV9GSUVMRF80X09QVElPTl9JRBCEfRIwCitC",
            "QUNLRklMTF9MSU5FX0lURU1fQ1VTVE9NX0ZJRUxEXzVfT1BUSU9OX0lEEIV9",
            "EjAKK0JBQ0tGSUxMX0xJTkVfSVRFTV9DVVNUT01fRklFTERfNl9PUFRJT05f",
            "SUQQhn0SMAorQkFDS0ZJTExfTElORV9JVEVNX0NVU1RPTV9GSUVMRF83X09Q",
            "VElPTl9JRBCHfRIwCitCQUNLRklMTF9MSU5FX0lURU1fQ1VTVE9NX0ZJRUxE",
            "XzhfT1BUSU9OX0lEEIh9EjAKK0JBQ0tGSUxMX0xJTkVfSVRFTV9DVVNUT01f",
            "RklFTERfOV9PUFRJT05fSUQQiX0SMQosQkFDS0ZJTExfTElORV9JVEVNX0NV",
            "U1RPTV9GSUVMRF8xMF9PUFRJT05fSUQQin0SMQosQkFDS0ZJTExfTElORV9J",
            "VEVNX0NVU1RPTV9GSUVMRF8xMV9PUFRJT05fSUQQi30SMQosQkFDS0ZJTExf",
            "TElORV9JVEVNX0NVU1RPTV9GSUVMRF8xMl9PUFRJT05fSUQQjH0SMQosQkFD",
            "S0ZJTExfTElORV9JVEVNX0NVU1RPTV9GSUVMRF8xM19PUFRJT05fSUQQjX0S",
            "MQosQkFDS0ZJTExfTElORV9JVEVNX0NVU1RPTV9GSUVMRF8xNF9PUFRJT05f",
            "SUQQjn0SLQonQkFDS0ZJTExfTElORV9JVEVNX0NVU1RPTV9GSUVMRF8wX1ZB",
            "TFVFEOiEARItCidCQUNLRklMTF9MSU5FX0lURU1fQ1VTVE9NX0ZJRUxEXzFf",
            "VkFMVUUQ6YQBEi0KJ0JBQ0tGSUxMX0xJTkVfSVRFTV9DVVNUT01fRklFTERf",
            "Ml9WQUxVRRDqhAESLQonQkFDS0ZJTExfTElORV9JVEVNX0NVU1RPTV9GSUVM",
            "RF8zX1ZBTFVFEOuEARItCidCQUNLRklMTF9MSU5FX0lURU1fQ1VTVE9NX0ZJ",
            "RUxEXzRfVkFMVUUQ7IQBEi0KJ0JBQ0tGSUxMX0xJTkVfSVRFTV9DVVNUT01f",
            "RklFTERfNV9WQUxVRRDthAESLQonQkFDS0ZJTExfTElORV9JVEVNX0NVU1RP",
            "TV9GSUVMRF82X1ZBTFVFEO6EARItCidCQUNLRklMTF9MSU5FX0lURU1fQ1VT",
            "VE9NX0ZJRUxEXzdfVkFMVUUQ74QBEi0KJ0JBQ0tGSUxMX0xJTkVfSVRFTV9D",
            "VVNUT01fRklFTERfOF9WQUxVRRDwhAESLQonQkFDS0ZJTExfTElORV9JVEVN",
            "X0NVU1RPTV9GSUVMRF85X1ZBTFVFEPGEARIuCihCQUNLRklMTF9MSU5FX0lU",
            "RU1fQ1VTVE9NX0ZJRUxEXzEwX1ZBTFVFEPKEARIuCihCQUNLRklMTF9MSU5F",
            "X0lURU1fQ1VTVE9NX0ZJRUxEXzExX1ZBTFVFEPOEARIuCihCQUNLRklMTF9M",
            "SU5FX0lURU1fQ1VTVE9NX0ZJRUxEXzEyX1ZBTFVFEPSEARIuCihCQUNLRklM",
            "TF9MSU5FX0lURU1fQ1VTVE9NX0ZJRUxEXzEzX1ZBTFVFEPWEARIuCihCQUNL",
            "RklMTF9MSU5FX0lURU1fQ1VTVE9NX0ZJRUxEXzE0X1ZBTFVFEPaEARItCidC",
            "QUNLRklMTF9PUkRFUl9DVVNUT01fRklFTERfMF9PUFRJT05fSUQQ0IwBEi0K",
            "J0JBQ0tGSUxMX09SREVSX0NVU1RPTV9GSUVMRF8xX09QVElPTl9JRBDRjAES",
            "LQonQkFDS0ZJTExfT1JERVJfQ1VTVE9NX0ZJRUxEXzJfT1BUSU9OX0lEENKM",
            "ARItCidCQUNLRklMTF9PUkRFUl9DVVNUT01fRklFTERfM19PUFRJT05fSUQQ",
            "04wBEi0KJ0JBQ0tGSUxMX09SREVSX0NVU1RPTV9GSUVMRF80X09QVElPTl9J",
            "RBDUjAESLQonQkFDS0ZJTExfT1JERVJfQ1VTVE9NX0ZJRUxEXzVfT1BUSU9O",
            "X0lEENWMARItCidCQUNLRklMTF9PUkRFUl9DVVNUT01fRklFTERfNl9PUFRJ",
            "T05fSUQQ1owBEi0KJ0JBQ0tGSUxMX09SREVSX0NVU1RPTV9GSUVMRF83X09Q",
            "VElPTl9JRBDXjAESLQonQkFDS0ZJTExfT1JERVJfQ1VTVE9NX0ZJRUxEXzhf",
            "T1BUSU9OX0lEENiMARItCidCQUNLRklMTF9PUkRFUl9DVVNUT01fRklFTERf",
            "OV9PUFRJT05fSUQQ2YwBEi4KKEJBQ0tGSUxMX09SREVSX0NVU1RPTV9GSUVM",
            "RF8xMF9PUFRJT05fSUQQ2owBEi4KKEJBQ0tGSUxMX09SREVSX0NVU1RPTV9G",
            "SUVMRF8xMV9PUFRJT05fSUQQ24wBEi4KKEJBQ0tGSUxMX09SREVSX0NVU1RP",
            "TV9GSUVMRF8xMl9PUFRJT05fSUQQ3IwBEi4KKEJBQ0tGSUxMX09SREVSX0NV",
            "U1RPTV9GSUVMRF8xM19PUFRJT05fSUQQ3YwBEi4KKEJBQ0tGSUxMX09SREVS",
            "X0NVU1RPTV9GSUVMRF8xNF9PUFRJT05fSUQQ3owBEikKI0JBQ0tGSUxMX09S",
            "REVSX0NVU1RPTV9GSUVMRF8wX1ZBTFVFELiUARIpCiNCQUNLRklMTF9PUkRF",
            "Ul9DVVNUT01fRklFTERfMV9WQUxVRRC5lAESKQojQkFDS0ZJTExfT1JERVJf",
            "Q1VTVE9NX0ZJRUxEXzJfVkFMVUUQupQBEikKI0JBQ0tGSUxMX09SREVSX0NV",
            "U1RPTV9GSUVMRF8zX1ZBTFVFELuUARIpCiNCQUNLRklMTF9PUkRFUl9DVVNU",
            "T01fRklFTERfNF9WQUxVRRC8lAESKQojQkFDS0ZJTExfT1JERVJfQ1VTVE9N",
            "X0ZJRUxEXzVfVkFMVUUQvZQBEikKI0JBQ0tGSUxMX09SREVSX0NVU1RPTV9G",
            "SUVMRF82X1ZBTFVFEL6UARIpCiNCQUNLRklMTF9PUkRFUl9DVVNUT01fRklF",
            "TERfN19WQUxVRRC/lAESKQojQkFDS0ZJTExfT1JERVJfQ1VTVE9NX0ZJRUxE",
            "XzhfVkFMVUUQwJQBEikKI0JBQ0tGSUxMX09SREVSX0NVU1RPTV9GSUVMRF85",
            "X1ZBTFVFEMGUARIqCiRCQUNLRklMTF9PUkRFUl9DVVNUT01fRklFTERfMTBf",
            "VkFMVUUQwpQBEioKJEJBQ0tGSUxMX09SREVSX0NVU1RPTV9GSUVMRF8xMV9W",
            "QUxVRRDDlAESKgokQkFDS0ZJTExfT1JERVJfQ1VTVE9NX0ZJRUxEXzEyX1ZB",
            "TFVFEMSUARIqCiRCQUNLRklMTF9PUkRFUl9DVVNUT01fRklFTERfMTNfVkFM",
            "VUUQxZQBEioKJEJBQ0tGSUxMX09SREVSX0NVU1RPTV9GSUVMRF8xNF9WQUxV",
            "RRDGlAESMAoqQkFDS0ZJTExfQ1JFQVRJVkVfQ1VTVE9NX0ZJRUxEXzBfT1BU",
            "SU9OX0lEEKCcARIwCipCQUNLRklMTF9DUkVBVElWRV9DVVNUT01fRklFTERf",
            "MV9PUFRJT05fSUQQoZwBEjAKKkJBQ0tGSUxMX0NSRUFUSVZFX0NVU1RPTV9G",
            "SUVMRF8yX09QVElPTl9JRBCinAESMAoqQkFDS0ZJTExfQ1JFQVRJVkVfQ1VT",
            "VE9NX0ZJRUxEXzNfT1BUSU9OX0lEEKOcARIwCipCQUNLRklMTF9DUkVBVElW",
            "RV9DVVNUT01fRklFTERfNF9PUFRJT05fSUQQpJwBEjAKKkJBQ0tGSUxMX0NS",
            "RUFUSVZFX0NVU1RPTV9GSUVMRF81X09QVElPTl9JRBClnAESMAoqQkFDS0ZJ",
            "TExfQ1JFQVRJVkVfQ1VTVE9NX0ZJRUxEXzZfT1BUSU9OX0lEEKacARIwCipC",
            "QUNLRklMTF9DUkVBVElWRV9DVVNUT01fRklFTERfN19PUFRJT05fSUQQp5wB",
            "EjAKKkJBQ0tGSUxMX0NSRUFUSVZFX0NVU1RPTV9GSUVMRF84X09QVElPTl9J",
            "RBConAESMAoqQkFDS0ZJTExfQ1JFQVRJVkVfQ1VTVE9NX0ZJRUxEXzlfT1BU",
            "SU9OX0lEEKmcARIxCitCQUNLRklMTF9DUkVBVElWRV9DVVNUT01fRklFTERf",
            "MTBfT1BUSU9OX0lEEKqcARIxCitCQUNLRklMTF9DUkVBVElWRV9DVVNUT01f",
            "RklFTERfMTFfT1BUSU9OX0lEEKucARIxCitCQUNLRklMTF9DUkVBVElWRV9D",
            "VVNUT01fRklFTERfMTJfT1BUSU9OX0lEEKycARIxCitCQUNLRklMTF9DUkVB",
            "VElWRV9DVVNUT01fRklFTERfMTNfT1BUSU9OX0lEEK2cARIxCitCQUNLRklM",
            "TF9DUkVBVElWRV9DVVNUT01fRklFTERfMTRfT1BUSU9OX0lEEK6cARIsCiZC",
            "QUNLRklMTF9DUkVBVElWRV9DVVNUT01fRklFTERfMF9WQUxVRRCIpAESLAom",
            "QkFDS0ZJTExfQ1JFQVRJVkVfQ1VTVE9NX0ZJRUxEXzFfVkFMVUUQiaQBEiwK",
            "JkJBQ0tGSUxMX0NSRUFUSVZFX0NVU1RPTV9GSUVMRF8yX1ZBTFVFEIqkARIs",
            "CiZCQUNLRklMTF9DUkVBVElWRV9DVVNUT01fRklFTERfM19WQUxVRRCLpAES",
            "LAomQkFDS0ZJTExfQ1JFQVRJVkVfQ1VTVE9NX0ZJRUxEXzRfVkFMVUUQjKQB",
            "EiwKJkJBQ0tGSUxMX0NSRUFUSVZFX0NVU1RPTV9GSUVMRF81X1ZBTFVFEI2k",
            "ARIsCiZCQUNLRklMTF9DUkVBVElWRV9DVVNUT01fRklFTERfNl9WQUxVRRCO",
            "pAESLAomQkFDS0ZJTExfQ1JFQVRJVkVfQ1VTVE9NX0ZJRUxEXzdfVkFMVUUQ",
            "j6QBEiwKJkJBQ0tGSUxMX0NSRUFUSVZFX0NVU1RPTV9GSUVMRF84X1ZBTFVF",
            "EJCkARIsCiZCQUNLRklMTF9DUkVBVElWRV9DVVNUT01fRklFTERfOV9WQUxV",
            "RRCRpAESLQonQkFDS0ZJTExfQ1JFQVRJVkVfQ1VTVE9NX0ZJRUxEXzEwX1ZB",
            "TFVFEJKkARItCidCQUNLRklMTF9DUkVBVElWRV9DVVNUT01fRklFTERfMTFf",
            "VkFMVUUQk6QBEi0KJ0JBQ0tGSUxMX0NSRUFUSVZFX0NVU1RPTV9GSUVMRF8x",
            "Ml9WQUxVRRCUpAESLQonQkFDS0ZJTExfQ1JFQVRJVkVfQ1VTVE9NX0ZJRUxE",
            "XzEzX1ZBTFVFEJWkARItCidCQUNLRklMTF9DUkVBVElWRV9DVVNUT01fRklF",
            "TERfMTRfVkFMVUUQlqQBEiEKG0NVU1RPTV9ESU1FTlNJT05fMF9WQUxVRV9J",
            "RBCgjQYSIQobQ1VTVE9NX0RJTUVOU0lPTl8xX1ZBTFVFX0lEEKGNBhIhChtD",
            "VVNUT01fRElNRU5TSU9OXzJfVkFMVUVfSUQQoo0GEiEKG0NVU1RPTV9ESU1F",
            "TlNJT05fM19WQUxVRV9JRBCjjQYSIQobQ1VTVE9NX0RJTUVOU0lPTl80X1ZB",
            "TFVFX0lEEKSNBhIhChtDVVNUT01fRElNRU5TSU9OXzVfVkFMVUVfSUQQpY0G",
            "EiEKG0NVU1RPTV9ESU1FTlNJT05fNl9WQUxVRV9JRBCmjQYSIQobQ1VTVE9N",
            "X0RJTUVOU0lPTl83X1ZBTFVFX0lEEKeNBhIhChtDVVNUT01fRElNRU5TSU9O",
            "XzhfVkFMVUVfSUQQqI0GEiEKG0NVU1RPTV9ESU1FTlNJT05fOV9WQUxVRV9J",
            "RBCpjQYSHgoYQ1VTVE9NX0RJTUVOU0lPTl8wX1ZBTFVFEIiVBhIeChhDVVNU",
            "T01fRElNRU5TSU9OXzFfVkFMVUUQiZUGEh4KGENVU1RPTV9ESU1FTlNJT05f",
            "Ml9WQUxVRRCKlQYSHgoYQ1VTVE9NX0RJTUVOU0lPTl8zX1ZBTFVFEIuVBhIe",
            "ChhDVVNUT01fRElNRU5TSU9OXzRfVkFMVUUQjJUGEh4KGENVU1RPTV9ESU1F",
            "TlNJT05fNV9WQUxVRRCNlQYSHgoYQ1VTVE9NX0RJTUVOU0lPTl82X1ZBTFVF",
            "EI6VBhIeChhDVVNUT01fRElNRU5TSU9OXzdfVkFMVUUQj5UGEh4KGENVU1RP",
            "TV9ESU1FTlNJT05fOF9WQUxVRRCQlQYSHgoYQ1VTVE9NX0RJTUVOU0lPTl85",
            "X1ZBTFVFEJGVBiKeMgoGTWV0cmljEhYKEk1FVFJJQ19VTlNQRUNJRklFRBAA",
            "EiUKIUFDVElWRV9WSUVXX0FWRVJBR0VfVklFV0FCTEVfVElNRRA9EiQKIEFD",
            "VElWRV9WSUVXX0VMSUdJQkxFX0lNUFJFU1NJT05TEDoSJgoiQUNUSVZFX1ZJ",
            "RVdfTUVBU1VSQUJMRV9JTVBSRVNTSU9OUxA5EisKJ0FDVElWRV9WSUVXX01F",
            "QVNVUkFCTEVfSU1QUkVTU0lPTlNfUkFURRA8EiQKIEFDVElWRV9WSUVXX1ZJ",
            "RVdBQkxFX0lNUFJFU1NJT05TEDgSKQolQUNUSVZFX1ZJRVdfVklFV0FCTEVf",
            "SU1QUkVTU0lPTlNfUkFURRA7Ei0KKUFEU0VOU0VfQUNUSVZFX1ZJRVdfQVZF",
            "UkFHRV9WSUVXQUJMRV9USU1FEEkSLAooQURTRU5TRV9BQ1RJVkVfVklFV19F",
            "TElHSUJMRV9JTVBSRVNTSU9OUxBGEi4KKkFEU0VOU0VfQUNUSVZFX1ZJRVdf",
            "TUVBU1VSQUJMRV9JTVBSRVNTSU9OUxBFEjMKL0FEU0VOU0VfQUNUSVZFX1ZJ",
            "RVdfTUVBU1VSQUJMRV9JTVBSRVNTSU9OU19SQVRFEEgSLAooQURTRU5TRV9B",
            "Q1RJVkVfVklFV19WSUVXQUJMRV9JTVBSRVNTSU9OUxBEEjEKLUFEU0VOU0Vf",
            "QUNUSVZFX1ZJRVdfVklFV0FCTEVfSU1QUkVTU0lPTlNfUkFURRBHEhgKFEFE",
            "U0VOU0VfQVZFUkFHRV9FQ1BNEBoSEgoOQURTRU5TRV9DTElDS1MQFxIPCgtB",
            "RFNFTlNFX0NUUhAYEhcKE0FEU0VOU0VfSU1QUkVTU0lPTlMQFhIaChZBRFNF",
            "TlNFX1BFUkNFTlRfQ0xJQ0tTEBwSHwobQURTRU5TRV9QRVJDRU5UX0lNUFJF",
            "U1NJT05TEBsSGwoXQURTRU5TRV9QRVJDRU5UX1JFVkVOVUUQHRInCiNBRFNF",
            "TlNFX1BFUkNFTlRfUkVWRU5VRV9XSVRIT1VUX0NQRBAeEhwKGEFEU0VOU0Vf",
            "UkVTUE9OU0VTX1NFUlZFRBApEhMKD0FEU0VOU0VfUkVWRU5VRRAZEjEKLUFE",
            "X0VYQ0hBTkdFX0FDVElWRV9WSUVXX0FWRVJBR0VfVklFV0FCTEVfVElNRRBP",
            "EjAKLEFEX0VYQ0hBTkdFX0FDVElWRV9WSUVXX0VMSUdJQkxFX0lNUFJFU1NJ",
            "T05TEEwSMgouQURfRVhDSEFOR0VfQUNUSVZFX1ZJRVdfTUVBU1VSQUJMRV9J",
            "TVBSRVNTSU9OUxBLEjcKM0FEX0VYQ0hBTkdFX0FDVElWRV9WSUVXX01FQVNV",
            "UkFCTEVfSU1QUkVTU0lPTlNfUkFURRBOEjAKLEFEX0VYQ0hBTkdFX0FDVElW",
            "RV9WSUVXX1ZJRVdBQkxFX0lNUFJFU1NJT05TEEoSNQoxQURfRVhDSEFOR0Vf",
            "QUNUSVZFX1ZJRVdfVklFV0FCTEVfSU1QUkVTU0lPTlNfUkFURRBNEhwKGEFE",
            "X0VYQ0hBTkdFX0FWRVJBR0VfRUNQTRASEhYKEkFEX0VYQ0hBTkdFX0NMSUNL",
            "UxAPEhMKD0FEX0VYQ0hBTkdFX0NUUhAQEhsKF0FEX0VYQ0hBTkdFX0lNUFJF",
            "U1NJT05TEA4SHgoaQURfRVhDSEFOR0VfUEVSQ0VOVF9DTElDS1MQFBIjCh9B",
            "RF9FWENIQU5HRV9QRVJDRU5UX0lNUFJFU1NJT05TEBMSHwobQURfRVhDSEFO",
            "R0VfUEVSQ0VOVF9SRVZFTlVFEBUSKwonQURfRVhDSEFOR0VfUEVSQ0VOVF9S",
            "RVZFTlVFX1dJVEhPVVRfQ1BEEB8SIAocQURfRVhDSEFOR0VfUkVTUE9OU0VT",
            "X1NFUlZFRBAqEhcKE0FEX0VYQ0hBTkdFX1JFVkVOVUUQERIPCgtBRF9SRVFV",
            "RVNUUxAmEi8KK0FEX1NFUlZFUl9BQ1RJVkVfVklFV19BVkVSQUdFX1ZJRVdB",
            "QkxFX1RJTUUQQxIuCipBRF9TRVJWRVJfQUNUSVZFX1ZJRVdfRUxJR0lCTEVf",
            "SU1QUkVTU0lPTlMQQBIwCixBRF9TRVJWRVJfQUNUSVZFX1ZJRVdfTUVBU1VS",
            "QUJMRV9JTVBSRVNTSU9OUxA/EjUKMUFEX1NFUlZFUl9BQ1RJVkVfVklFV19N",
            "RUFTVVJBQkxFX0lNUFJFU1NJT05TX1JBVEUQQhIuCipBRF9TRVJWRVJfQUNU",
            "SVZFX1ZJRVdfVklFV0FCTEVfSU1QUkVTU0lPTlMQPhIzCi9BRF9TRVJWRVJf",
            "QUNUSVZFX1ZJRVdfVklFV0FCTEVfSU1QUkVTU0lPTlNfUkFURRBBEhoKFkFE",
            "X1NFUlZFUl9BVkVSQUdFX0VDUE0QIhImCiJBRF9TRVJWRVJfQVZFUkFHRV9F",
            "Q1BNX1dJVEhPVVRfQ1BEEAoSKgolQURfU0VSVkVSX0JFR0lOX1RPX1JFTkRF",
            "Ul9JTVBSRVNTSU9OUxCGAhIUChBBRF9TRVJWRVJfQ0xJQ0tTEAcSGQoVQURf",
            "U0VSVkVSX0NQRF9SRVZFTlVFECASEQoNQURfU0VSVkVSX0NUUhAIEhkKFUFE",
            "X1NFUlZFUl9JTVBSRVNTSU9OUxAGEhwKGEFEX1NFUlZFUl9QRVJDRU5UX0NM",
            "SUNLUxAMEiEKHUFEX1NFUlZFUl9QRVJDRU5UX0lNUFJFU1NJT05TEAsSHQoZ",
            "QURfU0VSVkVSX1BFUkNFTlRfUkVWRU5VRRAjEikKJUFEX1NFUlZFUl9QRVJD",
            "RU5UX1JFVkVOVUVfV0lUSE9VVF9DUEQQDRIeChpBRF9TRVJWRVJfUkVTUE9O",
            "U0VTX1NFUlZFRBAoEhUKEUFEX1NFUlZFUl9SRVZFTlVFECESIQodQURfU0VS",
            "VkVSX1JFVkVOVUVfV0lUSE9VVF9DUEQQCRIaChVBRF9TRVJWRVJfVFJBQ0tF",
            "RF9BRFMQiAISNQowQURfU0VSVkVSX1VORklMVEVSRURfQkVHSU5fVE9fUkVO",
            "REVSX0lNUFJFU1NJT05TEIUCEiAKG0FEX1NFUlZFUl9VTkZJTFRFUkVEX0NM",
            "SUNLUxCDAhIlCiBBRF9TRVJWRVJfVU5GSUxURVJFRF9JTVBSRVNTSU9OUxCE",
            "AhIlCiBBRF9TRVJWRVJfVU5GSUxURVJFRF9UUkFDS0VEX0FEUxCHAhIQCgxB",
            "VkVSQUdFX0VDUE0QJRIcChhBVkVSQUdFX0VDUE1fV0lUSE9VVF9DUEQQBRIK",
            "CgZDTElDS1MQAhIVChFDT0RFX1NFUlZFRF9DT1VOVBAsEgcKA0NUUhADEi0K",
            "KEdPT0dMRV9TT0xEX0FVQ1RJT05fQ09WSUVXRURfSU1QUkVTU0lPTlMQgQES",
            "JAofR09PR0xFX1NPTERfQVVDVElPTl9JTVBSRVNTSU9OUxCAARIlCiBHT09H",
            "TEVfU09MRF9DT1ZJRVdFRF9JTVBSRVNTSU9OUxCDARIcChdHT09HTEVfU09M",
            "RF9JTVBSRVNTSU9OUxCCARIwCixHT09HTEVfU09MRF9SRVNFUlZBVElPTl9D",
            "T1ZJRVdFRF9JTVBSRVNTSU9OUxB/EicKI0dPT0dMRV9TT0xEX1JFU0VSVkFU",
            "SU9OX0lNUFJFU1NJT05TEH4SDwoLSU1QUkVTU0lPTlMQARImCiFQQVJUTkVS",
            "X1NBTEVTX0ZJTExFRF9QT0RfUkVRVUVTVFMQhwESHAoXUEFSVE5FUl9TQUxF",
            "U19GSUxMX1JBVEUQiAESJQogUEFSVE5FUl9TQUxFU19QQVJUTkVSX01BVENI",
            "X1JBVEUQiQESGgoVUEFSVE5FUl9TQUxFU19RVUVSSUVTEIQBEicKIlBBUlRO",
            "RVJfU0FMRVNfVU5GSUxMRURfSU1QUkVTU0lPTlMQhQESJAofUEFSVE5FUl9T",
            "QUxFU19VTk1BVENIRURfUVVFUklFUxCGARIcChhQQVJUTkVSX1NPTERfQ09E",
            "RV9TRVJWRUQQfRIlCiFQQVJUTkVSX1NPTERfQ09WSUVXRURfSU1QUkVTU0lP",
            "TlMQfBIcChhQQVJUTkVSX1NPTERfSU1QUkVTU0lPTlMQexImCiFQUk9HUkFN",
            "TUFUSUNfRUxJR0lCTEVfQURfUkVRVUVTVFMQsQESHAoXUFJPR1JBTU1BVElD",
            "X01BVENIX1JBVEUQsgESIgodUFJPR1JBTU1BVElDX1JFU1BPTlNFU19TRVJW",
            "RUQQsAESFAoQUkVTUE9OU0VTX1NFUlZFRBAnEgsKB1JFVkVOVUUQJBIXChNS",
            "RVZFTlVFX1dJVEhPVVRfQ1BEEAQSLgopU0VSVkVSX1NJREVfVU5XUkFQUElO",
            "R19BVkVSQUdFX0xBVEVOQ1lfTVMQsgMSJAofU0VSVkVSX1NJREVfVU5XUkFQ",
            "UElOR19DQUxMT1VUUxCzAxIrCiZTRVJWRVJfU0lERV9VTldSQVBQSU5HX0VN",
            "UFRZX1JFU1BPTlNFUxC0AxIrCiZTRVJWRVJfU0lERV9VTldSQVBQSU5HX0VS",
            "Uk9SX1JFU1BPTlNFUxC1AxIwCitTRVJWRVJfU0lERV9VTldSQVBQSU5HX1NV",
            "Q0NFU1NGVUxfUkVTUE9OU0VTELYDEiQKH1NFUlZFUl9TSURFX1VOV1JBUFBJ",
            "TkdfVElNRU9VVFMQtwMSGAoUVU5GSUxMRURfSU1QUkVTU0lPTlMQLRIZChVV",
            "Tk1BVENIRURfQURfUkVRVUVTVFMQKxIqCiZVU0VSX01FU1NBR0VTX09GRkVS",
            "V0FMTF9NRVNTQUdFU19TSE9XThB5EjIKLlVTRVJfTUVTU0FHRVNfT0ZGRVJX",
            "QUxMX1NVQ0NFU1NGVUxfRU5HQUdFTUVOVFMQehIuCipWSURFT19JTlRFUkFD",
            "VElPTl9BVkVSQUdFX0lOVEVSQUNUSU9OX1JBVEUQXBIfChtWSURFT19JTlRF",
            "UkFDVElPTl9DT0xMQVBTRVMQXRIdChlWSURFT19JTlRFUkFDVElPTl9FWFBB",
            "TkRTEF8SIgoeVklERU9fSU5URVJBQ1RJT05fRlVMTF9TQ1JFRU5TEGASGwoX",
            "VklERU9fSU5URVJBQ1RJT05fTVVURVMQYRIcChhWSURFT19JTlRFUkFDVElP",
            "Tl9QQVVTRVMQYhIdChlWSURFT19JTlRFUkFDVElPTl9SRVNVTUVTEGMSHQoZ",
            "VklERU9fSU5URVJBQ1RJT05fUkVXSU5EUxBkEh0KGVZJREVPX0lOVEVSQUNU",
            "SU9OX1VOTVVURVMQZRIhCh1WSURFT19JTlRFUkFDVElPTl9WSURFT19TS0lQ",
            "UxBmEiQKH1ZJREVPX1JFQUxfVElNRV9DUkVBVElWRV9TRVJWRVMQiwESJAof",
            "VklERU9fUkVBTF9USU1FX0VSUk9SXzEwMF9DT1VOVBCPARIkCh9WSURFT19S",
            "RUFMX1RJTUVfRVJST1JfMTAxX0NPVU5UEJABEiQKH1ZJREVPX1JFQUxfVElN",
            "RV9FUlJPUl8xMDJfQ09VTlQQkQESJAofVklERU9fUkVBTF9USU1FX0VSUk9S",
            "XzIwMF9DT1VOVBCSARIkCh9WSURFT19SRUFMX1RJTUVfRVJST1JfMjAxX0NP",
            "VU5UEJMBEiQKH1ZJREVPX1JFQUxfVElNRV9FUlJPUl8yMDJfQ09VTlQQlAES",
            "JAofVklERU9fUkVBTF9USU1FX0VSUk9SXzIwM19DT1VOVBCVARIkCh9WSURF",
            "T19SRUFMX1RJTUVfRVJST1JfMzAwX0NPVU5UEJYBEiQKH1ZJREVPX1JFQUxf",
            "VElNRV9FUlJPUl8zMDFfQ09VTlQQlwESJAofVklERU9fUkVBTF9USU1FX0VS",
            "Uk9SXzMwMl9DT1VOVBCYARIkCh9WSURFT19SRUFMX1RJTUVfRVJST1JfMzAz",
            "X0NPVU5UEJkBEiQKH1ZJREVPX1JFQUxfVElNRV9FUlJPUl80MDBfQ09VTlQQ",
            "mgESJAofVklERU9fUkVBTF9USU1FX0VSUk9SXzQwMV9DT1VOVBCbARIkCh9W",
            "SURFT19SRUFMX1RJTUVfRVJST1JfNDAyX0NPVU5UEJwBEiQKH1ZJREVPX1JF",
            "QUxfVElNRV9FUlJPUl80MDNfQ09VTlQQnQESJAofVklERU9fUkVBTF9USU1F",
            "X0VSUk9SXzQwNV9DT1VOVBCeARIkCh9WSURFT19SRUFMX1RJTUVfRVJST1Jf",
            "NDA2X0NPVU5UEJ8BEiQKH1ZJREVPX1JFQUxfVElNRV9FUlJPUl80MDdfQ09V",
            "TlQQoAESJAofVklERU9fUkVBTF9USU1FX0VSUk9SXzQwOF9DT1VOVBChARIk",
            "Ch9WSURFT19SRUFMX1RJTUVfRVJST1JfNDA5X0NPVU5UEKIBEiQKH1ZJREVP",
            "X1JFQUxfVElNRV9FUlJPUl80MTBfQ09VTlQQowESJAofVklERU9fUkVBTF9U",
            "SU1FX0VSUk9SXzUwMF9DT1VOVBCkARIkCh9WSURFT19SRUFMX1RJTUVfRVJS",
            "T1JfNTAxX0NPVU5UEKUBEiQKH1ZJREVPX1JFQUxfVElNRV9FUlJPUl81MDJf",
            "Q09VTlQQpgESJAofVklERU9fUkVBTF9USU1FX0VSUk9SXzUwM19DT1VOVBCn",
            "ARIkCh9WSURFT19SRUFMX1RJTUVfRVJST1JfNjAwX0NPVU5UEKgBEiQKH1ZJ",
            "REVPX1JFQUxfVElNRV9FUlJPUl82MDFfQ09VTlQQqQESJAofVklERU9fUkVB",
            "TF9USU1FX0VSUk9SXzYwMl9DT1VOVBCqARIkCh9WSURFT19SRUFMX1RJTUVf",
            "RVJST1JfNjAzX0NPVU5UEKsBEiQKH1ZJREVPX1JFQUxfVElNRV9FUlJPUl82",
            "MDRfQ09VTlQQrAESJAofVklERU9fUkVBTF9USU1FX0VSUk9SXzkwMF9DT1VO",
            "VBCtARIkCh9WSURFT19SRUFMX1RJTUVfRVJST1JfOTAxX0NPVU5UEK4BEiAK",
            "G1ZJREVPX1JFQUxfVElNRV9JTVBSRVNTSU9OUxCKARIkCh9WSURFT19SRUFM",
            "X1RJTUVfTUFUQ0hFRF9RVUVSSUVTEIwBEiYKIVZJREVPX1JFQUxfVElNRV9U",
            "T1RBTF9FUlJPUl9DT1VOVBCvARIiCh1WSURFT19SRUFMX1RJTUVfVE9UQUxf",
            "UVVFUklFUxCOARImCiFWSURFT19SRUFMX1RJTUVfVU5NQVRDSEVEX1FVRVJJ",
            "RVMQjQESHwobVklERU9fVklFV0VSU0hJUF9BVVRPX1BMQVlTEGcSJgoiVklE",
            "RU9fVklFV0VSU0hJUF9BVkVSQUdFX1ZJRVdfUkFURRBoEiYKIlZJREVPX1ZJ",
            "RVdFUlNISVBfQVZFUkFHRV9WSUVXX1RJTUUQaRIjCh9WSURFT19WSUVXRVJT",
            "SElQX0NMSUNLX1RPX1BMQVlTEGoSHgoaVklERU9fVklFV0VSU0hJUF9DT01Q",
            "TEVURVMQaxIkCiBWSURFT19WSUVXRVJTSElQX0NPTVBMRVRJT05fUkFURRBs",
            "EiIKHlZJREVPX1ZJRVdFUlNISVBfRU5HQUdFRF9WSUVXUxBtEiQKIFZJREVP",
            "X1ZJRVdFUlNISVBfRklSU1RfUVVBUlRJTEVTEG4SHgoaVklERU9fVklFV0VS",
            "U0hJUF9NSURQT0lOVFMQbxInCiNWSURFT19WSUVXRVJTSElQX1NLSVBfQlVU",
            "VE9OU19TSE9XThBwEhsKF1ZJREVPX1ZJRVdFUlNISVBfU1RBUlRTEHESJAog",
            "VklERU9fVklFV0VSU0hJUF9USElSRF9RVUFSVElMRVMQchImCiJWSURFT19W",
            "SUVXRVJTSElQX1RPVEFMX0VSUk9SX0NPVU5UEHMSJQohVklERU9fVklFV0VS",
            "U0hJUF9UT1RBTF9FUlJPUl9SQVRFEF4SIQodVklERU9fVklFV0VSU0hJUF9W",
            "SURFT19MRU5HVEgQdBImCiJWSURFT19WSUVXRVJTSElQX1ZJRVdfVEhST1VH",
            "SF9SQVRFEHUSHAoYWUlFTERfR1JPVVBfQVVDVElPTlNfV09OEFASFAoQWUlF",
            "TERfR1JPVVBfQklEUxBREh8KG1lJRUxEX0dST1VQX0JJRFNfSU5fQVVDVElP",
            "ThBSEhgKFFlJRUxEX0dST1VQX0NBTExPVVRTEFMSHQoZWUlFTERfR1JPVVBf",
            "RVNUSU1BVEVEX0NQTRBYEiEKHVlJRUxEX0dST1VQX0VTVElNQVRFRF9SRVZF",
            "TlVFEFcSGwoXWUlFTERfR1JPVVBfSU1QUkVTU0lPTlMQVRIjCh9ZSUVMRF9H",
            "Uk9VUF9NRURJQVRJT05fRklMTF9SQVRFEFkSKQolWUlFTERfR1JPVVBfTUVE",
            "SUFUSU9OX01BVENIRURfUVVFUklFUxBWEiMKH1lJRUxEX0dST1VQX01FRElB",
            "VElPTl9QQVNTQkFDS1MQdhIqCiZZSUVMRF9HUk9VUF9NRURJQVRJT05fVEhJ",
            "UkRfUEFSVFlfRUNQTRBaEiQKIFlJRUxEX0dST1VQX1NVQ0NFU1NGVUxfUkVT",
            "UE9OU0VTEFQilwEKD01ldHJpY1ZhbHVlVHlwZRILCgdQUklNQVJZEAASHAoY",
            "UFJJTUFSWV9QRVJDRU5UX09GX1RPVEFMEAESDgoKQ09NUEFSSVNPThACEh8K",
            "G0NPTVBBUklTT05fUEVSQ0VOVF9PRl9UT1RBTBADEhMKD0FCU09MVVRFX0NI",
            "QU5HRRAEEhMKD1JFTEFUSVZFX0NIQU5HRRAFIjkKClJlcG9ydFR5cGUSGwoX",
            "UkVQT1JUX1RZUEVfVU5TUEVDSUZJRUQQABIOCgpISVNUT1JJQ0FMEAEiLgoK",
            "VmlzaWJpbGl0eRIKCgZISURERU4QABIJCgVEUkFGVBABEgkKBVNBVkVEEAIi",
            "aQoOVGltZVpvbmVTb3VyY2USIAocVElNRV9aT05FX1NPVVJDRV9VTlNQRUNJ",
            "RklFRBAAEg0KCVBVQkxJU0hFUhABEg8KC0FEX0VYQ0hBTkdFEAISBwoDVVRD",
            "EAMSDAoIUFJPVklERUQQBDpf6kFcCh9hZG1hbmFnZXIuZ29vZ2xlYXBpcy5j",
            "b20vUmVwb3J0EihuZXR3b3Jrcy97bmV0d29ya19jb2RlfS9yZXBvcnRzL3ty",
            "ZXBvcnR9KgdyZXBvcnRzMgZyZXBvcnQisQcKEFJlcG9ydERlZmluaXRpb24S",
            "QgoKZGltZW5zaW9ucxgBIAMoDjIpLmdvb2dsZS5hZHMuYWRtYW5hZ2VyLnYx",
            "LlJlcG9ydC5EaW1lbnNpb25CA+BBAhI8CgdtZXRyaWNzGAIgAygOMiYuZ29v",
            "Z2xlLmFkcy5hZG1hbmFnZXIudjEuUmVwb3J0Lk1ldHJpY0ID4EECEjwKB2Zp",
            "bHRlcnMYAyADKAsyJi5nb29nbGUuYWRzLmFkbWFuYWdlci52MS5SZXBvcnQu",
            "RmlsdGVyQgPgQQESTQoQdGltZV96b25lX3NvdXJjZRgUIAEoDjIuLmdvb2ds",
            "ZS5hZHMuYWRtYW5hZ2VyLnYxLlJlcG9ydC5UaW1lWm9uZVNvdXJjZUID4EEB",
            "EhYKCXRpbWVfem9uZRgEIAEoCUID4EEBEhoKDWN1cnJlbmN5X2NvZGUYBSAB",
            "KAlCA+BBARJCCgpkYXRlX3JhbmdlGAYgASgLMikuZ29vZ2xlLmFkcy5hZG1h",
            "bmFnZXIudjEuUmVwb3J0LkRhdGVSYW5nZUID4EECElIKFWNvbXBhcmlzb25f",
            "ZGF0ZV9yYW5nZRgJIAEoCzIpLmdvb2dsZS5hZHMuYWRtYW5hZ2VyLnYxLlJl",
            "cG9ydC5EYXRlUmFuZ2VCA+BBAUgAiAEBEiUKGGN1c3RvbV9kaW1lbnNpb25f",
            "a2V5X2lkcxgHIAMoA0ID4EEBEicKGmxpbmVfaXRlbV9jdXN0b21fZmllbGRf",
            "aWRzGAsgAygDQgPgQQESIwoWb3JkZXJfY3VzdG9tX2ZpZWxkX2lkcxgMIAMo",
            "A0ID4EEBEiYKGWNyZWF0aXZlX2N1c3RvbV9maWVsZF9pZHMYDSADKANCA+BB",
            "ARJECgtyZXBvcnRfdHlwZRgIIAEoDjIqLmdvb2dsZS5hZHMuYWRtYW5hZ2Vy",
            "LnYxLlJlcG9ydC5SZXBvcnRUeXBlQgPgQQISUQoSdGltZV9wZXJpb2RfY29s",
            "dW1uGAogASgOMjAuZ29vZ2xlLmFkcy5hZG1hbmFnZXIudjEuUmVwb3J0LlRp",
            "bWVQZXJpb2RDb2x1bW5CA+BBARI4CgVmbGFncxgOIAMoCzIkLmdvb2dsZS5h",
            "ZHMuYWRtYW5hZ2VyLnYxLlJlcG9ydC5GbGFnQgPgQQESOAoFc29ydHMYDyAD",
            "KAsyJC5nb29nbGUuYWRzLmFkbWFuYWdlci52MS5SZXBvcnQuU29ydEID4EEB",
            "QhgKFl9jb21wYXJpc29uX2RhdGVfcmFuZ2UiogIKD1NjaGVkdWxlT3B0aW9u",
            "cxIzCghzY2hlZHVsZRgBIAEoCzIhLmdvb2dsZS5hZHMuYWRtYW5hZ2VyLnYx",
            "LlNjaGVkdWxlElYKEmRlbGl2ZXJ5X2NvbmRpdGlvbhgCIAEoDjI6Lmdvb2ds",
            "ZS5hZHMuYWRtYW5hZ2VyLnYxLlNjaGVkdWxlT3B0aW9ucy5EZWxpdmVyeUNv",
            "bmRpdGlvbhI4CgVmbGFncxgDIAMoCzIkLmdvb2dsZS5hZHMuYWRtYW5hZ2Vy",
            "LnYxLlJlcG9ydC5GbGFnQgPgQQEiSAoRRGVsaXZlcnlDb25kaXRpb24SCQoF",
            "TkVWRVIQABIKCgZBTFdBWVMQARIcChhXSEVOX0ZMQUdfQ09ORElUSU9OU19N",
            "RVQQAiKLBQoIU2NoZWR1bGUSSwoPd2Vla2x5X3NjaGVkdWxlGAYgASgLMjAu",
            "Z29vZ2xlLmFkcy5hZG1hbmFnZXIudjEuU2NoZWR1bGUuV2Vla2x5U2NoZWR1",
            "bGVIABJNChBtb250aGx5X3NjaGVkdWxlGAcgASgLMjEuZ29vZ2xlLmFkcy5h",
            "ZG1hbmFnZXIudjEuU2NoZWR1bGUuTW9udGhseVNjaGVkdWxlSAASJQoKc3Rh",
            "cnRfZGF0ZRgBIAEoCzIRLmdvb2dsZS50eXBlLkRhdGUSIwoIZW5kX2RhdGUY",
            "AiABKAsyES5nb29nbGUudHlwZS5EYXRlEj4KCWZyZXF1ZW5jeRgDIAEoDjIr",
            "Lmdvb2dsZS5hZHMuYWRtYW5hZ2VyLnYxLlNjaGVkdWxlLkZyZXF1ZW5jeRIq",
            "CgpzdGFydF90aW1lGAQgASgLMhYuZ29vZ2xlLnR5cGUuVGltZU9mRGF5GkcK",
            "DldlZWtseVNjaGVkdWxlEjUKFXdlZWtseV9zY2hlZHVsZWRfZGF5cxgBIAMo",
            "DjIWLmdvb2dsZS50eXBlLkRheU9mV2VlaxoxCg9Nb250aGx5U2NoZWR1bGUS",
            "HgoWbW9udGhseV9zY2hlZHVsZWRfZGF5cxgBIAMoBSKYAQoJRnJlcXVlbmN5",
            "EhkKFUZSRVFVRU5DWV9VTlNQRUNJRklFRBAAEgoKBkhPVVJMWRABEhMKD1RX",
            "T19USU1FU19EQUlMWRACEhUKEVRIUkVFX1RJTUVTX0RBSUxZEAMSFAoQRk9V",
            "Ul9USU1FU19EQUlMWRAEEgkKBURBSUxZEAUSCgoGV0VFS0xZEAYSCwoHTU9O",
            "VEhMWRAHQhQKEmZyZXF1ZW5jeV9zY2hlZHVsZULHAQobY29tLmdvb2dsZS5h",
            "ZHMuYWRtYW5hZ2VyLnYxQhNSZXBvcnRNZXNzYWdlc1Byb3RvUAFaQGdvb2ds",
            "ZS5nb2xhbmcub3JnL2dlbnByb3RvL2dvb2dsZWFwaXMvYWRzL2FkbWFuYWdl",
            "ci92MTthZG1hbmFnZXKqAhdHb29nbGUuQWRzLkFkTWFuYWdlci5WMcoCF0dv",
            "b2dsZVxBZHNcQWRNYW5hZ2VyXFYx6gIaR29vZ2xlOjpBZHM6OkFkTWFuYWdl",
            "cjo6VjFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Type.DateReflection.Descriptor, global::Google.Type.DayofweekReflection.Descriptor, global::Google.Type.TimeofdayReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.Report), global::Google.Ads.AdManager.V1.Report.Parser, new[]{ "Name", "ReportId", "Visibility", "ReportDefinition", "DisplayName", "UpdateTime", "CreateTime", "Locale", "ScheduleOptions" }, null, new[]{ typeof(global::Google.Ads.AdManager.V1.Report.Types.TimePeriodColumn), typeof(global::Google.Ads.AdManager.V1.Report.Types.Dimension), typeof(global::Google.Ads.AdManager.V1.Report.Types.Metric), typeof(global::Google.Ads.AdManager.V1.Report.Types.MetricValueType), typeof(global::Google.Ads.AdManager.V1.Report.Types.ReportType), typeof(global::Google.Ads.AdManager.V1.Report.Types.Visibility), typeof(global::Google.Ads.AdManager.V1.Report.Types.TimeZoneSource) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.Report.Types.Value), global::Google.Ads.AdManager.V1.Report.Types.Value.Parser, new[]{ "IntValue", "DoubleValue", "StringValue", "BoolValue", "IntListValue", "StringListValue", "BytesValue" }, new[]{ "Value" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.Report.Types.Value.Types.IntList), global::Google.Ads.AdManager.V1.Report.Types.Value.Types.IntList.Parser, new[]{ "Values" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.Report.Types.Value.Types.StringList), global::Google.Ads.AdManager.V1.Report.Types.Value.Types.StringList.Parser, new[]{ "Values" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.Report.Types.Sort), global::Google.Ads.AdManager.V1.Report.Types.Sort.Parser, new[]{ "Field", "Descending", "Slice", "TimePeriodIndex", "MetricValueType" }, new[]{ "Slice", "TimePeriodIndex", "MetricValueType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.Report.Types.DataTable), global::Google.Ads.AdManager.V1.Report.Types.DataTable.Parser, null, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.Report.Types.DataTable.Types.Row), global::Google.Ads.AdManager.V1.Report.Types.DataTable.Types.Row.Parser, new[]{ "DimensionValues", "MetricValueGroups" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.Report.Types.DataTable.Types.MetricValueGroup), global::Google.Ads.AdManager.V1.Report.Types.DataTable.Types.MetricValueGroup.Parser, new[]{ "PrimaryValues", "PrimaryPercentOfTotalValues", "ComparisonValues", "ComparisonPercentOfTotalValues", "AbsoluteChangeValues", "RelativeChangeValues", "FlagValues" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.Report.Types.Field), global::Google.Ads.AdManager.V1.Report.Types.Field.Parser, new[]{ "Dimension", "Metric" }, new[]{ "Field" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.Report.Types.Slice), global::Google.Ads.AdManager.V1.Report.Types.Slice.Parser, new[]{ "Dimension", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.Report.Types.Filter), global::Google.Ads.AdManager.V1.Report.Types.Filter.Parser, new[]{ "FieldFilter", "NotFilter", "AndFilter", "OrFilter" }, new[]{ "Type" }, new[]{ typeof(global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.Operation) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FieldFilter), global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FieldFilter.Parser, new[]{ "Field", "Operation", "Values", "Slice", "TimePeriodIndex", "MetricValueType" }, new[]{ "Slice", "TimePeriodIndex", "MetricValueType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FilterList), global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FilterList.Parser, new[]{ "Filters" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.Report.Types.Flag), global::Google.Ads.AdManager.V1.Report.Types.Flag.Parser, new[]{ "Filters", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.Report.Types.DateRange), global::Google.Ads.AdManager.V1.Report.Types.DateRange.Parser, new[]{ "Fixed", "Relative" }, new[]{ "DateRangeType" }, new[]{ typeof(global::Google.Ads.AdManager.V1.Report.Types.DateRange.Types.RelativeDateRange) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.Report.Types.DateRange.Types.FixedDateRange), global::Google.Ads.AdManager.V1.Report.Types.DateRange.Types.FixedDateRange.Parser, new[]{ "StartDate", "EndDate" }, null, null, null, null)})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.ReportDefinition), global::Google.Ads.AdManager.V1.ReportDefinition.Parser, new[]{ "Dimensions", "Metrics", "Filters", "TimeZoneSource", "TimeZone", "CurrencyCode", "DateRange", "ComparisonDateRange", "CustomDimensionKeyIds", "LineItemCustomFieldIds", "OrderCustomFieldIds", "CreativeCustomFieldIds", "ReportType", "TimePeriodColumn", "Flags", "Sorts" }, new[]{ "ComparisonDateRange" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.ScheduleOptions), global::Google.Ads.AdManager.V1.ScheduleOptions.Parser, new[]{ "Schedule", "DeliveryCondition", "Flags" }, null, new[]{ typeof(global::Google.Ads.AdManager.V1.ScheduleOptions.Types.DeliveryCondition) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.Schedule), global::Google.Ads.AdManager.V1.Schedule.Parser, new[]{ "WeeklySchedule", "MonthlySchedule", "StartDate", "EndDate", "Frequency", "StartTime" }, new[]{ "FrequencySchedule" }, new[]{ typeof(global::Google.Ads.AdManager.V1.Schedule.Types.Frequency) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.Schedule.Types.WeeklySchedule), global::Google.Ads.AdManager.V1.Schedule.Types.WeeklySchedule.Parser, new[]{ "WeeklyScheduledDays" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.Schedule.Types.MonthlySchedule), global::Google.Ads.AdManager.V1.Schedule.Types.MonthlySchedule.Parser, new[]{ "MonthlyScheduledDays" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// The `Report` resource.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Report : pb::IMessage<Report>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Report> _parser = new pb::MessageParser<Report>(() => new Report());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Report> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.AdManager.V1.ReportMessagesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Report() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Report(Report other) : this() {
      name_ = other.name_;
      reportId_ = other.reportId_;
      visibility_ = other.visibility_;
      reportDefinition_ = other.reportDefinition_ != null ? other.reportDefinition_.Clone() : null;
      displayName_ = other.displayName_;
      updateTime_ = other.updateTime_ != null ? other.updateTime_.Clone() : null;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      locale_ = other.locale_;
      scheduleOptions_ = other.scheduleOptions_ != null ? other.scheduleOptions_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Report Clone() {
      return new Report(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Identifier. The resource name of the report.
    /// Report resource name have the form:
    /// `networks/{network_code}/reports/{report_id}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "report_id" field.</summary>
    public const int ReportIdFieldNumber = 3;
    private long reportId_;
    /// <summary>
    /// Output only. Report ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ReportId {
      get { return reportId_; }
      set {
        reportId_ = value;
      }
    }

    /// <summary>Field number for the "visibility" field.</summary>
    public const int VisibilityFieldNumber = 2;
    private global::Google.Ads.AdManager.V1.Report.Types.Visibility visibility_ = global::Google.Ads.AdManager.V1.Report.Types.Visibility.Hidden;
    /// <summary>
    /// Optional. The visibility of a report.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Ads.AdManager.V1.Report.Types.Visibility Visibility {
      get { return visibility_; }
      set {
        visibility_ = value;
      }
    }

    /// <summary>Field number for the "report_definition" field.</summary>
    public const int ReportDefinitionFieldNumber = 4;
    private global::Google.Ads.AdManager.V1.ReportDefinition reportDefinition_;
    /// <summary>
    /// Required. The report definition of the report.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Ads.AdManager.V1.ReportDefinition ReportDefinition {
      get { return reportDefinition_; }
      set {
        reportDefinition_ = value;
      }
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 5;
    private string displayName_ = "";
    /// <summary>
    /// Optional. Display name for the report.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "update_time" field.</summary>
    public const int UpdateTimeFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateTime_;
    /// <summary>
    /// Output only. The instant this report was last modified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. The instant this report was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "locale" field.</summary>
    public const int LocaleFieldNumber = 8;
    private string locale_ = "";
    /// <summary>
    /// Output only. The locale of this report. Locale is set from the user's
    /// locale at the time of the request. Locale can not be modified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Locale {
      get { return locale_; }
      set {
        locale_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "schedule_options" field.</summary>
    public const int ScheduleOptionsFieldNumber = 9;
    private global::Google.Ads.AdManager.V1.ScheduleOptions scheduleOptions_;
    /// <summary>
    /// Optional. The schedule options of this report.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Ads.AdManager.V1.ScheduleOptions ScheduleOptions {
      get { return scheduleOptions_; }
      set {
        scheduleOptions_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Report);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Report other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (ReportId != other.ReportId) return false;
      if (Visibility != other.Visibility) return false;
      if (!object.Equals(ReportDefinition, other.ReportDefinition)) return false;
      if (DisplayName != other.DisplayName) return false;
      if (!object.Equals(UpdateTime, other.UpdateTime)) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (Locale != other.Locale) return false;
      if (!object.Equals(ScheduleOptions, other.ScheduleOptions)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (ReportId != 0L) hash ^= ReportId.GetHashCode();
      if (Visibility != global::Google.Ads.AdManager.V1.Report.Types.Visibility.Hidden) hash ^= Visibility.GetHashCode();
      if (reportDefinition_ != null) hash ^= ReportDefinition.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (updateTime_ != null) hash ^= UpdateTime.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (Locale.Length != 0) hash ^= Locale.GetHashCode();
      if (scheduleOptions_ != null) hash ^= ScheduleOptions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Visibility != global::Google.Ads.AdManager.V1.Report.Types.Visibility.Hidden) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Visibility);
      }
      if (ReportId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ReportId);
      }
      if (reportDefinition_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ReportDefinition);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DisplayName);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(UpdateTime);
      }
      if (createTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(CreateTime);
      }
      if (Locale.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Locale);
      }
      if (scheduleOptions_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ScheduleOptions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Visibility != global::Google.Ads.AdManager.V1.Report.Types.Visibility.Hidden) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Visibility);
      }
      if (ReportId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ReportId);
      }
      if (reportDefinition_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ReportDefinition);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DisplayName);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(UpdateTime);
      }
      if (createTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(CreateTime);
      }
      if (Locale.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Locale);
      }
      if (scheduleOptions_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ScheduleOptions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (ReportId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReportId);
      }
      if (Visibility != global::Google.Ads.AdManager.V1.Report.Types.Visibility.Hidden) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Visibility);
      }
      if (reportDefinition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReportDefinition);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (updateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateTime);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (Locale.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Locale);
      }
      if (scheduleOptions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScheduleOptions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Report other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.ReportId != 0L) {
        ReportId = other.ReportId;
      }
      if (other.Visibility != global::Google.Ads.AdManager.V1.Report.Types.Visibility.Hidden) {
        Visibility = other.Visibility;
      }
      if (other.reportDefinition_ != null) {
        if (reportDefinition_ == null) {
          ReportDefinition = new global::Google.Ads.AdManager.V1.ReportDefinition();
        }
        ReportDefinition.MergeFrom(other.ReportDefinition);
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.updateTime_ != null) {
        if (updateTime_ == null) {
          UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateTime.MergeFrom(other.UpdateTime);
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.Locale.Length != 0) {
        Locale = other.Locale;
      }
      if (other.scheduleOptions_ != null) {
        if (scheduleOptions_ == null) {
          ScheduleOptions = new global::Google.Ads.AdManager.V1.ScheduleOptions();
        }
        ScheduleOptions.MergeFrom(other.ScheduleOptions);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Visibility = (global::Google.Ads.AdManager.V1.Report.Types.Visibility) input.ReadEnum();
            break;
          }
          case 24: {
            ReportId = input.ReadInt64();
            break;
          }
          case 34: {
            if (reportDefinition_ == null) {
              ReportDefinition = new global::Google.Ads.AdManager.V1.ReportDefinition();
            }
            input.ReadMessage(ReportDefinition);
            break;
          }
          case 42: {
            DisplayName = input.ReadString();
            break;
          }
          case 50: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 58: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 66: {
            Locale = input.ReadString();
            break;
          }
          case 74: {
            if (scheduleOptions_ == null) {
              ScheduleOptions = new global::Google.Ads.AdManager.V1.ScheduleOptions();
            }
            input.ReadMessage(ScheduleOptions);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Visibility = (global::Google.Ads.AdManager.V1.Report.Types.Visibility) input.ReadEnum();
            break;
          }
          case 24: {
            ReportId = input.ReadInt64();
            break;
          }
          case 34: {
            if (reportDefinition_ == null) {
              ReportDefinition = new global::Google.Ads.AdManager.V1.ReportDefinition();
            }
            input.ReadMessage(ReportDefinition);
            break;
          }
          case 42: {
            DisplayName = input.ReadString();
            break;
          }
          case 50: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 58: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 66: {
            Locale = input.ReadString();
            break;
          }
          case 74: {
            if (scheduleOptions_ == null) {
              ScheduleOptions = new global::Google.Ads.AdManager.V1.ScheduleOptions();
            }
            input.ReadMessage(ScheduleOptions);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Report message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Valid time period columns.
      /// </summary>
      public enum TimePeriodColumn {
        /// <summary>
        /// Default value. Report will have no time period column.
        /// </summary>
        [pbr::OriginalName("TIME_PERIOD_COLUMN_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// A column for each date in the report.
        /// </summary>
        [pbr::OriginalName("TIME_PERIOD_COLUMN_DATE")] Date = 1,
        /// <summary>
        /// A column for each week in the report.
        /// </summary>
        [pbr::OriginalName("TIME_PERIOD_COLUMN_WEEK")] Week = 2,
        /// <summary>
        /// A column for each month in the report.
        /// </summary>
        [pbr::OriginalName("TIME_PERIOD_COLUMN_MONTH")] Month = 3,
        /// <summary>
        /// A column for each quarter in the report.
        /// </summary>
        [pbr::OriginalName("TIME_PERIOD_COLUMN_QUARTER")] Quarter = 4,
      }

      /// <summary>
      /// Reporting dimensions.
      /// </summary>
      public enum Dimension {
        /// <summary>
        /// Default value. This value is unused.
        /// </summary>
        [pbr::OriginalName("DIMENSION_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The domain name of the advertiser.
        /// </summary>
        [pbr::OriginalName("ADVERTISER_DOMAIN_NAME")] AdvertiserDomainName = 242,
        /// <summary>
        /// The ID used in an external system for advertiser identification
        /// </summary>
        [pbr::OriginalName("ADVERTISER_EXTERNAL_ID")] AdvertiserExternalId = 228,
        /// <summary>
        /// The ID of an advertiser company assigned to an order
        /// </summary>
        [pbr::OriginalName("ADVERTISER_ID")] AdvertiserId = 131,
        /// <summary>
        /// Labels applied to the advertiser
        /// can be used for either competitive exclusion or ad exclusion
        /// </summary>
        [pbr::OriginalName("ADVERTISER_LABELS")] AdvertiserLabels = 230,
        /// <summary>
        /// Label ids applied to the advertiser
        /// can be used for either competitive exclusion or ad exclusion
        /// </summary>
        [pbr::OriginalName("ADVERTISER_LABEL_IDS")] AdvertiserLabelIds = 229,
        /// <summary>
        /// The name of an advertiser company assigned to an order
        /// </summary>
        [pbr::OriginalName("ADVERTISER_NAME")] AdvertiserName = 132,
        /// <summary>
        /// The name of the contact associated with an advertiser company
        /// </summary>
        [pbr::OriginalName("ADVERTISER_PRIMARY_CONTACT")] AdvertiserPrimaryContact = 227,
        /// <summary>
        /// Shows an ENUM value describing whether a given piece of publisher
        /// inventory was above (ATF) or below the fold (BTF) of a page.
        /// </summary>
        [pbr::OriginalName("AD_LOCATION")] AdLocation = 390,
        /// <summary>
        /// Shows a localized string describing whether a given piece of publisher
        /// inventory was above (ATF) or below the fold (BTF) of a page.
        /// </summary>
        [pbr::OriginalName("AD_LOCATION_NAME")] AdLocationName = 391,
        /// <summary>
        /// The code of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_CODE")] AdUnitCode = 64,
        /// <summary>
        /// The code of the first level ad unit of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_CODE_LEVEL_1")] AdUnitCodeLevel1 = 65,
        /// <summary>
        /// The code of the tenth level ad unit of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_CODE_LEVEL_10")] AdUnitCodeLevel10 = 74,
        /// <summary>
        /// The code of the eleventh level ad unit of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_CODE_LEVEL_11")] AdUnitCodeLevel11 = 75,
        /// <summary>
        /// The code of the twelfth level ad unit of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_CODE_LEVEL_12")] AdUnitCodeLevel12 = 76,
        /// <summary>
        /// The code of the thirteenth level ad unit of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_CODE_LEVEL_13")] AdUnitCodeLevel13 = 77,
        /// <summary>
        /// The code of the fourteenth level ad unit of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_CODE_LEVEL_14")] AdUnitCodeLevel14 = 78,
        /// <summary>
        /// The code of the fifteenth level ad unit of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_CODE_LEVEL_15")] AdUnitCodeLevel15 = 79,
        /// <summary>
        /// The code of the sixteenth level ad unit of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_CODE_LEVEL_16")] AdUnitCodeLevel16 = 80,
        /// <summary>
        /// The code of the second level ad unit of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_CODE_LEVEL_2")] AdUnitCodeLevel2 = 66,
        /// <summary>
        /// The code of the third level ad unit of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_CODE_LEVEL_3")] AdUnitCodeLevel3 = 67,
        /// <summary>
        /// The code of the fourth level ad unit of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_CODE_LEVEL_4")] AdUnitCodeLevel4 = 68,
        /// <summary>
        /// The code of the fifth level ad unit of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_CODE_LEVEL_5")] AdUnitCodeLevel5 = 69,
        /// <summary>
        /// The code of the sixth level ad unit of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_CODE_LEVEL_6")] AdUnitCodeLevel6 = 70,
        /// <summary>
        /// The code of the seventh level ad unit of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_CODE_LEVEL_7")] AdUnitCodeLevel7 = 71,
        /// <summary>
        /// The code of the eighth level ad unit of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_CODE_LEVEL_8")] AdUnitCodeLevel8 = 72,
        /// <summary>
        /// The code of the ninth level ad unit of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_CODE_LEVEL_9")] AdUnitCodeLevel9 = 73,
        /// <summary>
        /// The depth of the ad unit's hierarchy
        /// </summary>
        [pbr::OriginalName("AD_UNIT_DEPTH")] AdUnitDepth = 101,
        /// <summary>
        /// The ID of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_ID")] AdUnitId = 25,
        /// <summary>
        /// The full hierarchy of ad unit IDs where the ad was requested, from
        /// root to leaf, excluding the root ad unit ID.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_ID_ALL_LEVEL")] AdUnitIdAllLevel = 27,
        /// <summary>
        /// The first level ad unit ID of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_ID_LEVEL_1")] AdUnitIdLevel1 = 30,
        /// <summary>
        /// The tenth level ad unit ID of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_ID_LEVEL_10")] AdUnitIdLevel10 = 48,
        /// <summary>
        /// The eleventh level ad unit ID of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_ID_LEVEL_11")] AdUnitIdLevel11 = 50,
        /// <summary>
        /// The twelfth level ad unit ID of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_ID_LEVEL_12")] AdUnitIdLevel12 = 52,
        /// <summary>
        /// The thirteenth level ad unit ID of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_ID_LEVEL_13")] AdUnitIdLevel13 = 54,
        /// <summary>
        /// The fourteenth level ad unit ID of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_ID_LEVEL_14")] AdUnitIdLevel14 = 56,
        /// <summary>
        /// The fifteenth level ad unit ID of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_ID_LEVEL_15")] AdUnitIdLevel15 = 58,
        /// <summary>
        /// The sixteenth level ad unit ID of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_ID_LEVEL_16")] AdUnitIdLevel16 = 60,
        /// <summary>
        /// The second level ad unit ID of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_ID_LEVEL_2")] AdUnitIdLevel2 = 32,
        /// <summary>
        /// The third level ad unit ID of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_ID_LEVEL_3")] AdUnitIdLevel3 = 34,
        /// <summary>
        /// The fourth level ad unit ID of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_ID_LEVEL_4")] AdUnitIdLevel4 = 36,
        /// <summary>
        /// The fifth level ad unit ID of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_ID_LEVEL_5")] AdUnitIdLevel5 = 38,
        /// <summary>
        /// The sixth level ad unit ID of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_ID_LEVEL_6")] AdUnitIdLevel6 = 40,
        /// <summary>
        /// The seventh level ad unit ID of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_ID_LEVEL_7")] AdUnitIdLevel7 = 42,
        /// <summary>
        /// The eighth level ad unit ID of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_ID_LEVEL_8")] AdUnitIdLevel8 = 44,
        /// <summary>
        /// The ninth level ad unit ID of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_ID_LEVEL_9")] AdUnitIdLevel9 = 46,
        /// <summary>
        /// The top-level ad unit ID of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_ID_TOP_LEVEL")] AdUnitIdTopLevel = 142,
        /// <summary>
        /// The name of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_NAME")] AdUnitName = 26,
        /// <summary>
        /// The full hierarchy of ad unit names where the ad was requested, from
        /// root to leaf, excluding the root ad unit name.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_NAME_ALL_LEVEL")] AdUnitNameAllLevel = 29,
        /// <summary>
        /// The first level ad unit name of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_NAME_LEVEL_1")] AdUnitNameLevel1 = 31,
        /// <summary>
        /// The tenth level ad unit name of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_NAME_LEVEL_10")] AdUnitNameLevel10 = 49,
        /// <summary>
        /// The eleventh level ad unit name of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_NAME_LEVEL_11")] AdUnitNameLevel11 = 51,
        /// <summary>
        /// The twelfth level ad unit name of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_NAME_LEVEL_12")] AdUnitNameLevel12 = 53,
        /// <summary>
        /// The thirteenth level ad unit name of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_NAME_LEVEL_13")] AdUnitNameLevel13 = 55,
        /// <summary>
        /// The fourteenth level ad unit name of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_NAME_LEVEL_14")] AdUnitNameLevel14 = 57,
        /// <summary>
        /// The fifteenth level ad unit name of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_NAME_LEVEL_15")] AdUnitNameLevel15 = 59,
        /// <summary>
        /// The sixteenth level ad unit name of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_NAME_LEVEL_16")] AdUnitNameLevel16 = 61,
        /// <summary>
        /// The second level ad unit name of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_NAME_LEVEL_2")] AdUnitNameLevel2 = 33,
        /// <summary>
        /// The third level ad unit name of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_NAME_LEVEL_3")] AdUnitNameLevel3 = 35,
        /// <summary>
        /// The fourth level ad unit name of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_NAME_LEVEL_4")] AdUnitNameLevel4 = 37,
        /// <summary>
        /// The fifth level ad unit name of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_NAME_LEVEL_5")] AdUnitNameLevel5 = 39,
        /// <summary>
        /// The sixth level ad unit name of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_NAME_LEVEL_6")] AdUnitNameLevel6 = 41,
        /// <summary>
        /// The seventh level ad unit name of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_NAME_LEVEL_7")] AdUnitNameLevel7 = 43,
        /// <summary>
        /// The eighth level ad unit name of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_NAME_LEVEL_8")] AdUnitNameLevel8 = 45,
        /// <summary>
        /// The ninth level ad unit name of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_NAME_LEVEL_9")] AdUnitNameLevel9 = 47,
        /// <summary>
        /// The top-level ad unit name of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_NAME_TOP_LEVEL")] AdUnitNameTopLevel = 143,
        /// <summary>
        /// The reward amount of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_REWARD_AMOUNT")] AdUnitRewardAmount = 63,
        /// <summary>
        /// The reward type of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_REWARD_TYPE")] AdUnitRewardType = 62,
        /// <summary>
        /// The status of the ad unit
        /// </summary>
        [pbr::OriginalName("AD_UNIT_STATUS")] AdUnitStatus = 206,
        /// <summary>
        /// The name of the status of the ad unit
        /// </summary>
        [pbr::OriginalName("AD_UNIT_STATUS_NAME")] AdUnitStatusName = 207,
        /// <summary>
        /// The app version.
        /// </summary>
        [pbr::OriginalName("APP_VERSION")] AppVersion = 392,
        /// <summary>
        /// The ID used in an external system for advertiser identification
        /// </summary>
        [pbr::OriginalName("BACKFILL_ADVERTISER_EXTERNAL_ID")] BackfillAdvertiserExternalId = 349,
        /// <summary>
        /// The ID of an advertiser company assigned to a backfill order
        /// </summary>
        [pbr::OriginalName("BACKFILL_ADVERTISER_ID")] BackfillAdvertiserId = 346,
        /// <summary>
        /// Labels applied to the advertiser
        /// can be used for either competitive exclusion or ad exclusion
        /// </summary>
        [pbr::OriginalName("BACKFILL_ADVERTISER_LABELS")] BackfillAdvertiserLabels = 351,
        /// <summary>
        /// Label ids applied to the advertiser
        /// can be used for either competitive exclusion or ad exclusion
        /// </summary>
        [pbr::OriginalName("BACKFILL_ADVERTISER_LABEL_IDS")] BackfillAdvertiserLabelIds = 350,
        /// <summary>
        /// The name of an advertiser company assigned to a backfill order
        /// </summary>
        [pbr::OriginalName("BACKFILL_ADVERTISER_NAME")] BackfillAdvertiserName = 347,
        /// <summary>
        /// The name of the contact associated with an advertiser company
        /// </summary>
        [pbr::OriginalName("BACKFILL_ADVERTISER_PRIMARY_CONTACT")] BackfillAdvertiserPrimaryContact = 348,
        /// <summary>
        /// Enum value of Backfill creative billing type
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_BILLING_TYPE")] BackfillCreativeBillingType = 378,
        /// <summary>
        /// Localized string value of Backfill creative billing type
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_BILLING_TYPE_NAME")] BackfillCreativeBillingTypeName = 379,
        /// <summary>
        /// Represents the click-through URL of a Backfill creative
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CLICK_THROUGH_URL")] BackfillCreativeClickThroughUrl = 376,
        /// <summary>
        /// The ID of a Backfill creative
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_ID")] BackfillCreativeId = 370,
        /// <summary>
        /// Backfill creative name
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_NAME")] BackfillCreativeName = 371,
        /// <summary>
        /// Third party vendor name of a Backfill creative
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_THIRD_PARTY_VENDOR")] BackfillCreativeThirdPartyVendor = 377,
        /// <summary>
        /// Enum value of Backfill creative type
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_TYPE")] BackfillCreativeType = 374,
        /// <summary>
        /// Localized string name of Backfill creative type
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_TYPE_NAME")] BackfillCreativeTypeName = 375,
        /// <summary>
        /// Whether a Backfill line item is archived.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_ARCHIVED")] BackfillLineItemArchived = 278,
        /// <summary>
        /// Backfill line item comanion delivery option ENUM value.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_COMPANION_DELIVERY_OPTION")] BackfillLineItemCompanionDeliveryOption = 258,
        /// <summary>
        /// Localized Backfill line item comanion delivery option name.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_COMPANION_DELIVERY_OPTION_NAME")] BackfillLineItemCompanionDeliveryOptionName = 259,
        /// <summary>
        /// The computed status of the BackfillLineItem.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_COMPUTED_STATUS")] BackfillLineItemComputedStatus = 296,
        /// <summary>
        /// The localized name of the computed status of the BackfillLineItem.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_COMPUTED_STATUS_NAME")] BackfillLineItemComputedStatusName = 297,
        /// <summary>
        /// The contracted units bought for the Backfill line item.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CONTRACTED_QUANTITY")] BackfillLineItemContractedQuantity = 280,
        /// <summary>
        /// The cost per unit of the Backfill line item.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_COST_PER_UNIT")] BackfillLineItemCostPerUnit = 272,
        /// <summary>
        /// Backfill line item cost type ENUM value.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_COST_TYPE")] BackfillLineItemCostType = 264,
        /// <summary>
        /// Localized Backfill line item cost type name.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_COST_TYPE_NAME")] BackfillLineItemCostTypeName = 265,
        /// <summary>
        /// Represent the end date of a Backfill creative associated with a Backfill
        /// line item
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CREATIVE_END_DATE")] BackfillLineItemCreativeEndDate = 381,
        /// <summary>
        /// The creative rotation type of the BackfillLineItem.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CREATIVE_ROTATION_TYPE")] BackfillLineItemCreativeRotationType = 290,
        /// <summary>
        /// The localized name of the creative rotation type of the BackfillLineItem.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CREATIVE_ROTATION_TYPE_NAME")] BackfillLineItemCreativeRotationTypeName = 291,
        /// <summary>
        /// Represent the start date of a Backfill creative associated with a
        /// Backfill line item
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CREATIVE_START_DATE")] BackfillLineItemCreativeStartDate = 380,
        /// <summary>
        /// The 3 letter currency code of the Backfill line item
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CURRENCY_CODE")] BackfillLineItemCurrencyCode = 288,
        /// <summary>
        /// The progress made for the delivery of the Backfill line item.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_DELIVERY_INDICATOR")] BackfillLineItemDeliveryIndicator = 274,
        /// <summary>
        /// The delivery rate type of the BackfillLineItem.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_DELIVERY_RATE_TYPE")] BackfillLineItemDeliveryRateType = 292,
        /// <summary>
        /// The localized name of the delivery rate type of the BackfillLineItem.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_DELIVERY_RATE_TYPE_NAME")] BackfillLineItemDeliveryRateTypeName = 293,
        /// <summary>
        /// The discount of the BackfillLineItem in whole units in the
        /// BackfillLineItem's currency code, or if unspecified the Network's
        /// currency code.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_DISCOUNT_ABSOLUTE")] BackfillLineItemDiscountAbsolute = 294,
        /// <summary>
        /// The discount of the BackfillLineItem in percentage.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_DISCOUNT_PERCENTAGE")] BackfillLineItemDiscountPercentage = 295,
        /// <summary>
        /// The end date of the Backfill line item.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_END_DATE")] BackfillLineItemEndDate = 267,
        /// <summary>
        /// The end date and time of the Backfill line item.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_END_DATE_TIME")] BackfillLineItemEndDateTime = 269,
        /// <summary>
        /// The ENUM value of the environment a Backfill line item is targeting.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_ENVIRONMENT_TYPE")] BackfillLineItemEnvironmentType = 302,
        /// <summary>
        /// The localized name of the environment a Backfill line item is targeting.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_ENVIRONMENT_TYPE_NAME")] BackfillLineItemEnvironmentTypeName = 257,
        /// <summary>
        /// The deal ID of the Backfill line item. Set for Programmatic Direct
        /// campaigns.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_EXTERNAL_DEAL_ID")] BackfillLineItemExternalDealId = 285,
        /// <summary>
        /// The external ID of the Backfill line item.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_EXTERNAL_ID")] BackfillLineItemExternalId = 273,
        /// <summary>
        /// The frequency cap of the Backfill line item (descriptive string).
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_FREQUENCY_CAP")] BackfillLineItemFrequencyCap = 303,
        /// <summary>
        /// Backfill line item ID.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_ID")] BackfillLineItemId = 298,
        /// <summary>
        /// The application that last modified the Backfill line item.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_LAST_MODIFIED_BY_APP")] BackfillLineItemLastModifiedByApp = 289,
        /// <summary>
        /// The total number of clicks delivered of the lifetime of the Backfill line
        /// item.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_LIFETIME_CLICKS")] BackfillLineItemLifetimeClicks = 283,
        /// <summary>
        /// The total number of impressions delivered over the lifetime of the
        /// Backfill line item.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_LIFETIME_IMPRESSIONS")] BackfillLineItemLifetimeImpressions = 282,
        /// <summary>
        /// The total number of viewable impressions delivered over the lifetime of
        /// the Backfill line item.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_LIFETIME_VIEWABLE_IMPRESSIONS")] BackfillLineItemLifetimeViewableImpressions = 284,
        /// <summary>
        /// Whether or not the Backfill line item is Makegood. Makegood refers to
        /// free inventory offered to buyers to compensate for mistakes or
        /// under-delivery in the original campaigns.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_MAKEGOOD")] BackfillLineItemMakegood = 276,
        /// <summary>
        /// Backfill line item name.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_NAME")] BackfillLineItemName = 299,
        /// <summary>
        /// The cost of booking for the Backfill line item (non-CPD).
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_NON_CPD_BOOKED_REVENUE")] BackfillLineItemNonCpdBookedRevenue = 286,
        /// <summary>
        /// Whether a Backfill line item is eligible for opitimization.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_OPTIMIZABLE")] BackfillLineItemOptimizable = 277,
        /// <summary>
        /// Goal type ENUM value of the primary goal of the Backfill line item.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_PRIMARY_GOAL_TYPE")] BackfillLineItemPrimaryGoalType = 262,
        /// <summary>
        /// Localized goal type name of the primary goal of the Backfill line item.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_PRIMARY_GOAL_TYPE_NAME")] BackfillLineItemPrimaryGoalTypeName = 263,
        /// <summary>
        /// Unit type ENUM value of the primary goal of the Backfill line item.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_PRIMARY_GOAL_UNIT_TYPE")] BackfillLineItemPrimaryGoalUnitType = 260,
        /// <summary>
        /// Localized unit type name of the primary goal of the Backfill line item.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_PRIMARY_GOAL_UNIT_TYPE_NAME")] BackfillLineItemPrimaryGoalUnitTypeName = 261,
        /// <summary>
        /// The priority of this Backfill line item as a value between 1 and 16.
        /// In general, a lower priority means more serving priority for the
        /// Backfill line item.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_PRIORITY")] BackfillLineItemPriority = 266,
        /// <summary>
        /// ENUM value describing the state of inventory reservation for the
        /// BackfillLineItem.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_RESERVATION_STATUS")] BackfillLineItemReservationStatus = 306,
        /// <summary>
        /// Localized string describing the state of inventory reservation for the
        /// BackfillLineItem.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_RESERVATION_STATUS_NAME")] BackfillLineItemReservationStatusName = 307,
        /// <summary>
        /// The start date of the Backfill line item.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_START_DATE")] BackfillLineItemStartDate = 268,
        /// <summary>
        /// The start date and time of the Backfill line item.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_START_DATE_TIME")] BackfillLineItemStartDateTime = 270,
        /// <summary>
        /// Backfill line item type ENUM value.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_TYPE")] BackfillLineItemType = 300,
        /// <summary>
        /// Localized Backfill line item type name.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_TYPE_NAME")] BackfillLineItemTypeName = 301,
        /// <summary>
        /// Whether the Backfill line item end time and end date is set to
        /// effectively never end.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_UNLIMITED_END")] BackfillLineItemUnlimitedEnd = 271,
        /// <summary>
        /// The artificial cost per unit used by the Ad server to help rank
        /// inventory.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_VALUE_COST_PER_UNIT")] BackfillLineItemValueCostPerUnit = 275,
        /// <summary>
        /// The web property code used for dynamic allocation Backfill line items.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_WEB_PROPERTY_CODE")] BackfillLineItemWebPropertyCode = 287,
        /// <summary>
        /// The ID of Backfill creative, includes regular creatives, and master and
        /// companions in case of creative sets
        /// </summary>
        [pbr::OriginalName("BACKFILL_MASTER_COMPANION_CREATIVE_ID")] BackfillMasterCompanionCreativeId = 372,
        /// <summary>
        /// Name of Backfill creative, includes regular creatives, and master and
        /// companions in case of creative sets
        /// </summary>
        [pbr::OriginalName("BACKFILL_MASTER_COMPANION_CREATIVE_NAME")] BackfillMasterCompanionCreativeName = 373,
        /// <summary>
        /// Backfill order agency.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_AGENCY")] BackfillOrderAgency = 313,
        /// <summary>
        /// Backfill order agency ID.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_AGENCY_ID")] BackfillOrderAgencyId = 314,
        /// <summary>
        /// Backfill order booked CPC.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_BOOKED_CPC")] BackfillOrderBookedCpc = 315,
        /// <summary>
        /// Backfill order booked CPM.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_BOOKED_CPM")] BackfillOrderBookedCpm = 316,
        /// <summary>
        /// Backfill order delivery status ENUM value.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_DELIVERY_STATUS")] BackfillOrderDeliveryStatus = 340,
        /// <summary>
        /// Backfill order delivery status localized name.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_DELIVERY_STATUS_NAME")] BackfillOrderDeliveryStatusName = 341,
        /// <summary>
        /// Backfill order end date.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_END_DATE")] BackfillOrderEndDate = 317,
        /// <summary>
        /// Backfill order end date and time.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_END_DATE_TIME")] BackfillOrderEndDateTime = 319,
        /// <summary>
        /// Backfill order external ID.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_EXTERNAL_ID")] BackfillOrderExternalId = 320,
        /// <summary>
        /// Backfill order id.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_ID")] BackfillOrderId = 338,
        /// <summary>
        /// Backfill order labels.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_LABELS")] BackfillOrderLabels = 334,
        /// <summary>
        /// Backfill order labels IDs.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_LABEL_IDS")] BackfillOrderLabelIds = 335,
        /// <summary>
        /// Backfill order lifetime clicks.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_LIFETIME_CLICKS")] BackfillOrderLifetimeClicks = 322,
        /// <summary>
        /// Backfill order lifetime impressions.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_LIFETIME_IMPRESSIONS")] BackfillOrderLifetimeImpressions = 323,
        /// <summary>
        /// Backfill order name.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_NAME")] BackfillOrderName = 339,
        /// <summary>
        /// Backfill order PO number.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_PO_NUMBER")] BackfillOrderPoNumber = 324,
        /// <summary>
        /// Whether the Backfill order is programmatic.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_PROGRAMMATIC")] BackfillOrderProgrammatic = 321,
        /// <summary>
        /// Backfill order sales person.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_SALESPERSON")] BackfillOrderSalesperson = 325,
        /// <summary>
        /// Backfill order secondary sales people.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_SECONDARY_SALESPEOPLE")] BackfillOrderSecondarySalespeople = 329,
        /// <summary>
        /// Backfill order secondary sales people ID.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_SECONDARY_SALESPEOPLE_ID")] BackfillOrderSecondarySalespeopleId = 328,
        /// <summary>
        /// Backfill order secondary traffickers.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_SECONDARY_TRAFFICKERS")] BackfillOrderSecondaryTraffickers = 331,
        /// <summary>
        /// Backfill order secondary traffickers ID.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_SECONDARY_TRAFFICKERS_ID")] BackfillOrderSecondaryTraffickersId = 330,
        /// <summary>
        /// Backfill order start date.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_START_DATE")] BackfillOrderStartDate = 332,
        /// <summary>
        /// Backfill order start date and time.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_START_DATE_TIME")] BackfillOrderStartDateTime = 333,
        /// <summary>
        /// Backfill order trafficker.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_TRAFFICKER")] BackfillOrderTrafficker = 326,
        /// <summary>
        /// Backfill order trafficker ID.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_TRAFFICKER_ID")] BackfillOrderTraffickerId = 327,
        /// <summary>
        /// Whether the Backfill order end time and end date is set to effectively
        /// never end.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_UNLIMITED_END")] BackfillOrderUnlimitedEnd = 318,
        /// <summary>
        /// The ID of the buyer on a backfill programmatic proposal.
        /// </summary>
        [pbr::OriginalName("BACKFILL_PROGRAMMATIC_BUYER_ID")] BackfillProgrammaticBuyerId = 336,
        /// <summary>
        /// The name of the buyer on a backfill programmatic proposal.
        /// </summary>
        [pbr::OriginalName("BACKFILL_PROGRAMMATIC_BUYER_NAME")] BackfillProgrammaticBuyerName = 337,
        /// <summary>
        /// The amount of information about the Publisher's page sent to the buyer
        /// who purchased the impressions.
        /// </summary>
        [pbr::OriginalName("BRANDING_TYPE")] BrandingType = 383,
        /// <summary>
        /// The localized version of branding type, the amount of information about
        /// the Publisher's page sent to the buyer who purchased the impressions.
        /// </summary>
        [pbr::OriginalName("BRANDING_TYPE_NAME")] BrandingTypeName = 384,
        /// <summary>
        /// Browser category.
        /// </summary>
        [pbr::OriginalName("BROWSER_CATEGORY")] BrowserCategory = 119,
        /// <summary>
        /// Browser category name.
        /// </summary>
        [pbr::OriginalName("BROWSER_CATEGORY_NAME")] BrowserCategoryName = 120,
        /// <summary>
        /// The ID of the browser.
        /// </summary>
        [pbr::OriginalName("BROWSER_ID")] BrowserId = 235,
        /// <summary>
        /// The name of the browser.
        /// </summary>
        [pbr::OriginalName("BROWSER_NAME")] BrowserName = 236,
        /// <summary>
        /// Mobile carrier ID.
        /// </summary>
        [pbr::OriginalName("CARRIER_ID")] CarrierId = 369,
        /// <summary>
        /// Name of the mobile carrier.
        /// </summary>
        [pbr::OriginalName("CARRIER_NAME")] CarrierName = 368,
        /// <summary>
        /// The ID of an advertiser, classified by Google, associated with a creative
        /// transacted
        /// </summary>
        [pbr::OriginalName("CLASSIFIED_ADVERTISER_ID")] ClassifiedAdvertiserId = 133,
        /// <summary>
        /// The name of an advertiser, classified by Google, associated with a
        /// creative transacted
        /// </summary>
        [pbr::OriginalName("CLASSIFIED_ADVERTISER_NAME")] ClassifiedAdvertiserName = 134,
        /// <summary>
        /// ID of the brand, as classified by Google,
        /// </summary>
        [pbr::OriginalName("CLASSIFIED_BRAND_ID")] ClassifiedBrandId = 243,
        /// <summary>
        /// Name of the brand, as classified by Google,
        /// </summary>
        [pbr::OriginalName("CLASSIFIED_BRAND_NAME")] ClassifiedBrandName = 244,
        /// <summary>
        /// ID of the video content served.
        /// </summary>
        [pbr::OriginalName("CONTENT_ID")] ContentId = 246,
        /// <summary>
        /// Name of the video content served.
        /// </summary>
        [pbr::OriginalName("CONTENT_NAME")] ContentName = 247,
        /// <summary>
        /// The criteria ID of the country in which the ad served.
        /// </summary>
        [pbr::OriginalName("COUNTRY_ID")] CountryId = 11,
        /// <summary>
        /// The name of the country in which the ad served.
        /// </summary>
        [pbr::OriginalName("COUNTRY_NAME")] CountryName = 12,
        /// <summary>
        /// Enum value of creative billing type
        /// </summary>
        [pbr::OriginalName("CREATIVE_BILLING_TYPE")] CreativeBillingType = 366,
        /// <summary>
        /// Localized string value of creative billing type
        /// </summary>
        [pbr::OriginalName("CREATIVE_BILLING_TYPE_NAME")] CreativeBillingTypeName = 367,
        /// <summary>
        /// Represents the click-through URL of a creative
        /// </summary>
        [pbr::OriginalName("CREATIVE_CLICK_THROUGH_URL")] CreativeClickThroughUrl = 174,
        /// <summary>
        /// The ID of a creative
        /// </summary>
        [pbr::OriginalName("CREATIVE_ID")] CreativeId = 138,
        /// <summary>
        /// Creative name
        /// </summary>
        [pbr::OriginalName("CREATIVE_NAME")] CreativeName = 139,
        /// <summary>
        /// Creative technology ENUM
        /// </summary>
        [pbr::OriginalName("CREATIVE_TECHNOLOGY")] CreativeTechnology = 148,
        /// <summary>
        /// Creative technology locallized name
        /// </summary>
        [pbr::OriginalName("CREATIVE_TECHNOLOGY_NAME")] CreativeTechnologyName = 149,
        /// <summary>
        /// Third party vendor name of a creative
        /// </summary>
        [pbr::OriginalName("CREATIVE_THIRD_PARTY_VENDOR")] CreativeThirdPartyVendor = 361,
        /// <summary>
        /// Enum value of creative type
        /// </summary>
        [pbr::OriginalName("CREATIVE_TYPE")] CreativeType = 344,
        /// <summary>
        /// Localized string name of creative type
        /// </summary>
        [pbr::OriginalName("CREATIVE_TYPE_NAME")] CreativeTypeName = 345,
        /// <summary>
        /// Breaks down reporting data by date.
        /// </summary>
        [pbr::OriginalName("DATE")] Date = 3,
        /// <summary>
        /// Breaks down reporting data by day of the week. Monday is 1 and 7 is
        /// Sunday.
        /// </summary>
        [pbr::OriginalName("DAY_OF_WEEK")] DayOfWeek = 4,
        /// <summary>
        /// Demand channel.
        /// </summary>
        [pbr::OriginalName("DEMAND_CHANNEL")] DemandChannel = 9,
        /// <summary>
        /// Demand channel name.
        /// </summary>
        [pbr::OriginalName("DEMAND_CHANNEL_NAME")] DemandChannelName = 10,
        /// <summary>
        /// Demand subchannel.
        /// </summary>
        [pbr::OriginalName("DEMAND_SUBCHANNEL")] DemandSubchannel = 22,
        /// <summary>
        /// Demand subchannel name.
        /// </summary>
        [pbr::OriginalName("DEMAND_SUBCHANNEL_NAME")] DemandSubchannelName = 23,
        /// <summary>
        /// The device on which an ad was served.
        /// </summary>
        [pbr::OriginalName("DEVICE")] Device = 226,
        /// <summary>
        /// The device category to which an ad is being targeted.
        /// </summary>
        [pbr::OriginalName("DEVICE_CATEGORY")] DeviceCategory = 15,
        /// <summary>
        /// The name of the category of device (smartphone, feature phone, tablet, or
        /// desktop) to which an ad is being targeted.
        /// </summary>
        [pbr::OriginalName("DEVICE_CATEGORY_NAME")] DeviceCategoryName = 16,
        /// <summary>
        /// The localized name of the device on which an ad was served.
        /// </summary>
        [pbr::OriginalName("DEVICE_NAME")] DeviceName = 225,
        /// <summary>
        /// ID of the yield partner as classified by Google
        /// </summary>
        [pbr::OriginalName("EXCHANGE_THIRD_PARTY_COMPANY_ID")] ExchangeThirdPartyCompanyId = 185,
        /// <summary>
        /// Name of the yield partner as classified by Google
        /// </summary>
        [pbr::OriginalName("EXCHANGE_THIRD_PARTY_COMPANY_NAME")] ExchangeThirdPartyCompanyName = 186,
        /// <summary>
        /// The ID of the first look pricing rule.
        /// </summary>
        [pbr::OriginalName("FIRST_LOOK_PRICING_RULE_ID")] FirstLookPricingRuleId = 248,
        /// <summary>
        /// The name of the first look pricing rule.
        /// </summary>
        [pbr::OriginalName("FIRST_LOOK_PRICING_RULE_NAME")] FirstLookPricingRuleName = 249,
        /// <summary>
        /// Breaks down reporting data by hour in one day.
        /// </summary>
        [pbr::OriginalName("HOUR")] Hour = 100,
        /// <summary>
        /// The interaction type of an ad.
        /// </summary>
        [pbr::OriginalName("INTERACTION_TYPE")] InteractionType = 223,
        /// <summary>
        /// The localized name of the interaction type of an ad.
        /// </summary>
        [pbr::OriginalName("INTERACTION_TYPE_NAME")] InteractionTypeName = 224,
        /// <summary>
        /// Inventory format.
        /// The format of the ad unit (e.g, banner) where the ad was requested.
        /// </summary>
        [pbr::OriginalName("INVENTORY_FORMAT")] InventoryFormat = 17,
        /// <summary>
        /// Inventory format name.
        /// The format of the ad unit (e.g, banner) where the ad was requested.
        /// </summary>
        [pbr::OriginalName("INVENTORY_FORMAT_NAME")] InventoryFormatName = 18,
        /// <summary>
        /// Inventory type.
        /// The kind of web page or device where the ad was requested.
        /// </summary>
        [pbr::OriginalName("INVENTORY_TYPE")] InventoryType = 19,
        /// <summary>
        /// Inventory type name.
        /// The kind of web page or device where the ad was requested.
        /// </summary>
        [pbr::OriginalName("INVENTORY_TYPE_NAME")] InventoryTypeName = 20,
        /// <summary>
        /// Whether traffic is Adx Direct.
        /// </summary>
        [pbr::OriginalName("IS_ADX_DIRECT")] IsAdxDirect = 382,
        /// <summary>
        /// Whether traffic is First Look.
        /// </summary>
        [pbr::OriginalName("IS_FIRST_LOOK_DEAL")] IsFirstLookDeal = 401,
        /// <summary>
        /// The Custom Targeting Value ID
        /// </summary>
        [pbr::OriginalName("KEY_VALUES_ID")] KeyValuesId = 214,
        /// <summary>
        /// The Custom Targeting Value formatted like &lt;key_name>=&lt;value_name>
        /// </summary>
        [pbr::OriginalName("KEY_VALUES_NAME")] KeyValuesName = 215,
        /// <summary>
        /// Whether a Line item is archived.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_ARCHIVED")] LineItemArchived = 188,
        /// <summary>
        /// Line item comanion delivery option ENUM value.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_COMPANION_DELIVERY_OPTION")] LineItemCompanionDeliveryOption = 204,
        /// <summary>
        /// Localized line item comanion delivery option name.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_COMPANION_DELIVERY_OPTION_NAME")] LineItemCompanionDeliveryOptionName = 205,
        /// <summary>
        /// The computed status of the LineItem.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_COMPUTED_STATUS")] LineItemComputedStatus = 250,
        /// <summary>
        /// The localized name of the computed status of the LineItem.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_COMPUTED_STATUS_NAME")] LineItemComputedStatusName = 251,
        /// <summary>
        /// The contracted units bought for the Line item.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CONTRACTED_QUANTITY")] LineItemContractedQuantity = 92,
        /// <summary>
        /// The cost per unit of the Line item.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_COST_PER_UNIT")] LineItemCostPerUnit = 85,
        /// <summary>
        /// Line item cost type ENUM value.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_COST_TYPE")] LineItemCostType = 212,
        /// <summary>
        /// Localized line item cost type name.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_COST_TYPE_NAME")] LineItemCostTypeName = 213,
        /// <summary>
        /// Represent the end date of a creative associated with line item
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CREATIVE_END_DATE")] LineItemCreativeEndDate = 176,
        /// <summary>
        /// The creative rotation type of the LineItem.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CREATIVE_ROTATION_TYPE")] LineItemCreativeRotationType = 189,
        /// <summary>
        /// The localized name of the creative rotation type of the LineItem.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CREATIVE_ROTATION_TYPE_NAME")] LineItemCreativeRotationTypeName = 190,
        /// <summary>
        /// Represent the start date of a creative associated with line item
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CREATIVE_START_DATE")] LineItemCreativeStartDate = 175,
        /// <summary>
        /// The 3 letter currency code of the Line Item
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CURRENCY_CODE")] LineItemCurrencyCode = 180,
        /// <summary>
        /// The progress made for the delivery of the Line item.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_DELIVERY_INDICATOR")] LineItemDeliveryIndicator = 87,
        /// <summary>
        /// The delivery rate type of the LineItem.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_DELIVERY_RATE_TYPE")] LineItemDeliveryRateType = 191,
        /// <summary>
        /// The localized name of the delivery rate type of the LineItem.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_DELIVERY_RATE_TYPE_NAME")] LineItemDeliveryRateTypeName = 192,
        /// <summary>
        /// The discount of the LineItem in whole units in the LineItem's currency
        /// code, or if unspecified the Network's currency code.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_DISCOUNT_ABSOLUTE")] LineItemDiscountAbsolute = 195,
        /// <summary>
        /// The discount of the LineItem in percentage.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_DISCOUNT_PERCENTAGE")] LineItemDiscountPercentage = 196,
        /// <summary>
        /// The end date of the Line item.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_END_DATE")] LineItemEndDate = 81,
        /// <summary>
        /// The end date and time of the Line item.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_END_DATE_TIME")] LineItemEndDateTime = 83,
        /// <summary>
        /// The ENUM value of the environment a LineItem is targeting.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_ENVIRONMENT_TYPE")] LineItemEnvironmentType = 201,
        /// <summary>
        /// The localized name of the environment a LineItem is targeting.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_ENVIRONMENT_TYPE_NAME")] LineItemEnvironmentTypeName = 202,
        /// <summary>
        /// The deal ID of the Line item. Set for Programmatic Direct campaigns.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_EXTERNAL_DEAL_ID")] LineItemExternalDealId = 97,
        /// <summary>
        /// The external ID of the Line item.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_EXTERNAL_ID")] LineItemExternalId = 86,
        /// <summary>
        /// The frequency cap of the Line item (descriptive string).
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_FREQUENCY_CAP")] LineItemFrequencyCap = 256,
        /// <summary>
        /// Line item ID.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_ID")] LineItemId = 1,
        /// <summary>
        /// The application that last modified the Line Item.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_LAST_MODIFIED_BY_APP")] LineItemLastModifiedByApp = 181,
        /// <summary>
        /// The total number of clicks delivered of the lifetime of the Line item.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_LIFETIME_CLICKS")] LineItemLifetimeClicks = 95,
        /// <summary>
        /// The total number of impressions delivered over the lifetime of the
        /// Line item.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_LIFETIME_IMPRESSIONS")] LineItemLifetimeImpressions = 94,
        /// <summary>
        /// The total number of viewable impressions delivered over the lifetime of
        /// the Line item.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_LIFETIME_VIEWABLE_IMPRESSIONS")] LineItemLifetimeViewableImpressions = 96,
        /// <summary>
        /// Whether or not the Line item is Makegood. Makegood refers to free
        /// inventory offered to buyers to compensate for mistakes or under-delivery
        /// in the original campaigns.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_MAKEGOOD")] LineItemMakegood = 89,
        /// <summary>
        /// Line item Name.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_NAME")] LineItemName = 2,
        /// <summary>
        /// The cost of booking for the Line item (non-CPD).
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_NON_CPD_BOOKED_REVENUE")] LineItemNonCpdBookedRevenue = 98,
        /// <summary>
        /// Whether a Line item is eligible for opitimization.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_OPTIMIZABLE")] LineItemOptimizable = 90,
        /// <summary>
        /// Goal type ENUM value of the primary goal of the line item.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_PRIMARY_GOAL_TYPE")] LineItemPrimaryGoalType = 210,
        /// <summary>
        /// Localized goal type name of the primary goal of the line item.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_PRIMARY_GOAL_TYPE_NAME")] LineItemPrimaryGoalTypeName = 211,
        /// <summary>
        /// The total number of impressions or clicks that are reserved for a
        /// line item. For line items of type BULK or PRICE_PRIORITY, this represents
        /// the number of remaining impressions reserved. If the line item has an
        /// impression cap goal, this represents the number of impressions or
        /// conversions that the line item will stop serving at if reached.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_PRIMARY_GOAL_UNITS_ABSOLUTE")] LineItemPrimaryGoalUnitsAbsolute = 93,
        /// <summary>
        /// The percentage of impressions or clicks that are reserved for a
        /// line item. For line items of type SPONSORSHIP, this represents the
        /// percentage of available impressions reserved. For line items of type
        /// NETWORK or HOUSE, this represents the percentage of remaining impressions
        /// reserved.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_PRIMARY_GOAL_UNITS_PERCENTAGE")] LineItemPrimaryGoalUnitsPercentage = 396,
        /// <summary>
        /// Unit type ENUM value of the primary goal of the line item.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_PRIMARY_GOAL_UNIT_TYPE")] LineItemPrimaryGoalUnitType = 208,
        /// <summary>
        /// Localized unit type name of the primary goal of the line item.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_PRIMARY_GOAL_UNIT_TYPE_NAME")] LineItemPrimaryGoalUnitTypeName = 209,
        /// <summary>
        /// The priority of this Line item as a value between 1 and 16.
        /// In general, a lower priority means more serving priority for the
        /// Line item.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_PRIORITY")] LineItemPriority = 24,
        /// <summary>
        /// ENUM value describing the state of inventory reservation for the
        /// LineItem.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_RESERVATION_STATUS")] LineItemReservationStatus = 304,
        /// <summary>
        /// Localized string describing the state of inventory reservation for the
        /// LineItem.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_RESERVATION_STATUS_NAME")] LineItemReservationStatusName = 305,
        /// <summary>
        /// The start date of the Line item.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_START_DATE")] LineItemStartDate = 82,
        /// <summary>
        /// The start date and time of the Line item.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_START_DATE_TIME")] LineItemStartDateTime = 84,
        /// <summary>
        /// Line item type ENUM value.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_TYPE")] LineItemType = 193,
        /// <summary>
        /// Localized line item type name.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_TYPE_NAME")] LineItemTypeName = 194,
        /// <summary>
        /// Whether the Line item end time and end date is set to effectively never
        /// end.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_UNLIMITED_END")] LineItemUnlimitedEnd = 187,
        /// <summary>
        /// The artificial cost per unit used by the Ad server to help rank
        /// inventory.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_VALUE_COST_PER_UNIT")] LineItemValueCostPerUnit = 88,
        /// <summary>
        /// The web property code used for dynamic allocation Line Items.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_WEB_PROPERTY_CODE")] LineItemWebPropertyCode = 179,
        /// <summary>
        /// The ID of creative, includes regular creatives, and master and companions
        /// in case of creative sets
        /// </summary>
        [pbr::OriginalName("MASTER_COMPANION_CREATIVE_ID")] MasterCompanionCreativeId = 140,
        /// <summary>
        /// Name of creative, includes regular creatives, and master and companions
        /// in case of creative sets
        /// </summary>
        [pbr::OriginalName("MASTER_COMPANION_CREATIVE_NAME")] MasterCompanionCreativeName = 141,
        /// <summary>
        /// Whether the mobile app is free.
        /// </summary>
        [pbr::OriginalName("MOBILE_APP_FREE")] MobileAppFree = 128,
        /// <summary>
        /// URL of app icon for the mobile app.
        /// </summary>
        [pbr::OriginalName("MOBILE_APP_ICON_URL")] MobileAppIconUrl = 129,
        /// <summary>
        /// The ID of the Mobile App.
        /// </summary>
        [pbr::OriginalName("MOBILE_APP_ID")] MobileAppId = 123,
        /// <summary>
        /// The name of the mobile app.
        /// </summary>
        [pbr::OriginalName("MOBILE_APP_NAME")] MobileAppName = 127,
        /// <summary>
        /// Ownership status of the mobile app.
        /// </summary>
        [pbr::OriginalName("MOBILE_APP_OWNERSHIP_STATUS")] MobileAppOwnershipStatus = 311,
        /// <summary>
        /// Ownership status of the mobile app.
        /// </summary>
        [pbr::OriginalName("MOBILE_APP_OWNERSHIP_STATUS_NAME")] MobileAppOwnershipStatusName = 312,
        /// <summary>
        /// The App Store of the mobile app.
        /// </summary>
        [pbr::OriginalName("MOBILE_APP_STORE")] MobileAppStore = 125,
        /// <summary>
        /// The localized name of the mobile app store.
        /// </summary>
        [pbr::OriginalName("MOBILE_APP_STORE_NAME")] MobileAppStoreName = 245,
        /// <summary>
        /// Mobile inventory type.
        /// Identifies whether a mobile ad came from a regular web page, an AMP web
        /// page, or a mobile app.
        /// Values match the Inventory type dimension available in the Overview Home
        /// dashboard. Note: Video takes precedence over any other value, for
        /// example, if there is an in-stream video impression on a desktop device,
        /// it will be attributed to in-stream video and not desktop web.
        /// </summary>
        [pbr::OriginalName("MOBILE_INVENTORY_TYPE")] MobileInventoryType = 99,
        /// <summary>
        /// Mobile inventory type name.
        /// Identifies whether a mobile ad came from a regular web page, an AMP web
        /// page, or a mobile app.
        /// </summary>
        [pbr::OriginalName("MOBILE_INVENTORY_TYPE_NAME")] MobileInventoryTypeName = 21,
        /// <summary>
        /// SDK version of the mobile device.
        /// </summary>
        [pbr::OriginalName("MOBILE_SDK_VERSION_NAME")] MobileSdkVersionName = 130,
        /// <summary>
        /// Breaks down reporting data by month and year.
        /// </summary>
        [pbr::OriginalName("MONTH_YEAR")] MonthYear = 6,
        /// <summary>
        /// Native ad format ID.
        /// </summary>
        [pbr::OriginalName("NATIVE_AD_FORMAT_ID")] NativeAdFormatId = 255,
        /// <summary>
        /// Native ad format name.
        /// </summary>
        [pbr::OriginalName("NATIVE_AD_FORMAT_NAME")] NativeAdFormatName = 254,
        /// <summary>
        /// Native style ID.
        /// </summary>
        [pbr::OriginalName("NATIVE_STYLE_ID")] NativeStyleId = 253,
        /// <summary>
        /// Native style name.
        /// </summary>
        [pbr::OriginalName("NATIVE_STYLE_NAME")] NativeStyleName = 252,
        /// <summary>
        /// Operating system category.
        /// </summary>
        [pbr::OriginalName("OPERATING_SYSTEM_CATEGORY")] OperatingSystemCategory = 117,
        /// <summary>
        /// Operating system category name.
        /// </summary>
        [pbr::OriginalName("OPERATING_SYSTEM_CATEGORY_NAME")] OperatingSystemCategoryName = 118,
        /// <summary>
        /// ID of the operating system version.
        /// </summary>
        [pbr::OriginalName("OPERATING_SYSTEM_VERSION_ID")] OperatingSystemVersionId = 238,
        /// <summary>
        /// Details of the operating system, including version.
        /// </summary>
        [pbr::OriginalName("OPERATING_SYSTEM_VERSION_NAME")] OperatingSystemVersionName = 237,
        /// <summary>
        /// Order agency.
        /// </summary>
        [pbr::OriginalName("ORDER_AGENCY")] OrderAgency = 150,
        /// <summary>
        /// Order agency ID.
        /// </summary>
        [pbr::OriginalName("ORDER_AGENCY_ID")] OrderAgencyId = 151,
        /// <summary>
        /// Order booked CPC.
        /// </summary>
        [pbr::OriginalName("ORDER_BOOKED_CPC")] OrderBookedCpc = 152,
        /// <summary>
        /// Order booked CPM.
        /// </summary>
        [pbr::OriginalName("ORDER_BOOKED_CPM")] OrderBookedCpm = 153,
        /// <summary>
        /// Order delivery status ENUM value.
        /// </summary>
        [pbr::OriginalName("ORDER_DELIVERY_STATUS")] OrderDeliveryStatus = 231,
        /// <summary>
        /// Order delivery status localized name.
        /// </summary>
        [pbr::OriginalName("ORDER_DELIVERY_STATUS_NAME")] OrderDeliveryStatusName = 239,
        /// <summary>
        /// Order end date.
        /// </summary>
        [pbr::OriginalName("ORDER_END_DATE")] OrderEndDate = 154,
        /// <summary>
        /// Order end date and time.
        /// </summary>
        [pbr::OriginalName("ORDER_END_DATE_TIME")] OrderEndDateTime = 155,
        /// <summary>
        /// Order external ID.
        /// </summary>
        [pbr::OriginalName("ORDER_EXTERNAL_ID")] OrderExternalId = 156,
        /// <summary>
        /// Order id.
        /// </summary>
        [pbr::OriginalName("ORDER_ID")] OrderId = 7,
        /// <summary>
        /// Order labels.
        /// </summary>
        [pbr::OriginalName("ORDER_LABELS")] OrderLabels = 170,
        /// <summary>
        /// Order labels IDs.
        /// </summary>
        [pbr::OriginalName("ORDER_LABEL_IDS")] OrderLabelIds = 171,
        /// <summary>
        /// Order lifetime clicks.
        /// </summary>
        [pbr::OriginalName("ORDER_LIFETIME_CLICKS")] OrderLifetimeClicks = 158,
        /// <summary>
        /// Order lifetime impressions.
        /// </summary>
        [pbr::OriginalName("ORDER_LIFETIME_IMPRESSIONS")] OrderLifetimeImpressions = 159,
        /// <summary>
        /// Order name.
        /// </summary>
        [pbr::OriginalName("ORDER_NAME")] OrderName = 8,
        /// <summary>
        /// Order PO number.
        /// </summary>
        [pbr::OriginalName("ORDER_PO_NUMBER")] OrderPoNumber = 160,
        /// <summary>
        /// Whether the Order is programmatic.
        /// </summary>
        [pbr::OriginalName("ORDER_PROGRAMMATIC")] OrderProgrammatic = 157,
        /// <summary>
        /// Order sales person.
        /// </summary>
        [pbr::OriginalName("ORDER_SALESPERSON")] OrderSalesperson = 161,
        /// <summary>
        /// Order secondary sales people.
        /// </summary>
        [pbr::OriginalName("ORDER_SECONDARY_SALESPEOPLE")] OrderSecondarySalespeople = 164,
        /// <summary>
        /// Order secondary sales people ID.
        /// </summary>
        [pbr::OriginalName("ORDER_SECONDARY_SALESPEOPLE_ID")] OrderSecondarySalespeopleId = 165,
        /// <summary>
        /// Order secondary traffickers.
        /// </summary>
        [pbr::OriginalName("ORDER_SECONDARY_TRAFFICKERS")] OrderSecondaryTraffickers = 166,
        /// <summary>
        /// Order secondary traffickers ID.
        /// </summary>
        [pbr::OriginalName("ORDER_SECONDARY_TRAFFICKERS_ID")] OrderSecondaryTraffickersId = 167,
        /// <summary>
        /// Order start date.
        /// </summary>
        [pbr::OriginalName("ORDER_START_DATE")] OrderStartDate = 168,
        /// <summary>
        /// Order start date and time.
        /// </summary>
        [pbr::OriginalName("ORDER_START_DATE_TIME")] OrderStartDateTime = 169,
        /// <summary>
        /// Order trafficker.
        /// </summary>
        [pbr::OriginalName("ORDER_TRAFFICKER")] OrderTrafficker = 162,
        /// <summary>
        /// Order trafficker ID.
        /// </summary>
        [pbr::OriginalName("ORDER_TRAFFICKER_ID")] OrderTraffickerId = 163,
        /// <summary>
        /// Whether the Order end time and end date is set to effectively never
        /// end.
        /// </summary>
        [pbr::OriginalName("ORDER_UNLIMITED_END")] OrderUnlimitedEnd = 203,
        /// <summary>
        /// Placement ID
        /// </summary>
        [pbr::OriginalName("PLACEMENT_ID")] PlacementId = 113,
        /// <summary>
        /// The full list of placement IDs associated with the ad unit.
        /// </summary>
        [pbr::OriginalName("PLACEMENT_ID_ALL")] PlacementIdAll = 144,
        /// <summary>
        /// Placement name
        /// </summary>
        [pbr::OriginalName("PLACEMENT_NAME")] PlacementName = 114,
        /// <summary>
        /// The full list of placement names associated with the ad unit.
        /// </summary>
        [pbr::OriginalName("PLACEMENT_NAME_ALL")] PlacementNameAll = 145,
        /// <summary>
        /// Placement status ENUM value
        /// </summary>
        [pbr::OriginalName("PLACEMENT_STATUS")] PlacementStatus = 362,
        /// <summary>
        /// The full list of placement status ENUM values associated with the ad
        /// unit.
        /// </summary>
        [pbr::OriginalName("PLACEMENT_STATUS_ALL")] PlacementStatusAll = 363,
        /// <summary>
        /// Localized placement status name.
        /// </summary>
        [pbr::OriginalName("PLACEMENT_STATUS_NAME")] PlacementStatusName = 364,
        /// <summary>
        /// The full list of localized placement status names associated with the ad
        /// unit.
        /// </summary>
        [pbr::OriginalName("PLACEMENT_STATUS_NAME_ALL")] PlacementStatusNameAll = 365,
        /// <summary>
        /// The ID of the buyer on a programmatic proposal.
        /// </summary>
        [pbr::OriginalName("PROGRAMMATIC_BUYER_ID")] ProgrammaticBuyerId = 240,
        /// <summary>
        /// The name of the buyer on a programmatic proposal.
        /// </summary>
        [pbr::OriginalName("PROGRAMMATIC_BUYER_NAME")] ProgrammaticBuyerName = 241,
        /// <summary>
        /// Programmatic channel.
        /// The type of transaction that occurred in Ad Exchange.
        /// </summary>
        [pbr::OriginalName("PROGRAMMATIC_CHANNEL")] ProgrammaticChannel = 13,
        /// <summary>
        /// Programmatic channel name.
        /// The type of transaction that occurred in Ad Exchange.
        /// </summary>
        [pbr::OriginalName("PROGRAMMATIC_CHANNEL_NAME")] ProgrammaticChannelName = 14,
        /// <summary>
        /// The size of a rendered creative, It can differ with the creative's size
        /// if a creative is shown in an ad slot of a different size.
        /// </summary>
        [pbr::OriginalName("RENDERED_CREATIVE_SIZE")] RenderedCreativeSize = 343,
        /// <summary>
        /// Inventory Requested Ad Sizes dimension
        /// </summary>
        [pbr::OriginalName("REQUESTED_AD_SIZES")] RequestedAdSizes = 352,
        /// <summary>
        /// Request type ENUM
        /// </summary>
        [pbr::OriginalName("REQUEST_TYPE")] RequestType = 146,
        /// <summary>
        /// Request type locallized name
        /// </summary>
        [pbr::OriginalName("REQUEST_TYPE_NAME")] RequestTypeName = 147,
        /// <summary>
        /// Indicates if a request was eligible for server-side unwrapping.
        /// </summary>
        [pbr::OriginalName("SERVER_SIDE_UNWRAPPING_ELIGIBLE")] ServerSideUnwrappingEligible = 597,
        /// <summary>
        /// Information about domain or subdomains.
        /// </summary>
        [pbr::OriginalName("SITE")] Site = 387,
        /// <summary>
        /// The ID of the browser, device or other environment into which a line item
        /// or creative was served.
        /// </summary>
        [pbr::OriginalName("TARGETING_ID")] TargetingId = 232,
        /// <summary>
        /// Information about the browser, device and other environments into which
        /// a line item or creative was served.
        /// </summary>
        [pbr::OriginalName("TARGETING_NAME")] TargetingName = 233,
        /// <summary>
        /// The way in which advertisers targeted their ads.
        /// </summary>
        [pbr::OriginalName("TARGETING_TYPE")] TargetingType = 385,
        /// <summary>
        /// The localized name of the way in which advertisers targeted their ads.
        /// </summary>
        [pbr::OriginalName("TARGETING_TYPE_NAME")] TargetingTypeName = 386,
        /// <summary>
        /// Inventory Traffic source dimension
        /// </summary>
        [pbr::OriginalName("TRAFFIC_SOURCE")] TrafficSource = 388,
        /// <summary>
        /// Inventory Traffic source dimension name
        /// </summary>
        [pbr::OriginalName("TRAFFIC_SOURCE_NAME")] TrafficSourceName = 389,
        /// <summary>
        /// Unified pricing rule ID dimension
        /// </summary>
        [pbr::OriginalName("UNIFIED_PRICING_RULE_ID")] UnifiedPricingRuleId = 393,
        /// <summary>
        /// Unified pricing rule name dimension
        /// </summary>
        [pbr::OriginalName("UNIFIED_PRICING_RULE_NAME")] UnifiedPricingRuleName = 394,
        /// <summary>
        /// The video placement enum as defined by ADCOM 1.0-202303.
        /// </summary>
        [pbr::OriginalName("VIDEO_PLCMT")] VideoPlcmt = 172,
        /// <summary>
        /// The localized name of the video placement as defined by ADCOM 1.0-202303.
        /// </summary>
        [pbr::OriginalName("VIDEO_PLCMT_NAME")] VideoPlcmtName = 173,
        /// <summary>
        /// Breaks down reporting data by week of the year.
        /// </summary>
        [pbr::OriginalName("WEEK")] Week = 5,
        /// <summary>
        /// Name of the company within a yield group
        /// </summary>
        [pbr::OriginalName("YIELD_GROUP_BUYER_NAME")] YieldGroupBuyerName = 184,
        /// <summary>
        /// ID of the group of ad networks or exchanges used for Mediation and Open
        /// Bidding
        /// </summary>
        [pbr::OriginalName("YIELD_GROUP_ID")] YieldGroupId = 182,
        /// <summary>
        /// Name of the group of ad networks or exchanges used for Mediation and Open
        /// Bidding
        /// </summary>
        [pbr::OriginalName("YIELD_GROUP_NAME")] YieldGroupName = 183,
        /// <summary>
        /// Custom field option ID for Line Item with custom field ID equal to the ID
        /// in index 0 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_0_OPTION_ID")] LineItemCustomField0OptionId = 10000,
        /// <summary>
        /// Custom field option ID for Line Item with custom field ID equal to the ID
        /// in index 1 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_1_OPTION_ID")] LineItemCustomField1OptionId = 10001,
        /// <summary>
        /// Custom field option ID for Line Item with custom field ID equal to the ID
        /// in index 2 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_2_OPTION_ID")] LineItemCustomField2OptionId = 10002,
        /// <summary>
        /// Custom field option ID for Line Item with custom field ID equal to the ID
        /// in index 3 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_3_OPTION_ID")] LineItemCustomField3OptionId = 10003,
        /// <summary>
        /// Custom field option ID for Line Item with custom field ID equal to the ID
        /// in index 4 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_4_OPTION_ID")] LineItemCustomField4OptionId = 10004,
        /// <summary>
        /// Custom field option ID for Line Item with custom field ID equal to the ID
        /// in index 5 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_5_OPTION_ID")] LineItemCustomField5OptionId = 10005,
        /// <summary>
        /// Custom field option ID for Line Item with custom field ID equal to the ID
        /// in index 6 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_6_OPTION_ID")] LineItemCustomField6OptionId = 10006,
        /// <summary>
        /// Custom field option ID for Line Item with custom field ID equal to the ID
        /// in index 7 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_7_OPTION_ID")] LineItemCustomField7OptionId = 10007,
        /// <summary>
        /// Custom field option ID for Line Item with custom field ID equal to the ID
        /// in index 8 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_8_OPTION_ID")] LineItemCustomField8OptionId = 10008,
        /// <summary>
        /// Custom field option ID for Line Item with custom field ID equal to the ID
        /// in index 9 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_9_OPTION_ID")] LineItemCustomField9OptionId = 10009,
        /// <summary>
        /// Custom field option ID for Line Item with custom field ID equal to the ID
        /// in index 10 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_10_OPTION_ID")] LineItemCustomField10OptionId = 10010,
        /// <summary>
        /// Custom field option ID for Line Item with custom field ID equal to the ID
        /// in index 11 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_11_OPTION_ID")] LineItemCustomField11OptionId = 10011,
        /// <summary>
        /// Custom field option ID for Line Item with custom field ID equal to the ID
        /// in index 12 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_12_OPTION_ID")] LineItemCustomField12OptionId = 10012,
        /// <summary>
        /// Custom field option ID for Line Item with custom field ID equal to the ID
        /// in index 13 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_13_OPTION_ID")] LineItemCustomField13OptionId = 10013,
        /// <summary>
        /// Custom field option ID for Line Item with custom field ID equal to the ID
        /// in index 14 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_14_OPTION_ID")] LineItemCustomField14OptionId = 10014,
        /// <summary>
        /// Custom field value for Line Item with custom field ID equal to the ID
        /// in index 0 of `ReportDefinition.line_item_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 0 is of
        /// type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_0_VALUE")] LineItemCustomField0Value = 11000,
        /// <summary>
        /// Custom field value for Line Item with custom field ID equal to the ID
        /// in index 1 of `ReportDefinition.line_item_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 1 is of
        /// type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_1_VALUE")] LineItemCustomField1Value = 11001,
        /// <summary>
        /// Custom field value for Line Item with custom field ID equal to the ID
        /// in index 2 of `ReportDefinition.line_item_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 2 is of
        /// type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_2_VALUE")] LineItemCustomField2Value = 11002,
        /// <summary>
        /// Custom field value for Line Item with custom field ID equal to the ID
        /// in index 3 of `ReportDefinition.line_item_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 3 is of
        /// type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_3_VALUE")] LineItemCustomField3Value = 11003,
        /// <summary>
        /// Custom field value for Line Item with custom field ID equal to the ID
        /// in index 4 of `ReportDefinition.line_item_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 4 is of
        /// type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_4_VALUE")] LineItemCustomField4Value = 11004,
        /// <summary>
        /// Custom field value for Line Item with custom field ID equal to the ID
        /// in index 5 of `ReportDefinition.line_item_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 5 is of
        /// type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_5_VALUE")] LineItemCustomField5Value = 11005,
        /// <summary>
        /// Custom field value for Line Item with custom field ID equal to the ID
        /// in index 6 of `ReportDefinition.line_item_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 6 is of
        /// type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_6_VALUE")] LineItemCustomField6Value = 11006,
        /// <summary>
        /// Custom field value for Line Item with custom field ID equal to the ID
        /// in index 7 of `ReportDefinition.line_item_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 7 is of
        /// type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_7_VALUE")] LineItemCustomField7Value = 11007,
        /// <summary>
        /// Custom field value for Line Item with custom field ID equal to the ID
        /// in index 8 of `ReportDefinition.line_item_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 8 is of
        /// type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_8_VALUE")] LineItemCustomField8Value = 11008,
        /// <summary>
        /// Custom field value for Line Item with custom field ID equal to the ID
        /// in index 9 of `ReportDefinition.line_item_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 9 is of
        /// type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_9_VALUE")] LineItemCustomField9Value = 11009,
        /// <summary>
        /// Custom field value for Line Item with custom field ID equal to the ID
        /// in index 10 of `ReportDefinition.line_item_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 10 is of
        /// type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_10_VALUE")] LineItemCustomField10Value = 11010,
        /// <summary>
        /// Custom field value for Line Item with custom field ID equal to the ID
        /// in index 11 of `ReportDefinition.line_item_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 11 is of
        /// type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_11_VALUE")] LineItemCustomField11Value = 11011,
        /// <summary>
        /// Custom field value for Line Item with custom field ID equal to the ID
        /// in index 12 of `ReportDefinition.line_item_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 12 is of
        /// type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_12_VALUE")] LineItemCustomField12Value = 11012,
        /// <summary>
        /// Custom field value for Line Item with custom field ID equal to the ID
        /// in index 13 of `ReportDefinition.line_item_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 13 is of
        /// type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_13_VALUE")] LineItemCustomField13Value = 11013,
        /// <summary>
        /// Custom field value for Line Item with custom field ID equal to the ID
        /// in index 14 of `ReportDefinition.line_item_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 14 is of
        /// type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_14_VALUE")] LineItemCustomField14Value = 11014,
        /// <summary>
        /// Custom field option ID for Order with custom field ID equal to the ID
        /// in index 0 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_0_OPTION_ID")] OrderCustomField0OptionId = 12000,
        /// <summary>
        /// Custom field option ID for Order with custom field ID equal to the ID
        /// in index 1 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_1_OPTION_ID")] OrderCustomField1OptionId = 12001,
        /// <summary>
        /// Custom field option ID for Order with custom field ID equal to the ID
        /// in index 2 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_2_OPTION_ID")] OrderCustomField2OptionId = 12002,
        /// <summary>
        /// Custom field option ID for Order with custom field ID equal to the ID
        /// in index 3 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_3_OPTION_ID")] OrderCustomField3OptionId = 12003,
        /// <summary>
        /// Custom field option ID for Order with custom field ID equal to the ID
        /// in index 4 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_4_OPTION_ID")] OrderCustomField4OptionId = 12004,
        /// <summary>
        /// Custom field option ID for Order with custom field ID equal to the ID
        /// in index 5 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_5_OPTION_ID")] OrderCustomField5OptionId = 12005,
        /// <summary>
        /// Custom field option ID for Order with custom field ID equal to the ID
        /// in index 6 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_6_OPTION_ID")] OrderCustomField6OptionId = 12006,
        /// <summary>
        /// Custom field option ID for Order with custom field ID equal to the ID
        /// in index 7 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_7_OPTION_ID")] OrderCustomField7OptionId = 12007,
        /// <summary>
        /// Custom field option ID for Order with custom field ID equal to the ID
        /// in index 8 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_8_OPTION_ID")] OrderCustomField8OptionId = 12008,
        /// <summary>
        /// Custom field option ID for Order with custom field ID equal to the ID
        /// in index 9 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_9_OPTION_ID")] OrderCustomField9OptionId = 12009,
        /// <summary>
        /// Custom field option ID for Order with custom field ID equal to the ID
        /// in index 10 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_10_OPTION_ID")] OrderCustomField10OptionId = 12010,
        /// <summary>
        /// Custom field option ID for Order with custom field ID equal to the ID
        /// in index 11 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_11_OPTION_ID")] OrderCustomField11OptionId = 12011,
        /// <summary>
        /// Custom field option ID for Order with custom field ID equal to the ID
        /// in index 12 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_12_OPTION_ID")] OrderCustomField12OptionId = 12012,
        /// <summary>
        /// Custom field option ID for Order with custom field ID equal to the ID
        /// in index 13 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_13_OPTION_ID")] OrderCustomField13OptionId = 12013,
        /// <summary>
        /// Custom field option ID for Order with custom field ID equal to the ID
        /// in index 14 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_14_OPTION_ID")] OrderCustomField14OptionId = 12014,
        /// <summary>
        /// Custom field value for Order with custom field ID equal to the ID
        /// in index 0 of `ReportDefinition.order_custom_field_ids`. Treats the value
        /// as a string. Can only be used if the custom field at index 0 is of type
        /// STRING.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_0_VALUE")] OrderCustomField0Value = 13000,
        /// <summary>
        /// Custom field value for Order with custom field ID equal to the ID
        /// in index 1 of `ReportDefinition.order_custom_field_ids`. Treats the value
        /// as a string. Can only be used if the custom field at index 1 is of type
        /// STRING.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_1_VALUE")] OrderCustomField1Value = 13001,
        /// <summary>
        /// Custom field value for Order with custom field ID equal to the ID
        /// in index 2 of `ReportDefinition.order_custom_field_ids`. Treats the value
        /// as a string. Can only be used if the custom field at index 2 is of type
        /// STRING.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_2_VALUE")] OrderCustomField2Value = 13002,
        /// <summary>
        /// Custom field value for Order with custom field ID equal to the ID
        /// in index 3 of `ReportDefinition.order_custom_field_ids`. Treats the value
        /// as a string. Can only be used if the custom field at index 3 is of type
        /// STRING.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_3_VALUE")] OrderCustomField3Value = 13003,
        /// <summary>
        /// Custom field value for Order with custom field ID equal to the ID
        /// in index 4 of `ReportDefinition.order_custom_field_ids`. Treats the value
        /// as a string. Can only be used if the custom field at index 4 is of type
        /// STRING.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_4_VALUE")] OrderCustomField4Value = 13004,
        /// <summary>
        /// Custom field value for Order with custom field ID equal to the ID
        /// in index 5 of `ReportDefinition.order_custom_field_ids`. Treats the value
        /// as a string. Can only be used if the custom field at index 5 is of type
        /// STRING.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_5_VALUE")] OrderCustomField5Value = 13005,
        /// <summary>
        /// Custom field value for Order with custom field ID equal to the ID
        /// in index 6 of `ReportDefinition.order_custom_field_ids`. Treats the value
        /// as a string. Can only be used if the custom field at index 6 is of type
        /// STRING.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_6_VALUE")] OrderCustomField6Value = 13006,
        /// <summary>
        /// Custom field value for Order with custom field ID equal to the ID
        /// in index 7 of `ReportDefinition.order_custom_field_ids`. Treats the value
        /// as a string. Can only be used if the custom field at index 7 is of type
        /// STRING.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_7_VALUE")] OrderCustomField7Value = 13007,
        /// <summary>
        /// Custom field value for Order with custom field ID equal to the ID
        /// in index 8 of `ReportDefinition.order_custom_field_ids`. Treats the value
        /// as a string. Can only be used if the custom field at index 8 is of type
        /// STRING.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_8_VALUE")] OrderCustomField8Value = 13008,
        /// <summary>
        /// Custom field value for Order with custom field ID equal to the ID
        /// in index 9 of `ReportDefinition.order_custom_field_ids`. Treats the value
        /// as a string. Can only be used if the custom field at index 9 is of type
        /// STRING.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_9_VALUE")] OrderCustomField9Value = 13009,
        /// <summary>
        /// Custom field value for Order with custom field ID equal to the ID
        /// in index 10 of `ReportDefinition.order_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 10 is of
        /// type STRING.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_10_VALUE")] OrderCustomField10Value = 13010,
        /// <summary>
        /// Custom field value for Order with custom field ID equal to the ID
        /// in index 11 of `ReportDefinition.order_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 11 is of
        /// type STRING.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_11_VALUE")] OrderCustomField11Value = 13011,
        /// <summary>
        /// Custom field value for Order with custom field ID equal to the ID
        /// in index 12 of `ReportDefinition.order_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 12 is of
        /// type STRING.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_12_VALUE")] OrderCustomField12Value = 13012,
        /// <summary>
        /// Custom field value for Order with custom field ID equal to the ID
        /// in index 13 of `ReportDefinition.order_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 13 is of
        /// type STRING.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_13_VALUE")] OrderCustomField13Value = 13013,
        /// <summary>
        /// Custom field value for Order with custom field ID equal to the ID
        /// in index 14 of `ReportDefinition.order_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 14 is of
        /// type STRING.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_14_VALUE")] OrderCustomField14Value = 13014,
        /// <summary>
        /// Custom field option ID for Creative with custom field ID equal to the ID
        /// in index 0 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_0_OPTION_ID")] CreativeCustomField0OptionId = 14000,
        /// <summary>
        /// Custom field option ID for Creative with custom field ID equal to the ID
        /// in index 1 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_1_OPTION_ID")] CreativeCustomField1OptionId = 14001,
        /// <summary>
        /// Custom field option ID for Creative with custom field ID equal to the ID
        /// in index 2 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_2_OPTION_ID")] CreativeCustomField2OptionId = 14002,
        /// <summary>
        /// Custom field option ID for Creative with custom field ID equal to the ID
        /// in index 3 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_3_OPTION_ID")] CreativeCustomField3OptionId = 14003,
        /// <summary>
        /// Custom field option ID for Creative with custom field ID equal to the ID
        /// in index 4 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_4_OPTION_ID")] CreativeCustomField4OptionId = 14004,
        /// <summary>
        /// Custom field option ID for Creative with custom field ID equal to the ID
        /// in index 5 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_5_OPTION_ID")] CreativeCustomField5OptionId = 14005,
        /// <summary>
        /// Custom field option ID for Creative with custom field ID equal to the ID
        /// in index 6 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_6_OPTION_ID")] CreativeCustomField6OptionId = 14006,
        /// <summary>
        /// Custom field option ID for Creative with custom field ID equal to the ID
        /// in index 7 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_7_OPTION_ID")] CreativeCustomField7OptionId = 14007,
        /// <summary>
        /// Custom field option ID for Creative with custom field ID equal to the ID
        /// in index 8 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_8_OPTION_ID")] CreativeCustomField8OptionId = 14008,
        /// <summary>
        /// Custom field option ID for Creative with custom field ID equal to the ID
        /// in index 9 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_9_OPTION_ID")] CreativeCustomField9OptionId = 14009,
        /// <summary>
        /// Custom field option ID for Creative with custom field ID equal to the ID
        /// in index 10 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_10_OPTION_ID")] CreativeCustomField10OptionId = 14010,
        /// <summary>
        /// Custom field option ID for Creative with custom field ID equal to the ID
        /// in index 11 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_11_OPTION_ID")] CreativeCustomField11OptionId = 14011,
        /// <summary>
        /// Custom field option ID for Creative with custom field ID equal to the ID
        /// in index 12 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_12_OPTION_ID")] CreativeCustomField12OptionId = 14012,
        /// <summary>
        /// Custom field option ID for Creative with custom field ID equal to the ID
        /// in index 13 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_13_OPTION_ID")] CreativeCustomField13OptionId = 14013,
        /// <summary>
        /// Custom field option ID for Creative with custom field ID equal to the ID
        /// in index 14 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_14_OPTION_ID")] CreativeCustomField14OptionId = 14014,
        /// <summary>
        /// Custom field value for Creative with custom field ID equal to the ID
        /// in index 0 of `ReportDefinition.creative_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 0 is of
        /// type STRING.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_0_VALUE")] CreativeCustomField0Value = 15000,
        /// <summary>
        /// Custom field value for Creative with custom field ID equal to the ID
        /// in index 1 of `ReportDefinition.creative_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 1 is of
        /// type STRING.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_1_VALUE")] CreativeCustomField1Value = 15001,
        /// <summary>
        /// Custom field value for Creative with custom field ID equal to the ID
        /// in index 2 of `ReportDefinition.creative_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 2 is of
        /// type STRING.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_2_VALUE")] CreativeCustomField2Value = 15002,
        /// <summary>
        /// Custom field value for Creative with custom field ID equal to the ID
        /// in index 3 of `ReportDefinition.creative_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 3 is of
        /// type STRING.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_3_VALUE")] CreativeCustomField3Value = 15003,
        /// <summary>
        /// Custom field value for Creative with custom field ID equal to the ID
        /// in index 4 of `ReportDefinition.creative_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 4 is of
        /// type STRING.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_4_VALUE")] CreativeCustomField4Value = 15004,
        /// <summary>
        /// Custom field value for Creative with custom field ID equal to the ID
        /// in index 5 of `ReportDefinition.creative_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 5 is of
        /// type STRING.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_5_VALUE")] CreativeCustomField5Value = 15005,
        /// <summary>
        /// Custom field value for Creative with custom field ID equal to the ID
        /// in index 6 of `ReportDefinition.creative_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 6 is of
        /// type STRING.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_6_VALUE")] CreativeCustomField6Value = 15006,
        /// <summary>
        /// Custom field value for Creative with custom field ID equal to the ID
        /// in index 7 of `ReportDefinition.creative_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 7 is of
        /// type STRING.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_7_VALUE")] CreativeCustomField7Value = 15007,
        /// <summary>
        /// Custom field value for Creative with custom field ID equal to the ID
        /// in index 8 of `ReportDefinition.creative_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 8 is of
        /// type STRING.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_8_VALUE")] CreativeCustomField8Value = 15008,
        /// <summary>
        /// Custom field value for Creative with custom field ID equal to the ID
        /// in index 9 of `ReportDefinition.creative_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 9 is of
        /// type STRING.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_9_VALUE")] CreativeCustomField9Value = 15009,
        /// <summary>
        /// Custom field value for Creative with custom field ID equal to the ID
        /// in index 10 of `ReportDefinition.creative_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 10 is of
        /// type STRING.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_10_VALUE")] CreativeCustomField10Value = 15010,
        /// <summary>
        /// Custom field value for Creative with custom field ID equal to the ID
        /// in index 11 of `ReportDefinition.creative_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 11 is of
        /// type STRING.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_11_VALUE")] CreativeCustomField11Value = 15011,
        /// <summary>
        /// Custom field value for Creative with custom field ID equal to the ID
        /// in index 12 of `ReportDefinition.creative_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 12 is of
        /// type STRING.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_12_VALUE")] CreativeCustomField12Value = 15012,
        /// <summary>
        /// Custom field value for Creative with custom field ID equal to the ID
        /// in index 13 of `ReportDefinition.creative_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 13 is of
        /// type STRING.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_13_VALUE")] CreativeCustomField13Value = 15013,
        /// <summary>
        /// Custom field value for Creative with custom field ID equal to the ID
        /// in index 14 of `ReportDefinition.creative_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 14 is of
        /// type STRING.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_14_VALUE")] CreativeCustomField14Value = 15014,
        /// <summary>
        /// Custom field option ID for Backfill line item with custom field ID equal
        /// to the ID in index 0 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_0_OPTION_ID")] BackfillLineItemCustomField0OptionId = 16000,
        /// <summary>
        /// Custom field option ID for Backfill line item with custom field ID equal
        /// to the ID in index 1 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_1_OPTION_ID")] BackfillLineItemCustomField1OptionId = 16001,
        /// <summary>
        /// Custom field option ID for Backfill line item with custom field ID equal
        /// to the ID in index 2 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_2_OPTION_ID")] BackfillLineItemCustomField2OptionId = 16002,
        /// <summary>
        /// Custom field option ID for Backfill line item with custom field ID equal
        /// to the ID in index 3 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_3_OPTION_ID")] BackfillLineItemCustomField3OptionId = 16003,
        /// <summary>
        /// Custom field option ID for Backfill line item with custom field ID equal
        /// to the ID in index 4 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_4_OPTION_ID")] BackfillLineItemCustomField4OptionId = 16004,
        /// <summary>
        /// Custom field option ID for Backfill line item with custom field ID equal
        /// to the ID in index 5 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_5_OPTION_ID")] BackfillLineItemCustomField5OptionId = 16005,
        /// <summary>
        /// Custom field option ID for Backfill line item with custom field ID equal
        /// to the ID in index 6 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_6_OPTION_ID")] BackfillLineItemCustomField6OptionId = 16006,
        /// <summary>
        /// Custom field option ID for Backfill line item with custom field ID equal
        /// to the ID in index 7 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_7_OPTION_ID")] BackfillLineItemCustomField7OptionId = 16007,
        /// <summary>
        /// Custom field option ID for Backfill line item with custom field ID equal
        /// to the ID in index 8 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_8_OPTION_ID")] BackfillLineItemCustomField8OptionId = 16008,
        /// <summary>
        /// Custom field option ID for Backfill line item with custom field ID equal
        /// to the ID in index 9 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_9_OPTION_ID")] BackfillLineItemCustomField9OptionId = 16009,
        /// <summary>
        /// Custom field option ID for Backfill line item with custom field ID equal
        /// to the ID in index 10 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_10_OPTION_ID")] BackfillLineItemCustomField10OptionId = 16010,
        /// <summary>
        /// Custom field option ID for Backfill line item with custom field ID equal
        /// to the ID in index 11 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_11_OPTION_ID")] BackfillLineItemCustomField11OptionId = 16011,
        /// <summary>
        /// Custom field option ID for Backfill line item with custom field ID equal
        /// to the ID in index 12 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_12_OPTION_ID")] BackfillLineItemCustomField12OptionId = 16012,
        /// <summary>
        /// Custom field option ID for Backfill line item with custom field ID equal
        /// to the ID in index 13 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_13_OPTION_ID")] BackfillLineItemCustomField13OptionId = 16013,
        /// <summary>
        /// Custom field option ID for Backfill line item with custom field ID equal
        /// to the ID in index 14 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_14_OPTION_ID")] BackfillLineItemCustomField14OptionId = 16014,
        /// <summary>
        /// Custom field value for Backfill line item with custom field ID equal to
        /// the ID in index 0 of `ReportDefinition.line_item_custom_field_ids`.
        /// Treats the value as a string. Can only be used if the custom field at
        /// index 0 is of type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_0_VALUE")] BackfillLineItemCustomField0Value = 17000,
        /// <summary>
        /// Custom field value for Backfill line item with custom field ID equal to
        /// the ID in index 1 of `ReportDefinition.line_item_custom_field_ids`.
        /// Treats the value as a string. Can only be used if the custom field at
        /// index 1 is of type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_1_VALUE")] BackfillLineItemCustomField1Value = 17001,
        /// <summary>
        /// Custom field value for Backfill line item with custom field ID equal to
        /// the ID in index 2 of `ReportDefinition.line_item_custom_field_ids`.
        /// Treats the value as a string. Can only be used if the custom field at
        /// index 2 is of type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_2_VALUE")] BackfillLineItemCustomField2Value = 17002,
        /// <summary>
        /// Custom field value for Backfill line item with custom field ID equal to
        /// the ID in index 3 of `ReportDefinition.line_item_custom_field_ids`.
        /// Treats the value as a string. Can only be used if the custom field at
        /// index 3 is of type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_3_VALUE")] BackfillLineItemCustomField3Value = 17003,
        /// <summary>
        /// Custom field value for Backfill line item with custom field ID equal to
        /// the ID in index 4 of `ReportDefinition.line_item_custom_field_ids`.
        /// Treats the value as a string. Can only be used if the custom field at
        /// index 4 is of type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_4_VALUE")] BackfillLineItemCustomField4Value = 17004,
        /// <summary>
        /// Custom field value for Backfill line item with custom field ID equal to
        /// the ID in index 5 of `ReportDefinition.line_item_custom_field_ids`.
        /// Treats the value as a string. Can only be used if the custom field at
        /// index 5 is of type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_5_VALUE")] BackfillLineItemCustomField5Value = 17005,
        /// <summary>
        /// Custom field value for Backfill line item with custom field ID equal to
        /// the ID in index 6 of `ReportDefinition.line_item_custom_field_ids`.
        /// Treats the value as a string. Can only be used if the custom field at
        /// index 6 is of type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_6_VALUE")] BackfillLineItemCustomField6Value = 17006,
        /// <summary>
        /// Custom field value for Backfill line item with custom field ID equal to
        /// the ID in index 7 of `ReportDefinition.line_item_custom_field_ids`.
        /// Treats the value as a string. Can only be used if the custom field at
        /// index 7 is of type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_7_VALUE")] BackfillLineItemCustomField7Value = 17007,
        /// <summary>
        /// Custom field value for Backfill line item with custom field ID equal to
        /// the ID in index 8 of `ReportDefinition.line_item_custom_field_ids`.
        /// Treats the value as a string. Can only be used if the custom field at
        /// index 8 is of type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_8_VALUE")] BackfillLineItemCustomField8Value = 17008,
        /// <summary>
        /// Custom field value for Backfill line item with custom field ID equal to
        /// the ID in index 9 of `ReportDefinition.line_item_custom_field_ids`.
        /// Treats the value as a string. Can only be used if the custom field at
        /// index 9 is of type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_9_VALUE")] BackfillLineItemCustomField9Value = 17009,
        /// <summary>
        /// Custom field value for Backfill line item with custom field ID equal to
        /// the ID in index 10 of `ReportDefinition.line_item_custom_field_ids`.
        /// Treats the value as a string. Can only be used if the custom field at
        /// index 10 is of type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_10_VALUE")] BackfillLineItemCustomField10Value = 17010,
        /// <summary>
        /// Custom field value for Backfill line item with custom field ID equal to
        /// the ID in index 11 of `ReportDefinition.line_item_custom_field_ids`.
        /// Treats the value as a string. Can only be used if the custom field at
        /// index 11 is of type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_11_VALUE")] BackfillLineItemCustomField11Value = 17011,
        /// <summary>
        /// Custom field value for Backfill line item with custom field ID equal to
        /// the ID in index 12 of `ReportDefinition.line_item_custom_field_ids`.
        /// Treats the value as a string. Can only be used if the custom field at
        /// index 12 is of type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_12_VALUE")] BackfillLineItemCustomField12Value = 17012,
        /// <summary>
        /// Custom field value for Backfill line item with custom field ID equal to
        /// the ID in index 13 of `ReportDefinition.line_item_custom_field_ids`.
        /// Treats the value as a string. Can only be used if the custom field at
        /// index 13 is of type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_13_VALUE")] BackfillLineItemCustomField13Value = 17013,
        /// <summary>
        /// Custom field value for Backfill line item with custom field ID equal to
        /// the ID in index 14 of `ReportDefinition.line_item_custom_field_ids`.
        /// Treats the value as a string. Can only be used if the custom field at
        /// index 14 is of type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_14_VALUE")] BackfillLineItemCustomField14Value = 17014,
        /// <summary>
        /// Custom field option ID for Backfill order with custom field ID equal to
        /// the ID in index 0 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_0_OPTION_ID")] BackfillOrderCustomField0OptionId = 18000,
        /// <summary>
        /// Custom field option ID for Backfill order with custom field ID equal to
        /// the ID in index 1 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_1_OPTION_ID")] BackfillOrderCustomField1OptionId = 18001,
        /// <summary>
        /// Custom field option ID for Backfill order with custom field ID equal to
        /// the ID in index 2 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_2_OPTION_ID")] BackfillOrderCustomField2OptionId = 18002,
        /// <summary>
        /// Custom field option ID for Backfill order with custom field ID equal to
        /// the ID in index 3 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_3_OPTION_ID")] BackfillOrderCustomField3OptionId = 18003,
        /// <summary>
        /// Custom field option ID for Backfill order with custom field ID equal to
        /// the ID in index 4 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_4_OPTION_ID")] BackfillOrderCustomField4OptionId = 18004,
        /// <summary>
        /// Custom field option ID for Backfill order with custom field ID equal to
        /// the ID in index 5 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_5_OPTION_ID")] BackfillOrderCustomField5OptionId = 18005,
        /// <summary>
        /// Custom field option ID for Backfill order with custom field ID equal to
        /// the ID in index 6 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_6_OPTION_ID")] BackfillOrderCustomField6OptionId = 18006,
        /// <summary>
        /// Custom field option ID for Backfill order with custom field ID equal to
        /// the ID in index 7 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_7_OPTION_ID")] BackfillOrderCustomField7OptionId = 18007,
        /// <summary>
        /// Custom field option ID for Backfill order with custom field ID equal to
        /// the ID in index 8 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_8_OPTION_ID")] BackfillOrderCustomField8OptionId = 18008,
        /// <summary>
        /// Custom field option ID for Backfill order with custom field ID equal to
        /// the ID in index 9 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_9_OPTION_ID")] BackfillOrderCustomField9OptionId = 18009,
        /// <summary>
        /// Custom field option ID for Backfill order with custom field ID equal to
        /// the ID in index 10 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_10_OPTION_ID")] BackfillOrderCustomField10OptionId = 18010,
        /// <summary>
        /// Custom field option ID for Backfill order with custom field ID equal to
        /// the ID in index 11 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_11_OPTION_ID")] BackfillOrderCustomField11OptionId = 18011,
        /// <summary>
        /// Custom field option ID for Backfill order with custom field ID equal to
        /// the ID in index 12 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_12_OPTION_ID")] BackfillOrderCustomField12OptionId = 18012,
        /// <summary>
        /// Custom field option ID for Backfill order with custom field ID equal to
        /// the ID in index 13 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_13_OPTION_ID")] BackfillOrderCustomField13OptionId = 18013,
        /// <summary>
        /// Custom field option ID for Backfill order with custom field ID equal to
        /// the ID in index 14 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_14_OPTION_ID")] BackfillOrderCustomField14OptionId = 18014,
        /// <summary>
        /// Custom field value for Backfill order with custom field ID equal to the
        /// ID
        /// in index 0 of `ReportDefinition.order_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 0 is of
        /// type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_0_VALUE")] BackfillOrderCustomField0Value = 19000,
        /// <summary>
        /// Custom field value for Backfill order with custom field ID equal to the
        /// ID in index 1 of `ReportDefinition.order_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 1 is of
        /// type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_1_VALUE")] BackfillOrderCustomField1Value = 19001,
        /// <summary>
        /// Custom field value for Backfill order with custom field ID equal to the
        /// ID in index 2 of `ReportDefinition.order_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 2 is of
        /// type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_2_VALUE")] BackfillOrderCustomField2Value = 19002,
        /// <summary>
        /// Custom field value for Backfill order with custom field ID equal to the
        /// ID in index 3 of `ReportDefinition.order_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 3 is of
        /// type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_3_VALUE")] BackfillOrderCustomField3Value = 19003,
        /// <summary>
        /// Custom field value for Backfill order with custom field ID equal to the
        /// ID in index 4 of `ReportDefinition.order_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 4 is of
        /// type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_4_VALUE")] BackfillOrderCustomField4Value = 19004,
        /// <summary>
        /// Custom field value for Backfill order with custom field ID equal to the
        /// ID in index 5 of `ReportDefinition.order_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 5 is of
        /// type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_5_VALUE")] BackfillOrderCustomField5Value = 19005,
        /// <summary>
        /// Custom field value for Backfill order with custom field ID equal to the
        /// ID in index 6 of `ReportDefinition.order_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 6 is of
        /// type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_6_VALUE")] BackfillOrderCustomField6Value = 19006,
        /// <summary>
        /// Custom field value for Backfill order with custom field ID equal to the
        /// ID in index 7 of `ReportDefinition.order_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 7 is of
        /// type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_7_VALUE")] BackfillOrderCustomField7Value = 19007,
        /// <summary>
        /// Custom field value for Backfill order with custom field ID equal to the
        /// ID in index 8 of `ReportDefinition.order_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 8 is of
        /// type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_8_VALUE")] BackfillOrderCustomField8Value = 19008,
        /// <summary>
        /// Custom field value for Backfill order with custom field ID equal to the
        /// ID in index 9 of `ReportDefinition.order_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 9 is of
        /// type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_9_VALUE")] BackfillOrderCustomField9Value = 19009,
        /// <summary>
        /// Custom field value for Backfill order with custom field ID equal to the
        /// ID in index 10 of `ReportDefinition.order_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 10 is of
        /// type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_10_VALUE")] BackfillOrderCustomField10Value = 19010,
        /// <summary>
        /// Custom field value for Backfill order with custom field ID equal to the
        /// ID in index 11 of `ReportDefinition.order_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 11 is of
        /// type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_11_VALUE")] BackfillOrderCustomField11Value = 19011,
        /// <summary>
        /// Custom field value for Backfill order with custom field ID equal to the
        /// ID in index 12 of `ReportDefinition.order_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 12 is of
        /// type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_12_VALUE")] BackfillOrderCustomField12Value = 19012,
        /// <summary>
        /// Custom field value for Backfill order with custom field ID equal to the
        /// ID in index 13 of `ReportDefinition.order_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 13 is of
        /// type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_13_VALUE")] BackfillOrderCustomField13Value = 19013,
        /// <summary>
        /// Custom field value for Backfill order with custom field ID equal to the
        /// ID in index 14 of `ReportDefinition.order_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 14 is of
        /// type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_14_VALUE")] BackfillOrderCustomField14Value = 19014,
        /// <summary>
        /// Custom field option ID for Backfill creative with custom field ID equal
        /// to the ID in index 0 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_0_OPTION_ID")] BackfillCreativeCustomField0OptionId = 20000,
        /// <summary>
        /// Custom field option ID for Backfill creative with custom field ID equal
        /// to the ID in index 1 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_1_OPTION_ID")] BackfillCreativeCustomField1OptionId = 20001,
        /// <summary>
        /// Custom field option ID for Backfill creative with custom field ID equal
        /// to the ID in index 2 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_2_OPTION_ID")] BackfillCreativeCustomField2OptionId = 20002,
        /// <summary>
        /// Custom field option ID for Backfill creative with custom field ID equal
        /// to the ID in index 3 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_3_OPTION_ID")] BackfillCreativeCustomField3OptionId = 20003,
        /// <summary>
        /// Custom field option ID for Backfill creative with custom field ID equal
        /// to the ID in index 4 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_4_OPTION_ID")] BackfillCreativeCustomField4OptionId = 20004,
        /// <summary>
        /// Custom field option ID for Backfill creative with custom field ID equal
        /// to the ID in index 5 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_5_OPTION_ID")] BackfillCreativeCustomField5OptionId = 20005,
        /// <summary>
        /// Custom field option ID for Backfill creative with custom field ID equal
        /// to the ID in index 6 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_6_OPTION_ID")] BackfillCreativeCustomField6OptionId = 20006,
        /// <summary>
        /// Custom field option ID for Backfill creative with custom field ID equal
        /// to the ID in index 7 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_7_OPTION_ID")] BackfillCreativeCustomField7OptionId = 20007,
        /// <summary>
        /// Custom field option ID for Backfill creative with custom field ID equal
        /// to the ID in index 8 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_8_OPTION_ID")] BackfillCreativeCustomField8OptionId = 20008,
        /// <summary>
        /// Custom field option ID for Backfill creative with custom field ID equal
        /// to the ID in index 9 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_9_OPTION_ID")] BackfillCreativeCustomField9OptionId = 20009,
        /// <summary>
        /// Custom field option ID for Backfill creative with custom field ID equal
        /// to the ID in index 10 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_10_OPTION_ID")] BackfillCreativeCustomField10OptionId = 20010,
        /// <summary>
        /// Custom field option ID for Backfill creative with custom field ID equal
        /// to the ID in index 11 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_11_OPTION_ID")] BackfillCreativeCustomField11OptionId = 20011,
        /// <summary>
        /// Custom field option ID for Backfill creative with custom field ID equal
        /// to the ID in index 12 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_12_OPTION_ID")] BackfillCreativeCustomField12OptionId = 20012,
        /// <summary>
        /// Custom field option ID for Backfill creative with custom field ID equal
        /// to the ID in index 13 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_13_OPTION_ID")] BackfillCreativeCustomField13OptionId = 20013,
        /// <summary>
        /// Custom field option ID for Backfill creative with custom field ID equal
        /// to the ID in index 14 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_14_OPTION_ID")] BackfillCreativeCustomField14OptionId = 20014,
        /// <summary>
        /// Custom field value for Backfill creative with custom field ID equal to
        /// the ID
        /// in index 0 of `ReportDefinition.creative_custom_field_ids`. Treats the
        /// value as a string. Can only be used if the custom field at index 0 is of
        /// type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_0_VALUE")] BackfillCreativeCustomField0Value = 21000,
        /// <summary>
        /// Custom field value for Backfill creative with custom field ID equal to
        /// the ID in index 1 of `ReportDefinition.creative_custom_field_ids`. Treats
        /// the value as a string. Can only be used if the custom field at index 1 is
        /// of type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_1_VALUE")] BackfillCreativeCustomField1Value = 21001,
        /// <summary>
        /// Custom field value for Backfill creative with custom field ID equal to
        /// the ID in index 2 of `ReportDefinition.creative_custom_field_ids`. Treats
        /// the value as a string. Can only be used if the custom field at index 2 is
        /// of type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_2_VALUE")] BackfillCreativeCustomField2Value = 21002,
        /// <summary>
        /// Custom field value for Backfill creative with custom field ID equal to
        /// the ID in index 3 of `ReportDefinition.creative_custom_field_ids`. Treats
        /// the value as a string. Can only be used if the custom field at index 3 is
        /// of type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_3_VALUE")] BackfillCreativeCustomField3Value = 21003,
        /// <summary>
        /// Custom field value for Backfill creative with custom field ID equal to
        /// the ID in index 4 of `ReportDefinition.creative_custom_field_ids`. Treats
        /// the value as a string. Can only be used if the custom field at index 4 is
        /// of type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_4_VALUE")] BackfillCreativeCustomField4Value = 21004,
        /// <summary>
        /// Custom field value for Backfill creative with custom field ID equal to
        /// the ID in index 5 of `ReportDefinition.creative_custom_field_ids`. Treats
        /// the value as a string. Can only be used if the custom field at index 5 is
        /// of type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_5_VALUE")] BackfillCreativeCustomField5Value = 21005,
        /// <summary>
        /// Custom field value for Backfill creative with custom field ID equal to
        /// the ID in index 6 of `ReportDefinition.creative_custom_field_ids`. Treats
        /// the value as a string. Can only be used if the custom field at index 6 is
        /// of type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_6_VALUE")] BackfillCreativeCustomField6Value = 21006,
        /// <summary>
        /// Custom field value for Backfill creative with custom field ID equal to
        /// the ID in index 7 of `ReportDefinition.creative_custom_field_ids`. Treats
        /// the value as a string. Can only be used if the custom field at index 7 is
        /// of type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_7_VALUE")] BackfillCreativeCustomField7Value = 21007,
        /// <summary>
        /// Custom field value for Backfill creative with custom field ID equal to
        /// the ID in index 8 of `ReportDefinition.creative_custom_field_ids`. Treats
        /// the value as a string. Can only be used if the custom field at index 8 is
        /// of type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_8_VALUE")] BackfillCreativeCustomField8Value = 21008,
        /// <summary>
        /// Custom field value for Backfill creative with custom field ID equal to
        /// the ID in index 9 of `ReportDefinition.creative_custom_field_ids`. Treats
        /// the value as a string. Can only be used if the custom field at index 9 is
        /// of type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_9_VALUE")] BackfillCreativeCustomField9Value = 21009,
        /// <summary>
        /// Custom field value for Backfill creative with custom field ID equal to
        /// the ID in index 10 of `ReportDefinition.creative_custom_field_ids`.
        /// Treats the value as a string. Can only be used if the custom field at
        /// index 10 is of type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_10_VALUE")] BackfillCreativeCustomField10Value = 21010,
        /// <summary>
        /// Custom field value for Backfill creative with custom field ID equal to
        /// the ID in index 11 of `ReportDefinition.creative_custom_field_ids`.
        /// Treats the value as a string. Can only be used if the custom field at
        /// index 11 is of type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_11_VALUE")] BackfillCreativeCustomField11Value = 21011,
        /// <summary>
        /// Custom field value for Backfill creative with custom field ID equal to
        /// the ID in index 12 of `ReportDefinition.creative_custom_field_ids`.
        /// Treats the value as a string. Can only be used if the custom field at
        /// index 12 is of type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_12_VALUE")] BackfillCreativeCustomField12Value = 21012,
        /// <summary>
        /// Custom field value for Backfill creative with custom field ID equal to
        /// the ID in index 13 of `ReportDefinition.creative_custom_field_ids`.
        /// Treats the value as a string. Can only be used if the custom field at
        /// index 13 is of type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_13_VALUE")] BackfillCreativeCustomField13Value = 21013,
        /// <summary>
        /// Custom field value for Backfill creative with custom field ID equal to
        /// the ID in index 14 of `ReportDefinition.creative_custom_field_ids`.
        /// Treats the value as a string. Can only be used if the custom field at
        /// index 14 is of type STRING or DROPDOWN.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_14_VALUE")] BackfillCreativeCustomField14Value = 21014,
        /// <summary>
        /// Custom Dimension Value ID for Custom Dimension with key equal to the key
        /// in index 0 of `ReportDefinition.custom_dimension_key_ids`.
        /// </summary>
        [pbr::OriginalName("CUSTOM_DIMENSION_0_VALUE_ID")] CustomDimension0ValueId = 100000,
        /// <summary>
        /// Custom Dimension Value ID for Custom Dimension with key equal to the key
        /// in index 1 of `ReportDefinition.custom_dimension_key_ids`.
        /// </summary>
        [pbr::OriginalName("CUSTOM_DIMENSION_1_VALUE_ID")] CustomDimension1ValueId = 100001,
        /// <summary>
        /// Custom Dimension Value ID for Custom Dimension with key equal to the key
        /// in index 2 of `ReportDefinition.custom_dimension_key_ids`.
        /// </summary>
        [pbr::OriginalName("CUSTOM_DIMENSION_2_VALUE_ID")] CustomDimension2ValueId = 100002,
        /// <summary>
        /// Custom Dimension Value ID for Custom Dimension with key equal to the key
        /// in index 3 of `ReportDefinition.custom_dimension_key_ids`.
        /// </summary>
        [pbr::OriginalName("CUSTOM_DIMENSION_3_VALUE_ID")] CustomDimension3ValueId = 100003,
        /// <summary>
        /// Custom Dimension Value ID for Custom Dimension with key equal to the key
        /// in index 4 of `ReportDefinition.custom_dimension_key_ids`.
        /// </summary>
        [pbr::OriginalName("CUSTOM_DIMENSION_4_VALUE_ID")] CustomDimension4ValueId = 100004,
        /// <summary>
        /// Custom Dimension Value ID for Custom Dimension with key equal to the key
        /// in index 5 of `ReportDefinition.custom_dimension_key_ids`.
        /// </summary>
        [pbr::OriginalName("CUSTOM_DIMENSION_5_VALUE_ID")] CustomDimension5ValueId = 100005,
        /// <summary>
        /// Custom Dimension Value ID for Custom Dimension with key equal to the key
        /// in index 6 of `ReportDefinition.custom_dimension_key_ids`.
        /// </summary>
        [pbr::OriginalName("CUSTOM_DIMENSION_6_VALUE_ID")] CustomDimension6ValueId = 100006,
        /// <summary>
        /// Custom Dimension Value ID for Custom Dimension with key equal to the key
        /// in index 9 of `ReportDefinition.custom_dimension_key_ids`.
        /// </summary>
        [pbr::OriginalName("CUSTOM_DIMENSION_7_VALUE_ID")] CustomDimension7ValueId = 100007,
        /// <summary>
        /// Custom Dimension Value ID for Custom Dimension with key equal to the key
        /// in index 8 of `ReportDefinition.custom_dimension_key_ids`.
        /// </summary>
        [pbr::OriginalName("CUSTOM_DIMENSION_8_VALUE_ID")] CustomDimension8ValueId = 100008,
        /// <summary>
        /// Custom Dimension Value ID for Custom Dimension with key equal to the key
        /// in index 9 of `ReportDefinition.custom_dimension_key_ids`.
        /// </summary>
        [pbr::OriginalName("CUSTOM_DIMENSION_9_VALUE_ID")] CustomDimension9ValueId = 100009,
        /// <summary>
        /// Custom Dimension Value name for Custom Dimension with key equal to the
        /// id in index 0 of `ReportDefinition.custom_dimension_key_ids`.
        /// </summary>
        [pbr::OriginalName("CUSTOM_DIMENSION_0_VALUE")] CustomDimension0Value = 101000,
        /// <summary>
        /// Custom Dimension Value name for Custom Dimension with key equal to the
        /// id in index 1 of `ReportDefinition.custom_dimension_key_ids`.
        /// </summary>
        [pbr::OriginalName("CUSTOM_DIMENSION_1_VALUE")] CustomDimension1Value = 101001,
        /// <summary>
        /// Custom Dimension Value name for Custom Dimension with key equal to the
        /// id in index 2 of `ReportDefinition.custom_dimension_key_ids`.
        /// </summary>
        [pbr::OriginalName("CUSTOM_DIMENSION_2_VALUE")] CustomDimension2Value = 101002,
        /// <summary>
        /// Custom Dimension Value name for Custom Dimension with key equal to the
        /// id in index 3 of `ReportDefinition.custom_dimension_key_ids`.
        /// </summary>
        [pbr::OriginalName("CUSTOM_DIMENSION_3_VALUE")] CustomDimension3Value = 101003,
        /// <summary>
        /// Custom Dimension Value name for Custom Dimension with key equal to the
        /// id in index 4 of `ReportDefinition.custom_dimension_key_ids`.
        /// </summary>
        [pbr::OriginalName("CUSTOM_DIMENSION_4_VALUE")] CustomDimension4Value = 101004,
        /// <summary>
        /// Custom Dimension Value name for Custom Dimension with key equal to the
        /// id in index 5 of `ReportDefinition.custom_dimension_key_ids`.
        /// </summary>
        [pbr::OriginalName("CUSTOM_DIMENSION_5_VALUE")] CustomDimension5Value = 101005,
        /// <summary>
        /// Custom Dimension Value name for Custom Dimension with key equal to the
        /// id in index 6 of `ReportDefinition.custom_dimension_key_ids`.
        /// </summary>
        [pbr::OriginalName("CUSTOM_DIMENSION_6_VALUE")] CustomDimension6Value = 101006,
        /// <summary>
        /// Custom Dimension Value name for Custom Dimension with key equal to the
        /// id in index 7 of `ReportDefinition.custom_dimension_key_ids`.
        /// </summary>
        [pbr::OriginalName("CUSTOM_DIMENSION_7_VALUE")] CustomDimension7Value = 101007,
        /// <summary>
        /// Custom Dimension Value name for Custom Dimension with key equal to the
        /// id in index 8 of `ReportDefinition.custom_dimension_key_ids`.
        /// </summary>
        [pbr::OriginalName("CUSTOM_DIMENSION_8_VALUE")] CustomDimension8Value = 101008,
        /// <summary>
        /// Custom Dimension Value name for Custom Dimension with key equal to the
        /// id in index 9 of `ReportDefinition.custom_dimension_key_ids`.
        /// </summary>
        [pbr::OriginalName("CUSTOM_DIMENSION_9_VALUE")] CustomDimension9Value = 101009,
      }

      /// <summary>
      /// Reporting metrics.
      /// </summary>
      public enum Metric {
        /// <summary>
        /// Default value. This value is unused.
        /// </summary>
        [pbr::OriginalName("METRIC_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Active View total average time in seconds that specific impressions are
        /// reported as being viewable.
        /// </summary>
        [pbr::OriginalName("ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME")] ActiveViewAverageViewableTime = 61,
        /// <summary>
        /// Total number of impressions that were eligible to measure viewability.
        /// </summary>
        [pbr::OriginalName("ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS")] ActiveViewEligibleImpressions = 58,
        /// <summary>
        /// The total number of impressions that were sampled and measured by active
        /// view.
        /// </summary>
        [pbr::OriginalName("ACTIVE_VIEW_MEASURABLE_IMPRESSIONS")] ActiveViewMeasurableImpressions = 57,
        /// <summary>
        /// The percentage of total impressions that were measurable by active view
        /// (out of all the total impressions sampled for active view).
        /// </summary>
        [pbr::OriginalName("ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE")] ActiveViewMeasurableImpressionsRate = 60,
        /// <summary>
        /// The total number of impressions viewed on the user's screen.
        /// </summary>
        [pbr::OriginalName("ACTIVE_VIEW_VIEWABLE_IMPRESSIONS")] ActiveViewViewableImpressions = 56,
        /// <summary>
        /// The percentage of total impressions viewed on the user's screen (out of
        /// the total impressions measurable by active view).
        /// </summary>
        [pbr::OriginalName("ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE")] ActiveViewViewableImpressionsRate = 59,
        /// <summary>
        /// Active View AdSense average time in seconds that specific impressions are
        /// reported as being viewable.
        /// </summary>
        [pbr::OriginalName("ADSENSE_ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME")] AdsenseActiveViewAverageViewableTime = 73,
        /// <summary>
        /// Total number of impressions delivered by AdSense that were eligible to
        /// measure viewability.
        /// </summary>
        [pbr::OriginalName("ADSENSE_ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS")] AdsenseActiveViewEligibleImpressions = 70,
        /// <summary>
        /// The number of impressions delivered by AdSense that were sampled, and
        /// measurable by active view.
        /// </summary>
        [pbr::OriginalName("ADSENSE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS")] AdsenseActiveViewMeasurableImpressions = 69,
        /// <summary>
        /// The percentage of impressions delivered by AdSense that were measurable
        /// by active view (out of all AdSense impressions sampled for active view).
        /// </summary>
        [pbr::OriginalName("ADSENSE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE")] AdsenseActiveViewMeasurableImpressionsRate = 72,
        /// <summary>
        /// The number of impressions delivered by AdSense viewed on the user's
        /// screen.
        /// </summary>
        [pbr::OriginalName("ADSENSE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS")] AdsenseActiveViewViewableImpressions = 68,
        /// <summary>
        /// The percentage of impressions delivered by AdSense viewed on the user's
        /// screen (out of AdSense impressions measurable by active view).
        /// </summary>
        [pbr::OriginalName("ADSENSE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE")] AdsenseActiveViewViewableImpressionsRate = 71,
        /// <summary>
        /// The average effective cost-per-thousand-impressions earned from the ads
        /// delivered by AdSense through line item dynamic allocation.
        /// </summary>
        [pbr::OriginalName("ADSENSE_AVERAGE_ECPM")] AdsenseAverageEcpm = 26,
        /// <summary>
        /// Number of clicks delivered by AdSense demand channel.
        /// </summary>
        [pbr::OriginalName("ADSENSE_CLICKS")] AdsenseClicks = 23,
        /// <summary>
        /// The ratio of impressions served by AdSense that resulted in users
        /// clicking on an ad. The clickthrough rate (CTR) is updated nightly. The
        /// AdSense CTR is calculated as: (AdSense clicks / AdSense impressions).
        /// </summary>
        [pbr::OriginalName("ADSENSE_CTR")] AdsenseCtr = 24,
        /// <summary>
        /// Total impressions delivered by AdSense.
        /// </summary>
        [pbr::OriginalName("ADSENSE_IMPRESSIONS")] AdsenseImpressions = 22,
        /// <summary>
        /// Ratio of clicks delivered by AdSense through line item dynamic allocation
        /// in relation to the total clicks delivered.
        /// </summary>
        [pbr::OriginalName("ADSENSE_PERCENT_CLICKS")] AdsensePercentClicks = 28,
        /// <summary>
        /// Ratio of impressions delivered by AdSense through line item dynamic
        /// allocation in relation to the total impressions delivered.
        /// </summary>
        [pbr::OriginalName("ADSENSE_PERCENT_IMPRESSIONS")] AdsensePercentImpressions = 27,
        /// <summary>
        /// Ratio of revenue generated by AdSense through line item dynamic
        /// allocation in relation to the total revenue.
        /// </summary>
        [pbr::OriginalName("ADSENSE_PERCENT_REVENUE")] AdsensePercentRevenue = 29,
        /// <summary>
        /// Ratio of revenue generated by AdSense through line item dynamic
        /// allocation in relation to the total revenue (excluding CPD).
        /// </summary>
        [pbr::OriginalName("ADSENSE_PERCENT_REVENUE_WITHOUT_CPD")] AdsensePercentRevenueWithoutCpd = 30,
        /// <summary>
        /// The total number of times that an AdSense ad is delivered.
        /// </summary>
        [pbr::OriginalName("ADSENSE_RESPONSES_SERVED")] AdsenseResponsesServed = 41,
        /// <summary>
        /// Revenue generated from AdSense through line item dynamic allocation,
        /// calculated in the network's currency and time zone.
        /// </summary>
        [pbr::OriginalName("ADSENSE_REVENUE")] AdsenseRevenue = 25,
        /// <summary>
        /// Active View AdExchange average time in seconds that specific impressions
        /// are reported as being viewable.
        /// </summary>
        [pbr::OriginalName("AD_EXCHANGE_ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME")] AdExchangeActiveViewAverageViewableTime = 79,
        /// <summary>
        /// Total number of impressions delivered by Ad Exchange that were eligible
        /// to measure viewability.
        /// </summary>
        [pbr::OriginalName("AD_EXCHANGE_ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS")] AdExchangeActiveViewEligibleImpressions = 76,
        /// <summary>
        /// The number of impressions delivered by Ad Exchange that were sampled, and
        /// measurable by active view.
        /// </summary>
        [pbr::OriginalName("AD_EXCHANGE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS")] AdExchangeActiveViewMeasurableImpressions = 75,
        /// <summary>
        /// The percentage of impressions delivered by Ad Exchange that were
        /// measurable by active view (out of all Ad Exchange impressions sampled for
        /// active view).
        /// </summary>
        [pbr::OriginalName("AD_EXCHANGE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE")] AdExchangeActiveViewMeasurableImpressionsRate = 78,
        /// <summary>
        /// The number of impressions delivered by Ad Exchange viewed on the user's
        /// screen.
        /// </summary>
        [pbr::OriginalName("AD_EXCHANGE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS")] AdExchangeActiveViewViewableImpressions = 74,
        /// <summary>
        /// The percentage of impressions delivered by Ad Exchange viewed on the
        /// user's screen (out of Ad Exchange impressions measurable by active view).
        /// </summary>
        [pbr::OriginalName("AD_EXCHANGE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE")] AdExchangeActiveViewViewableImpressionsRate = 77,
        /// <summary>
        /// The average effective cost-per-thousand-impressions earned from the ads
        /// delivered by Ad Exchange through line item dynamic allocation.
        /// </summary>
        [pbr::OriginalName("AD_EXCHANGE_AVERAGE_ECPM")] AdExchangeAverageEcpm = 18,
        /// <summary>
        /// Number of clicks delivered by the Ad Exchange.
        /// </summary>
        [pbr::OriginalName("AD_EXCHANGE_CLICKS")] AdExchangeClicks = 15,
        /// <summary>
        /// The ratio of impressions served by the Ad Exchange that resulted in users
        /// clicking on an ad. The clickthrough rate (CTR) is updated nightly. Ad
        /// Exchange CTR is calculated as: (Ad Exchange clicks / Ad Exchange
        /// impressions).
        /// </summary>
        [pbr::OriginalName("AD_EXCHANGE_CTR")] AdExchangeCtr = 16,
        /// <summary>
        /// Total impressions delivered by the Ad Exchange.
        /// </summary>
        [pbr::OriginalName("AD_EXCHANGE_IMPRESSIONS")] AdExchangeImpressions = 14,
        /// <summary>
        /// Ratio of clicks delivered by Ad Exchange through line item dynamic
        /// allocation in relation to the total clicks delivered.
        /// </summary>
        [pbr::OriginalName("AD_EXCHANGE_PERCENT_CLICKS")] AdExchangePercentClicks = 20,
        /// <summary>
        /// Ratio of impressions delivered by Ad Exchange through line item dynamic
        /// allocation in relation to the total impressions delivered.
        /// </summary>
        [pbr::OriginalName("AD_EXCHANGE_PERCENT_IMPRESSIONS")] AdExchangePercentImpressions = 19,
        /// <summary>
        /// Ratio of revenue generated by Ad Exchange through line item dynamic
        /// allocation in relation to the total revenue.
        /// </summary>
        [pbr::OriginalName("AD_EXCHANGE_PERCENT_REVENUE")] AdExchangePercentRevenue = 21,
        /// <summary>
        /// Ratio of revenue generated by Ad Exchange through line item dynamic
        /// allocation in relation to the total revenue (excluding CPD).
        /// </summary>
        [pbr::OriginalName("AD_EXCHANGE_PERCENT_REVENUE_WITHOUT_CPD")] AdExchangePercentRevenueWithoutCpd = 31,
        /// <summary>
        /// The total number of times that an Ad Exchange ad is delivered.
        /// </summary>
        [pbr::OriginalName("AD_EXCHANGE_RESPONSES_SERVED")] AdExchangeResponsesServed = 42,
        /// <summary>
        /// Revenue generated from the Ad Exchange through line item dynamic
        /// allocation, calculated in your network's currency and time zone.
        /// </summary>
        [pbr::OriginalName("AD_EXCHANGE_REVENUE")] AdExchangeRevenue = 17,
        /// <summary>
        /// The total number of times that an ad request is sent to the ad server
        /// including dynamic allocation.
        /// </summary>
        [pbr::OriginalName("AD_REQUESTS")] AdRequests = 38,
        /// <summary>
        /// Active View ad server average time in seconds that specific impressions
        /// are reported as being viewable.
        /// </summary>
        [pbr::OriginalName("AD_SERVER_ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME")] AdServerActiveViewAverageViewableTime = 67,
        /// <summary>
        /// Total number of impressions delivered by the ad server that were eligible
        /// to measure viewability.
        /// </summary>
        [pbr::OriginalName("AD_SERVER_ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS")] AdServerActiveViewEligibleImpressions = 64,
        /// <summary>
        /// The number of impressions delivered by the ad server that were sampled,
        /// and measurable by active view.
        /// </summary>
        [pbr::OriginalName("AD_SERVER_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS")] AdServerActiveViewMeasurableImpressions = 63,
        /// <summary>
        /// The percentage of impressions delivered by the ad server that were
        /// measurable by active view (out of all the ad server impressions sampled
        /// for active view).
        /// </summary>
        [pbr::OriginalName("AD_SERVER_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE")] AdServerActiveViewMeasurableImpressionsRate = 66,
        /// <summary>
        /// The number of impressions delivered by the ad server viewed on the user's
        /// screen.
        /// </summary>
        [pbr::OriginalName("AD_SERVER_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS")] AdServerActiveViewViewableImpressions = 62,
        /// <summary>
        /// The percentage of impressions delivered by the ad server viewed on the
        /// user's screen (out of the ad server impressions measurable by active
        /// view).
        /// </summary>
        [pbr::OriginalName("AD_SERVER_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE")] AdServerActiveViewViewableImpressionsRate = 65,
        /// <summary>
        /// Average effective cost-per-thousand-impressions earned from the ads
        /// delivered by the Google Ad Manager server.
        /// </summary>
        [pbr::OriginalName("AD_SERVER_AVERAGE_ECPM")] AdServerAverageEcpm = 34,
        /// <summary>
        /// Average effective cost-per-thousand-impressions earned from the ads
        /// delivered by the Google Ad Manager server, excluding CPD value.
        /// </summary>
        [pbr::OriginalName("AD_SERVER_AVERAGE_ECPM_WITHOUT_CPD")] AdServerAverageEcpmWithoutCpd = 10,
        /// <summary>
        /// Total raw impressions counted when creative begins to render or the
        /// first frame of a video is shown.
        /// </summary>
        [pbr::OriginalName("AD_SERVER_BEGIN_TO_RENDER_IMPRESSIONS")] AdServerBeginToRenderImpressions = 262,
        /// <summary>
        /// Total clicks served by the Google Ad Manager server. It usually takes
        /// about 30 minutes for new clicks to be recorded and added to the total
        /// displayed in reporting.
        /// </summary>
        [pbr::OriginalName("AD_SERVER_CLICKS")] AdServerClicks = 7,
        /// <summary>
        /// CPD revenue earned, calculated in your network's currency, for
        /// the ads delivered by the Google Ad Manager server. Sum of all booked
        /// revenue.
        /// </summary>
        [pbr::OriginalName("AD_SERVER_CPD_REVENUE")] AdServerCpdRevenue = 32,
        /// <summary>
        /// Ratio of impressions served by the Google Ad Manager server that resulted
        /// in users clicking on an ad. The clickthrough rate (CTR) is updated
        /// nightly. The ad server CTR is calculated as: (Ad server clicks / Ad
        /// server impressions).
        /// </summary>
        [pbr::OriginalName("AD_SERVER_CTR")] AdServerCtr = 8,
        /// <summary>
        /// Total impressions delivered by the Ad Server.
        /// </summary>
        [pbr::OriginalName("AD_SERVER_IMPRESSIONS")] AdServerImpressions = 6,
        /// <summary>
        /// Ratio of clicks delivered by the Google Ad Manager server in relation to
        /// the total clicks delivered.
        /// </summary>
        [pbr::OriginalName("AD_SERVER_PERCENT_CLICKS")] AdServerPercentClicks = 12,
        /// <summary>
        /// Ratio of impressions delivered by the Google Ad Manager server in
        /// relation to the total impressions delivered.
        /// </summary>
        [pbr::OriginalName("AD_SERVER_PERCENT_IMPRESSIONS")] AdServerPercentImpressions = 11,
        /// <summary>
        /// Ratio of revenue generated by the Google Ad Manager server in relation
        /// to the total revenue.
        /// </summary>
        [pbr::OriginalName("AD_SERVER_PERCENT_REVENUE")] AdServerPercentRevenue = 35,
        /// <summary>
        /// Ratio of revenue generated by the Google Ad Manager server (excluding
        /// CPD) in relation to the total revenue.
        /// </summary>
        [pbr::OriginalName("AD_SERVER_PERCENT_REVENUE_WITHOUT_CPD")] AdServerPercentRevenueWithoutCpd = 13,
        /// <summary>
        /// The total number of times that an ad is served by the ad server.
        /// </summary>
        [pbr::OriginalName("AD_SERVER_RESPONSES_SERVED")] AdServerResponsesServed = 40,
        /// <summary>
        /// All CPM, CPC, and CPD revenue earned, calculated in your network's
        /// currency, for the ads delivered by the Google Ad Manager server.
        /// Sum of all booked revenue.
        /// </summary>
        [pbr::OriginalName("AD_SERVER_REVENUE")] AdServerRevenue = 33,
        /// <summary>
        /// Revenue (excluding CPD) earned, calculated in your network's currency,
        /// for the ads delivered by the Google Ad Manager server. Sum of all booked
        /// revenue.
        /// </summary>
        [pbr::OriginalName("AD_SERVER_REVENUE_WITHOUT_CPD")] AdServerRevenueWithoutCpd = 9,
        /// <summary>
        /// The number of tracked ads delivered by the ad server.
        /// </summary>
        [pbr::OriginalName("AD_SERVER_TRACKED_ADS")] AdServerTrackedAds = 264,
        /// <summary>
        /// Total raw impressions counted when creative begins to render or the
        /// first frame of a video is shown, before invalid traffic filtrations by
        /// Ad Server.
        /// </summary>
        [pbr::OriginalName("AD_SERVER_UNFILTERED_BEGIN_TO_RENDER_IMPRESSIONS")] AdServerUnfilteredBeginToRenderImpressions = 261,
        /// <summary>
        /// Total clicks delivered by the Ad Server before spam filtering.
        /// </summary>
        [pbr::OriginalName("AD_SERVER_UNFILTERED_CLICKS")] AdServerUnfilteredClicks = 259,
        /// <summary>
        /// Total impressions delivered by the Ad Server before spam filtering.
        /// </summary>
        [pbr::OriginalName("AD_SERVER_UNFILTERED_IMPRESSIONS")] AdServerUnfilteredImpressions = 260,
        /// <summary>
        /// The number of tracked ads delivered by the ad server before invalid
        /// traffic filtrations.
        /// </summary>
        [pbr::OriginalName("AD_SERVER_UNFILTERED_TRACKED_ADS")] AdServerUnfilteredTrackedAds = 263,
        /// <summary>
        /// eCPM averaged across the Google Ad Manager server, AdSense,
        /// and Ad Exchange.
        /// </summary>
        [pbr::OriginalName("AVERAGE_ECPM")] AverageEcpm = 37,
        /// <summary>
        /// eCPM averaged across the Google Ad Manager server (excluding CPD),
        /// AdSense, and Ad Exchange.
        /// </summary>
        [pbr::OriginalName("AVERAGE_ECPM_WITHOUT_CPD")] AverageEcpmWithoutCpd = 5,
        /// <summary>
        /// The number of times a user clicked on an ad.
        /// </summary>
        [pbr::OriginalName("CLICKS")] Clicks = 2,
        /// <summary>
        /// The total number of times that the code for an ad is served by the ad
        /// server including dynamic allocation.
        /// </summary>
        [pbr::OriginalName("CODE_SERVED_COUNT")] CodeServedCount = 44,
        /// <summary>
        /// For standard ads, your ad clickthrough rate (CTR) is the number of ad
        /// clicks divided by the number of individual ad impressions expressed as a
        /// fraction. Ad CTR = Clicks / Ad impressions.
        /// </summary>
        [pbr::OriginalName("CTR")] Ctr = 3,
        /// <summary>
        /// The number of coviewed impressions sold by Google in partner sales.
        /// </summary>
        [pbr::OriginalName("GOOGLE_SOLD_AUCTION_COVIEWED_IMPRESSIONS")] GoogleSoldAuctionCoviewedImpressions = 129,
        /// <summary>
        /// The number of auction impressions sold by Google in partner sales.
        /// </summary>
        [pbr::OriginalName("GOOGLE_SOLD_AUCTION_IMPRESSIONS")] GoogleSoldAuctionImpressions = 128,
        /// <summary>
        /// The number of coviewed impressions sold by Google in partner sales.
        /// </summary>
        [pbr::OriginalName("GOOGLE_SOLD_COVIEWED_IMPRESSIONS")] GoogleSoldCoviewedImpressions = 131,
        /// <summary>
        /// The number of impressions sold by Google in partner sales.
        /// </summary>
        [pbr::OriginalName("GOOGLE_SOLD_IMPRESSIONS")] GoogleSoldImpressions = 130,
        /// <summary>
        /// The number of coviewed impressions sold by Google in partner sales.
        /// </summary>
        [pbr::OriginalName("GOOGLE_SOLD_RESERVATION_COVIEWED_IMPRESSIONS")] GoogleSoldReservationCoviewedImpressions = 127,
        /// <summary>
        /// The number of reservation impressions sold by Google in partner sales.
        /// </summary>
        [pbr::OriginalName("GOOGLE_SOLD_RESERVATION_IMPRESSIONS")] GoogleSoldReservationImpressions = 126,
        /// <summary>
        /// Total impressions from the Google Ad Manager server, AdSense,
        /// Ad Exchange, and yield group partners.
        /// </summary>
        [pbr::OriginalName("IMPRESSIONS")] Impressions = 1,
        /// <summary>
        /// The number of filled pod requests (filled by partner or Google) in
        /// partner sales.
        /// </summary>
        [pbr::OriginalName("PARTNER_SALES_FILLED_POD_REQUESTS")] PartnerSalesFilledPodRequests = 135,
        /// <summary>
        /// The percent of filled requests to total ad requests in
        /// partner sales.
        /// </summary>
        [pbr::OriginalName("PARTNER_SALES_FILL_RATE")] PartnerSalesFillRate = 136,
        /// <summary>
        /// The percent of partner filled requests to total ad requests
        /// in partner sales.
        /// </summary>
        [pbr::OriginalName("PARTNER_SALES_PARTNER_MATCH_RATE")] PartnerSalesPartnerMatchRate = 137,
        /// <summary>
        /// The number of queries eligible for partner sales.
        /// </summary>
        [pbr::OriginalName("PARTNER_SALES_QUERIES")] PartnerSalesQueries = 132,
        /// <summary>
        /// The number of partner unfilled impressions in partner sales.
        /// If a pod request is not filled by partner but filled by Google, this
        /// metric will still count 1.
        /// </summary>
        [pbr::OriginalName("PARTNER_SALES_UNFILLED_IMPRESSIONS")] PartnerSalesUnfilledImpressions = 133,
        /// <summary>
        /// The number of partner unmatched queries in partner sales.
        /// If an ad request is not filled by partner but filled by Google, this
        /// metric will still count 1.
        /// </summary>
        [pbr::OriginalName("PARTNER_SALES_UNMATCHED_QUERIES")] PartnerSalesUnmatchedQueries = 134,
        /// <summary>
        /// The number of code served sold by partner in partner sales.
        /// </summary>
        [pbr::OriginalName("PARTNER_SOLD_CODE_SERVED")] PartnerSoldCodeServed = 125,
        /// <summary>
        /// The number of coviewed impressions sold by partner in partner sales.
        /// </summary>
        [pbr::OriginalName("PARTNER_SOLD_COVIEWED_IMPRESSIONS")] PartnerSoldCoviewedImpressions = 124,
        /// <summary>
        /// The number of impressions sold by partner in partner sales.
        /// </summary>
        [pbr::OriginalName("PARTNER_SOLD_IMPRESSIONS")] PartnerSoldImpressions = 123,
        /// <summary>
        /// The total number of ad requests eligible for programmatic inventory,
        /// including Programmatic Guaranteed, Preferred Deals, backfill, and open
        /// auction.
        /// </summary>
        [pbr::OriginalName("PROGRAMMATIC_ELIGIBLE_AD_REQUESTS")] ProgrammaticEligibleAdRequests = 177,
        /// <summary>
        /// The number of programmatic responses served divided by the number of
        /// programmatic eligible ad requests. Includes Ad Exchange, Open Bidding,
        /// and Preferred Deals.
        /// </summary>
        [pbr::OriginalName("PROGRAMMATIC_MATCH_RATE")] ProgrammaticMatchRate = 178,
        /// <summary>
        /// Total number of ad responses served from programmatic demand sources.
        /// Includes Ad Exchange, Open Bidding, and Preferred Deals.
        ///
        /// Differs from AD_EXCHANGE_RESPONSES_SERVED, which doesn't include Open
        /// Bidding ad requests.
        /// </summary>
        [pbr::OriginalName("PROGRAMMATIC_RESPONSES_SERVED")] ProgrammaticResponsesServed = 176,
        /// <summary>
        /// The total number of times that an ad is served by the ad server including
        /// dynamic allocation.
        /// </summary>
        [pbr::OriginalName("RESPONSES_SERVED")] ResponsesServed = 39,
        /// <summary>
        /// Total amount of CPM, CPC, and CPD revenue based on the number of units
        /// served by the Google Ad Manager server, AdSense, Ad Exchange, and
        /// third-party Mediation networks.
        /// </summary>
        [pbr::OriginalName("REVENUE")] Revenue = 36,
        /// <summary>
        /// Total amount of revenue (excluding CPD) based on the number of units
        /// served by the Google Ad Manager server, AdSense, Ad Exchange, and
        /// third-party Mediation networks.
        /// </summary>
        [pbr::OriginalName("REVENUE_WITHOUT_CPD")] RevenueWithoutCpd = 4,
        /// <summary>
        /// The average latency in milliseconds across all server-side unwrapping
        /// callout requests. There is no special handling for error or timeout
        /// responses. This reflects the entire chain of a parent callout request,
        /// which may result in multiple child callouts. This metric is not sliced by
        /// child callout dimensions.
        /// </summary>
        [pbr::OriginalName("SERVER_SIDE_UNWRAPPING_AVERAGE_LATENCY_MS")] ServerSideUnwrappingAverageLatencyMs = 434,
        /// <summary>
        /// The total number of server-side unwrapping callout requests.
        /// </summary>
        [pbr::OriginalName("SERVER_SIDE_UNWRAPPING_CALLOUTS")] ServerSideUnwrappingCallouts = 435,
        /// <summary>
        /// The total number of server-side unwrapping callouts that returned an
        /// empty response. Timeouts are not considered empty responses.
        /// </summary>
        [pbr::OriginalName("SERVER_SIDE_UNWRAPPING_EMPTY_RESPONSES")] ServerSideUnwrappingEmptyResponses = 436,
        /// <summary>
        /// The total number of server-side unwrapping callouts that returned an
        /// error response. Timeouts and empty responses are not considered errors.
        /// </summary>
        [pbr::OriginalName("SERVER_SIDE_UNWRAPPING_ERROR_RESPONSES")] ServerSideUnwrappingErrorResponses = 437,
        /// <summary>
        /// The total number of successfully unwrapped, non-empty server-side
        /// wrapping callouts. Successful unwrapping does not indicate that the
        /// resulting creative was served.
        /// </summary>
        [pbr::OriginalName("SERVER_SIDE_UNWRAPPING_SUCCESSFUL_RESPONSES")] ServerSideUnwrappingSuccessfulResponses = 438,
        /// <summary>
        /// The total number of server-side unwrapping callouts that timed out before
        /// returning a response.
        /// </summary>
        [pbr::OriginalName("SERVER_SIDE_UNWRAPPING_TIMEOUTS")] ServerSideUnwrappingTimeouts = 439,
        /// <summary>
        /// The total number of missed impressions due to the ad servers' inability
        /// to find ads to serve including dynamic allocation.
        /// </summary>
        [pbr::OriginalName("UNFILLED_IMPRESSIONS")] UnfilledImpressions = 45,
        /// <summary>
        /// The total number of times that an ad is not returned by the ad server.
        /// </summary>
        [pbr::OriginalName("UNMATCHED_AD_REQUESTS")] UnmatchedAdRequests = 43,
        /// <summary>
        /// Number of times an Offerwall message was shown to users.
        /// </summary>
        [pbr::OriginalName("USER_MESSAGES_OFFERWALL_MESSAGES_SHOWN")] UserMessagesOfferwallMessagesShown = 121,
        /// <summary>
        /// The number of messages where the user gained an entitlement.
        /// </summary>
        [pbr::OriginalName("USER_MESSAGES_OFFERWALL_SUCCESSFUL_ENGAGEMENTS")] UserMessagesOfferwallSuccessfulEngagements = 122,
        /// <summary>
        /// The number of user interactions with a video, on average, such as pause,
        /// full screen, mute, etc.
        /// </summary>
        [pbr::OriginalName("VIDEO_INTERACTION_AVERAGE_INTERACTION_RATE")] VideoInteractionAverageInteractionRate = 92,
        /// <summary>
        /// The number of times a user collapses a video, either to its original size
        /// or to a different size.
        /// </summary>
        [pbr::OriginalName("VIDEO_INTERACTION_COLLAPSES")] VideoInteractionCollapses = 93,
        /// <summary>
        /// The number of times a user expands a video.
        /// </summary>
        [pbr::OriginalName("VIDEO_INTERACTION_EXPANDS")] VideoInteractionExpands = 95,
        /// <summary>
        /// The number of times ad clip played in full screen mode.
        /// </summary>
        [pbr::OriginalName("VIDEO_INTERACTION_FULL_SCREENS")] VideoInteractionFullScreens = 96,
        /// <summary>
        /// The number of times video player was in mute state during play of ad
        /// clip.
        /// </summary>
        [pbr::OriginalName("VIDEO_INTERACTION_MUTES")] VideoInteractionMutes = 97,
        /// <summary>
        /// The number of times user paused ad clip.
        /// </summary>
        [pbr::OriginalName("VIDEO_INTERACTION_PAUSES")] VideoInteractionPauses = 98,
        /// <summary>
        /// The number of times the user unpaused the video.
        /// </summary>
        [pbr::OriginalName("VIDEO_INTERACTION_RESUMES")] VideoInteractionResumes = 99,
        /// <summary>
        /// The number of times a user rewinds the video.
        /// </summary>
        [pbr::OriginalName("VIDEO_INTERACTION_REWINDS")] VideoInteractionRewinds = 100,
        /// <summary>
        /// The number of times a user unmutes the video.
        /// </summary>
        [pbr::OriginalName("VIDEO_INTERACTION_UNMUTES")] VideoInteractionUnmutes = 101,
        /// <summary>
        /// The number of times a skippable video is skipped.
        /// </summary>
        [pbr::OriginalName("VIDEO_INTERACTION_VIDEO_SKIPS")] VideoInteractionVideoSkips = 102,
        /// <summary>
        /// The number of total creative serves in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_CREATIVE_SERVES")] VideoRealTimeCreativeServes = 139,
        /// <summary>
        /// The number of errors of type 100 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_100_COUNT")] VideoRealTimeError100Count = 143,
        /// <summary>
        /// The number of errors of type 101 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_101_COUNT")] VideoRealTimeError101Count = 144,
        /// <summary>
        /// The number of errors of type 102 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_102_COUNT")] VideoRealTimeError102Count = 145,
        /// <summary>
        /// The number of errors of type 200 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_200_COUNT")] VideoRealTimeError200Count = 146,
        /// <summary>
        /// The number of errors of type 201 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_201_COUNT")] VideoRealTimeError201Count = 147,
        /// <summary>
        /// The number of errors of type 202 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_202_COUNT")] VideoRealTimeError202Count = 148,
        /// <summary>
        /// The number of errors of type 203 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_203_COUNT")] VideoRealTimeError203Count = 149,
        /// <summary>
        /// The number of errors of type 300 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_300_COUNT")] VideoRealTimeError300Count = 150,
        /// <summary>
        /// The number of errors of type 301 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_301_COUNT")] VideoRealTimeError301Count = 151,
        /// <summary>
        /// The number of errors of type 302 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_302_COUNT")] VideoRealTimeError302Count = 152,
        /// <summary>
        /// The number of errors of type 303 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_303_COUNT")] VideoRealTimeError303Count = 153,
        /// <summary>
        /// The number of errors of type 400 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_400_COUNT")] VideoRealTimeError400Count = 154,
        /// <summary>
        /// The number of errors of type 401 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_401_COUNT")] VideoRealTimeError401Count = 155,
        /// <summary>
        /// The number of errors of type 402 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_402_COUNT")] VideoRealTimeError402Count = 156,
        /// <summary>
        /// The number of errors of type 403 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_403_COUNT")] VideoRealTimeError403Count = 157,
        /// <summary>
        /// The number of errors of type 405 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_405_COUNT")] VideoRealTimeError405Count = 158,
        /// <summary>
        /// The number of errors of type 406 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_406_COUNT")] VideoRealTimeError406Count = 159,
        /// <summary>
        /// The number of errors of type 407 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_407_COUNT")] VideoRealTimeError407Count = 160,
        /// <summary>
        /// The number of errors of type 408 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_408_COUNT")] VideoRealTimeError408Count = 161,
        /// <summary>
        /// The number of errors of type 409 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_409_COUNT")] VideoRealTimeError409Count = 162,
        /// <summary>
        /// The number of errors of type 410 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_410_COUNT")] VideoRealTimeError410Count = 163,
        /// <summary>
        /// The number of errors of type 500 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_500_COUNT")] VideoRealTimeError500Count = 164,
        /// <summary>
        /// The number of errors of type 501 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_501_COUNT")] VideoRealTimeError501Count = 165,
        /// <summary>
        /// The number of errors of type 502 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_502_COUNT")] VideoRealTimeError502Count = 166,
        /// <summary>
        /// The number of errors of type 503 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_503_COUNT")] VideoRealTimeError503Count = 167,
        /// <summary>
        /// The number of errors of type 600 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_600_COUNT")] VideoRealTimeError600Count = 168,
        /// <summary>
        /// The number of errors of type 601 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_601_COUNT")] VideoRealTimeError601Count = 169,
        /// <summary>
        /// The number of errors of type 602 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_602_COUNT")] VideoRealTimeError602Count = 170,
        /// <summary>
        /// The number of errors of type 603 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_603_COUNT")] VideoRealTimeError603Count = 171,
        /// <summary>
        /// The number of errors of type 604 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_604_COUNT")] VideoRealTimeError604Count = 172,
        /// <summary>
        /// The number of errors of type 900 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_900_COUNT")] VideoRealTimeError900Count = 173,
        /// <summary>
        /// The number of errors of type 901 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_901_COUNT")] VideoRealTimeError901Count = 174,
        /// <summary>
        /// The number of total impressions in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_IMPRESSIONS")] VideoRealTimeImpressions = 138,
        /// <summary>
        /// The number of matched queries in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_MATCHED_QUERIES")] VideoRealTimeMatchedQueries = 140,
        /// <summary>
        /// The number of all errors in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_TOTAL_ERROR_COUNT")] VideoRealTimeTotalErrorCount = 175,
        /// <summary>
        /// The number of total queries in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_TOTAL_QUERIES")] VideoRealTimeTotalQueries = 142,
        /// <summary>
        /// The number of unmatched queries in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_UNMATCHED_QUERIES")] VideoRealTimeUnmatchedQueries = 141,
        /// <summary>
        /// Number of times that the publisher specified a video ad played
        /// automatically.
        /// </summary>
        [pbr::OriginalName("VIDEO_VIEWERSHIP_AUTO_PLAYS")] VideoViewershipAutoPlays = 103,
        /// <summary>
        /// Average percentage of the video watched by users.
        /// </summary>
        [pbr::OriginalName("VIDEO_VIEWERSHIP_AVERAGE_VIEW_RATE")] VideoViewershipAverageViewRate = 104,
        /// <summary>
        /// Average time(seconds) users watched the video.
        /// </summary>
        [pbr::OriginalName("VIDEO_VIEWERSHIP_AVERAGE_VIEW_TIME")] VideoViewershipAverageViewTime = 105,
        /// <summary>
        /// Number of times that the publisher specified a video ad was clicked to
        /// play.
        /// </summary>
        [pbr::OriginalName("VIDEO_VIEWERSHIP_CLICK_TO_PLAYS")] VideoViewershipClickToPlays = 106,
        /// <summary>
        /// The number of times the video played to completion.
        /// </summary>
        [pbr::OriginalName("VIDEO_VIEWERSHIP_COMPLETES")] VideoViewershipCompletes = 107,
        /// <summary>
        /// Percentage of times the video played to the end.
        /// </summary>
        [pbr::OriginalName("VIDEO_VIEWERSHIP_COMPLETION_RATE")] VideoViewershipCompletionRate = 108,
        /// <summary>
        /// The number of engaged views: ad is viewed to completion or for 30s,
        /// whichever comes first.
        /// </summary>
        [pbr::OriginalName("VIDEO_VIEWERSHIP_ENGAGED_VIEWS")] VideoViewershipEngagedViews = 109,
        /// <summary>
        /// The number of times the video played to 25% of its length.
        /// </summary>
        [pbr::OriginalName("VIDEO_VIEWERSHIP_FIRST_QUARTILES")] VideoViewershipFirstQuartiles = 110,
        /// <summary>
        /// The number of times the video reached its midpoint during play.
        /// </summary>
        [pbr::OriginalName("VIDEO_VIEWERSHIP_MIDPOINTS")] VideoViewershipMidpoints = 111,
        /// <summary>
        /// The number of times a skip button is shown in video.
        /// </summary>
        [pbr::OriginalName("VIDEO_VIEWERSHIP_SKIP_BUTTONS_SHOWN")] VideoViewershipSkipButtonsShown = 112,
        /// <summary>
        /// The number of impressions where the video was played.
        /// </summary>
        [pbr::OriginalName("VIDEO_VIEWERSHIP_STARTS")] VideoViewershipStarts = 113,
        /// <summary>
        /// The number of times the video played to 75% of its length.
        /// </summary>
        [pbr::OriginalName("VIDEO_VIEWERSHIP_THIRD_QUARTILES")] VideoViewershipThirdQuartiles = 114,
        /// <summary>
        /// The number of times an error occurred, such as a VAST redirect error, a
        /// video playback error, or an invalid response error.
        /// </summary>
        [pbr::OriginalName("VIDEO_VIEWERSHIP_TOTAL_ERROR_COUNT")] VideoViewershipTotalErrorCount = 115,
        /// <summary>
        /// The percentage of video error count.
        /// </summary>
        [pbr::OriginalName("VIDEO_VIEWERSHIP_TOTAL_ERROR_RATE")] VideoViewershipTotalErrorRate = 94,
        /// <summary>
        /// Duration of the video creative.
        /// </summary>
        [pbr::OriginalName("VIDEO_VIEWERSHIP_VIDEO_LENGTH")] VideoViewershipVideoLength = 116,
        /// <summary>
        /// View-through rate represented as a percentage.
        /// </summary>
        [pbr::OriginalName("VIDEO_VIEWERSHIP_VIEW_THROUGH_RATE")] VideoViewershipViewThroughRate = 117,
        /// <summary>
        /// Number of winning bids received from Open Bidding buyers, even when the
        /// winning bid is placed at the end of a mediation for mobile apps chain.
        /// </summary>
        [pbr::OriginalName("YIELD_GROUP_AUCTIONS_WON")] YieldGroupAuctionsWon = 80,
        /// <summary>
        /// Number of bids received from Open Bidding buyers, regardless of whether
        /// the returned bid competes in an auction.
        /// </summary>
        [pbr::OriginalName("YIELD_GROUP_BIDS")] YieldGroupBids = 81,
        /// <summary>
        /// Number of bids received from Open Bidding buyers that competed in
        /// the auction.
        /// </summary>
        [pbr::OriginalName("YIELD_GROUP_BIDS_IN_AUCTION")] YieldGroupBidsInAuction = 82,
        /// <summary>
        /// Number of times a yield partner is asked to return bid to fill
        /// a yield group request.
        /// </summary>
        [pbr::OriginalName("YIELD_GROUP_CALLOUTS")] YieldGroupCallouts = 83,
        /// <summary>
        /// The estimated net rate for yield groups or individual
        /// yield group partners.
        /// </summary>
        [pbr::OriginalName("YIELD_GROUP_ESTIMATED_CPM")] YieldGroupEstimatedCpm = 88,
        /// <summary>
        /// Total net revenue earned by a yield group, based upon the yield group
        /// estimated CPM and yield group impressions recorded.
        /// </summary>
        [pbr::OriginalName("YIELD_GROUP_ESTIMATED_REVENUE")] YieldGroupEstimatedRevenue = 87,
        /// <summary>
        /// Number of matched yield group requests where a yield partner delivered
        /// their ad to publisher inventory.
        /// </summary>
        [pbr::OriginalName("YIELD_GROUP_IMPRESSIONS")] YieldGroupImpressions = 85,
        /// <summary>
        /// Yield group Mediation fill rate indicating how often a network
        /// fills an ad request.
        /// </summary>
        [pbr::OriginalName("YIELD_GROUP_MEDIATION_FILL_RATE")] YieldGroupMediationFillRate = 89,
        /// <summary>
        /// Total requests where a Mediation chain was served.
        /// </summary>
        [pbr::OriginalName("YIELD_GROUP_MEDIATION_MATCHED_QUERIES")] YieldGroupMediationMatchedQueries = 86,
        /// <summary>
        /// The number of mediation chain passback across all channels.
        /// </summary>
        [pbr::OriginalName("YIELD_GROUP_MEDIATION_PASSBACKS")] YieldGroupMediationPassbacks = 118,
        /// <summary>
        /// Revenue per thousand impressions based on data collected by Ad Manager
        /// from third-party ad network reports.
        /// </summary>
        [pbr::OriginalName("YIELD_GROUP_MEDIATION_THIRD_PARTY_ECPM")] YieldGroupMediationThirdPartyEcpm = 90,
        /// <summary>
        /// Number of times a yield group buyer successfully returned a bid in
        /// response to a yield group callout.
        /// </summary>
        [pbr::OriginalName("YIELD_GROUP_SUCCESSFUL_RESPONSES")] YieldGroupSuccessfulResponses = 84,
      }

      /// <summary>
      /// Possible metric value types to add.
      /// </summary>
      public enum MetricValueType {
        /// <summary>
        /// The values for the primary date_range.
        /// </summary>
        [pbr::OriginalName("PRIMARY")] Primary = 0,
        /// <summary>
        /// Each metrics' percent of the total for the primary date_range.
        /// </summary>
        [pbr::OriginalName("PRIMARY_PERCENT_OF_TOTAL")] PrimaryPercentOfTotal = 1,
        /// <summary>
        /// The values for the comparison_date_range.
        /// </summary>
        [pbr::OriginalName("COMPARISON")] Comparison = 2,
        /// <summary>
        /// Each metrics' percent of the total for the comparison_date_range.
        /// </summary>
        [pbr::OriginalName("COMPARISON_PERCENT_OF_TOTAL")] ComparisonPercentOfTotal = 3,
        /// <summary>
        /// The absolute change between the primary and comparison date ranges.
        /// </summary>
        [pbr::OriginalName("ABSOLUTE_CHANGE")] AbsoluteChange = 4,
        /// <summary>
        /// The relative change between the primary and comparison date ranges.
        /// </summary>
        [pbr::OriginalName("RELATIVE_CHANGE")] RelativeChange = 5,
      }

      /// <summary>
      /// Supported report types.
      /// </summary>
      public enum ReportType {
        /// <summary>
        /// Default value. This value is unused.
        /// </summary>
        [pbr::OriginalName("REPORT_TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Historical.
        /// </summary>
        [pbr::OriginalName("HISTORICAL")] Historical = 1,
      }

      /// <summary>
      /// The visibility of a report.
      /// </summary>
      public enum Visibility {
        /// <summary>
        /// Default value. Reports with hidden visibility will not appear in the Ad
        /// Manager UI.
        /// </summary>
        [pbr::OriginalName("HIDDEN")] Hidden = 0,
        /// <summary>
        /// Reports with draft visibility will appear in the Ad Manager UI only if
        /// the user has configured the UI to show them.
        /// </summary>
        [pbr::OriginalName("DRAFT")] Draft = 1,
        /// <summary>
        /// Reports with saved visibility will appear in the Ad Manager UI by
        /// default.
        /// </summary>
        [pbr::OriginalName("SAVED")] Saved = 2,
      }

      /// <summary>
      /// The source to determine the time zone for the report.
      /// </summary>
      public enum TimeZoneSource {
        /// <summary>
        /// Unspecified default value.
        /// </summary>
        [pbr::OriginalName("TIME_ZONE_SOURCE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Use the publisher's time zone in network settings.
        /// </summary>
        [pbr::OriginalName("PUBLISHER")] Publisher = 1,
        /// <summary>
        /// Use the time zone of the ad exchange.
        /// Only compatible with Ad Exchange dimensions and metrics.
        /// </summary>
        [pbr::OriginalName("AD_EXCHANGE")] AdExchange = 2,
        /// <summary>
        /// Use UTC time zone.
        /// Only compatible with Revenue Verification reports.
        /// </summary>
        [pbr::OriginalName("UTC")] Utc = 3,
        /// <summary>
        /// Use the time zone provided in the ReportDefinition.time_zone field.
        /// Has limited dimension and metric compatibility compared with PUBLISHER,
        /// and reports may take longer to run since the dates are dynamically
        /// calculated at request time.
        /// </summary>
        [pbr::OriginalName("PROVIDED")] Provided = 4,
      }

      /// <summary>
      /// Represents a single value in a report.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Value : pb::IMessage<Value>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Value> _parser = new pb::MessageParser<Value>(() => new Value());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Value> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Ads.AdManager.V1.Report.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Value() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Value(Value other) : this() {
          switch (other.ValueCase) {
            case ValueOneofCase.IntValue:
              IntValue = other.IntValue;
              break;
            case ValueOneofCase.DoubleValue:
              DoubleValue = other.DoubleValue;
              break;
            case ValueOneofCase.StringValue:
              StringValue = other.StringValue;
              break;
            case ValueOneofCase.BoolValue:
              BoolValue = other.BoolValue;
              break;
            case ValueOneofCase.IntListValue:
              IntListValue = other.IntListValue.Clone();
              break;
            case ValueOneofCase.StringListValue:
              StringListValue = other.StringListValue.Clone();
              break;
            case ValueOneofCase.BytesValue:
              BytesValue = other.BytesValue;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Value Clone() {
          return new Value(this);
        }

        /// <summary>Field number for the "int_value" field.</summary>
        public const int IntValueFieldNumber = 1;
        /// <summary>
        /// For integer values.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long IntValue {
          get { return HasIntValue ? (long) value_ : 0L; }
          set {
            value_ = value;
            valueCase_ = ValueOneofCase.IntValue;
          }
        }
        /// <summary>Gets whether the "int_value" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasIntValue {
          get { return valueCase_ == ValueOneofCase.IntValue; }
        }
        /// <summary> Clears the value of the oneof if it's currently set to "int_value" </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearIntValue() {
          if (HasIntValue) {
            ClearValue();
          }
        }

        /// <summary>Field number for the "double_value" field.</summary>
        public const int DoubleValueFieldNumber = 2;
        /// <summary>
        /// For double values.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double DoubleValue {
          get { return HasDoubleValue ? (double) value_ : 0D; }
          set {
            value_ = value;
            valueCase_ = ValueOneofCase.DoubleValue;
          }
        }
        /// <summary>Gets whether the "double_value" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasDoubleValue {
          get { return valueCase_ == ValueOneofCase.DoubleValue; }
        }
        /// <summary> Clears the value of the oneof if it's currently set to "double_value" </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearDoubleValue() {
          if (HasDoubleValue) {
            ClearValue();
          }
        }

        /// <summary>Field number for the "string_value" field.</summary>
        public const int StringValueFieldNumber = 3;
        /// <summary>
        /// For string values.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string StringValue {
          get { return HasStringValue ? (string) value_ : ""; }
          set {
            value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            valueCase_ = ValueOneofCase.StringValue;
          }
        }
        /// <summary>Gets whether the "string_value" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasStringValue {
          get { return valueCase_ == ValueOneofCase.StringValue; }
        }
        /// <summary> Clears the value of the oneof if it's currently set to "string_value" </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearStringValue() {
          if (HasStringValue) {
            ClearValue();
          }
        }

        /// <summary>Field number for the "bool_value" field.</summary>
        public const int BoolValueFieldNumber = 4;
        /// <summary>
        /// For boolean values.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool BoolValue {
          get { return HasBoolValue ? (bool) value_ : false; }
          set {
            value_ = value;
            valueCase_ = ValueOneofCase.BoolValue;
          }
        }
        /// <summary>Gets whether the "bool_value" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasBoolValue {
          get { return valueCase_ == ValueOneofCase.BoolValue; }
        }
        /// <summary> Clears the value of the oneof if it's currently set to "bool_value" </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearBoolValue() {
          if (HasBoolValue) {
            ClearValue();
          }
        }

        /// <summary>Field number for the "int_list_value" field.</summary>
        public const int IntListValueFieldNumber = 6;
        /// <summary>
        /// For lists of integer values.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Ads.AdManager.V1.Report.Types.Value.Types.IntList IntListValue {
          get { return valueCase_ == ValueOneofCase.IntListValue ? (global::Google.Ads.AdManager.V1.Report.Types.Value.Types.IntList) value_ : null; }
          set {
            value_ = value;
            valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.IntListValue;
          }
        }

        /// <summary>Field number for the "string_list_value" field.</summary>
        public const int StringListValueFieldNumber = 7;
        /// <summary>
        /// For lists of string values.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Ads.AdManager.V1.Report.Types.Value.Types.StringList StringListValue {
          get { return valueCase_ == ValueOneofCase.StringListValue ? (global::Google.Ads.AdManager.V1.Report.Types.Value.Types.StringList) value_ : null; }
          set {
            value_ = value;
            valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.StringListValue;
          }
        }

        /// <summary>Field number for the "bytes_value" field.</summary>
        public const int BytesValueFieldNumber = 8;
        /// <summary>
        /// For bytes values.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pb::ByteString BytesValue {
          get { return HasBytesValue ? (pb::ByteString) value_ : pb::ByteString.Empty; }
          set {
            value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            valueCase_ = ValueOneofCase.BytesValue;
          }
        }
        /// <summary>Gets whether the "bytes_value" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasBytesValue {
          get { return valueCase_ == ValueOneofCase.BytesValue; }
        }
        /// <summary> Clears the value of the oneof if it's currently set to "bytes_value" </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearBytesValue() {
          if (HasBytesValue) {
            ClearValue();
          }
        }

        private object value_;
        /// <summary>Enum of possible cases for the "value" oneof.</summary>
        public enum ValueOneofCase {
          None = 0,
          IntValue = 1,
          DoubleValue = 2,
          StringValue = 3,
          BoolValue = 4,
          IntListValue = 6,
          StringListValue = 7,
          BytesValue = 8,
        }
        private ValueOneofCase valueCase_ = ValueOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ValueOneofCase ValueCase {
          get { return valueCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearValue() {
          valueCase_ = ValueOneofCase.None;
          value_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Value);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Value other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (IntValue != other.IntValue) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DoubleValue, other.DoubleValue)) return false;
          if (StringValue != other.StringValue) return false;
          if (BoolValue != other.BoolValue) return false;
          if (!object.Equals(IntListValue, other.IntListValue)) return false;
          if (!object.Equals(StringListValue, other.StringListValue)) return false;
          if (BytesValue != other.BytesValue) return false;
          if (ValueCase != other.ValueCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasIntValue) hash ^= IntValue.GetHashCode();
          if (HasDoubleValue) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DoubleValue);
          if (HasStringValue) hash ^= StringValue.GetHashCode();
          if (HasBoolValue) hash ^= BoolValue.GetHashCode();
          if (valueCase_ == ValueOneofCase.IntListValue) hash ^= IntListValue.GetHashCode();
          if (valueCase_ == ValueOneofCase.StringListValue) hash ^= StringListValue.GetHashCode();
          if (HasBytesValue) hash ^= BytesValue.GetHashCode();
          hash ^= (int) valueCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasIntValue) {
            output.WriteRawTag(8);
            output.WriteInt64(IntValue);
          }
          if (HasDoubleValue) {
            output.WriteRawTag(17);
            output.WriteDouble(DoubleValue);
          }
          if (HasStringValue) {
            output.WriteRawTag(26);
            output.WriteString(StringValue);
          }
          if (HasBoolValue) {
            output.WriteRawTag(32);
            output.WriteBool(BoolValue);
          }
          if (valueCase_ == ValueOneofCase.IntListValue) {
            output.WriteRawTag(50);
            output.WriteMessage(IntListValue);
          }
          if (valueCase_ == ValueOneofCase.StringListValue) {
            output.WriteRawTag(58);
            output.WriteMessage(StringListValue);
          }
          if (HasBytesValue) {
            output.WriteRawTag(66);
            output.WriteBytes(BytesValue);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasIntValue) {
            output.WriteRawTag(8);
            output.WriteInt64(IntValue);
          }
          if (HasDoubleValue) {
            output.WriteRawTag(17);
            output.WriteDouble(DoubleValue);
          }
          if (HasStringValue) {
            output.WriteRawTag(26);
            output.WriteString(StringValue);
          }
          if (HasBoolValue) {
            output.WriteRawTag(32);
            output.WriteBool(BoolValue);
          }
          if (valueCase_ == ValueOneofCase.IntListValue) {
            output.WriteRawTag(50);
            output.WriteMessage(IntListValue);
          }
          if (valueCase_ == ValueOneofCase.StringListValue) {
            output.WriteRawTag(58);
            output.WriteMessage(StringListValue);
          }
          if (HasBytesValue) {
            output.WriteRawTag(66);
            output.WriteBytes(BytesValue);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasIntValue) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(IntValue);
          }
          if (HasDoubleValue) {
            size += 1 + 8;
          }
          if (HasStringValue) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(StringValue);
          }
          if (HasBoolValue) {
            size += 1 + 1;
          }
          if (valueCase_ == ValueOneofCase.IntListValue) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(IntListValue);
          }
          if (valueCase_ == ValueOneofCase.StringListValue) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(StringListValue);
          }
          if (HasBytesValue) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(BytesValue);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Value other) {
          if (other == null) {
            return;
          }
          switch (other.ValueCase) {
            case ValueOneofCase.IntValue:
              IntValue = other.IntValue;
              break;
            case ValueOneofCase.DoubleValue:
              DoubleValue = other.DoubleValue;
              break;
            case ValueOneofCase.StringValue:
              StringValue = other.StringValue;
              break;
            case ValueOneofCase.BoolValue:
              BoolValue = other.BoolValue;
              break;
            case ValueOneofCase.IntListValue:
              if (IntListValue == null) {
                IntListValue = new global::Google.Ads.AdManager.V1.Report.Types.Value.Types.IntList();
              }
              IntListValue.MergeFrom(other.IntListValue);
              break;
            case ValueOneofCase.StringListValue:
              if (StringListValue == null) {
                StringListValue = new global::Google.Ads.AdManager.V1.Report.Types.Value.Types.StringList();
              }
              StringListValue.MergeFrom(other.StringListValue);
              break;
            case ValueOneofCase.BytesValue:
              BytesValue = other.BytesValue;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                IntValue = input.ReadInt64();
                break;
              }
              case 17: {
                DoubleValue = input.ReadDouble();
                break;
              }
              case 26: {
                StringValue = input.ReadString();
                break;
              }
              case 32: {
                BoolValue = input.ReadBool();
                break;
              }
              case 50: {
                global::Google.Ads.AdManager.V1.Report.Types.Value.Types.IntList subBuilder = new global::Google.Ads.AdManager.V1.Report.Types.Value.Types.IntList();
                if (valueCase_ == ValueOneofCase.IntListValue) {
                  subBuilder.MergeFrom(IntListValue);
                }
                input.ReadMessage(subBuilder);
                IntListValue = subBuilder;
                break;
              }
              case 58: {
                global::Google.Ads.AdManager.V1.Report.Types.Value.Types.StringList subBuilder = new global::Google.Ads.AdManager.V1.Report.Types.Value.Types.StringList();
                if (valueCase_ == ValueOneofCase.StringListValue) {
                  subBuilder.MergeFrom(StringListValue);
                }
                input.ReadMessage(subBuilder);
                StringListValue = subBuilder;
                break;
              }
              case 66: {
                BytesValue = input.ReadBytes();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                IntValue = input.ReadInt64();
                break;
              }
              case 17: {
                DoubleValue = input.ReadDouble();
                break;
              }
              case 26: {
                StringValue = input.ReadString();
                break;
              }
              case 32: {
                BoolValue = input.ReadBool();
                break;
              }
              case 50: {
                global::Google.Ads.AdManager.V1.Report.Types.Value.Types.IntList subBuilder = new global::Google.Ads.AdManager.V1.Report.Types.Value.Types.IntList();
                if (valueCase_ == ValueOneofCase.IntListValue) {
                  subBuilder.MergeFrom(IntListValue);
                }
                input.ReadMessage(subBuilder);
                IntListValue = subBuilder;
                break;
              }
              case 58: {
                global::Google.Ads.AdManager.V1.Report.Types.Value.Types.StringList subBuilder = new global::Google.Ads.AdManager.V1.Report.Types.Value.Types.StringList();
                if (valueCase_ == ValueOneofCase.StringListValue) {
                  subBuilder.MergeFrom(StringListValue);
                }
                input.ReadMessage(subBuilder);
                StringListValue = subBuilder;
                break;
              }
              case 66: {
                BytesValue = input.ReadBytes();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Value message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          /// <summary>
          /// A list of integer values.
          /// </summary>
          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class IntList : pb::IMessage<IntList>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<IntList> _parser = new pb::MessageParser<IntList>(() => new IntList());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<IntList> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Ads.AdManager.V1.Report.Types.Value.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public IntList() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public IntList(IntList other) : this() {
              values_ = other.values_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public IntList Clone() {
              return new IntList(this);
            }

            /// <summary>Field number for the "values" field.</summary>
            public const int ValuesFieldNumber = 1;
            private static readonly pb::FieldCodec<long> _repeated_values_codec
                = pb::FieldCodec.ForInt64(10);
            private readonly pbc::RepeatedField<long> values_ = new pbc::RepeatedField<long>();
            /// <summary>
            /// The values
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public pbc::RepeatedField<long> Values {
              get { return values_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as IntList);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(IntList other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!values_.Equals(other.values_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= values_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              values_.WriteTo(output, _repeated_values_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              values_.WriteTo(ref output, _repeated_values_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              size += values_.CalculateSize(_repeated_values_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(IntList other) {
              if (other == null) {
                return;
              }
              values_.Add(other.values_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10:
                  case 8: {
                    values_.AddEntriesFrom(input, _repeated_values_codec);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10:
                  case 8: {
                    values_.AddEntriesFrom(ref input, _repeated_values_codec);
                    break;
                  }
                }
              }
            }
            #endif

          }

          /// <summary>
          /// A list of string values.
          /// </summary>
          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class StringList : pb::IMessage<StringList>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<StringList> _parser = new pb::MessageParser<StringList>(() => new StringList());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<StringList> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Ads.AdManager.V1.Report.Types.Value.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public StringList() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public StringList(StringList other) : this() {
              values_ = other.values_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public StringList Clone() {
              return new StringList(this);
            }

            /// <summary>Field number for the "values" field.</summary>
            public const int ValuesFieldNumber = 1;
            private static readonly pb::FieldCodec<string> _repeated_values_codec
                = pb::FieldCodec.ForString(10);
            private readonly pbc::RepeatedField<string> values_ = new pbc::RepeatedField<string>();
            /// <summary>
            /// The values
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public pbc::RepeatedField<string> Values {
              get { return values_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as StringList);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(StringList other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!values_.Equals(other.values_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= values_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              values_.WriteTo(output, _repeated_values_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              values_.WriteTo(ref output, _repeated_values_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              size += values_.CalculateSize(_repeated_values_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(StringList other) {
              if (other == null) {
                return;
              }
              values_.Add(other.values_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    values_.AddEntriesFrom(input, _repeated_values_codec);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    values_.AddEntriesFrom(ref input, _repeated_values_codec);
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

      /// <summary>
      /// Represents a sorting in a report.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Sort : pb::IMessage<Sort>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Sort> _parser = new pb::MessageParser<Sort>(() => new Sort());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Sort> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Ads.AdManager.V1.Report.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Sort() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Sort(Sort other) : this() {
          _hasBits0 = other._hasBits0;
          field_ = other.field_ != null ? other.field_.Clone() : null;
          descending_ = other.descending_;
          slice_ = other.slice_ != null ? other.slice_.Clone() : null;
          timePeriodIndex_ = other.timePeriodIndex_;
          metricValueType_ = other.metricValueType_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Sort Clone() {
          return new Sort(this);
        }

        /// <summary>Field number for the "field" field.</summary>
        public const int FieldFieldNumber = 1;
        private global::Google.Ads.AdManager.V1.Report.Types.Field field_;
        /// <summary>
        /// Required. A field (dimension or metric) to sort by.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Ads.AdManager.V1.Report.Types.Field Field {
          get { return field_; }
          set {
            field_ = value;
          }
        }

        /// <summary>Field number for the "descending" field.</summary>
        public const int DescendingFieldNumber = 2;
        private bool descending_;
        /// <summary>
        /// Optional. The sort order. If true the sort will be descending.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Descending {
          get { return descending_; }
          set {
            descending_ = value;
          }
        }

        /// <summary>Field number for the "slice" field.</summary>
        public const int SliceFieldNumber = 3;
        private global::Google.Ads.AdManager.V1.Report.Types.Slice slice_;
        /// <summary>
        /// Optional. Use to sort on a specific slice of data.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Ads.AdManager.V1.Report.Types.Slice Slice {
          get { return slice_; }
          set {
            slice_ = value;
          }
        }

        /// <summary>Field number for the "time_period_index" field.</summary>
        public const int TimePeriodIndexFieldNumber = 4;
        private readonly static int TimePeriodIndexDefaultValue = 0;

        private int timePeriodIndex_;
        /// <summary>
        /// Optional. When using time period columns, use this to sort on a specific
        /// column.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int TimePeriodIndex {
          get { if ((_hasBits0 & 1) != 0) { return timePeriodIndex_; } else { return TimePeriodIndexDefaultValue; } }
          set {
            _hasBits0 |= 1;
            timePeriodIndex_ = value;
          }
        }
        /// <summary>Gets whether the "time_period_index" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasTimePeriodIndex {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "time_period_index" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearTimePeriodIndex() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "metric_value_type" field.</summary>
        public const int MetricValueTypeFieldNumber = 5;
        private readonly static global::Google.Ads.AdManager.V1.Report.Types.MetricValueType MetricValueTypeDefaultValue = global::Google.Ads.AdManager.V1.Report.Types.MetricValueType.Primary;

        private global::Google.Ads.AdManager.V1.Report.Types.MetricValueType metricValueType_;
        /// <summary>
        /// Optional. Use to specify which metric value type to sort on. Defaults to
        /// PRIMARY.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Ads.AdManager.V1.Report.Types.MetricValueType MetricValueType {
          get { if ((_hasBits0 & 2) != 0) { return metricValueType_; } else { return MetricValueTypeDefaultValue; } }
          set {
            _hasBits0 |= 2;
            metricValueType_ = value;
          }
        }
        /// <summary>Gets whether the "metric_value_type" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasMetricValueType {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "metric_value_type" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearMetricValueType() {
          _hasBits0 &= ~2;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Sort);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Sort other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Field, other.Field)) return false;
          if (Descending != other.Descending) return false;
          if (!object.Equals(Slice, other.Slice)) return false;
          if (TimePeriodIndex != other.TimePeriodIndex) return false;
          if (MetricValueType != other.MetricValueType) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (field_ != null) hash ^= Field.GetHashCode();
          if (Descending != false) hash ^= Descending.GetHashCode();
          if (slice_ != null) hash ^= Slice.GetHashCode();
          if (HasTimePeriodIndex) hash ^= TimePeriodIndex.GetHashCode();
          if (HasMetricValueType) hash ^= MetricValueType.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (field_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Field);
          }
          if (Descending != false) {
            output.WriteRawTag(16);
            output.WriteBool(Descending);
          }
          if (slice_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Slice);
          }
          if (HasTimePeriodIndex) {
            output.WriteRawTag(32);
            output.WriteInt32(TimePeriodIndex);
          }
          if (HasMetricValueType) {
            output.WriteRawTag(40);
            output.WriteEnum((int) MetricValueType);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (field_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Field);
          }
          if (Descending != false) {
            output.WriteRawTag(16);
            output.WriteBool(Descending);
          }
          if (slice_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Slice);
          }
          if (HasTimePeriodIndex) {
            output.WriteRawTag(32);
            output.WriteInt32(TimePeriodIndex);
          }
          if (HasMetricValueType) {
            output.WriteRawTag(40);
            output.WriteEnum((int) MetricValueType);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (field_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Field);
          }
          if (Descending != false) {
            size += 1 + 1;
          }
          if (slice_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Slice);
          }
          if (HasTimePeriodIndex) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(TimePeriodIndex);
          }
          if (HasMetricValueType) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MetricValueType);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Sort other) {
          if (other == null) {
            return;
          }
          if (other.field_ != null) {
            if (field_ == null) {
              Field = new global::Google.Ads.AdManager.V1.Report.Types.Field();
            }
            Field.MergeFrom(other.Field);
          }
          if (other.Descending != false) {
            Descending = other.Descending;
          }
          if (other.slice_ != null) {
            if (slice_ == null) {
              Slice = new global::Google.Ads.AdManager.V1.Report.Types.Slice();
            }
            Slice.MergeFrom(other.Slice);
          }
          if (other.HasTimePeriodIndex) {
            TimePeriodIndex = other.TimePeriodIndex;
          }
          if (other.HasMetricValueType) {
            MetricValueType = other.MetricValueType;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (field_ == null) {
                  Field = new global::Google.Ads.AdManager.V1.Report.Types.Field();
                }
                input.ReadMessage(Field);
                break;
              }
              case 16: {
                Descending = input.ReadBool();
                break;
              }
              case 26: {
                if (slice_ == null) {
                  Slice = new global::Google.Ads.AdManager.V1.Report.Types.Slice();
                }
                input.ReadMessage(Slice);
                break;
              }
              case 32: {
                TimePeriodIndex = input.ReadInt32();
                break;
              }
              case 40: {
                MetricValueType = (global::Google.Ads.AdManager.V1.Report.Types.MetricValueType) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (field_ == null) {
                  Field = new global::Google.Ads.AdManager.V1.Report.Types.Field();
                }
                input.ReadMessage(Field);
                break;
              }
              case 16: {
                Descending = input.ReadBool();
                break;
              }
              case 26: {
                if (slice_ == null) {
                  Slice = new global::Google.Ads.AdManager.V1.Report.Types.Slice();
                }
                input.ReadMessage(Slice);
                break;
              }
              case 32: {
                TimePeriodIndex = input.ReadInt32();
                break;
              }
              case 40: {
                MetricValueType = (global::Google.Ads.AdManager.V1.Report.Types.MetricValueType) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// A table containing report data including dimension and metric values.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class DataTable : pb::IMessage<DataTable>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<DataTable> _parser = new pb::MessageParser<DataTable>(() => new DataTable());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<DataTable> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Ads.AdManager.V1.Report.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DataTable() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DataTable(DataTable other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DataTable Clone() {
          return new DataTable(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as DataTable);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(DataTable other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(DataTable other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the DataTable message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          /// <summary>
          /// A row of report data.
          /// </summary>
          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class Row : pb::IMessage<Row>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Row> _parser = new pb::MessageParser<Row>(() => new Row());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<Row> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Ads.AdManager.V1.Report.Types.DataTable.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Row() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Row(Row other) : this() {
              dimensionValues_ = other.dimensionValues_.Clone();
              metricValueGroups_ = other.metricValueGroups_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Row Clone() {
              return new Row(this);
            }

            /// <summary>Field number for the "dimension_values" field.</summary>
            public const int DimensionValuesFieldNumber = 1;
            private static readonly pb::FieldCodec<global::Google.Ads.AdManager.V1.Report.Types.Value> _repeated_dimensionValues_codec
                = pb::FieldCodec.ForMessage(10, global::Google.Ads.AdManager.V1.Report.Types.Value.Parser);
            private readonly pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value> dimensionValues_ = new pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value>();
            /// <summary>
            /// The order of the dimension values is the same as the order of the
            /// dimensions specified in the request.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value> DimensionValues {
              get { return dimensionValues_; }
            }

            /// <summary>Field number for the "metric_value_groups" field.</summary>
            public const int MetricValueGroupsFieldNumber = 2;
            private static readonly pb::FieldCodec<global::Google.Ads.AdManager.V1.Report.Types.DataTable.Types.MetricValueGroup> _repeated_metricValueGroups_codec
                = pb::FieldCodec.ForMessage(18, global::Google.Ads.AdManager.V1.Report.Types.DataTable.Types.MetricValueGroup.Parser);
            private readonly pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.DataTable.Types.MetricValueGroup> metricValueGroups_ = new pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.DataTable.Types.MetricValueGroup>();
            /// <summary>
            ///
            /// The length of the metric_value_groups
            /// field will be equal to the length of the date_ranges field in the
            /// fetch response. The metric_value_groups field is
            /// ordered such that each index corresponds to the date_range at the same
            /// index. For example, given date_ranges [x, y], metric_value_groups will
            /// have a length of two. The first entry in metric_value_groups represents
            /// the metrics for date x and the second entry in metric_value_groups
            /// represents the metrics for date y.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.DataTable.Types.MetricValueGroup> MetricValueGroups {
              get { return metricValueGroups_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as Row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(Row other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!dimensionValues_.Equals(other.dimensionValues_)) return false;
              if(!metricValueGroups_.Equals(other.metricValueGroups_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= dimensionValues_.GetHashCode();
              hash ^= metricValueGroups_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              dimensionValues_.WriteTo(output, _repeated_dimensionValues_codec);
              metricValueGroups_.WriteTo(output, _repeated_metricValueGroups_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              dimensionValues_.WriteTo(ref output, _repeated_dimensionValues_codec);
              metricValueGroups_.WriteTo(ref output, _repeated_metricValueGroups_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              size += dimensionValues_.CalculateSize(_repeated_dimensionValues_codec);
              size += metricValueGroups_.CalculateSize(_repeated_metricValueGroups_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(Row other) {
              if (other == null) {
                return;
              }
              dimensionValues_.Add(other.dimensionValues_);
              metricValueGroups_.Add(other.metricValueGroups_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    dimensionValues_.AddEntriesFrom(input, _repeated_dimensionValues_codec);
                    break;
                  }
                  case 18: {
                    metricValueGroups_.AddEntriesFrom(input, _repeated_metricValueGroups_codec);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    dimensionValues_.AddEntriesFrom(ref input, _repeated_dimensionValues_codec);
                    break;
                  }
                  case 18: {
                    metricValueGroups_.AddEntriesFrom(ref input, _repeated_metricValueGroups_codec);
                    break;
                  }
                }
              }
            }
            #endif

          }

          /// <summary>
          /// Contains all metric values requested for a single date range and set of
          /// column dimension values (returned in the columns field of the response).
          /// The order of the metrics in each field corresponds to the order of the
          /// metrics specified in the request.
          /// </summary>
          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class MetricValueGroup : pb::IMessage<MetricValueGroup>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<MetricValueGroup> _parser = new pb::MessageParser<MetricValueGroup>(() => new MetricValueGroup());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<MetricValueGroup> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Ads.AdManager.V1.Report.Types.DataTable.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public MetricValueGroup() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public MetricValueGroup(MetricValueGroup other) : this() {
              primaryValues_ = other.primaryValues_.Clone();
              primaryPercentOfTotalValues_ = other.primaryPercentOfTotalValues_.Clone();
              comparisonValues_ = other.comparisonValues_.Clone();
              comparisonPercentOfTotalValues_ = other.comparisonPercentOfTotalValues_.Clone();
              absoluteChangeValues_ = other.absoluteChangeValues_.Clone();
              relativeChangeValues_ = other.relativeChangeValues_.Clone();
              flagValues_ = other.flagValues_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public MetricValueGroup Clone() {
              return new MetricValueGroup(this);
            }

            /// <summary>Field number for the "primary_values" field.</summary>
            public const int PrimaryValuesFieldNumber = 1;
            private static readonly pb::FieldCodec<global::Google.Ads.AdManager.V1.Report.Types.Value> _repeated_primaryValues_codec
                = pb::FieldCodec.ForMessage(10, global::Google.Ads.AdManager.V1.Report.Types.Value.Parser);
            private readonly pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value> primaryValues_ = new pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value>();
            /// <summary>
            /// Data for the PRIMARY MetricValueType.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value> PrimaryValues {
              get { return primaryValues_; }
            }

            /// <summary>Field number for the "primary_percent_of_total_values" field.</summary>
            public const int PrimaryPercentOfTotalValuesFieldNumber = 2;
            private static readonly pb::FieldCodec<global::Google.Ads.AdManager.V1.Report.Types.Value> _repeated_primaryPercentOfTotalValues_codec
                = pb::FieldCodec.ForMessage(18, global::Google.Ads.AdManager.V1.Report.Types.Value.Parser);
            private readonly pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value> primaryPercentOfTotalValues_ = new pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value>();
            /// <summary>
            /// Data for the PRIMARY_PERCENT_OF_TOTAL MetricValueType.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value> PrimaryPercentOfTotalValues {
              get { return primaryPercentOfTotalValues_; }
            }

            /// <summary>Field number for the "comparison_values" field.</summary>
            public const int ComparisonValuesFieldNumber = 3;
            private static readonly pb::FieldCodec<global::Google.Ads.AdManager.V1.Report.Types.Value> _repeated_comparisonValues_codec
                = pb::FieldCodec.ForMessage(26, global::Google.Ads.AdManager.V1.Report.Types.Value.Parser);
            private readonly pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value> comparisonValues_ = new pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value>();
            /// <summary>
            /// Data for the COMPARISON MetricValueType.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value> ComparisonValues {
              get { return comparisonValues_; }
            }

            /// <summary>Field number for the "comparison_percent_of_total_values" field.</summary>
            public const int ComparisonPercentOfTotalValuesFieldNumber = 4;
            private static readonly pb::FieldCodec<global::Google.Ads.AdManager.V1.Report.Types.Value> _repeated_comparisonPercentOfTotalValues_codec
                = pb::FieldCodec.ForMessage(34, global::Google.Ads.AdManager.V1.Report.Types.Value.Parser);
            private readonly pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value> comparisonPercentOfTotalValues_ = new pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value>();
            /// <summary>
            /// Data for the COMPARISON_PERCENT_OF_TOTAL MetricValueType.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value> ComparisonPercentOfTotalValues {
              get { return comparisonPercentOfTotalValues_; }
            }

            /// <summary>Field number for the "absolute_change_values" field.</summary>
            public const int AbsoluteChangeValuesFieldNumber = 5;
            private static readonly pb::FieldCodec<global::Google.Ads.AdManager.V1.Report.Types.Value> _repeated_absoluteChangeValues_codec
                = pb::FieldCodec.ForMessage(42, global::Google.Ads.AdManager.V1.Report.Types.Value.Parser);
            private readonly pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value> absoluteChangeValues_ = new pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value>();
            /// <summary>
            /// Data for the ABSOLUTE_CHANGE MetricValueType.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value> AbsoluteChangeValues {
              get { return absoluteChangeValues_; }
            }

            /// <summary>Field number for the "relative_change_values" field.</summary>
            public const int RelativeChangeValuesFieldNumber = 6;
            private static readonly pb::FieldCodec<global::Google.Ads.AdManager.V1.Report.Types.Value> _repeated_relativeChangeValues_codec
                = pb::FieldCodec.ForMessage(50, global::Google.Ads.AdManager.V1.Report.Types.Value.Parser);
            private readonly pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value> relativeChangeValues_ = new pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value>();
            /// <summary>
            /// Data for the RELATIVE_CHANGE MetricValueType.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value> RelativeChangeValues {
              get { return relativeChangeValues_; }
            }

            /// <summary>Field number for the "flag_values" field.</summary>
            public const int FlagValuesFieldNumber = 7;
            private static readonly pb::FieldCodec<bool> _repeated_flagValues_codec
                = pb::FieldCodec.ForBool(58);
            private readonly pbc::RepeatedField<bool> flagValues_ = new pbc::RepeatedField<bool>();
            /// <summary>
            /// If true, the flag's conditions are met. If false, the flag's
            /// conditions are not met. flag_values has the same length as
            /// flags and index i of flag_values represents the flag at index i
            /// of flags.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public pbc::RepeatedField<bool> FlagValues {
              get { return flagValues_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as MetricValueGroup);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(MetricValueGroup other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!primaryValues_.Equals(other.primaryValues_)) return false;
              if(!primaryPercentOfTotalValues_.Equals(other.primaryPercentOfTotalValues_)) return false;
              if(!comparisonValues_.Equals(other.comparisonValues_)) return false;
              if(!comparisonPercentOfTotalValues_.Equals(other.comparisonPercentOfTotalValues_)) return false;
              if(!absoluteChangeValues_.Equals(other.absoluteChangeValues_)) return false;
              if(!relativeChangeValues_.Equals(other.relativeChangeValues_)) return false;
              if(!flagValues_.Equals(other.flagValues_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= primaryValues_.GetHashCode();
              hash ^= primaryPercentOfTotalValues_.GetHashCode();
              hash ^= comparisonValues_.GetHashCode();
              hash ^= comparisonPercentOfTotalValues_.GetHashCode();
              hash ^= absoluteChangeValues_.GetHashCode();
              hash ^= relativeChangeValues_.GetHashCode();
              hash ^= flagValues_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              primaryValues_.WriteTo(output, _repeated_primaryValues_codec);
              primaryPercentOfTotalValues_.WriteTo(output, _repeated_primaryPercentOfTotalValues_codec);
              comparisonValues_.WriteTo(output, _repeated_comparisonValues_codec);
              comparisonPercentOfTotalValues_.WriteTo(output, _repeated_comparisonPercentOfTotalValues_codec);
              absoluteChangeValues_.WriteTo(output, _repeated_absoluteChangeValues_codec);
              relativeChangeValues_.WriteTo(output, _repeated_relativeChangeValues_codec);
              flagValues_.WriteTo(output, _repeated_flagValues_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              primaryValues_.WriteTo(ref output, _repeated_primaryValues_codec);
              primaryPercentOfTotalValues_.WriteTo(ref output, _repeated_primaryPercentOfTotalValues_codec);
              comparisonValues_.WriteTo(ref output, _repeated_comparisonValues_codec);
              comparisonPercentOfTotalValues_.WriteTo(ref output, _repeated_comparisonPercentOfTotalValues_codec);
              absoluteChangeValues_.WriteTo(ref output, _repeated_absoluteChangeValues_codec);
              relativeChangeValues_.WriteTo(ref output, _repeated_relativeChangeValues_codec);
              flagValues_.WriteTo(ref output, _repeated_flagValues_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              size += primaryValues_.CalculateSize(_repeated_primaryValues_codec);
              size += primaryPercentOfTotalValues_.CalculateSize(_repeated_primaryPercentOfTotalValues_codec);
              size += comparisonValues_.CalculateSize(_repeated_comparisonValues_codec);
              size += comparisonPercentOfTotalValues_.CalculateSize(_repeated_comparisonPercentOfTotalValues_codec);
              size += absoluteChangeValues_.CalculateSize(_repeated_absoluteChangeValues_codec);
              size += relativeChangeValues_.CalculateSize(_repeated_relativeChangeValues_codec);
              size += flagValues_.CalculateSize(_repeated_flagValues_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(MetricValueGroup other) {
              if (other == null) {
                return;
              }
              primaryValues_.Add(other.primaryValues_);
              primaryPercentOfTotalValues_.Add(other.primaryPercentOfTotalValues_);
              comparisonValues_.Add(other.comparisonValues_);
              comparisonPercentOfTotalValues_.Add(other.comparisonPercentOfTotalValues_);
              absoluteChangeValues_.Add(other.absoluteChangeValues_);
              relativeChangeValues_.Add(other.relativeChangeValues_);
              flagValues_.Add(other.flagValues_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    primaryValues_.AddEntriesFrom(input, _repeated_primaryValues_codec);
                    break;
                  }
                  case 18: {
                    primaryPercentOfTotalValues_.AddEntriesFrom(input, _repeated_primaryPercentOfTotalValues_codec);
                    break;
                  }
                  case 26: {
                    comparisonValues_.AddEntriesFrom(input, _repeated_comparisonValues_codec);
                    break;
                  }
                  case 34: {
                    comparisonPercentOfTotalValues_.AddEntriesFrom(input, _repeated_comparisonPercentOfTotalValues_codec);
                    break;
                  }
                  case 42: {
                    absoluteChangeValues_.AddEntriesFrom(input, _repeated_absoluteChangeValues_codec);
                    break;
                  }
                  case 50: {
                    relativeChangeValues_.AddEntriesFrom(input, _repeated_relativeChangeValues_codec);
                    break;
                  }
                  case 58:
                  case 56: {
                    flagValues_.AddEntriesFrom(input, _repeated_flagValues_codec);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    primaryValues_.AddEntriesFrom(ref input, _repeated_primaryValues_codec);
                    break;
                  }
                  case 18: {
                    primaryPercentOfTotalValues_.AddEntriesFrom(ref input, _repeated_primaryPercentOfTotalValues_codec);
                    break;
                  }
                  case 26: {
                    comparisonValues_.AddEntriesFrom(ref input, _repeated_comparisonValues_codec);
                    break;
                  }
                  case 34: {
                    comparisonPercentOfTotalValues_.AddEntriesFrom(ref input, _repeated_comparisonPercentOfTotalValues_codec);
                    break;
                  }
                  case 42: {
                    absoluteChangeValues_.AddEntriesFrom(ref input, _repeated_absoluteChangeValues_codec);
                    break;
                  }
                  case 50: {
                    relativeChangeValues_.AddEntriesFrom(ref input, _repeated_relativeChangeValues_codec);
                    break;
                  }
                  case 58:
                  case 56: {
                    flagValues_.AddEntriesFrom(ref input, _repeated_flagValues_codec);
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

      /// <summary>
      /// A dimension or a metric in a report.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Field : pb::IMessage<Field>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Field> _parser = new pb::MessageParser<Field>(() => new Field());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Field> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Ads.AdManager.V1.Report.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Field() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Field(Field other) : this() {
          switch (other.FieldCase) {
            case FieldOneofCase.Dimension:
              Dimension = other.Dimension;
              break;
            case FieldOneofCase.Metric:
              Metric = other.Metric;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Field Clone() {
          return new Field(this);
        }

        /// <summary>Field number for the "dimension" field.</summary>
        public const int DimensionFieldNumber = 1;
        /// <summary>
        /// The dimension this field represents.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Ads.AdManager.V1.Report.Types.Dimension Dimension {
          get { return HasDimension ? (global::Google.Ads.AdManager.V1.Report.Types.Dimension) field_ : global::Google.Ads.AdManager.V1.Report.Types.Dimension.Unspecified; }
          set {
            field_ = value;
            fieldCase_ = FieldOneofCase.Dimension;
          }
        }
        /// <summary>Gets whether the "dimension" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasDimension {
          get { return fieldCase_ == FieldOneofCase.Dimension; }
        }
        /// <summary> Clears the value of the oneof if it's currently set to "dimension" </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearDimension() {
          if (HasDimension) {
            ClearField();
          }
        }

        /// <summary>Field number for the "metric" field.</summary>
        public const int MetricFieldNumber = 2;
        /// <summary>
        /// The metric this field represents.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Ads.AdManager.V1.Report.Types.Metric Metric {
          get { return HasMetric ? (global::Google.Ads.AdManager.V1.Report.Types.Metric) field_ : global::Google.Ads.AdManager.V1.Report.Types.Metric.Unspecified; }
          set {
            field_ = value;
            fieldCase_ = FieldOneofCase.Metric;
          }
        }
        /// <summary>Gets whether the "metric" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasMetric {
          get { return fieldCase_ == FieldOneofCase.Metric; }
        }
        /// <summary> Clears the value of the oneof if it's currently set to "metric" </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearMetric() {
          if (HasMetric) {
            ClearField();
          }
        }

        private object field_;
        /// <summary>Enum of possible cases for the "field" oneof.</summary>
        public enum FieldOneofCase {
          None = 0,
          Dimension = 1,
          Metric = 2,
        }
        private FieldOneofCase fieldCase_ = FieldOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public FieldOneofCase FieldCase {
          get { return fieldCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearField() {
          fieldCase_ = FieldOneofCase.None;
          field_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Field);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Field other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Dimension != other.Dimension) return false;
          if (Metric != other.Metric) return false;
          if (FieldCase != other.FieldCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasDimension) hash ^= Dimension.GetHashCode();
          if (HasMetric) hash ^= Metric.GetHashCode();
          hash ^= (int) fieldCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasDimension) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Dimension);
          }
          if (HasMetric) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Metric);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasDimension) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Dimension);
          }
          if (HasMetric) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Metric);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasDimension) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Dimension);
          }
          if (HasMetric) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Metric);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Field other) {
          if (other == null) {
            return;
          }
          switch (other.FieldCase) {
            case FieldOneofCase.Dimension:
              Dimension = other.Dimension;
              break;
            case FieldOneofCase.Metric:
              Metric = other.Metric;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                field_ = input.ReadEnum();
                fieldCase_ = FieldOneofCase.Dimension;
                break;
              }
              case 16: {
                field_ = input.ReadEnum();
                fieldCase_ = FieldOneofCase.Metric;
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                field_ = input.ReadEnum();
                fieldCase_ = FieldOneofCase.Dimension;
                break;
              }
              case 16: {
                field_ = input.ReadEnum();
                fieldCase_ = FieldOneofCase.Metric;
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Use to specify a slice of data.
      ///
      /// For example, in a report, to focus on just data from the US, specify
      /// `COUNTRY_NAME` for dimension and value: `"United States"`.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Slice : pb::IMessage<Slice>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Slice> _parser = new pb::MessageParser<Slice>(() => new Slice());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Slice> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Ads.AdManager.V1.Report.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Slice() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Slice(Slice other) : this() {
          dimension_ = other.dimension_;
          value_ = other.value_ != null ? other.value_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Slice Clone() {
          return new Slice(this);
        }

        /// <summary>Field number for the "dimension" field.</summary>
        public const int DimensionFieldNumber = 1;
        private global::Google.Ads.AdManager.V1.Report.Types.Dimension dimension_ = global::Google.Ads.AdManager.V1.Report.Types.Dimension.Unspecified;
        /// <summary>
        /// Required. The dimension to slice on.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Ads.AdManager.V1.Report.Types.Dimension Dimension {
          get { return dimension_; }
          set {
            dimension_ = value;
          }
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 2;
        private global::Google.Ads.AdManager.V1.Report.Types.Value value_;
        /// <summary>
        /// Required. The value of the dimension.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Ads.AdManager.V1.Report.Types.Value Value {
          get { return value_; }
          set {
            value_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Slice);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Slice other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Dimension != other.Dimension) return false;
          if (!object.Equals(Value, other.Value)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Dimension != global::Google.Ads.AdManager.V1.Report.Types.Dimension.Unspecified) hash ^= Dimension.GetHashCode();
          if (value_ != null) hash ^= Value.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Dimension != global::Google.Ads.AdManager.V1.Report.Types.Dimension.Unspecified) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Dimension);
          }
          if (value_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Value);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Dimension != global::Google.Ads.AdManager.V1.Report.Types.Dimension.Unspecified) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Dimension);
          }
          if (value_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Value);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Dimension != global::Google.Ads.AdManager.V1.Report.Types.Dimension.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Dimension);
          }
          if (value_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Slice other) {
          if (other == null) {
            return;
          }
          if (other.Dimension != global::Google.Ads.AdManager.V1.Report.Types.Dimension.Unspecified) {
            Dimension = other.Dimension;
          }
          if (other.value_ != null) {
            if (value_ == null) {
              Value = new global::Google.Ads.AdManager.V1.Report.Types.Value();
            }
            Value.MergeFrom(other.Value);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Dimension = (global::Google.Ads.AdManager.V1.Report.Types.Dimension) input.ReadEnum();
                break;
              }
              case 18: {
                if (value_ == null) {
                  Value = new global::Google.Ads.AdManager.V1.Report.Types.Value();
                }
                input.ReadMessage(Value);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Dimension = (global::Google.Ads.AdManager.V1.Report.Types.Dimension) input.ReadEnum();
                break;
              }
              case 18: {
                if (value_ == null) {
                  Value = new global::Google.Ads.AdManager.V1.Report.Types.Value();
                }
                input.ReadMessage(Value);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// A filter over one or more fields.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Filter : pb::IMessage<Filter>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Filter> _parser = new pb::MessageParser<Filter>(() => new Filter());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Filter> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Ads.AdManager.V1.Report.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Filter() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Filter(Filter other) : this() {
          switch (other.TypeCase) {
            case TypeOneofCase.FieldFilter:
              FieldFilter = other.FieldFilter.Clone();
              break;
            case TypeOneofCase.NotFilter:
              NotFilter = other.NotFilter.Clone();
              break;
            case TypeOneofCase.AndFilter:
              AndFilter = other.AndFilter.Clone();
              break;
            case TypeOneofCase.OrFilter:
              OrFilter = other.OrFilter.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Filter Clone() {
          return new Filter(this);
        }

        /// <summary>Field number for the "field_filter" field.</summary>
        public const int FieldFilterFieldNumber = 1;
        /// <summary>
        /// A filter on a single field.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FieldFilter FieldFilter {
          get { return typeCase_ == TypeOneofCase.FieldFilter ? (global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FieldFilter) type_ : null; }
          set {
            type_ = value;
            typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.FieldFilter;
          }
        }

        /// <summary>Field number for the "not_filter" field.</summary>
        public const int NotFilterFieldNumber = 2;
        /// <summary>
        /// A filter whose result is negated.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Ads.AdManager.V1.Report.Types.Filter NotFilter {
          get { return typeCase_ == TypeOneofCase.NotFilter ? (global::Google.Ads.AdManager.V1.Report.Types.Filter) type_ : null; }
          set {
            type_ = value;
            typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.NotFilter;
          }
        }

        /// <summary>Field number for the "and_filter" field.</summary>
        public const int AndFilterFieldNumber = 3;
        /// <summary>
        /// A list of filters whose results are AND-ed.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FilterList AndFilter {
          get { return typeCase_ == TypeOneofCase.AndFilter ? (global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FilterList) type_ : null; }
          set {
            type_ = value;
            typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.AndFilter;
          }
        }

        /// <summary>Field number for the "or_filter" field.</summary>
        public const int OrFilterFieldNumber = 4;
        /// <summary>
        /// A list of filters whose results are OR-ed.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FilterList OrFilter {
          get { return typeCase_ == TypeOneofCase.OrFilter ? (global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FilterList) type_ : null; }
          set {
            type_ = value;
            typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.OrFilter;
          }
        }

        private object type_;
        /// <summary>Enum of possible cases for the "type" oneof.</summary>
        public enum TypeOneofCase {
          None = 0,
          FieldFilter = 1,
          NotFilter = 2,
          AndFilter = 3,
          OrFilter = 4,
        }
        private TypeOneofCase typeCase_ = TypeOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TypeOneofCase TypeCase {
          get { return typeCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearType() {
          typeCase_ = TypeOneofCase.None;
          type_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Filter);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Filter other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(FieldFilter, other.FieldFilter)) return false;
          if (!object.Equals(NotFilter, other.NotFilter)) return false;
          if (!object.Equals(AndFilter, other.AndFilter)) return false;
          if (!object.Equals(OrFilter, other.OrFilter)) return false;
          if (TypeCase != other.TypeCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (typeCase_ == TypeOneofCase.FieldFilter) hash ^= FieldFilter.GetHashCode();
          if (typeCase_ == TypeOneofCase.NotFilter) hash ^= NotFilter.GetHashCode();
          if (typeCase_ == TypeOneofCase.AndFilter) hash ^= AndFilter.GetHashCode();
          if (typeCase_ == TypeOneofCase.OrFilter) hash ^= OrFilter.GetHashCode();
          hash ^= (int) typeCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (typeCase_ == TypeOneofCase.FieldFilter) {
            output.WriteRawTag(10);
            output.WriteMessage(FieldFilter);
          }
          if (typeCase_ == TypeOneofCase.NotFilter) {
            output.WriteRawTag(18);
            output.WriteMessage(NotFilter);
          }
          if (typeCase_ == TypeOneofCase.AndFilter) {
            output.WriteRawTag(26);
            output.WriteMessage(AndFilter);
          }
          if (typeCase_ == TypeOneofCase.OrFilter) {
            output.WriteRawTag(34);
            output.WriteMessage(OrFilter);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (typeCase_ == TypeOneofCase.FieldFilter) {
            output.WriteRawTag(10);
            output.WriteMessage(FieldFilter);
          }
          if (typeCase_ == TypeOneofCase.NotFilter) {
            output.WriteRawTag(18);
            output.WriteMessage(NotFilter);
          }
          if (typeCase_ == TypeOneofCase.AndFilter) {
            output.WriteRawTag(26);
            output.WriteMessage(AndFilter);
          }
          if (typeCase_ == TypeOneofCase.OrFilter) {
            output.WriteRawTag(34);
            output.WriteMessage(OrFilter);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (typeCase_ == TypeOneofCase.FieldFilter) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(FieldFilter);
          }
          if (typeCase_ == TypeOneofCase.NotFilter) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(NotFilter);
          }
          if (typeCase_ == TypeOneofCase.AndFilter) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(AndFilter);
          }
          if (typeCase_ == TypeOneofCase.OrFilter) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(OrFilter);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Filter other) {
          if (other == null) {
            return;
          }
          switch (other.TypeCase) {
            case TypeOneofCase.FieldFilter:
              if (FieldFilter == null) {
                FieldFilter = new global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FieldFilter();
              }
              FieldFilter.MergeFrom(other.FieldFilter);
              break;
            case TypeOneofCase.NotFilter:
              if (NotFilter == null) {
                NotFilter = new global::Google.Ads.AdManager.V1.Report.Types.Filter();
              }
              NotFilter.MergeFrom(other.NotFilter);
              break;
            case TypeOneofCase.AndFilter:
              if (AndFilter == null) {
                AndFilter = new global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FilterList();
              }
              AndFilter.MergeFrom(other.AndFilter);
              break;
            case TypeOneofCase.OrFilter:
              if (OrFilter == null) {
                OrFilter = new global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FilterList();
              }
              OrFilter.MergeFrom(other.OrFilter);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FieldFilter subBuilder = new global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FieldFilter();
                if (typeCase_ == TypeOneofCase.FieldFilter) {
                  subBuilder.MergeFrom(FieldFilter);
                }
                input.ReadMessage(subBuilder);
                FieldFilter = subBuilder;
                break;
              }
              case 18: {
                global::Google.Ads.AdManager.V1.Report.Types.Filter subBuilder = new global::Google.Ads.AdManager.V1.Report.Types.Filter();
                if (typeCase_ == TypeOneofCase.NotFilter) {
                  subBuilder.MergeFrom(NotFilter);
                }
                input.ReadMessage(subBuilder);
                NotFilter = subBuilder;
                break;
              }
              case 26: {
                global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FilterList subBuilder = new global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FilterList();
                if (typeCase_ == TypeOneofCase.AndFilter) {
                  subBuilder.MergeFrom(AndFilter);
                }
                input.ReadMessage(subBuilder);
                AndFilter = subBuilder;
                break;
              }
              case 34: {
                global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FilterList subBuilder = new global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FilterList();
                if (typeCase_ == TypeOneofCase.OrFilter) {
                  subBuilder.MergeFrom(OrFilter);
                }
                input.ReadMessage(subBuilder);
                OrFilter = subBuilder;
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FieldFilter subBuilder = new global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FieldFilter();
                if (typeCase_ == TypeOneofCase.FieldFilter) {
                  subBuilder.MergeFrom(FieldFilter);
                }
                input.ReadMessage(subBuilder);
                FieldFilter = subBuilder;
                break;
              }
              case 18: {
                global::Google.Ads.AdManager.V1.Report.Types.Filter subBuilder = new global::Google.Ads.AdManager.V1.Report.Types.Filter();
                if (typeCase_ == TypeOneofCase.NotFilter) {
                  subBuilder.MergeFrom(NotFilter);
                }
                input.ReadMessage(subBuilder);
                NotFilter = subBuilder;
                break;
              }
              case 26: {
                global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FilterList subBuilder = new global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FilterList();
                if (typeCase_ == TypeOneofCase.AndFilter) {
                  subBuilder.MergeFrom(AndFilter);
                }
                input.ReadMessage(subBuilder);
                AndFilter = subBuilder;
                break;
              }
              case 34: {
                global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FilterList subBuilder = new global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FilterList();
                if (typeCase_ == TypeOneofCase.OrFilter) {
                  subBuilder.MergeFrom(OrFilter);
                }
                input.ReadMessage(subBuilder);
                OrFilter = subBuilder;
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Filter message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          /// <summary>
          /// Supported filter operations.
          /// </summary>
          public enum Operation {
            /// <summary>
            /// For scalar operands, checks if the operand is in the set of provided
            /// filter values.
            ///
            /// For list operands, checks if any element in the operand is in the set
            /// of provided filter values.
            ///
            /// Default value.
            /// </summary>
            [pbr::OriginalName("IN")] In = 0,
            /// <summary>
            /// For scalar operands, checks that the operand is not in the set of
            /// provided filter values.
            ///
            /// For list operands, checks that none of the elements in the operand
            /// is in the set of provided filter values.
            /// </summary>
            [pbr::OriginalName("NOT_IN")] NotIn = 1,
            /// <summary>
            /// For scalar string operands, checks if the operand contains any of the
            /// provided filter substrings.
            ///
            /// For string list operands, checks if any string in the operand contains
            /// any of the provided filter substrings.
            /// </summary>
            [pbr::OriginalName("CONTAINS")] Contains = 2,
            /// <summary>
            /// For scalar string operands, checks that the operand contains none of
            /// the provided filter substrings.
            ///
            /// For string list operands, checks that none of the strings in the
            /// operand contain none of the provided filter substrings.
            /// </summary>
            [pbr::OriginalName("NOT_CONTAINS")] NotContains = 3,
            /// <summary>
            /// Operand is less than the provided filter value.
            /// </summary>
            [pbr::OriginalName("LESS_THAN")] LessThan = 4,
            /// <summary>
            /// Operand is less than or equal to provided filter value.
            /// </summary>
            [pbr::OriginalName("LESS_THAN_EQUALS")] LessThanEquals = 5,
            /// <summary>
            /// Operand is greater than provided filter value.
            /// </summary>
            [pbr::OriginalName("GREATER_THAN")] GreaterThan = 6,
            /// <summary>
            /// Operand is greater than or equal to provided filter value.
            /// </summary>
            [pbr::OriginalName("GREATER_THAN_EQUALS")] GreaterThanEquals = 7,
            /// <summary>
            /// Operand is between provided filter values.
            /// </summary>
            [pbr::OriginalName("BETWEEN")] Between = 8,
            /// <summary>
            /// Operand matches against a regex or set of regexes (one must match)
            /// </summary>
            [pbr::OriginalName("MATCHES")] Matches = 9,
            /// <summary>
            /// Operand negative matches against a regex or set of regexes (none must
            /// match)
            /// </summary>
            [pbr::OriginalName("NOT_MATCHES")] NotMatches = 10,
          }

          /// <summary>
          /// A filter on a specific field.
          /// </summary>
          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class FieldFilter : pb::IMessage<FieldFilter>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<FieldFilter> _parser = new pb::MessageParser<FieldFilter>(() => new FieldFilter());
            private pb::UnknownFieldSet _unknownFields;
            private int _hasBits0;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<FieldFilter> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Ads.AdManager.V1.Report.Types.Filter.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public FieldFilter() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public FieldFilter(FieldFilter other) : this() {
              _hasBits0 = other._hasBits0;
              field_ = other.field_ != null ? other.field_.Clone() : null;
              operation_ = other.operation_;
              values_ = other.values_.Clone();
              slice_ = other.slice_ != null ? other.slice_.Clone() : null;
              timePeriodIndex_ = other.timePeriodIndex_;
              metricValueType_ = other.metricValueType_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public FieldFilter Clone() {
              return new FieldFilter(this);
            }

            /// <summary>Field number for the "field" field.</summary>
            public const int FieldFieldNumber = 1;
            private global::Google.Ads.AdManager.V1.Report.Types.Field field_;
            /// <summary>
            /// Required. The field to filter on.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Google.Ads.AdManager.V1.Report.Types.Field Field {
              get { return field_; }
              set {
                field_ = value;
              }
            }

            /// <summary>Field number for the "operation" field.</summary>
            public const int OperationFieldNumber = 2;
            private global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.Operation operation_ = global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.Operation.In;
            /// <summary>
            /// Required. The operation of this filter.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.Operation Operation {
              get { return operation_; }
              set {
                operation_ = value;
              }
            }

            /// <summary>Field number for the "values" field.</summary>
            public const int ValuesFieldNumber = 3;
            private static readonly pb::FieldCodec<global::Google.Ads.AdManager.V1.Report.Types.Value> _repeated_values_codec
                = pb::FieldCodec.ForMessage(26, global::Google.Ads.AdManager.V1.Report.Types.Value.Parser);
            private readonly pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value> values_ = new pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value>();
            /// <summary>
            /// Required. Values to filter to.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value> Values {
              get { return values_; }
            }

            /// <summary>Field number for the "slice" field.</summary>
            public const int SliceFieldNumber = 4;
            private global::Google.Ads.AdManager.V1.Report.Types.Slice slice_;
            /// <summary>
            /// Optional. Use to filter on a specific slice of data.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Google.Ads.AdManager.V1.Report.Types.Slice Slice {
              get { return slice_; }
              set {
                slice_ = value;
              }
            }

            /// <summary>Field number for the "time_period_index" field.</summary>
            public const int TimePeriodIndexFieldNumber = 5;
            private readonly static int TimePeriodIndexDefaultValue = 0;

            private int timePeriodIndex_;
            /// <summary>
            /// Optional. When using time period columns, use this to filter on a
            /// specific column.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int TimePeriodIndex {
              get { if ((_hasBits0 & 1) != 0) { return timePeriodIndex_; } else { return TimePeriodIndexDefaultValue; } }
              set {
                _hasBits0 |= 1;
                timePeriodIndex_ = value;
              }
            }
            /// <summary>Gets whether the "time_period_index" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasTimePeriodIndex {
              get { return (_hasBits0 & 1) != 0; }
            }
            /// <summary>Clears the value of the "time_period_index" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearTimePeriodIndex() {
              _hasBits0 &= ~1;
            }

            /// <summary>Field number for the "metric_value_type" field.</summary>
            public const int MetricValueTypeFieldNumber = 6;
            private readonly static global::Google.Ads.AdManager.V1.Report.Types.MetricValueType MetricValueTypeDefaultValue = global::Google.Ads.AdManager.V1.Report.Types.MetricValueType.Primary;

            private global::Google.Ads.AdManager.V1.Report.Types.MetricValueType metricValueType_;
            /// <summary>
            /// Optional. Use to specify which metric value type to filter on. Defaults
            /// to PRIMARY.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Google.Ads.AdManager.V1.Report.Types.MetricValueType MetricValueType {
              get { if ((_hasBits0 & 2) != 0) { return metricValueType_; } else { return MetricValueTypeDefaultValue; } }
              set {
                _hasBits0 |= 2;
                metricValueType_ = value;
              }
            }
            /// <summary>Gets whether the "metric_value_type" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasMetricValueType {
              get { return (_hasBits0 & 2) != 0; }
            }
            /// <summary>Clears the value of the "metric_value_type" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearMetricValueType() {
              _hasBits0 &= ~2;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as FieldFilter);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(FieldFilter other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(Field, other.Field)) return false;
              if (Operation != other.Operation) return false;
              if(!values_.Equals(other.values_)) return false;
              if (!object.Equals(Slice, other.Slice)) return false;
              if (TimePeriodIndex != other.TimePeriodIndex) return false;
              if (MetricValueType != other.MetricValueType) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (field_ != null) hash ^= Field.GetHashCode();
              if (Operation != global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.Operation.In) hash ^= Operation.GetHashCode();
              hash ^= values_.GetHashCode();
              if (slice_ != null) hash ^= Slice.GetHashCode();
              if (HasTimePeriodIndex) hash ^= TimePeriodIndex.GetHashCode();
              if (HasMetricValueType) hash ^= MetricValueType.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (field_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(Field);
              }
              if (Operation != global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.Operation.In) {
                output.WriteRawTag(16);
                output.WriteEnum((int) Operation);
              }
              values_.WriteTo(output, _repeated_values_codec);
              if (slice_ != null) {
                output.WriteRawTag(34);
                output.WriteMessage(Slice);
              }
              if (HasTimePeriodIndex) {
                output.WriteRawTag(40);
                output.WriteInt32(TimePeriodIndex);
              }
              if (HasMetricValueType) {
                output.WriteRawTag(48);
                output.WriteEnum((int) MetricValueType);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (field_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(Field);
              }
              if (Operation != global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.Operation.In) {
                output.WriteRawTag(16);
                output.WriteEnum((int) Operation);
              }
              values_.WriteTo(ref output, _repeated_values_codec);
              if (slice_ != null) {
                output.WriteRawTag(34);
                output.WriteMessage(Slice);
              }
              if (HasTimePeriodIndex) {
                output.WriteRawTag(40);
                output.WriteInt32(TimePeriodIndex);
              }
              if (HasMetricValueType) {
                output.WriteRawTag(48);
                output.WriteEnum((int) MetricValueType);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (field_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Field);
              }
              if (Operation != global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.Operation.In) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Operation);
              }
              size += values_.CalculateSize(_repeated_values_codec);
              if (slice_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Slice);
              }
              if (HasTimePeriodIndex) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(TimePeriodIndex);
              }
              if (HasMetricValueType) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MetricValueType);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(FieldFilter other) {
              if (other == null) {
                return;
              }
              if (other.field_ != null) {
                if (field_ == null) {
                  Field = new global::Google.Ads.AdManager.V1.Report.Types.Field();
                }
                Field.MergeFrom(other.Field);
              }
              if (other.Operation != global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.Operation.In) {
                Operation = other.Operation;
              }
              values_.Add(other.values_);
              if (other.slice_ != null) {
                if (slice_ == null) {
                  Slice = new global::Google.Ads.AdManager.V1.Report.Types.Slice();
                }
                Slice.MergeFrom(other.Slice);
              }
              if (other.HasTimePeriodIndex) {
                TimePeriodIndex = other.TimePeriodIndex;
              }
              if (other.HasMetricValueType) {
                MetricValueType = other.MetricValueType;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (field_ == null) {
                      Field = new global::Google.Ads.AdManager.V1.Report.Types.Field();
                    }
                    input.ReadMessage(Field);
                    break;
                  }
                  case 16: {
                    Operation = (global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.Operation) input.ReadEnum();
                    break;
                  }
                  case 26: {
                    values_.AddEntriesFrom(input, _repeated_values_codec);
                    break;
                  }
                  case 34: {
                    if (slice_ == null) {
                      Slice = new global::Google.Ads.AdManager.V1.Report.Types.Slice();
                    }
                    input.ReadMessage(Slice);
                    break;
                  }
                  case 40: {
                    TimePeriodIndex = input.ReadInt32();
                    break;
                  }
                  case 48: {
                    MetricValueType = (global::Google.Ads.AdManager.V1.Report.Types.MetricValueType) input.ReadEnum();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    if (field_ == null) {
                      Field = new global::Google.Ads.AdManager.V1.Report.Types.Field();
                    }
                    input.ReadMessage(Field);
                    break;
                  }
                  case 16: {
                    Operation = (global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.Operation) input.ReadEnum();
                    break;
                  }
                  case 26: {
                    values_.AddEntriesFrom(ref input, _repeated_values_codec);
                    break;
                  }
                  case 34: {
                    if (slice_ == null) {
                      Slice = new global::Google.Ads.AdManager.V1.Report.Types.Slice();
                    }
                    input.ReadMessage(Slice);
                    break;
                  }
                  case 40: {
                    TimePeriodIndex = input.ReadInt32();
                    break;
                  }
                  case 48: {
                    MetricValueType = (global::Google.Ads.AdManager.V1.Report.Types.MetricValueType) input.ReadEnum();
                    break;
                  }
                }
              }
            }
            #endif

          }

          /// <summary>
          /// A list of filters.
          /// </summary>
          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class FilterList : pb::IMessage<FilterList>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<FilterList> _parser = new pb::MessageParser<FilterList>(() => new FilterList());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<FilterList> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Ads.AdManager.V1.Report.Types.Filter.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public FilterList() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public FilterList(FilterList other) : this() {
              filters_ = other.filters_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public FilterList Clone() {
              return new FilterList(this);
            }

            /// <summary>Field number for the "filters" field.</summary>
            public const int FiltersFieldNumber = 1;
            private static readonly pb::FieldCodec<global::Google.Ads.AdManager.V1.Report.Types.Filter> _repeated_filters_codec
                = pb::FieldCodec.ForMessage(10, global::Google.Ads.AdManager.V1.Report.Types.Filter.Parser);
            private readonly pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Filter> filters_ = new pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Filter>();
            /// <summary>
            /// Required. A list of filters.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Filter> Filters {
              get { return filters_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as FilterList);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(FilterList other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!filters_.Equals(other.filters_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= filters_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              filters_.WriteTo(output, _repeated_filters_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              filters_.WriteTo(ref output, _repeated_filters_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              size += filters_.CalculateSize(_repeated_filters_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(FilterList other) {
              if (other == null) {
                return;
              }
              filters_.Add(other.filters_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    filters_.AddEntriesFrom(input, _repeated_filters_codec);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    filters_.AddEntriesFrom(ref input, _repeated_filters_codec);
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

      /// <summary>
      /// A flag for a report. Flags are used show if certain thresholds are met.
      /// Result rows that match the filter will have the corresponding
      /// [MetricValueGroup.flagValues][MetricValueGroup] index set to true.
      /// For more information about flags see:
      /// https://support.google.com/admanager/answer/15079975
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Flag : pb::IMessage<Flag>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Flag> _parser = new pb::MessageParser<Flag>(() => new Flag());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Flag> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Ads.AdManager.V1.Report.Descriptor.NestedTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Flag() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Flag(Flag other) : this() {
          filters_ = other.filters_.Clone();
          name_ = other.name_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Flag Clone() {
          return new Flag(this);
        }

        /// <summary>Field number for the "filters" field.</summary>
        public const int FiltersFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Google.Ads.AdManager.V1.Report.Types.Filter> _repeated_filters_codec
            = pb::FieldCodec.ForMessage(10, global::Google.Ads.AdManager.V1.Report.Types.Filter.Parser);
        private readonly pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Filter> filters_ = new pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Filter>();
        /// <summary>
        /// Required. Filters to apply for the flag.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Filter> Filters {
          get { return filters_; }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        /// <summary>
        /// Optional. Name of the flag.
        /// The flag names RED, YELLOW, GREEN, BLUE, PURPLE, and GREY correspond to
        /// the colored flags that appear in the UI. The UI will not display flags
        /// with other names, but they are available for use by API clients.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Flag);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Flag other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!filters_.Equals(other.filters_)) return false;
          if (Name != other.Name) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= filters_.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          filters_.WriteTo(output, _repeated_filters_codec);
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          filters_.WriteTo(ref output, _repeated_filters_codec);
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          size += filters_.CalculateSize(_repeated_filters_codec);
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Flag other) {
          if (other == null) {
            return;
          }
          filters_.Add(other.filters_);
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                filters_.AddEntriesFrom(input, _repeated_filters_codec);
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                filters_.AddEntriesFrom(ref input, _repeated_filters_codec);
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// A date range for a report.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class DateRange : pb::IMessage<DateRange>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<DateRange> _parser = new pb::MessageParser<DateRange>(() => new DateRange());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<DateRange> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Ads.AdManager.V1.Report.Descriptor.NestedTypes[7]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DateRange() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DateRange(DateRange other) : this() {
          switch (other.DateRangeTypeCase) {
            case DateRangeTypeOneofCase.Fixed:
              Fixed = other.Fixed.Clone();
              break;
            case DateRangeTypeOneofCase.Relative:
              Relative = other.Relative;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DateRange Clone() {
          return new DateRange(this);
        }

        /// <summary>Field number for the "fixed" field.</summary>
        public const int FixedFieldNumber = 1;
        /// <summary>
        /// A fixed date range.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Ads.AdManager.V1.Report.Types.DateRange.Types.FixedDateRange Fixed {
          get { return dateRangeTypeCase_ == DateRangeTypeOneofCase.Fixed ? (global::Google.Ads.AdManager.V1.Report.Types.DateRange.Types.FixedDateRange) dateRangeType_ : null; }
          set {
            dateRangeType_ = value;
            dateRangeTypeCase_ = value == null ? DateRangeTypeOneofCase.None : DateRangeTypeOneofCase.Fixed;
          }
        }

        /// <summary>Field number for the "relative" field.</summary>
        public const int RelativeFieldNumber = 2;
        /// <summary>
        /// A relative date range.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Ads.AdManager.V1.Report.Types.DateRange.Types.RelativeDateRange Relative {
          get { return HasRelative ? (global::Google.Ads.AdManager.V1.Report.Types.DateRange.Types.RelativeDateRange) dateRangeType_ : global::Google.Ads.AdManager.V1.Report.Types.DateRange.Types.RelativeDateRange.Unspecified; }
          set {
            dateRangeType_ = value;
            dateRangeTypeCase_ = DateRangeTypeOneofCase.Relative;
          }
        }
        /// <summary>Gets whether the "relative" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasRelative {
          get { return dateRangeTypeCase_ == DateRangeTypeOneofCase.Relative; }
        }
        /// <summary> Clears the value of the oneof if it's currently set to "relative" </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearRelative() {
          if (HasRelative) {
            ClearDateRangeType();
          }
        }

        private object dateRangeType_;
        /// <summary>Enum of possible cases for the "date_range_type" oneof.</summary>
        public enum DateRangeTypeOneofCase {
          None = 0,
          Fixed = 1,
          Relative = 2,
        }
        private DateRangeTypeOneofCase dateRangeTypeCase_ = DateRangeTypeOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DateRangeTypeOneofCase DateRangeTypeCase {
          get { return dateRangeTypeCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearDateRangeType() {
          dateRangeTypeCase_ = DateRangeTypeOneofCase.None;
          dateRangeType_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as DateRange);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(DateRange other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Fixed, other.Fixed)) return false;
          if (Relative != other.Relative) return false;
          if (DateRangeTypeCase != other.DateRangeTypeCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (dateRangeTypeCase_ == DateRangeTypeOneofCase.Fixed) hash ^= Fixed.GetHashCode();
          if (HasRelative) hash ^= Relative.GetHashCode();
          hash ^= (int) dateRangeTypeCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (dateRangeTypeCase_ == DateRangeTypeOneofCase.Fixed) {
            output.WriteRawTag(10);
            output.WriteMessage(Fixed);
          }
          if (HasRelative) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Relative);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (dateRangeTypeCase_ == DateRangeTypeOneofCase.Fixed) {
            output.WriteRawTag(10);
            output.WriteMessage(Fixed);
          }
          if (HasRelative) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Relative);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (dateRangeTypeCase_ == DateRangeTypeOneofCase.Fixed) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Fixed);
          }
          if (HasRelative) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Relative);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(DateRange other) {
          if (other == null) {
            return;
          }
          switch (other.DateRangeTypeCase) {
            case DateRangeTypeOneofCase.Fixed:
              if (Fixed == null) {
                Fixed = new global::Google.Ads.AdManager.V1.Report.Types.DateRange.Types.FixedDateRange();
              }
              Fixed.MergeFrom(other.Fixed);
              break;
            case DateRangeTypeOneofCase.Relative:
              Relative = other.Relative;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                global::Google.Ads.AdManager.V1.Report.Types.DateRange.Types.FixedDateRange subBuilder = new global::Google.Ads.AdManager.V1.Report.Types.DateRange.Types.FixedDateRange();
                if (dateRangeTypeCase_ == DateRangeTypeOneofCase.Fixed) {
                  subBuilder.MergeFrom(Fixed);
                }
                input.ReadMessage(subBuilder);
                Fixed = subBuilder;
                break;
              }
              case 16: {
                dateRangeType_ = input.ReadEnum();
                dateRangeTypeCase_ = DateRangeTypeOneofCase.Relative;
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                global::Google.Ads.AdManager.V1.Report.Types.DateRange.Types.FixedDateRange subBuilder = new global::Google.Ads.AdManager.V1.Report.Types.DateRange.Types.FixedDateRange();
                if (dateRangeTypeCase_ == DateRangeTypeOneofCase.Fixed) {
                  subBuilder.MergeFrom(Fixed);
                }
                input.ReadMessage(subBuilder);
                Fixed = subBuilder;
                break;
              }
              case 16: {
                dateRangeType_ = input.ReadEnum();
                dateRangeTypeCase_ = DateRangeTypeOneofCase.Relative;
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the DateRange message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          /// <summary>
          /// Options for relative date ranges.
          /// </summary>
          public enum RelativeDateRange {
            /// <summary>
            /// Default value. This value is unused.
            /// </summary>
            [pbr::OriginalName("RELATIVE_DATE_RANGE_UNSPECIFIED")] Unspecified = 0,
            /// <summary>
            /// The date the report is run.
            /// </summary>
            [pbr::OriginalName("TODAY")] Today = 1,
            /// <summary>
            /// The date a day before the date that the report is run.
            /// </summary>
            [pbr::OriginalName("YESTERDAY")] Yesterday = 2,
            /// <summary>
            /// The full week in which this report is run. Could include dates in
            /// the future.
            /// </summary>
            [pbr::OriginalName("THIS_WEEK")] ThisWeek = 3,
            /// <summary>
            /// From the beginning of the calendar week (Monday to Sunday) in which the
            /// up to and including the day the report is run.
            /// </summary>
            [pbr::OriginalName("THIS_WEEK_TO_DATE")] ThisWeekToDate = 29,
            /// <summary>
            /// The full month in which this report is run. Could include dates in
            /// the future.
            /// </summary>
            [pbr::OriginalName("THIS_MONTH")] ThisMonth = 4,
            /// <summary>
            /// From the beginning of the calendar month in which the report is run, to
            /// up to and including the day the report is run.
            /// </summary>
            [pbr::OriginalName("THIS_MONTH_TO_DATE")] ThisMonthToDate = 26,
            /// <summary>
            /// The full quarter in which this report is run. Could include dates
            /// in the future.
            /// </summary>
            [pbr::OriginalName("THIS_QUARTER")] ThisQuarter = 5,
            /// <summary>
            /// From the beginning of the calendar quarter in which the report is run,
            /// up to and including the day the report is run.
            /// </summary>
            [pbr::OriginalName("THIS_QUARTER_TO_DATE")] ThisQuarterToDate = 27,
            /// <summary>
            /// The full year in which this report is run. Could include dates in
            /// the future.
            /// </summary>
            [pbr::OriginalName("THIS_YEAR")] ThisYear = 6,
            /// <summary>
            /// From the beginning of the calendar year in which the report is run, to
            /// up to and including the day the report is run.
            /// </summary>
            [pbr::OriginalName("THIS_YEAR_TO_DATE")] ThisYearToDate = 28,
            /// <summary>
            /// The entire previous calendar week, Monday to Sunday (inclusive),
            /// preceding the calendar week the report is run.
            /// </summary>
            [pbr::OriginalName("LAST_WEEK")] LastWeek = 7,
            /// <summary>
            /// The entire previous calendar month preceding the calendar month the
            /// report is run.
            /// </summary>
            [pbr::OriginalName("LAST_MONTH")] LastMonth = 8,
            /// <summary>
            /// The entire previous calendar quarter preceding the calendar quarter the
            /// report is run.
            /// </summary>
            [pbr::OriginalName("LAST_QUARTER")] LastQuarter = 9,
            /// <summary>
            /// The entire previous calendar year preceding the calendar year the
            /// report is run.
            /// </summary>
            [pbr::OriginalName("LAST_YEAR")] LastYear = 10,
            /// <summary>
            /// The 7 days preceding the day the report is run.
            /// </summary>
            [pbr::OriginalName("LAST_7_DAYS")] Last7Days = 11,
            /// <summary>
            /// The 30 days preceding the day the report is run.
            /// </summary>
            [pbr::OriginalName("LAST_30_DAYS")] Last30Days = 12,
            /// <summary>
            /// The 60 days preceding the day the report is run.
            /// </summary>
            [pbr::OriginalName("LAST_60_DAYS")] Last60Days = 13,
            /// <summary>
            /// The 90 days preceding the day the report is run.
            /// </summary>
            [pbr::OriginalName("LAST_90_DAYS")] Last90Days = 14,
            /// <summary>
            /// The 180 days preceding the day the report is run.
            /// </summary>
            [pbr::OriginalName("LAST_180_DAYS")] Last180Days = 15,
            /// <summary>
            /// The 360 days preceding the day the report is run.
            /// </summary>
            [pbr::OriginalName("LAST_360_DAYS")] Last360Days = 16,
            /// <summary>
            /// The 365 days preceding the day the report is run.
            /// </summary>
            [pbr::OriginalName("LAST_365_DAYS")] Last365Days = 17,
            /// <summary>
            /// The entire previous 3 calendar months preceding the calendar month the
            /// report is run.
            /// </summary>
            [pbr::OriginalName("LAST_3_MONTHS")] Last3Months = 18,
            /// <summary>
            /// The entire previous 6 calendar months preceding the calendar month the
            /// report is run.
            /// </summary>
            [pbr::OriginalName("LAST_6_MONTHS")] Last6Months = 19,
            /// <summary>
            /// The entire previous 6 calendar months preceding the calendar month the
            /// report is run.
            /// </summary>
            [pbr::OriginalName("LAST_12_MONTHS")] Last12Months = 20,
            /// <summary>
            /// From 3 years before the report is run, to the day before the report is
            /// run, inclusive.
            /// </summary>
            [pbr::OriginalName("ALL_AVAILABLE")] AllAvailable = 21,
            /// <summary>
            /// Only valid when used in the comparison_date_range field. The complete
            /// period preceding the date period provided in date_range.
            ///
            /// In the case where date_range is a FixedDateRange of N days, this will
            /// be a period of N days where the end date is the date preceding the
            /// start date of the date_range.
            ///
            /// In the case where date_range is a RelativeDateRange, this will be a
            /// period of the same time frame preceding the date_range. In the case
            /// where the date_range does not capture the full period because a report
            /// is run in the middle of that period, this will still be the full
            /// preceding period. For example, if date_range is THIS_WEEK, but the
            /// report is run on a Wednesday, THIS_WEEK will be Monday - Wednesday, but
            /// PREVIOUS_PERIOD will be Monday - Sunday.
            /// </summary>
            [pbr::OriginalName("PREVIOUS_PERIOD")] PreviousPeriod = 22,
            /// <summary>
            /// Only valid when used in the comparison_date_range field. The period
            /// starting 1 year prior to the date period provided in date_range.
            ///
            /// In the case where date_range is a FixedDateRange, this will be a date
            /// range starting 1 year prior to the date_range start date and ending 1
            /// year prior to the date_range end date.
            ///
            /// In the case where date_range is a RelativeDateRange, this will be a
            /// period of the same time frame exactly 1 year prior to the date_range.
            /// In the case where the date_range does not capture the full period
            /// because a report is run in the middle of that period, this will still
            /// be the full period 1 year prior. For example, if date range is
            /// THIS_WEEK, but the report is run on a Wednesday, THIS_WEEK will be
            /// Monday - Wednesday, but SAME_PERIOD_PREVIOUS_YEAR will be Monday -
            /// Sunday.
            /// </summary>
            [pbr::OriginalName("SAME_PERIOD_PREVIOUS_YEAR")] SamePeriodPreviousYear = 24,
          }

          /// <summary>
          /// A date range between two fixed dates (inclusive of end date).
          /// </summary>
          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class FixedDateRange : pb::IMessage<FixedDateRange>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<FixedDateRange> _parser = new pb::MessageParser<FixedDateRange>(() => new FixedDateRange());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<FixedDateRange> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Ads.AdManager.V1.Report.Types.DateRange.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public FixedDateRange() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public FixedDateRange(FixedDateRange other) : this() {
              startDate_ = other.startDate_ != null ? other.startDate_.Clone() : null;
              endDate_ = other.endDate_ != null ? other.endDate_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public FixedDateRange Clone() {
              return new FixedDateRange(this);
            }

            /// <summary>Field number for the "start_date" field.</summary>
            public const int StartDateFieldNumber = 1;
            private global::Google.Type.Date startDate_;
            /// <summary>
            /// Required. The start date of this date range.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Google.Type.Date StartDate {
              get { return startDate_; }
              set {
                startDate_ = value;
              }
            }

            /// <summary>Field number for the "end_date" field.</summary>
            public const int EndDateFieldNumber = 2;
            private global::Google.Type.Date endDate_;
            /// <summary>
            /// Required. The end date (inclusive) of this date range.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Google.Type.Date EndDate {
              get { return endDate_; }
              set {
                endDate_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as FixedDateRange);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(FixedDateRange other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(StartDate, other.StartDate)) return false;
              if (!object.Equals(EndDate, other.EndDate)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (startDate_ != null) hash ^= StartDate.GetHashCode();
              if (endDate_ != null) hash ^= EndDate.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (startDate_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(StartDate);
              }
              if (endDate_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(EndDate);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (startDate_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(StartDate);
              }
              if (endDate_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(EndDate);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (startDate_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartDate);
              }
              if (endDate_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndDate);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(FixedDateRange other) {
              if (other == null) {
                return;
              }
              if (other.startDate_ != null) {
                if (startDate_ == null) {
                  StartDate = new global::Google.Type.Date();
                }
                StartDate.MergeFrom(other.StartDate);
              }
              if (other.endDate_ != null) {
                if (endDate_ == null) {
                  EndDate = new global::Google.Type.Date();
                }
                EndDate.MergeFrom(other.EndDate);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (startDate_ == null) {
                      StartDate = new global::Google.Type.Date();
                    }
                    input.ReadMessage(StartDate);
                    break;
                  }
                  case 18: {
                    if (endDate_ == null) {
                      EndDate = new global::Google.Type.Date();
                    }
                    input.ReadMessage(EndDate);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    if (startDate_ == null) {
                      StartDate = new global::Google.Type.Date();
                    }
                    input.ReadMessage(StartDate);
                    break;
                  }
                  case 18: {
                    if (endDate_ == null) {
                      EndDate = new global::Google.Type.Date();
                    }
                    input.ReadMessage(EndDate);
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

    }
    #endregion

  }

  /// <summary>
  /// The definition of how a report should be run.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ReportDefinition : pb::IMessage<ReportDefinition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReportDefinition> _parser = new pb::MessageParser<ReportDefinition>(() => new ReportDefinition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ReportDefinition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.AdManager.V1.ReportMessagesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReportDefinition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReportDefinition(ReportDefinition other) : this() {
      dimensions_ = other.dimensions_.Clone();
      metrics_ = other.metrics_.Clone();
      filters_ = other.filters_.Clone();
      timeZoneSource_ = other.timeZoneSource_;
      timeZone_ = other.timeZone_;
      currencyCode_ = other.currencyCode_;
      dateRange_ = other.dateRange_ != null ? other.dateRange_.Clone() : null;
      comparisonDateRange_ = other.comparisonDateRange_ != null ? other.comparisonDateRange_.Clone() : null;
      customDimensionKeyIds_ = other.customDimensionKeyIds_.Clone();
      lineItemCustomFieldIds_ = other.lineItemCustomFieldIds_.Clone();
      orderCustomFieldIds_ = other.orderCustomFieldIds_.Clone();
      creativeCustomFieldIds_ = other.creativeCustomFieldIds_.Clone();
      reportType_ = other.reportType_;
      timePeriodColumn_ = other.timePeriodColumn_;
      flags_ = other.flags_.Clone();
      sorts_ = other.sorts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReportDefinition Clone() {
      return new ReportDefinition(this);
    }

    /// <summary>Field number for the "dimensions" field.</summary>
    public const int DimensionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Ads.AdManager.V1.Report.Types.Dimension> _repeated_dimensions_codec
        = pb::FieldCodec.ForEnum(10, x => (int) x, x => (global::Google.Ads.AdManager.V1.Report.Types.Dimension) x);
    private readonly pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Dimension> dimensions_ = new pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Dimension>();
    /// <summary>
    /// Required. The list of dimensions to report on. If empty, the report will
    /// have no dimensions, and any metrics will be totals.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Dimension> Dimensions {
      get { return dimensions_; }
    }

    /// <summary>Field number for the "metrics" field.</summary>
    public const int MetricsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Ads.AdManager.V1.Report.Types.Metric> _repeated_metrics_codec
        = pb::FieldCodec.ForEnum(18, x => (int) x, x => (global::Google.Ads.AdManager.V1.Report.Types.Metric) x);
    private readonly pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Metric> metrics_ = new pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Metric>();
    /// <summary>
    /// Required. The list of metrics to report on. If empty, the report will have
    /// no metrics.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Metric> Metrics {
      get { return metrics_; }
    }

    /// <summary>Field number for the "filters" field.</summary>
    public const int FiltersFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Ads.AdManager.V1.Report.Types.Filter> _repeated_filters_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Ads.AdManager.V1.Report.Types.Filter.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Filter> filters_ = new pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Filter>();
    /// <summary>
    /// Optional. The filters for this report.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Filter> Filters {
      get { return filters_; }
    }

    /// <summary>Field number for the "time_zone_source" field.</summary>
    public const int TimeZoneSourceFieldNumber = 20;
    private global::Google.Ads.AdManager.V1.Report.Types.TimeZoneSource timeZoneSource_ = global::Google.Ads.AdManager.V1.Report.Types.TimeZoneSource.Unspecified;
    /// <summary>
    /// Optional. Where to get the time zone for this report. Defaults to using the
    /// network time zone setting (PUBLISHER). If source is PROVIDED, the time_zone
    /// field in the report definition must also be provided with the desired time
    /// zone.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Ads.AdManager.V1.Report.Types.TimeZoneSource TimeZoneSource {
      get { return timeZoneSource_; }
      set {
        timeZoneSource_ = value;
      }
    }

    /// <summary>Field number for the "time_zone" field.</summary>
    public const int TimeZoneFieldNumber = 4;
    private string timeZone_ = "";
    /// <summary>
    /// Optional. If time_zone_source is PROVIDED, this is the time zone to use for
    /// this report. Leave empty for any other time zone source. Time zone in IANA
    /// format (e.g. "America/New_York").
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TimeZone {
      get { return timeZone_; }
      set {
        timeZone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "currency_code" field.</summary>
    public const int CurrencyCodeFieldNumber = 5;
    private string currencyCode_ = "";
    /// <summary>
    /// Optional. The ISO 4217 currency code for this report. Defaults to publisher
    /// currency code if not specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CurrencyCode {
      get { return currencyCode_; }
      set {
        currencyCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "date_range" field.</summary>
    public const int DateRangeFieldNumber = 6;
    private global::Google.Ads.AdManager.V1.Report.Types.DateRange dateRange_;
    /// <summary>
    /// Required. The primary date range of this report.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Ads.AdManager.V1.Report.Types.DateRange DateRange {
      get { return dateRange_; }
      set {
        dateRange_ = value;
      }
    }

    /// <summary>Field number for the "comparison_date_range" field.</summary>
    public const int ComparisonDateRangeFieldNumber = 9;
    private global::Google.Ads.AdManager.V1.Report.Types.DateRange comparisonDateRange_;
    /// <summary>
    /// Optional. The comparison date range of this report. If unspecified, the
    /// report will not have any comparison metrics.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Ads.AdManager.V1.Report.Types.DateRange ComparisonDateRange {
      get { return comparisonDateRange_; }
      set {
        comparisonDateRange_ = value;
      }
    }

    /// <summary>Field number for the "custom_dimension_key_ids" field.</summary>
    public const int CustomDimensionKeyIdsFieldNumber = 7;
    private static readonly pb::FieldCodec<long> _repeated_customDimensionKeyIds_codec
        = pb::FieldCodec.ForInt64(58);
    private readonly pbc::RepeatedField<long> customDimensionKeyIds_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// Optional. Custom Dimension keys that represent CUSTOM_DIMENSION_*
    /// dimensions. The index of this repeated field corresponds to the index on
    /// each dimension. For example, custom_dimension_key_ids[0] describes
    /// CUSTOM_DIMENSION_0_VALUE_ID and CUSTOM_DIMENSION_0_VALUE.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> CustomDimensionKeyIds {
      get { return customDimensionKeyIds_; }
    }

    /// <summary>Field number for the "line_item_custom_field_ids" field.</summary>
    public const int LineItemCustomFieldIdsFieldNumber = 11;
    private static readonly pb::FieldCodec<long> _repeated_lineItemCustomFieldIds_codec
        = pb::FieldCodec.ForInt64(90);
    private readonly pbc::RepeatedField<long> lineItemCustomFieldIds_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// Optional. Custom field IDs that represent LINE_ITEM_CUSTOM_FIELD_*
    /// dimensions. The index of this repeated field corresponds to the index on
    /// each dimension. For example, line_item_custom_field_ids[0] describes
    /// LINE_ITEM_CUSTOM_FIELD_0_OPTION_ID and LINE_ITEM_CUSTOM_FIELD_0_VALUE.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> LineItemCustomFieldIds {
      get { return lineItemCustomFieldIds_; }
    }

    /// <summary>Field number for the "order_custom_field_ids" field.</summary>
    public const int OrderCustomFieldIdsFieldNumber = 12;
    private static readonly pb::FieldCodec<long> _repeated_orderCustomFieldIds_codec
        = pb::FieldCodec.ForInt64(98);
    private readonly pbc::RepeatedField<long> orderCustomFieldIds_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// Optional. Custom field IDs that represent ORDER_CUSTOM_FIELD_*
    /// dimensions. The index of this repeated field corresponds to the index on
    /// each dimension. For example, order_custom_field_ids[0] describes
    /// ORDER_CUSTOM_FIELD_0_OPTION_ID and ORDER_CUSTOM_FIELD_0_VALUE.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> OrderCustomFieldIds {
      get { return orderCustomFieldIds_; }
    }

    /// <summary>Field number for the "creative_custom_field_ids" field.</summary>
    public const int CreativeCustomFieldIdsFieldNumber = 13;
    private static readonly pb::FieldCodec<long> _repeated_creativeCustomFieldIds_codec
        = pb::FieldCodec.ForInt64(106);
    private readonly pbc::RepeatedField<long> creativeCustomFieldIds_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// Optional. Custom field IDs that represent CREATIVE_CUSTOM_FIELD_*
    /// dimensions. The index of this repeated field corresponds to the index on
    /// each dimension. For example, creative_custom_field_ids[0] describes
    /// CREATIVE_CUSTOM_FIELD_0_OPTION_ID and CREATIVE_CUSTOM_FIELD_0_VALUE.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> CreativeCustomFieldIds {
      get { return creativeCustomFieldIds_; }
    }

    /// <summary>Field number for the "report_type" field.</summary>
    public const int ReportTypeFieldNumber = 8;
    private global::Google.Ads.AdManager.V1.Report.Types.ReportType reportType_ = global::Google.Ads.AdManager.V1.Report.Types.ReportType.Unspecified;
    /// <summary>
    /// Required. The type of this report.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Ads.AdManager.V1.Report.Types.ReportType ReportType {
      get { return reportType_; }
      set {
        reportType_ = value;
      }
    }

    /// <summary>Field number for the "time_period_column" field.</summary>
    public const int TimePeriodColumnFieldNumber = 10;
    private global::Google.Ads.AdManager.V1.Report.Types.TimePeriodColumn timePeriodColumn_ = global::Google.Ads.AdManager.V1.Report.Types.TimePeriodColumn.Unspecified;
    /// <summary>
    /// Optional. Include a time period column to introduce comparison columns in
    /// the report for each generated period. For example, set to  "QUARTERS" here
    /// to have a column for each quarter present in the primary date range. If
    /// "PREVIOUS PERIOD" is specified in comparison_date_range, then each quarter
    /// column will also include comparison values for its relative previous
    /// quarter.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Ads.AdManager.V1.Report.Types.TimePeriodColumn TimePeriodColumn {
      get { return timePeriodColumn_; }
      set {
        timePeriodColumn_ = value;
      }
    }

    /// <summary>Field number for the "flags" field.</summary>
    public const int FlagsFieldNumber = 14;
    private static readonly pb::FieldCodec<global::Google.Ads.AdManager.V1.Report.Types.Flag> _repeated_flags_codec
        = pb::FieldCodec.ForMessage(114, global::Google.Ads.AdManager.V1.Report.Types.Flag.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Flag> flags_ = new pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Flag>();
    /// <summary>
    /// Optional. List of flags for this report. Used to flag rows in a result set
    /// based on a set of defined filters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Flag> Flags {
      get { return flags_; }
    }

    /// <summary>Field number for the "sorts" field.</summary>
    public const int SortsFieldNumber = 15;
    private static readonly pb::FieldCodec<global::Google.Ads.AdManager.V1.Report.Types.Sort> _repeated_sorts_codec
        = pb::FieldCodec.ForMessage(122, global::Google.Ads.AdManager.V1.Report.Types.Sort.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Sort> sorts_ = new pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Sort>();
    /// <summary>
    /// Optional. Default sorts to apply to this report.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Sort> Sorts {
      get { return sorts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ReportDefinition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ReportDefinition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!dimensions_.Equals(other.dimensions_)) return false;
      if(!metrics_.Equals(other.metrics_)) return false;
      if(!filters_.Equals(other.filters_)) return false;
      if (TimeZoneSource != other.TimeZoneSource) return false;
      if (TimeZone != other.TimeZone) return false;
      if (CurrencyCode != other.CurrencyCode) return false;
      if (!object.Equals(DateRange, other.DateRange)) return false;
      if (!object.Equals(ComparisonDateRange, other.ComparisonDateRange)) return false;
      if(!customDimensionKeyIds_.Equals(other.customDimensionKeyIds_)) return false;
      if(!lineItemCustomFieldIds_.Equals(other.lineItemCustomFieldIds_)) return false;
      if(!orderCustomFieldIds_.Equals(other.orderCustomFieldIds_)) return false;
      if(!creativeCustomFieldIds_.Equals(other.creativeCustomFieldIds_)) return false;
      if (ReportType != other.ReportType) return false;
      if (TimePeriodColumn != other.TimePeriodColumn) return false;
      if(!flags_.Equals(other.flags_)) return false;
      if(!sorts_.Equals(other.sorts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= dimensions_.GetHashCode();
      hash ^= metrics_.GetHashCode();
      hash ^= filters_.GetHashCode();
      if (TimeZoneSource != global::Google.Ads.AdManager.V1.Report.Types.TimeZoneSource.Unspecified) hash ^= TimeZoneSource.GetHashCode();
      if (TimeZone.Length != 0) hash ^= TimeZone.GetHashCode();
      if (CurrencyCode.Length != 0) hash ^= CurrencyCode.GetHashCode();
      if (dateRange_ != null) hash ^= DateRange.GetHashCode();
      if (comparisonDateRange_ != null) hash ^= ComparisonDateRange.GetHashCode();
      hash ^= customDimensionKeyIds_.GetHashCode();
      hash ^= lineItemCustomFieldIds_.GetHashCode();
      hash ^= orderCustomFieldIds_.GetHashCode();
      hash ^= creativeCustomFieldIds_.GetHashCode();
      if (ReportType != global::Google.Ads.AdManager.V1.Report.Types.ReportType.Unspecified) hash ^= ReportType.GetHashCode();
      if (TimePeriodColumn != global::Google.Ads.AdManager.V1.Report.Types.TimePeriodColumn.Unspecified) hash ^= TimePeriodColumn.GetHashCode();
      hash ^= flags_.GetHashCode();
      hash ^= sorts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      dimensions_.WriteTo(output, _repeated_dimensions_codec);
      metrics_.WriteTo(output, _repeated_metrics_codec);
      filters_.WriteTo(output, _repeated_filters_codec);
      if (TimeZone.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TimeZone);
      }
      if (CurrencyCode.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CurrencyCode);
      }
      if (dateRange_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(DateRange);
      }
      customDimensionKeyIds_.WriteTo(output, _repeated_customDimensionKeyIds_codec);
      if (ReportType != global::Google.Ads.AdManager.V1.Report.Types.ReportType.Unspecified) {
        output.WriteRawTag(64);
        output.WriteEnum((int) ReportType);
      }
      if (comparisonDateRange_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ComparisonDateRange);
      }
      if (TimePeriodColumn != global::Google.Ads.AdManager.V1.Report.Types.TimePeriodColumn.Unspecified) {
        output.WriteRawTag(80);
        output.WriteEnum((int) TimePeriodColumn);
      }
      lineItemCustomFieldIds_.WriteTo(output, _repeated_lineItemCustomFieldIds_codec);
      orderCustomFieldIds_.WriteTo(output, _repeated_orderCustomFieldIds_codec);
      creativeCustomFieldIds_.WriteTo(output, _repeated_creativeCustomFieldIds_codec);
      flags_.WriteTo(output, _repeated_flags_codec);
      sorts_.WriteTo(output, _repeated_sorts_codec);
      if (TimeZoneSource != global::Google.Ads.AdManager.V1.Report.Types.TimeZoneSource.Unspecified) {
        output.WriteRawTag(160, 1);
        output.WriteEnum((int) TimeZoneSource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      dimensions_.WriteTo(ref output, _repeated_dimensions_codec);
      metrics_.WriteTo(ref output, _repeated_metrics_codec);
      filters_.WriteTo(ref output, _repeated_filters_codec);
      if (TimeZone.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TimeZone);
      }
      if (CurrencyCode.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CurrencyCode);
      }
      if (dateRange_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(DateRange);
      }
      customDimensionKeyIds_.WriteTo(ref output, _repeated_customDimensionKeyIds_codec);
      if (ReportType != global::Google.Ads.AdManager.V1.Report.Types.ReportType.Unspecified) {
        output.WriteRawTag(64);
        output.WriteEnum((int) ReportType);
      }
      if (comparisonDateRange_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ComparisonDateRange);
      }
      if (TimePeriodColumn != global::Google.Ads.AdManager.V1.Report.Types.TimePeriodColumn.Unspecified) {
        output.WriteRawTag(80);
        output.WriteEnum((int) TimePeriodColumn);
      }
      lineItemCustomFieldIds_.WriteTo(ref output, _repeated_lineItemCustomFieldIds_codec);
      orderCustomFieldIds_.WriteTo(ref output, _repeated_orderCustomFieldIds_codec);
      creativeCustomFieldIds_.WriteTo(ref output, _repeated_creativeCustomFieldIds_codec);
      flags_.WriteTo(ref output, _repeated_flags_codec);
      sorts_.WriteTo(ref output, _repeated_sorts_codec);
      if (TimeZoneSource != global::Google.Ads.AdManager.V1.Report.Types.TimeZoneSource.Unspecified) {
        output.WriteRawTag(160, 1);
        output.WriteEnum((int) TimeZoneSource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += dimensions_.CalculateSize(_repeated_dimensions_codec);
      size += metrics_.CalculateSize(_repeated_metrics_codec);
      size += filters_.CalculateSize(_repeated_filters_codec);
      if (TimeZoneSource != global::Google.Ads.AdManager.V1.Report.Types.TimeZoneSource.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) TimeZoneSource);
      }
      if (TimeZone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TimeZone);
      }
      if (CurrencyCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CurrencyCode);
      }
      if (dateRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DateRange);
      }
      if (comparisonDateRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ComparisonDateRange);
      }
      size += customDimensionKeyIds_.CalculateSize(_repeated_customDimensionKeyIds_codec);
      size += lineItemCustomFieldIds_.CalculateSize(_repeated_lineItemCustomFieldIds_codec);
      size += orderCustomFieldIds_.CalculateSize(_repeated_orderCustomFieldIds_codec);
      size += creativeCustomFieldIds_.CalculateSize(_repeated_creativeCustomFieldIds_codec);
      if (ReportType != global::Google.Ads.AdManager.V1.Report.Types.ReportType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReportType);
      }
      if (TimePeriodColumn != global::Google.Ads.AdManager.V1.Report.Types.TimePeriodColumn.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TimePeriodColumn);
      }
      size += flags_.CalculateSize(_repeated_flags_codec);
      size += sorts_.CalculateSize(_repeated_sorts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ReportDefinition other) {
      if (other == null) {
        return;
      }
      dimensions_.Add(other.dimensions_);
      metrics_.Add(other.metrics_);
      filters_.Add(other.filters_);
      if (other.TimeZoneSource != global::Google.Ads.AdManager.V1.Report.Types.TimeZoneSource.Unspecified) {
        TimeZoneSource = other.TimeZoneSource;
      }
      if (other.TimeZone.Length != 0) {
        TimeZone = other.TimeZone;
      }
      if (other.CurrencyCode.Length != 0) {
        CurrencyCode = other.CurrencyCode;
      }
      if (other.dateRange_ != null) {
        if (dateRange_ == null) {
          DateRange = new global::Google.Ads.AdManager.V1.Report.Types.DateRange();
        }
        DateRange.MergeFrom(other.DateRange);
      }
      if (other.comparisonDateRange_ != null) {
        if (comparisonDateRange_ == null) {
          ComparisonDateRange = new global::Google.Ads.AdManager.V1.Report.Types.DateRange();
        }
        ComparisonDateRange.MergeFrom(other.ComparisonDateRange);
      }
      customDimensionKeyIds_.Add(other.customDimensionKeyIds_);
      lineItemCustomFieldIds_.Add(other.lineItemCustomFieldIds_);
      orderCustomFieldIds_.Add(other.orderCustomFieldIds_);
      creativeCustomFieldIds_.Add(other.creativeCustomFieldIds_);
      if (other.ReportType != global::Google.Ads.AdManager.V1.Report.Types.ReportType.Unspecified) {
        ReportType = other.ReportType;
      }
      if (other.TimePeriodColumn != global::Google.Ads.AdManager.V1.Report.Types.TimePeriodColumn.Unspecified) {
        TimePeriodColumn = other.TimePeriodColumn;
      }
      flags_.Add(other.flags_);
      sorts_.Add(other.sorts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            dimensions_.AddEntriesFrom(input, _repeated_dimensions_codec);
            break;
          }
          case 18:
          case 16: {
            metrics_.AddEntriesFrom(input, _repeated_metrics_codec);
            break;
          }
          case 26: {
            filters_.AddEntriesFrom(input, _repeated_filters_codec);
            break;
          }
          case 34: {
            TimeZone = input.ReadString();
            break;
          }
          case 42: {
            CurrencyCode = input.ReadString();
            break;
          }
          case 50: {
            if (dateRange_ == null) {
              DateRange = new global::Google.Ads.AdManager.V1.Report.Types.DateRange();
            }
            input.ReadMessage(DateRange);
            break;
          }
          case 58:
          case 56: {
            customDimensionKeyIds_.AddEntriesFrom(input, _repeated_customDimensionKeyIds_codec);
            break;
          }
          case 64: {
            ReportType = (global::Google.Ads.AdManager.V1.Report.Types.ReportType) input.ReadEnum();
            break;
          }
          case 74: {
            if (comparisonDateRange_ == null) {
              ComparisonDateRange = new global::Google.Ads.AdManager.V1.Report.Types.DateRange();
            }
            input.ReadMessage(ComparisonDateRange);
            break;
          }
          case 80: {
            TimePeriodColumn = (global::Google.Ads.AdManager.V1.Report.Types.TimePeriodColumn) input.ReadEnum();
            break;
          }
          case 90:
          case 88: {
            lineItemCustomFieldIds_.AddEntriesFrom(input, _repeated_lineItemCustomFieldIds_codec);
            break;
          }
          case 98:
          case 96: {
            orderCustomFieldIds_.AddEntriesFrom(input, _repeated_orderCustomFieldIds_codec);
            break;
          }
          case 106:
          case 104: {
            creativeCustomFieldIds_.AddEntriesFrom(input, _repeated_creativeCustomFieldIds_codec);
            break;
          }
          case 114: {
            flags_.AddEntriesFrom(input, _repeated_flags_codec);
            break;
          }
          case 122: {
            sorts_.AddEntriesFrom(input, _repeated_sorts_codec);
            break;
          }
          case 160: {
            TimeZoneSource = (global::Google.Ads.AdManager.V1.Report.Types.TimeZoneSource) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            dimensions_.AddEntriesFrom(ref input, _repeated_dimensions_codec);
            break;
          }
          case 18:
          case 16: {
            metrics_.AddEntriesFrom(ref input, _repeated_metrics_codec);
            break;
          }
          case 26: {
            filters_.AddEntriesFrom(ref input, _repeated_filters_codec);
            break;
          }
          case 34: {
            TimeZone = input.ReadString();
            break;
          }
          case 42: {
            CurrencyCode = input.ReadString();
            break;
          }
          case 50: {
            if (dateRange_ == null) {
              DateRange = new global::Google.Ads.AdManager.V1.Report.Types.DateRange();
            }
            input.ReadMessage(DateRange);
            break;
          }
          case 58:
          case 56: {
            customDimensionKeyIds_.AddEntriesFrom(ref input, _repeated_customDimensionKeyIds_codec);
            break;
          }
          case 64: {
            ReportType = (global::Google.Ads.AdManager.V1.Report.Types.ReportType) input.ReadEnum();
            break;
          }
          case 74: {
            if (comparisonDateRange_ == null) {
              ComparisonDateRange = new global::Google.Ads.AdManager.V1.Report.Types.DateRange();
            }
            input.ReadMessage(ComparisonDateRange);
            break;
          }
          case 80: {
            TimePeriodColumn = (global::Google.Ads.AdManager.V1.Report.Types.TimePeriodColumn) input.ReadEnum();
            break;
          }
          case 90:
          case 88: {
            lineItemCustomFieldIds_.AddEntriesFrom(ref input, _repeated_lineItemCustomFieldIds_codec);
            break;
          }
          case 98:
          case 96: {
            orderCustomFieldIds_.AddEntriesFrom(ref input, _repeated_orderCustomFieldIds_codec);
            break;
          }
          case 106:
          case 104: {
            creativeCustomFieldIds_.AddEntriesFrom(ref input, _repeated_creativeCustomFieldIds_codec);
            break;
          }
          case 114: {
            flags_.AddEntriesFrom(ref input, _repeated_flags_codec);
            break;
          }
          case 122: {
            sorts_.AddEntriesFrom(ref input, _repeated_sorts_codec);
            break;
          }
          case 160: {
            TimeZoneSource = (global::Google.Ads.AdManager.V1.Report.Types.TimeZoneSource) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The options for a scheduled report.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ScheduleOptions : pb::IMessage<ScheduleOptions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ScheduleOptions> _parser = new pb::MessageParser<ScheduleOptions>(() => new ScheduleOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ScheduleOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.AdManager.V1.ReportMessagesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScheduleOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScheduleOptions(ScheduleOptions other) : this() {
      schedule_ = other.schedule_ != null ? other.schedule_.Clone() : null;
      deliveryCondition_ = other.deliveryCondition_;
      flags_ = other.flags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScheduleOptions Clone() {
      return new ScheduleOptions(this);
    }

    /// <summary>Field number for the "schedule" field.</summary>
    public const int ScheduleFieldNumber = 1;
    private global::Google.Ads.AdManager.V1.Schedule schedule_;
    /// <summary>
    /// Information pertaining to schedule itself.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Ads.AdManager.V1.Schedule Schedule {
      get { return schedule_; }
      set {
        schedule_ = value;
      }
    }

    /// <summary>Field number for the "delivery_condition" field.</summary>
    public const int DeliveryConditionFieldNumber = 2;
    private global::Google.Ads.AdManager.V1.ScheduleOptions.Types.DeliveryCondition deliveryCondition_ = global::Google.Ads.AdManager.V1.ScheduleOptions.Types.DeliveryCondition.Never;
    /// <summary>
    /// Option for when to deliver the scheduled report.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Ads.AdManager.V1.ScheduleOptions.Types.DeliveryCondition DeliveryCondition {
      get { return deliveryCondition_; }
      set {
        deliveryCondition_ = value;
      }
    }

    /// <summary>Field number for the "flags" field.</summary>
    public const int FlagsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Ads.AdManager.V1.Report.Types.Flag> _repeated_flags_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Ads.AdManager.V1.Report.Types.Flag.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Flag> flags_ = new pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Flag>();
    /// <summary>
    /// Optional. The flags evaluated when ReportDeliveryOption.WHEN_FLAG_PRESENT
    /// is specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Flag> Flags {
      get { return flags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ScheduleOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ScheduleOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Schedule, other.Schedule)) return false;
      if (DeliveryCondition != other.DeliveryCondition) return false;
      if(!flags_.Equals(other.flags_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (schedule_ != null) hash ^= Schedule.GetHashCode();
      if (DeliveryCondition != global::Google.Ads.AdManager.V1.ScheduleOptions.Types.DeliveryCondition.Never) hash ^= DeliveryCondition.GetHashCode();
      hash ^= flags_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (schedule_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Schedule);
      }
      if (DeliveryCondition != global::Google.Ads.AdManager.V1.ScheduleOptions.Types.DeliveryCondition.Never) {
        output.WriteRawTag(16);
        output.WriteEnum((int) DeliveryCondition);
      }
      flags_.WriteTo(output, _repeated_flags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (schedule_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Schedule);
      }
      if (DeliveryCondition != global::Google.Ads.AdManager.V1.ScheduleOptions.Types.DeliveryCondition.Never) {
        output.WriteRawTag(16);
        output.WriteEnum((int) DeliveryCondition);
      }
      flags_.WriteTo(ref output, _repeated_flags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (schedule_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Schedule);
      }
      if (DeliveryCondition != global::Google.Ads.AdManager.V1.ScheduleOptions.Types.DeliveryCondition.Never) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DeliveryCondition);
      }
      size += flags_.CalculateSize(_repeated_flags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ScheduleOptions other) {
      if (other == null) {
        return;
      }
      if (other.schedule_ != null) {
        if (schedule_ == null) {
          Schedule = new global::Google.Ads.AdManager.V1.Schedule();
        }
        Schedule.MergeFrom(other.Schedule);
      }
      if (other.DeliveryCondition != global::Google.Ads.AdManager.V1.ScheduleOptions.Types.DeliveryCondition.Never) {
        DeliveryCondition = other.DeliveryCondition;
      }
      flags_.Add(other.flags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (schedule_ == null) {
              Schedule = new global::Google.Ads.AdManager.V1.Schedule();
            }
            input.ReadMessage(Schedule);
            break;
          }
          case 16: {
            DeliveryCondition = (global::Google.Ads.AdManager.V1.ScheduleOptions.Types.DeliveryCondition) input.ReadEnum();
            break;
          }
          case 26: {
            flags_.AddEntriesFrom(input, _repeated_flags_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (schedule_ == null) {
              Schedule = new global::Google.Ads.AdManager.V1.Schedule();
            }
            input.ReadMessage(Schedule);
            break;
          }
          case 16: {
            DeliveryCondition = (global::Google.Ads.AdManager.V1.ScheduleOptions.Types.DeliveryCondition) input.ReadEnum();
            break;
          }
          case 26: {
            flags_.AddEntriesFrom(ref input, _repeated_flags_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ScheduleOptions message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Condition for when to email the scheduled report.
      /// </summary>
      public enum DeliveryCondition {
        /// <summary>
        /// Never deliver report.
        /// </summary>
        [pbr::OriginalName("NEVER")] Never = 0,
        /// <summary>
        /// Always deliver report.
        /// </summary>
        [pbr::OriginalName("ALWAYS")] Always = 1,
        /// <summary>
        /// Deliver report when flag's conditions are met.
        /// </summary>
        [pbr::OriginalName("WHEN_FLAG_CONDITIONS_MET")] WhenFlagConditionsMet = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// The schedule for the report
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Schedule : pb::IMessage<Schedule>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Schedule> _parser = new pb::MessageParser<Schedule>(() => new Schedule());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Schedule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.AdManager.V1.ReportMessagesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Schedule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Schedule(Schedule other) : this() {
      startDate_ = other.startDate_ != null ? other.startDate_.Clone() : null;
      endDate_ = other.endDate_ != null ? other.endDate_.Clone() : null;
      frequency_ = other.frequency_;
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      switch (other.FrequencyScheduleCase) {
        case FrequencyScheduleOneofCase.WeeklySchedule:
          WeeklySchedule = other.WeeklySchedule.Clone();
          break;
        case FrequencyScheduleOneofCase.MonthlySchedule:
          MonthlySchedule = other.MonthlySchedule.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Schedule Clone() {
      return new Schedule(this);
    }

    /// <summary>Field number for the "weekly_schedule" field.</summary>
    public const int WeeklyScheduleFieldNumber = 6;
    /// <summary>
    /// Days of week to schedule report run.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Ads.AdManager.V1.Schedule.Types.WeeklySchedule WeeklySchedule {
      get { return frequencyScheduleCase_ == FrequencyScheduleOneofCase.WeeklySchedule ? (global::Google.Ads.AdManager.V1.Schedule.Types.WeeklySchedule) frequencySchedule_ : null; }
      set {
        frequencySchedule_ = value;
        frequencyScheduleCase_ = value == null ? FrequencyScheduleOneofCase.None : FrequencyScheduleOneofCase.WeeklySchedule;
      }
    }

    /// <summary>Field number for the "monthly_schedule" field.</summary>
    public const int MonthlyScheduleFieldNumber = 7;
    /// <summary>
    /// Days of month to schedule report run.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Ads.AdManager.V1.Schedule.Types.MonthlySchedule MonthlySchedule {
      get { return frequencyScheduleCase_ == FrequencyScheduleOneofCase.MonthlySchedule ? (global::Google.Ads.AdManager.V1.Schedule.Types.MonthlySchedule) frequencySchedule_ : null; }
      set {
        frequencySchedule_ = value;
        frequencyScheduleCase_ = value == null ? FrequencyScheduleOneofCase.None : FrequencyScheduleOneofCase.MonthlySchedule;
      }
    }

    /// <summary>Field number for the "start_date" field.</summary>
    public const int StartDateFieldNumber = 1;
    private global::Google.Type.Date startDate_;
    /// <summary>
    /// Date for the first run of the report.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Type.Date StartDate {
      get { return startDate_; }
      set {
        startDate_ = value;
      }
    }

    /// <summary>Field number for the "end_date" field.</summary>
    public const int EndDateFieldNumber = 2;
    private global::Google.Type.Date endDate_;
    /// <summary>
    /// Date for the final run of the report.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Type.Date EndDate {
      get { return endDate_; }
      set {
        endDate_ = value;
      }
    }

    /// <summary>Field number for the "frequency" field.</summary>
    public const int FrequencyFieldNumber = 3;
    private global::Google.Ads.AdManager.V1.Schedule.Types.Frequency frequency_ = global::Google.Ads.AdManager.V1.Schedule.Types.Frequency.Unspecified;
    /// <summary>
    /// Frequency to run report.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Ads.AdManager.V1.Schedule.Types.Frequency Frequency {
      get { return frequency_; }
      set {
        frequency_ = value;
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 4;
    private global::Google.Type.TimeOfDay startTime_;
    /// <summary>
    /// Indicates start time for schedule to run
    /// Will use the time_zone from `ReportDefinition`. Defaults
    /// to the publisher's time zone if not specified.
    ///
    /// For HOURLY, TWO_TIMES_DAILY, THREE_TIMES_DAILY, or FOUR_TIMES_DAILY, this
    /// will be the time of day that the first report will run on the first day.
    /// For example, if the start time is 2:00 PM, and the frequency is
    /// THREE_TIMES_DAILY, the first day will have reports scheduled at 2:00 PM,
    /// 10:00 PM. Each subsequent day will have reports scheduled at 6:00 AM,
    /// 2:00 PM, 10:00 PM.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Type.TimeOfDay StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    private object frequencySchedule_;
    /// <summary>Enum of possible cases for the "frequency_schedule" oneof.</summary>
    public enum FrequencyScheduleOneofCase {
      None = 0,
      WeeklySchedule = 6,
      MonthlySchedule = 7,
    }
    private FrequencyScheduleOneofCase frequencyScheduleCase_ = FrequencyScheduleOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FrequencyScheduleOneofCase FrequencyScheduleCase {
      get { return frequencyScheduleCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFrequencySchedule() {
      frequencyScheduleCase_ = FrequencyScheduleOneofCase.None;
      frequencySchedule_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Schedule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Schedule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(WeeklySchedule, other.WeeklySchedule)) return false;
      if (!object.Equals(MonthlySchedule, other.MonthlySchedule)) return false;
      if (!object.Equals(StartDate, other.StartDate)) return false;
      if (!object.Equals(EndDate, other.EndDate)) return false;
      if (Frequency != other.Frequency) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (FrequencyScheduleCase != other.FrequencyScheduleCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (frequencyScheduleCase_ == FrequencyScheduleOneofCase.WeeklySchedule) hash ^= WeeklySchedule.GetHashCode();
      if (frequencyScheduleCase_ == FrequencyScheduleOneofCase.MonthlySchedule) hash ^= MonthlySchedule.GetHashCode();
      if (startDate_ != null) hash ^= StartDate.GetHashCode();
      if (endDate_ != null) hash ^= EndDate.GetHashCode();
      if (Frequency != global::Google.Ads.AdManager.V1.Schedule.Types.Frequency.Unspecified) hash ^= Frequency.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      hash ^= (int) frequencyScheduleCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (startDate_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StartDate);
      }
      if (endDate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndDate);
      }
      if (Frequency != global::Google.Ads.AdManager.V1.Schedule.Types.Frequency.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Frequency);
      }
      if (startTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(StartTime);
      }
      if (frequencyScheduleCase_ == FrequencyScheduleOneofCase.WeeklySchedule) {
        output.WriteRawTag(50);
        output.WriteMessage(WeeklySchedule);
      }
      if (frequencyScheduleCase_ == FrequencyScheduleOneofCase.MonthlySchedule) {
        output.WriteRawTag(58);
        output.WriteMessage(MonthlySchedule);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (startDate_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StartDate);
      }
      if (endDate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndDate);
      }
      if (Frequency != global::Google.Ads.AdManager.V1.Schedule.Types.Frequency.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Frequency);
      }
      if (startTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(StartTime);
      }
      if (frequencyScheduleCase_ == FrequencyScheduleOneofCase.WeeklySchedule) {
        output.WriteRawTag(50);
        output.WriteMessage(WeeklySchedule);
      }
      if (frequencyScheduleCase_ == FrequencyScheduleOneofCase.MonthlySchedule) {
        output.WriteRawTag(58);
        output.WriteMessage(MonthlySchedule);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (frequencyScheduleCase_ == FrequencyScheduleOneofCase.WeeklySchedule) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WeeklySchedule);
      }
      if (frequencyScheduleCase_ == FrequencyScheduleOneofCase.MonthlySchedule) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MonthlySchedule);
      }
      if (startDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartDate);
      }
      if (endDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndDate);
      }
      if (Frequency != global::Google.Ads.AdManager.V1.Schedule.Types.Frequency.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Frequency);
      }
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Schedule other) {
      if (other == null) {
        return;
      }
      if (other.startDate_ != null) {
        if (startDate_ == null) {
          StartDate = new global::Google.Type.Date();
        }
        StartDate.MergeFrom(other.StartDate);
      }
      if (other.endDate_ != null) {
        if (endDate_ == null) {
          EndDate = new global::Google.Type.Date();
        }
        EndDate.MergeFrom(other.EndDate);
      }
      if (other.Frequency != global::Google.Ads.AdManager.V1.Schedule.Types.Frequency.Unspecified) {
        Frequency = other.Frequency;
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Type.TimeOfDay();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      switch (other.FrequencyScheduleCase) {
        case FrequencyScheduleOneofCase.WeeklySchedule:
          if (WeeklySchedule == null) {
            WeeklySchedule = new global::Google.Ads.AdManager.V1.Schedule.Types.WeeklySchedule();
          }
          WeeklySchedule.MergeFrom(other.WeeklySchedule);
          break;
        case FrequencyScheduleOneofCase.MonthlySchedule:
          if (MonthlySchedule == null) {
            MonthlySchedule = new global::Google.Ads.AdManager.V1.Schedule.Types.MonthlySchedule();
          }
          MonthlySchedule.MergeFrom(other.MonthlySchedule);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (startDate_ == null) {
              StartDate = new global::Google.Type.Date();
            }
            input.ReadMessage(StartDate);
            break;
          }
          case 18: {
            if (endDate_ == null) {
              EndDate = new global::Google.Type.Date();
            }
            input.ReadMessage(EndDate);
            break;
          }
          case 24: {
            Frequency = (global::Google.Ads.AdManager.V1.Schedule.Types.Frequency) input.ReadEnum();
            break;
          }
          case 34: {
            if (startTime_ == null) {
              StartTime = new global::Google.Type.TimeOfDay();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 50: {
            global::Google.Ads.AdManager.V1.Schedule.Types.WeeklySchedule subBuilder = new global::Google.Ads.AdManager.V1.Schedule.Types.WeeklySchedule();
            if (frequencyScheduleCase_ == FrequencyScheduleOneofCase.WeeklySchedule) {
              subBuilder.MergeFrom(WeeklySchedule);
            }
            input.ReadMessage(subBuilder);
            WeeklySchedule = subBuilder;
            break;
          }
          case 58: {
            global::Google.Ads.AdManager.V1.Schedule.Types.MonthlySchedule subBuilder = new global::Google.Ads.AdManager.V1.Schedule.Types.MonthlySchedule();
            if (frequencyScheduleCase_ == FrequencyScheduleOneofCase.MonthlySchedule) {
              subBuilder.MergeFrom(MonthlySchedule);
            }
            input.ReadMessage(subBuilder);
            MonthlySchedule = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (startDate_ == null) {
              StartDate = new global::Google.Type.Date();
            }
            input.ReadMessage(StartDate);
            break;
          }
          case 18: {
            if (endDate_ == null) {
              EndDate = new global::Google.Type.Date();
            }
            input.ReadMessage(EndDate);
            break;
          }
          case 24: {
            Frequency = (global::Google.Ads.AdManager.V1.Schedule.Types.Frequency) input.ReadEnum();
            break;
          }
          case 34: {
            if (startTime_ == null) {
              StartTime = new global::Google.Type.TimeOfDay();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 50: {
            global::Google.Ads.AdManager.V1.Schedule.Types.WeeklySchedule subBuilder = new global::Google.Ads.AdManager.V1.Schedule.Types.WeeklySchedule();
            if (frequencyScheduleCase_ == FrequencyScheduleOneofCase.WeeklySchedule) {
              subBuilder.MergeFrom(WeeklySchedule);
            }
            input.ReadMessage(subBuilder);
            WeeklySchedule = subBuilder;
            break;
          }
          case 58: {
            global::Google.Ads.AdManager.V1.Schedule.Types.MonthlySchedule subBuilder = new global::Google.Ads.AdManager.V1.Schedule.Types.MonthlySchedule();
            if (frequencyScheduleCase_ == FrequencyScheduleOneofCase.MonthlySchedule) {
              subBuilder.MergeFrom(MonthlySchedule);
            }
            input.ReadMessage(subBuilder);
            MonthlySchedule = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Schedule message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Frequency to run report.
      /// </summary>
      public enum Frequency {
        /// <summary>
        /// No Frequency specified.
        /// </summary>
        [pbr::OriginalName("FREQUENCY_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Schedule report to run every hour.
        /// </summary>
        [pbr::OriginalName("HOURLY")] Hourly = 1,
        /// <summary>
        /// Schedule report to run twice a day (every 12 hours).
        /// </summary>
        [pbr::OriginalName("TWO_TIMES_DAILY")] TwoTimesDaily = 2,
        /// <summary>
        /// Schedule report to run three times a day (every 8 hours).
        /// </summary>
        [pbr::OriginalName("THREE_TIMES_DAILY")] ThreeTimesDaily = 3,
        /// <summary>
        /// Schedule report to run four times a day (every 6 hours).
        /// </summary>
        [pbr::OriginalName("FOUR_TIMES_DAILY")] FourTimesDaily = 4,
        /// <summary>
        /// Schedule report to run on a daily basis.
        /// </summary>
        [pbr::OriginalName("DAILY")] Daily = 5,
        /// <summary>
        /// Schedule report to run on a weekly basis.
        /// </summary>
        [pbr::OriginalName("WEEKLY")] Weekly = 6,
        /// <summary>
        /// Schedule report to run on a monthly basis.
        /// </summary>
        [pbr::OriginalName("MONTHLY")] Monthly = 7,
      }

      /// <summary>
      /// Days of week to schedule report run.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class WeeklySchedule : pb::IMessage<WeeklySchedule>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<WeeklySchedule> _parser = new pb::MessageParser<WeeklySchedule>(() => new WeeklySchedule());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<WeeklySchedule> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Ads.AdManager.V1.Schedule.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public WeeklySchedule() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public WeeklySchedule(WeeklySchedule other) : this() {
          weeklyScheduledDays_ = other.weeklyScheduledDays_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public WeeklySchedule Clone() {
          return new WeeklySchedule(this);
        }

        /// <summary>Field number for the "weekly_scheduled_days" field.</summary>
        public const int WeeklyScheduledDaysFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Google.Type.DayOfWeek> _repeated_weeklyScheduledDays_codec
            = pb::FieldCodec.ForEnum(10, x => (int) x, x => (global::Google.Type.DayOfWeek) x);
        private readonly pbc::RepeatedField<global::Google.Type.DayOfWeek> weeklyScheduledDays_ = new pbc::RepeatedField<global::Google.Type.DayOfWeek>();
        /// <summary>
        /// Specifies days of the week on which to run report.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Google.Type.DayOfWeek> WeeklyScheduledDays {
          get { return weeklyScheduledDays_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as WeeklySchedule);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(WeeklySchedule other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!weeklyScheduledDays_.Equals(other.weeklyScheduledDays_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= weeklyScheduledDays_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          weeklyScheduledDays_.WriteTo(output, _repeated_weeklyScheduledDays_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          weeklyScheduledDays_.WriteTo(ref output, _repeated_weeklyScheduledDays_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          size += weeklyScheduledDays_.CalculateSize(_repeated_weeklyScheduledDays_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(WeeklySchedule other) {
          if (other == null) {
            return;
          }
          weeklyScheduledDays_.Add(other.weeklyScheduledDays_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10:
              case 8: {
                weeklyScheduledDays_.AddEntriesFrom(input, _repeated_weeklyScheduledDays_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10:
              case 8: {
                weeklyScheduledDays_.AddEntriesFrom(ref input, _repeated_weeklyScheduledDays_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Days of Month to schedule report run.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class MonthlySchedule : pb::IMessage<MonthlySchedule>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MonthlySchedule> _parser = new pb::MessageParser<MonthlySchedule>(() => new MonthlySchedule());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<MonthlySchedule> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Ads.AdManager.V1.Schedule.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public MonthlySchedule() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public MonthlySchedule(MonthlySchedule other) : this() {
          monthlyScheduledDays_ = other.monthlyScheduledDays_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public MonthlySchedule Clone() {
          return new MonthlySchedule(this);
        }

        /// <summary>Field number for the "monthly_scheduled_days" field.</summary>
        public const int MonthlyScheduledDaysFieldNumber = 1;
        private static readonly pb::FieldCodec<int> _repeated_monthlyScheduledDays_codec
            = pb::FieldCodec.ForInt32(10);
        private readonly pbc::RepeatedField<int> monthlyScheduledDays_ = new pbc::RepeatedField<int>();
        /// <summary>
        /// Specifies days of the month to run report. Range is from 1-31.
        /// Will ignore days that are not valid for the given month.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<int> MonthlyScheduledDays {
          get { return monthlyScheduledDays_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as MonthlySchedule);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(MonthlySchedule other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!monthlyScheduledDays_.Equals(other.monthlyScheduledDays_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= monthlyScheduledDays_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          monthlyScheduledDays_.WriteTo(output, _repeated_monthlyScheduledDays_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          monthlyScheduledDays_.WriteTo(ref output, _repeated_monthlyScheduledDays_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          size += monthlyScheduledDays_.CalculateSize(_repeated_monthlyScheduledDays_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(MonthlySchedule other) {
          if (other == null) {
            return;
          }
          monthlyScheduledDays_.Add(other.monthlyScheduledDays_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10:
              case 8: {
                monthlyScheduledDays_.AddEntriesFrom(input, _repeated_monthlyScheduledDays_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10:
              case 8: {
                monthlyScheduledDays_.AddEntriesFrom(ref input, _repeated_monthlyScheduledDays_codec);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
