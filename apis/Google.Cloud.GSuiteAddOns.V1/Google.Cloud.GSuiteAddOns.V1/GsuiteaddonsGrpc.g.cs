// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/gsuiteaddons/v1/gsuiteaddons.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.GSuiteAddOns.V1 {
  /// <summary>
  /// A service for managing Google Workspace add-ons deployments.
  ///
  /// A Google Workspace add-on is a third-party embedded component that can be
  /// installed in Google Workspace Applications like Gmail, Calendar, Drive, and
  /// the Google Docs, Sheets, and Slides editors. Google Workspace add-ons can
  /// display UI cards, receive contextual information from the host application,
  /// and perform actions in the host application (See:
  /// https://developers.google.com/gsuite/add-ons/overview for more information).
  ///
  /// A Google Workspace add-on deployment resource specifies metadata about the
  /// add-on, including a specification of the entry points in the host application
  /// that trigger add-on executions (see:
  /// https://developers.google.com/gsuite/add-ons/concepts/gsuite-manifests).
  /// Add-on deployments defined via the Google Workspace add-ons API define their
  /// entrypoints using HTTPS URLs (See:
  /// https://developers.google.com/gsuite/add-ons/guides/alternate-runtimes),
  ///
  /// A Google Workspace add-on deployment can be installed in developer mode,
  /// which allows an add-on developer to test the experience an end-user would see
  /// when installing and running the add-on in their G Suite applications.  When
  /// running in developer mode, more detailed error messages are exposed in the
  /// add-on UI to aid in debugging.
  ///
  /// A Google Workspace add-on deployment can be published to Google Workspace
  /// Marketplace, which allows other Google Workspace users to discover and
  /// install the add-on.  See:
  /// https://developers.google.com/gsuite/add-ons/how-tos/publish-add-on-overview
  /// for details.
  /// </summary>
  public static partial class GSuiteAddOns
  {
    static readonly string __ServiceName = "google.cloud.gsuiteaddons.v1.GSuiteAddOns";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.GSuiteAddOns.V1.GetAuthorizationRequest> __Marshaller_google_cloud_gsuiteaddons_v1_GetAuthorizationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.GSuiteAddOns.V1.GetAuthorizationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.GSuiteAddOns.V1.Authorization> __Marshaller_google_cloud_gsuiteaddons_v1_Authorization = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.GSuiteAddOns.V1.Authorization.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.GSuiteAddOns.V1.CreateDeploymentRequest> __Marshaller_google_cloud_gsuiteaddons_v1_CreateDeploymentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.GSuiteAddOns.V1.CreateDeploymentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.GSuiteAddOns.V1.Deployment> __Marshaller_google_cloud_gsuiteaddons_v1_Deployment = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.GSuiteAddOns.V1.Deployment.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.GSuiteAddOns.V1.ReplaceDeploymentRequest> __Marshaller_google_cloud_gsuiteaddons_v1_ReplaceDeploymentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.GSuiteAddOns.V1.ReplaceDeploymentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.GSuiteAddOns.V1.GetDeploymentRequest> __Marshaller_google_cloud_gsuiteaddons_v1_GetDeploymentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.GSuiteAddOns.V1.GetDeploymentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.GSuiteAddOns.V1.ListDeploymentsRequest> __Marshaller_google_cloud_gsuiteaddons_v1_ListDeploymentsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.GSuiteAddOns.V1.ListDeploymentsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.GSuiteAddOns.V1.ListDeploymentsResponse> __Marshaller_google_cloud_gsuiteaddons_v1_ListDeploymentsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.GSuiteAddOns.V1.ListDeploymentsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.GSuiteAddOns.V1.DeleteDeploymentRequest> __Marshaller_google_cloud_gsuiteaddons_v1_DeleteDeploymentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.GSuiteAddOns.V1.DeleteDeploymentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.GSuiteAddOns.V1.InstallDeploymentRequest> __Marshaller_google_cloud_gsuiteaddons_v1_InstallDeploymentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.GSuiteAddOns.V1.InstallDeploymentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.GSuiteAddOns.V1.UninstallDeploymentRequest> __Marshaller_google_cloud_gsuiteaddons_v1_UninstallDeploymentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.GSuiteAddOns.V1.UninstallDeploymentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.GSuiteAddOns.V1.GetInstallStatusRequest> __Marshaller_google_cloud_gsuiteaddons_v1_GetInstallStatusRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.GSuiteAddOns.V1.GetInstallStatusRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.GSuiteAddOns.V1.InstallStatus> __Marshaller_google_cloud_gsuiteaddons_v1_InstallStatus = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.GSuiteAddOns.V1.InstallStatus.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.GSuiteAddOns.V1.GetAuthorizationRequest, global::Google.Cloud.GSuiteAddOns.V1.Authorization> __Method_GetAuthorization = new grpc::Method<global::Google.Cloud.GSuiteAddOns.V1.GetAuthorizationRequest, global::Google.Cloud.GSuiteAddOns.V1.Authorization>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAuthorization",
        __Marshaller_google_cloud_gsuiteaddons_v1_GetAuthorizationRequest,
        __Marshaller_google_cloud_gsuiteaddons_v1_Authorization);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.GSuiteAddOns.V1.CreateDeploymentRequest, global::Google.Cloud.GSuiteAddOns.V1.Deployment> __Method_CreateDeployment = new grpc::Method<global::Google.Cloud.GSuiteAddOns.V1.CreateDeploymentRequest, global::Google.Cloud.GSuiteAddOns.V1.Deployment>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateDeployment",
        __Marshaller_google_cloud_gsuiteaddons_v1_CreateDeploymentRequest,
        __Marshaller_google_cloud_gsuiteaddons_v1_Deployment);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.GSuiteAddOns.V1.ReplaceDeploymentRequest, global::Google.Cloud.GSuiteAddOns.V1.Deployment> __Method_ReplaceDeployment = new grpc::Method<global::Google.Cloud.GSuiteAddOns.V1.ReplaceDeploymentRequest, global::Google.Cloud.GSuiteAddOns.V1.Deployment>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReplaceDeployment",
        __Marshaller_google_cloud_gsuiteaddons_v1_ReplaceDeploymentRequest,
        __Marshaller_google_cloud_gsuiteaddons_v1_Deployment);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.GSuiteAddOns.V1.GetDeploymentRequest, global::Google.Cloud.GSuiteAddOns.V1.Deployment> __Method_GetDeployment = new grpc::Method<global::Google.Cloud.GSuiteAddOns.V1.GetDeploymentRequest, global::Google.Cloud.GSuiteAddOns.V1.Deployment>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDeployment",
        __Marshaller_google_cloud_gsuiteaddons_v1_GetDeploymentRequest,
        __Marshaller_google_cloud_gsuiteaddons_v1_Deployment);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.GSuiteAddOns.V1.ListDeploymentsRequest, global::Google.Cloud.GSuiteAddOns.V1.ListDeploymentsResponse> __Method_ListDeployments = new grpc::Method<global::Google.Cloud.GSuiteAddOns.V1.ListDeploymentsRequest, global::Google.Cloud.GSuiteAddOns.V1.ListDeploymentsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListDeployments",
        __Marshaller_google_cloud_gsuiteaddons_v1_ListDeploymentsRequest,
        __Marshaller_google_cloud_gsuiteaddons_v1_ListDeploymentsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.GSuiteAddOns.V1.DeleteDeploymentRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteDeployment = new grpc::Method<global::Google.Cloud.GSuiteAddOns.V1.DeleteDeploymentRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteDeployment",
        __Marshaller_google_cloud_gsuiteaddons_v1_DeleteDeploymentRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.GSuiteAddOns.V1.InstallDeploymentRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_InstallDeployment = new grpc::Method<global::Google.Cloud.GSuiteAddOns.V1.InstallDeploymentRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "InstallDeployment",
        __Marshaller_google_cloud_gsuiteaddons_v1_InstallDeploymentRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.GSuiteAddOns.V1.UninstallDeploymentRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_UninstallDeployment = new grpc::Method<global::Google.Cloud.GSuiteAddOns.V1.UninstallDeploymentRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UninstallDeployment",
        __Marshaller_google_cloud_gsuiteaddons_v1_UninstallDeploymentRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.GSuiteAddOns.V1.GetInstallStatusRequest, global::Google.Cloud.GSuiteAddOns.V1.InstallStatus> __Method_GetInstallStatus = new grpc::Method<global::Google.Cloud.GSuiteAddOns.V1.GetInstallStatusRequest, global::Google.Cloud.GSuiteAddOns.V1.InstallStatus>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetInstallStatus",
        __Marshaller_google_cloud_gsuiteaddons_v1_GetInstallStatusRequest,
        __Marshaller_google_cloud_gsuiteaddons_v1_InstallStatus);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.GSuiteAddOns.V1.GsuiteaddonsReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of GSuiteAddOns</summary>
    [grpc::BindServiceMethod(typeof(GSuiteAddOns), "BindService")]
    public abstract partial class GSuiteAddOnsBase
    {
      /// <summary>
      /// Gets the authorization information for deployments in a given project.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.GSuiteAddOns.V1.Authorization> GetAuthorization(global::Google.Cloud.GSuiteAddOns.V1.GetAuthorizationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a deployment with the specified name and configuration.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.GSuiteAddOns.V1.Deployment> CreateDeployment(global::Google.Cloud.GSuiteAddOns.V1.CreateDeploymentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates or replaces a deployment with the specified name.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.GSuiteAddOns.V1.Deployment> ReplaceDeployment(global::Google.Cloud.GSuiteAddOns.V1.ReplaceDeploymentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets the deployment with the specified name.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.GSuiteAddOns.V1.Deployment> GetDeployment(global::Google.Cloud.GSuiteAddOns.V1.GetDeploymentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists all deployments in a particular project.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.GSuiteAddOns.V1.ListDeploymentsResponse> ListDeployments(global::Google.Cloud.GSuiteAddOns.V1.ListDeploymentsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes the deployment with the given name.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteDeployment(global::Google.Cloud.GSuiteAddOns.V1.DeleteDeploymentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Installs a deployment in developer mode.
      /// See:
      /// https://developers.google.com/gsuite/add-ons/how-tos/testing-gsuite-addons.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> InstallDeployment(global::Google.Cloud.GSuiteAddOns.V1.InstallDeploymentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Uninstalls a developer mode deployment.
      /// See:
      /// https://developers.google.com/gsuite/add-ons/how-tos/testing-gsuite-addons.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> UninstallDeployment(global::Google.Cloud.GSuiteAddOns.V1.UninstallDeploymentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Fetches the install status of a developer mode deployment.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.GSuiteAddOns.V1.InstallStatus> GetInstallStatus(global::Google.Cloud.GSuiteAddOns.V1.GetInstallStatusRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for GSuiteAddOns</summary>
    public partial class GSuiteAddOnsClient : grpc::ClientBase<GSuiteAddOnsClient>
    {
      /// <summary>Creates a new client for GSuiteAddOns</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public GSuiteAddOnsClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for GSuiteAddOns that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public GSuiteAddOnsClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected GSuiteAddOnsClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected GSuiteAddOnsClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Gets the authorization information for deployments in a given project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.GSuiteAddOns.V1.Authorization GetAuthorization(global::Google.Cloud.GSuiteAddOns.V1.GetAuthorizationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAuthorization(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the authorization information for deployments in a given project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.GSuiteAddOns.V1.Authorization GetAuthorization(global::Google.Cloud.GSuiteAddOns.V1.GetAuthorizationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAuthorization, null, options, request);
      }
      /// <summary>
      /// Gets the authorization information for deployments in a given project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.GSuiteAddOns.V1.Authorization> GetAuthorizationAsync(global::Google.Cloud.GSuiteAddOns.V1.GetAuthorizationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAuthorizationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the authorization information for deployments in a given project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.GSuiteAddOns.V1.Authorization> GetAuthorizationAsync(global::Google.Cloud.GSuiteAddOns.V1.GetAuthorizationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAuthorization, null, options, request);
      }
      /// <summary>
      /// Creates a deployment with the specified name and configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.GSuiteAddOns.V1.Deployment CreateDeployment(global::Google.Cloud.GSuiteAddOns.V1.CreateDeploymentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateDeployment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a deployment with the specified name and configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.GSuiteAddOns.V1.Deployment CreateDeployment(global::Google.Cloud.GSuiteAddOns.V1.CreateDeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateDeployment, null, options, request);
      }
      /// <summary>
      /// Creates a deployment with the specified name and configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.GSuiteAddOns.V1.Deployment> CreateDeploymentAsync(global::Google.Cloud.GSuiteAddOns.V1.CreateDeploymentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateDeploymentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a deployment with the specified name and configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.GSuiteAddOns.V1.Deployment> CreateDeploymentAsync(global::Google.Cloud.GSuiteAddOns.V1.CreateDeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateDeployment, null, options, request);
      }
      /// <summary>
      /// Creates or replaces a deployment with the specified name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.GSuiteAddOns.V1.Deployment ReplaceDeployment(global::Google.Cloud.GSuiteAddOns.V1.ReplaceDeploymentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReplaceDeployment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates or replaces a deployment with the specified name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.GSuiteAddOns.V1.Deployment ReplaceDeployment(global::Google.Cloud.GSuiteAddOns.V1.ReplaceDeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ReplaceDeployment, null, options, request);
      }
      /// <summary>
      /// Creates or replaces a deployment with the specified name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.GSuiteAddOns.V1.Deployment> ReplaceDeploymentAsync(global::Google.Cloud.GSuiteAddOns.V1.ReplaceDeploymentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReplaceDeploymentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates or replaces a deployment with the specified name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.GSuiteAddOns.V1.Deployment> ReplaceDeploymentAsync(global::Google.Cloud.GSuiteAddOns.V1.ReplaceDeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ReplaceDeployment, null, options, request);
      }
      /// <summary>
      /// Gets the deployment with the specified name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.GSuiteAddOns.V1.Deployment GetDeployment(global::Google.Cloud.GSuiteAddOns.V1.GetDeploymentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDeployment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the deployment with the specified name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.GSuiteAddOns.V1.Deployment GetDeployment(global::Google.Cloud.GSuiteAddOns.V1.GetDeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDeployment, null, options, request);
      }
      /// <summary>
      /// Gets the deployment with the specified name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.GSuiteAddOns.V1.Deployment> GetDeploymentAsync(global::Google.Cloud.GSuiteAddOns.V1.GetDeploymentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDeploymentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the deployment with the specified name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.GSuiteAddOns.V1.Deployment> GetDeploymentAsync(global::Google.Cloud.GSuiteAddOns.V1.GetDeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDeployment, null, options, request);
      }
      /// <summary>
      /// Lists all deployments in a particular project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.GSuiteAddOns.V1.ListDeploymentsResponse ListDeployments(global::Google.Cloud.GSuiteAddOns.V1.ListDeploymentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDeployments(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all deployments in a particular project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.GSuiteAddOns.V1.ListDeploymentsResponse ListDeployments(global::Google.Cloud.GSuiteAddOns.V1.ListDeploymentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListDeployments, null, options, request);
      }
      /// <summary>
      /// Lists all deployments in a particular project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.GSuiteAddOns.V1.ListDeploymentsResponse> ListDeploymentsAsync(global::Google.Cloud.GSuiteAddOns.V1.ListDeploymentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDeploymentsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all deployments in a particular project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.GSuiteAddOns.V1.ListDeploymentsResponse> ListDeploymentsAsync(global::Google.Cloud.GSuiteAddOns.V1.ListDeploymentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListDeployments, null, options, request);
      }
      /// <summary>
      /// Deletes the deployment with the given name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteDeployment(global::Google.Cloud.GSuiteAddOns.V1.DeleteDeploymentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteDeployment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the deployment with the given name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteDeployment(global::Google.Cloud.GSuiteAddOns.V1.DeleteDeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteDeployment, null, options, request);
      }
      /// <summary>
      /// Deletes the deployment with the given name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteDeploymentAsync(global::Google.Cloud.GSuiteAddOns.V1.DeleteDeploymentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteDeploymentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the deployment with the given name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteDeploymentAsync(global::Google.Cloud.GSuiteAddOns.V1.DeleteDeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteDeployment, null, options, request);
      }
      /// <summary>
      /// Installs a deployment in developer mode.
      /// See:
      /// https://developers.google.com/gsuite/add-ons/how-tos/testing-gsuite-addons.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty InstallDeployment(global::Google.Cloud.GSuiteAddOns.V1.InstallDeploymentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InstallDeployment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Installs a deployment in developer mode.
      /// See:
      /// https://developers.google.com/gsuite/add-ons/how-tos/testing-gsuite-addons.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty InstallDeployment(global::Google.Cloud.GSuiteAddOns.V1.InstallDeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_InstallDeployment, null, options, request);
      }
      /// <summary>
      /// Installs a deployment in developer mode.
      /// See:
      /// https://developers.google.com/gsuite/add-ons/how-tos/testing-gsuite-addons.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> InstallDeploymentAsync(global::Google.Cloud.GSuiteAddOns.V1.InstallDeploymentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InstallDeploymentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Installs a deployment in developer mode.
      /// See:
      /// https://developers.google.com/gsuite/add-ons/how-tos/testing-gsuite-addons.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> InstallDeploymentAsync(global::Google.Cloud.GSuiteAddOns.V1.InstallDeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_InstallDeployment, null, options, request);
      }
      /// <summary>
      /// Uninstalls a developer mode deployment.
      /// See:
      /// https://developers.google.com/gsuite/add-ons/how-tos/testing-gsuite-addons.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty UninstallDeployment(global::Google.Cloud.GSuiteAddOns.V1.UninstallDeploymentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UninstallDeployment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Uninstalls a developer mode deployment.
      /// See:
      /// https://developers.google.com/gsuite/add-ons/how-tos/testing-gsuite-addons.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty UninstallDeployment(global::Google.Cloud.GSuiteAddOns.V1.UninstallDeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UninstallDeployment, null, options, request);
      }
      /// <summary>
      /// Uninstalls a developer mode deployment.
      /// See:
      /// https://developers.google.com/gsuite/add-ons/how-tos/testing-gsuite-addons.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> UninstallDeploymentAsync(global::Google.Cloud.GSuiteAddOns.V1.UninstallDeploymentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UninstallDeploymentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Uninstalls a developer mode deployment.
      /// See:
      /// https://developers.google.com/gsuite/add-ons/how-tos/testing-gsuite-addons.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> UninstallDeploymentAsync(global::Google.Cloud.GSuiteAddOns.V1.UninstallDeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UninstallDeployment, null, options, request);
      }
      /// <summary>
      /// Fetches the install status of a developer mode deployment.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.GSuiteAddOns.V1.InstallStatus GetInstallStatus(global::Google.Cloud.GSuiteAddOns.V1.GetInstallStatusRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetInstallStatus(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Fetches the install status of a developer mode deployment.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.GSuiteAddOns.V1.InstallStatus GetInstallStatus(global::Google.Cloud.GSuiteAddOns.V1.GetInstallStatusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetInstallStatus, null, options, request);
      }
      /// <summary>
      /// Fetches the install status of a developer mode deployment.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.GSuiteAddOns.V1.InstallStatus> GetInstallStatusAsync(global::Google.Cloud.GSuiteAddOns.V1.GetInstallStatusRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetInstallStatusAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Fetches the install status of a developer mode deployment.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.GSuiteAddOns.V1.InstallStatus> GetInstallStatusAsync(global::Google.Cloud.GSuiteAddOns.V1.GetInstallStatusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetInstallStatus, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override GSuiteAddOnsClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new GSuiteAddOnsClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(GSuiteAddOnsBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetAuthorization, serviceImpl.GetAuthorization)
          .AddMethod(__Method_CreateDeployment, serviceImpl.CreateDeployment)
          .AddMethod(__Method_ReplaceDeployment, serviceImpl.ReplaceDeployment)
          .AddMethod(__Method_GetDeployment, serviceImpl.GetDeployment)
          .AddMethod(__Method_ListDeployments, serviceImpl.ListDeployments)
          .AddMethod(__Method_DeleteDeployment, serviceImpl.DeleteDeployment)
          .AddMethod(__Method_InstallDeployment, serviceImpl.InstallDeployment)
          .AddMethod(__Method_UninstallDeployment, serviceImpl.UninstallDeployment)
          .AddMethod(__Method_GetInstallStatus, serviceImpl.GetInstallStatus).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, GSuiteAddOnsBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetAuthorization, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.GSuiteAddOns.V1.GetAuthorizationRequest, global::Google.Cloud.GSuiteAddOns.V1.Authorization>(serviceImpl.GetAuthorization));
      serviceBinder.AddMethod(__Method_CreateDeployment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.GSuiteAddOns.V1.CreateDeploymentRequest, global::Google.Cloud.GSuiteAddOns.V1.Deployment>(serviceImpl.CreateDeployment));
      serviceBinder.AddMethod(__Method_ReplaceDeployment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.GSuiteAddOns.V1.ReplaceDeploymentRequest, global::Google.Cloud.GSuiteAddOns.V1.Deployment>(serviceImpl.ReplaceDeployment));
      serviceBinder.AddMethod(__Method_GetDeployment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.GSuiteAddOns.V1.GetDeploymentRequest, global::Google.Cloud.GSuiteAddOns.V1.Deployment>(serviceImpl.GetDeployment));
      serviceBinder.AddMethod(__Method_ListDeployments, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.GSuiteAddOns.V1.ListDeploymentsRequest, global::Google.Cloud.GSuiteAddOns.V1.ListDeploymentsResponse>(serviceImpl.ListDeployments));
      serviceBinder.AddMethod(__Method_DeleteDeployment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.GSuiteAddOns.V1.DeleteDeploymentRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteDeployment));
      serviceBinder.AddMethod(__Method_InstallDeployment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.GSuiteAddOns.V1.InstallDeploymentRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.InstallDeployment));
      serviceBinder.AddMethod(__Method_UninstallDeployment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.GSuiteAddOns.V1.UninstallDeploymentRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.UninstallDeployment));
      serviceBinder.AddMethod(__Method_GetInstallStatus, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.GSuiteAddOns.V1.GetInstallStatusRequest, global::Google.Cloud.GSuiteAddOns.V1.InstallStatus>(serviceImpl.GetInstallStatus));
    }

  }
}
#endregion
