// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/modelarmor/v1beta/service.proto
// </auto-generated>
// Original file comments:
// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.ModelArmor.V1Beta {
  /// <summary>
  /// Service describing handlers for resources
  /// </summary>
  public static partial class ModelArmor
  {
    static readonly string __ServiceName = "google.cloud.modelarmor.v1beta.ModelArmor";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ModelArmor.V1Beta.ListTemplatesRequest> __Marshaller_google_cloud_modelarmor_v1beta_ListTemplatesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ModelArmor.V1Beta.ListTemplatesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ModelArmor.V1Beta.ListTemplatesResponse> __Marshaller_google_cloud_modelarmor_v1beta_ListTemplatesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ModelArmor.V1Beta.ListTemplatesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ModelArmor.V1Beta.GetTemplateRequest> __Marshaller_google_cloud_modelarmor_v1beta_GetTemplateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ModelArmor.V1Beta.GetTemplateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ModelArmor.V1Beta.Template> __Marshaller_google_cloud_modelarmor_v1beta_Template = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ModelArmor.V1Beta.Template.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ModelArmor.V1Beta.CreateTemplateRequest> __Marshaller_google_cloud_modelarmor_v1beta_CreateTemplateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ModelArmor.V1Beta.CreateTemplateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ModelArmor.V1Beta.UpdateTemplateRequest> __Marshaller_google_cloud_modelarmor_v1beta_UpdateTemplateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ModelArmor.V1Beta.UpdateTemplateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ModelArmor.V1Beta.DeleteTemplateRequest> __Marshaller_google_cloud_modelarmor_v1beta_DeleteTemplateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ModelArmor.V1Beta.DeleteTemplateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ModelArmor.V1Beta.GetFloorSettingRequest> __Marshaller_google_cloud_modelarmor_v1beta_GetFloorSettingRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ModelArmor.V1Beta.GetFloorSettingRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ModelArmor.V1Beta.FloorSetting> __Marshaller_google_cloud_modelarmor_v1beta_FloorSetting = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ModelArmor.V1Beta.FloorSetting.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ModelArmor.V1Beta.UpdateFloorSettingRequest> __Marshaller_google_cloud_modelarmor_v1beta_UpdateFloorSettingRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ModelArmor.V1Beta.UpdateFloorSettingRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ModelArmor.V1Beta.SanitizeUserPromptRequest> __Marshaller_google_cloud_modelarmor_v1beta_SanitizeUserPromptRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ModelArmor.V1Beta.SanitizeUserPromptRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ModelArmor.V1Beta.SanitizeUserPromptResponse> __Marshaller_google_cloud_modelarmor_v1beta_SanitizeUserPromptResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ModelArmor.V1Beta.SanitizeUserPromptResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ModelArmor.V1Beta.SanitizeModelResponseRequest> __Marshaller_google_cloud_modelarmor_v1beta_SanitizeModelResponseRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ModelArmor.V1Beta.SanitizeModelResponseRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ModelArmor.V1Beta.SanitizeModelResponseResponse> __Marshaller_google_cloud_modelarmor_v1beta_SanitizeModelResponseResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ModelArmor.V1Beta.SanitizeModelResponseResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ModelArmor.V1Beta.ListTemplatesRequest, global::Google.Cloud.ModelArmor.V1Beta.ListTemplatesResponse> __Method_ListTemplates = new grpc::Method<global::Google.Cloud.ModelArmor.V1Beta.ListTemplatesRequest, global::Google.Cloud.ModelArmor.V1Beta.ListTemplatesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListTemplates",
        __Marshaller_google_cloud_modelarmor_v1beta_ListTemplatesRequest,
        __Marshaller_google_cloud_modelarmor_v1beta_ListTemplatesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ModelArmor.V1Beta.GetTemplateRequest, global::Google.Cloud.ModelArmor.V1Beta.Template> __Method_GetTemplate = new grpc::Method<global::Google.Cloud.ModelArmor.V1Beta.GetTemplateRequest, global::Google.Cloud.ModelArmor.V1Beta.Template>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetTemplate",
        __Marshaller_google_cloud_modelarmor_v1beta_GetTemplateRequest,
        __Marshaller_google_cloud_modelarmor_v1beta_Template);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ModelArmor.V1Beta.CreateTemplateRequest, global::Google.Cloud.ModelArmor.V1Beta.Template> __Method_CreateTemplate = new grpc::Method<global::Google.Cloud.ModelArmor.V1Beta.CreateTemplateRequest, global::Google.Cloud.ModelArmor.V1Beta.Template>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateTemplate",
        __Marshaller_google_cloud_modelarmor_v1beta_CreateTemplateRequest,
        __Marshaller_google_cloud_modelarmor_v1beta_Template);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ModelArmor.V1Beta.UpdateTemplateRequest, global::Google.Cloud.ModelArmor.V1Beta.Template> __Method_UpdateTemplate = new grpc::Method<global::Google.Cloud.ModelArmor.V1Beta.UpdateTemplateRequest, global::Google.Cloud.ModelArmor.V1Beta.Template>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateTemplate",
        __Marshaller_google_cloud_modelarmor_v1beta_UpdateTemplateRequest,
        __Marshaller_google_cloud_modelarmor_v1beta_Template);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ModelArmor.V1Beta.DeleteTemplateRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteTemplate = new grpc::Method<global::Google.Cloud.ModelArmor.V1Beta.DeleteTemplateRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteTemplate",
        __Marshaller_google_cloud_modelarmor_v1beta_DeleteTemplateRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ModelArmor.V1Beta.GetFloorSettingRequest, global::Google.Cloud.ModelArmor.V1Beta.FloorSetting> __Method_GetFloorSetting = new grpc::Method<global::Google.Cloud.ModelArmor.V1Beta.GetFloorSettingRequest, global::Google.Cloud.ModelArmor.V1Beta.FloorSetting>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetFloorSetting",
        __Marshaller_google_cloud_modelarmor_v1beta_GetFloorSettingRequest,
        __Marshaller_google_cloud_modelarmor_v1beta_FloorSetting);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ModelArmor.V1Beta.UpdateFloorSettingRequest, global::Google.Cloud.ModelArmor.V1Beta.FloorSetting> __Method_UpdateFloorSetting = new grpc::Method<global::Google.Cloud.ModelArmor.V1Beta.UpdateFloorSettingRequest, global::Google.Cloud.ModelArmor.V1Beta.FloorSetting>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateFloorSetting",
        __Marshaller_google_cloud_modelarmor_v1beta_UpdateFloorSettingRequest,
        __Marshaller_google_cloud_modelarmor_v1beta_FloorSetting);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ModelArmor.V1Beta.SanitizeUserPromptRequest, global::Google.Cloud.ModelArmor.V1Beta.SanitizeUserPromptResponse> __Method_SanitizeUserPrompt = new grpc::Method<global::Google.Cloud.ModelArmor.V1Beta.SanitizeUserPromptRequest, global::Google.Cloud.ModelArmor.V1Beta.SanitizeUserPromptResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SanitizeUserPrompt",
        __Marshaller_google_cloud_modelarmor_v1beta_SanitizeUserPromptRequest,
        __Marshaller_google_cloud_modelarmor_v1beta_SanitizeUserPromptResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ModelArmor.V1Beta.SanitizeModelResponseRequest, global::Google.Cloud.ModelArmor.V1Beta.SanitizeModelResponseResponse> __Method_SanitizeModelResponse = new grpc::Method<global::Google.Cloud.ModelArmor.V1Beta.SanitizeModelResponseRequest, global::Google.Cloud.ModelArmor.V1Beta.SanitizeModelResponseResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SanitizeModelResponse",
        __Marshaller_google_cloud_modelarmor_v1beta_SanitizeModelResponseRequest,
        __Marshaller_google_cloud_modelarmor_v1beta_SanitizeModelResponseResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.ModelArmor.V1Beta.ServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of ModelArmor</summary>
    [grpc::BindServiceMethod(typeof(ModelArmor), "BindService")]
    public abstract partial class ModelArmorBase
    {
      /// <summary>
      /// Lists Templates in a given project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ModelArmor.V1Beta.ListTemplatesResponse> ListTemplates(global::Google.Cloud.ModelArmor.V1Beta.ListTemplatesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets details of a single Template.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ModelArmor.V1Beta.Template> GetTemplate(global::Google.Cloud.ModelArmor.V1Beta.GetTemplateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a new Template in a given project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ModelArmor.V1Beta.Template> CreateTemplate(global::Google.Cloud.ModelArmor.V1Beta.CreateTemplateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the parameters of a single Template.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ModelArmor.V1Beta.Template> UpdateTemplate(global::Google.Cloud.ModelArmor.V1Beta.UpdateTemplateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a single Template.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteTemplate(global::Google.Cloud.ModelArmor.V1Beta.DeleteTemplateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets details of a single floor setting of a project
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ModelArmor.V1Beta.FloorSetting> GetFloorSetting(global::Google.Cloud.ModelArmor.V1Beta.GetFloorSettingRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the parameters of a single floor setting of a project
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ModelArmor.V1Beta.FloorSetting> UpdateFloorSetting(global::Google.Cloud.ModelArmor.V1Beta.UpdateFloorSettingRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Sanitizes User Prompt.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ModelArmor.V1Beta.SanitizeUserPromptResponse> SanitizeUserPrompt(global::Google.Cloud.ModelArmor.V1Beta.SanitizeUserPromptRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Sanitizes Model Response.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ModelArmor.V1Beta.SanitizeModelResponseResponse> SanitizeModelResponse(global::Google.Cloud.ModelArmor.V1Beta.SanitizeModelResponseRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for ModelArmor</summary>
    public partial class ModelArmorClient : grpc::ClientBase<ModelArmorClient>
    {
      /// <summary>Creates a new client for ModelArmor</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ModelArmorClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ModelArmor that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ModelArmorClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ModelArmorClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ModelArmorClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Lists Templates in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ModelArmor.V1Beta.ListTemplatesResponse ListTemplates(global::Google.Cloud.ModelArmor.V1Beta.ListTemplatesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListTemplates(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists Templates in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ModelArmor.V1Beta.ListTemplatesResponse ListTemplates(global::Google.Cloud.ModelArmor.V1Beta.ListTemplatesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListTemplates, null, options, request);
      }
      /// <summary>
      /// Lists Templates in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ModelArmor.V1Beta.ListTemplatesResponse> ListTemplatesAsync(global::Google.Cloud.ModelArmor.V1Beta.ListTemplatesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListTemplatesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists Templates in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ModelArmor.V1Beta.ListTemplatesResponse> ListTemplatesAsync(global::Google.Cloud.ModelArmor.V1Beta.ListTemplatesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListTemplates, null, options, request);
      }
      /// <summary>
      /// Gets details of a single Template.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ModelArmor.V1Beta.Template GetTemplate(global::Google.Cloud.ModelArmor.V1Beta.GetTemplateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTemplate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single Template.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ModelArmor.V1Beta.Template GetTemplate(global::Google.Cloud.ModelArmor.V1Beta.GetTemplateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetTemplate, null, options, request);
      }
      /// <summary>
      /// Gets details of a single Template.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ModelArmor.V1Beta.Template> GetTemplateAsync(global::Google.Cloud.ModelArmor.V1Beta.GetTemplateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTemplateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single Template.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ModelArmor.V1Beta.Template> GetTemplateAsync(global::Google.Cloud.ModelArmor.V1Beta.GetTemplateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetTemplate, null, options, request);
      }
      /// <summary>
      /// Creates a new Template in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ModelArmor.V1Beta.Template CreateTemplate(global::Google.Cloud.ModelArmor.V1Beta.CreateTemplateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateTemplate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new Template in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ModelArmor.V1Beta.Template CreateTemplate(global::Google.Cloud.ModelArmor.V1Beta.CreateTemplateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateTemplate, null, options, request);
      }
      /// <summary>
      /// Creates a new Template in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ModelArmor.V1Beta.Template> CreateTemplateAsync(global::Google.Cloud.ModelArmor.V1Beta.CreateTemplateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateTemplateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new Template in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ModelArmor.V1Beta.Template> CreateTemplateAsync(global::Google.Cloud.ModelArmor.V1Beta.CreateTemplateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateTemplate, null, options, request);
      }
      /// <summary>
      /// Updates the parameters of a single Template.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ModelArmor.V1Beta.Template UpdateTemplate(global::Google.Cloud.ModelArmor.V1Beta.UpdateTemplateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateTemplate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the parameters of a single Template.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ModelArmor.V1Beta.Template UpdateTemplate(global::Google.Cloud.ModelArmor.V1Beta.UpdateTemplateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateTemplate, null, options, request);
      }
      /// <summary>
      /// Updates the parameters of a single Template.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ModelArmor.V1Beta.Template> UpdateTemplateAsync(global::Google.Cloud.ModelArmor.V1Beta.UpdateTemplateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateTemplateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the parameters of a single Template.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ModelArmor.V1Beta.Template> UpdateTemplateAsync(global::Google.Cloud.ModelArmor.V1Beta.UpdateTemplateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateTemplate, null, options, request);
      }
      /// <summary>
      /// Deletes a single Template.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteTemplate(global::Google.Cloud.ModelArmor.V1Beta.DeleteTemplateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteTemplate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a single Template.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteTemplate(global::Google.Cloud.ModelArmor.V1Beta.DeleteTemplateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteTemplate, null, options, request);
      }
      /// <summary>
      /// Deletes a single Template.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteTemplateAsync(global::Google.Cloud.ModelArmor.V1Beta.DeleteTemplateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteTemplateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a single Template.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteTemplateAsync(global::Google.Cloud.ModelArmor.V1Beta.DeleteTemplateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteTemplate, null, options, request);
      }
      /// <summary>
      /// Gets details of a single floor setting of a project
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ModelArmor.V1Beta.FloorSetting GetFloorSetting(global::Google.Cloud.ModelArmor.V1Beta.GetFloorSettingRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetFloorSetting(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single floor setting of a project
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ModelArmor.V1Beta.FloorSetting GetFloorSetting(global::Google.Cloud.ModelArmor.V1Beta.GetFloorSettingRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetFloorSetting, null, options, request);
      }
      /// <summary>
      /// Gets details of a single floor setting of a project
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ModelArmor.V1Beta.FloorSetting> GetFloorSettingAsync(global::Google.Cloud.ModelArmor.V1Beta.GetFloorSettingRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetFloorSettingAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single floor setting of a project
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ModelArmor.V1Beta.FloorSetting> GetFloorSettingAsync(global::Google.Cloud.ModelArmor.V1Beta.GetFloorSettingRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetFloorSetting, null, options, request);
      }
      /// <summary>
      /// Updates the parameters of a single floor setting of a project
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ModelArmor.V1Beta.FloorSetting UpdateFloorSetting(global::Google.Cloud.ModelArmor.V1Beta.UpdateFloorSettingRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateFloorSetting(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the parameters of a single floor setting of a project
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ModelArmor.V1Beta.FloorSetting UpdateFloorSetting(global::Google.Cloud.ModelArmor.V1Beta.UpdateFloorSettingRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateFloorSetting, null, options, request);
      }
      /// <summary>
      /// Updates the parameters of a single floor setting of a project
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ModelArmor.V1Beta.FloorSetting> UpdateFloorSettingAsync(global::Google.Cloud.ModelArmor.V1Beta.UpdateFloorSettingRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateFloorSettingAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the parameters of a single floor setting of a project
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ModelArmor.V1Beta.FloorSetting> UpdateFloorSettingAsync(global::Google.Cloud.ModelArmor.V1Beta.UpdateFloorSettingRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateFloorSetting, null, options, request);
      }
      /// <summary>
      /// Sanitizes User Prompt.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ModelArmor.V1Beta.SanitizeUserPromptResponse SanitizeUserPrompt(global::Google.Cloud.ModelArmor.V1Beta.SanitizeUserPromptRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SanitizeUserPrompt(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sanitizes User Prompt.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ModelArmor.V1Beta.SanitizeUserPromptResponse SanitizeUserPrompt(global::Google.Cloud.ModelArmor.V1Beta.SanitizeUserPromptRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SanitizeUserPrompt, null, options, request);
      }
      /// <summary>
      /// Sanitizes User Prompt.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ModelArmor.V1Beta.SanitizeUserPromptResponse> SanitizeUserPromptAsync(global::Google.Cloud.ModelArmor.V1Beta.SanitizeUserPromptRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SanitizeUserPromptAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sanitizes User Prompt.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ModelArmor.V1Beta.SanitizeUserPromptResponse> SanitizeUserPromptAsync(global::Google.Cloud.ModelArmor.V1Beta.SanitizeUserPromptRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SanitizeUserPrompt, null, options, request);
      }
      /// <summary>
      /// Sanitizes Model Response.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ModelArmor.V1Beta.SanitizeModelResponseResponse SanitizeModelResponse(global::Google.Cloud.ModelArmor.V1Beta.SanitizeModelResponseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SanitizeModelResponse(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sanitizes Model Response.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ModelArmor.V1Beta.SanitizeModelResponseResponse SanitizeModelResponse(global::Google.Cloud.ModelArmor.V1Beta.SanitizeModelResponseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SanitizeModelResponse, null, options, request);
      }
      /// <summary>
      /// Sanitizes Model Response.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ModelArmor.V1Beta.SanitizeModelResponseResponse> SanitizeModelResponseAsync(global::Google.Cloud.ModelArmor.V1Beta.SanitizeModelResponseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SanitizeModelResponseAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sanitizes Model Response.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ModelArmor.V1Beta.SanitizeModelResponseResponse> SanitizeModelResponseAsync(global::Google.Cloud.ModelArmor.V1Beta.SanitizeModelResponseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SanitizeModelResponse, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override ModelArmorClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ModelArmorClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(ModelArmorBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ListTemplates, serviceImpl.ListTemplates)
          .AddMethod(__Method_GetTemplate, serviceImpl.GetTemplate)
          .AddMethod(__Method_CreateTemplate, serviceImpl.CreateTemplate)
          .AddMethod(__Method_UpdateTemplate, serviceImpl.UpdateTemplate)
          .AddMethod(__Method_DeleteTemplate, serviceImpl.DeleteTemplate)
          .AddMethod(__Method_GetFloorSetting, serviceImpl.GetFloorSetting)
          .AddMethod(__Method_UpdateFloorSetting, serviceImpl.UpdateFloorSetting)
          .AddMethod(__Method_SanitizeUserPrompt, serviceImpl.SanitizeUserPrompt)
          .AddMethod(__Method_SanitizeModelResponse, serviceImpl.SanitizeModelResponse).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ModelArmorBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_ListTemplates, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ModelArmor.V1Beta.ListTemplatesRequest, global::Google.Cloud.ModelArmor.V1Beta.ListTemplatesResponse>(serviceImpl.ListTemplates));
      serviceBinder.AddMethod(__Method_GetTemplate, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ModelArmor.V1Beta.GetTemplateRequest, global::Google.Cloud.ModelArmor.V1Beta.Template>(serviceImpl.GetTemplate));
      serviceBinder.AddMethod(__Method_CreateTemplate, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ModelArmor.V1Beta.CreateTemplateRequest, global::Google.Cloud.ModelArmor.V1Beta.Template>(serviceImpl.CreateTemplate));
      serviceBinder.AddMethod(__Method_UpdateTemplate, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ModelArmor.V1Beta.UpdateTemplateRequest, global::Google.Cloud.ModelArmor.V1Beta.Template>(serviceImpl.UpdateTemplate));
      serviceBinder.AddMethod(__Method_DeleteTemplate, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ModelArmor.V1Beta.DeleteTemplateRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteTemplate));
      serviceBinder.AddMethod(__Method_GetFloorSetting, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ModelArmor.V1Beta.GetFloorSettingRequest, global::Google.Cloud.ModelArmor.V1Beta.FloorSetting>(serviceImpl.GetFloorSetting));
      serviceBinder.AddMethod(__Method_UpdateFloorSetting, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ModelArmor.V1Beta.UpdateFloorSettingRequest, global::Google.Cloud.ModelArmor.V1Beta.FloorSetting>(serviceImpl.UpdateFloorSetting));
      serviceBinder.AddMethod(__Method_SanitizeUserPrompt, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ModelArmor.V1Beta.SanitizeUserPromptRequest, global::Google.Cloud.ModelArmor.V1Beta.SanitizeUserPromptResponse>(serviceImpl.SanitizeUserPrompt));
      serviceBinder.AddMethod(__Method_SanitizeModelResponse, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ModelArmor.V1Beta.SanitizeModelResponseRequest, global::Google.Cloud.ModelArmor.V1Beta.SanitizeModelResponseResponse>(serviceImpl.SanitizeModelResponse));
    }

  }
}
#endregion
