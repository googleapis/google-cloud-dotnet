// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/maps/weather/v1/public_alerts.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Geo.Weather.V1 {

  /// <summary>Holder for reflection information generated from google/maps/weather/v1/public_alerts.proto</summary>
  public static partial class PublicAlertsReflection {

    #region Descriptor
    /// <summary>File descriptor for google/maps/weather/v1/public_alerts.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PublicAlertsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cipnb29nbGUvbWFwcy93ZWF0aGVyL3YxL3B1YmxpY19hbGVydHMucHJvdG8S",
            "Fmdvb2dsZS5tYXBzLndlYXRoZXIudjEaMGdvb2dsZS9tYXBzL3dlYXRoZXIv",
            "djEvcHVibGljX2FsZXJ0c19lbnVtcy5wcm90bxofZ29vZ2xlL3Byb3RvYnVm",
            "L3RpbWVzdGFtcC5wcm90bxogZ29vZ2xlL3R5cGUvbG9jYWxpemVkX3RleHQu",
            "cHJvdG8iZwoKRGF0YVNvdXJjZRI0CglwdWJsaXNoZXIYASABKA4yIS5nb29n",
            "bGUubWFwcy53ZWF0aGVyLnYxLlB1Ymxpc2hlchIMCgRuYW1lGAIgASgJEhUK",
            "DWF1dGhvcml0eV91cmkYAyABKAkiSwoUU2FmZXR5UmVjb21tZW5kYXRpb24S",
            "EQoJZGlyZWN0aXZlGAEgASgJEhQKB3N1YnRleHQYAiABKAlIAIgBAUIKCghf",
            "c3VidGV4dCLIBQoMUHVibGljQWxlcnRzEhAKCGFsZXJ0X2lkGAEgASgJEi8K",
            "C2FsZXJ0X3RpdGxlGAIgASgLMhouZ29vZ2xlLnR5cGUuTG9jYWxpemVkVGV4",
            "dBI8CgpldmVudF90eXBlGAMgASgOMiguZ29vZ2xlLm1hcHMud2VhdGhlci52",
            "MS5XZWF0aGVyRXZlbnRUeXBlEhEKCWFyZWFfbmFtZRgEIAEoCRIUCgdwb2x5",
            "Z29uGAUgASgJSACIAQESGAoLZGVzY3JpcHRpb24YBiABKAlIAYgBARIyCghz",
            "ZXZlcml0eRgHIAEoDjIgLmdvb2dsZS5tYXBzLndlYXRoZXIudjEuU2V2ZXJp",
            "dHkSOQoJY2VydGFpbnR5GAggASgOMiEuZ29vZ2xlLm1hcHMud2VhdGhlci52",
            "MS5DZXJ0YWludHlIAogBARI1Cgd1cmdlbmN5GAkgASgOMh8uZ29vZ2xlLm1h",
            "cHMud2VhdGhlci52MS5VcmdlbmN5SAOIAQESEwoLaW5zdHJ1Y3Rpb24YCiAD",
            "KAkSTAoWc2FmZXR5X3JlY29tbWVuZGF0aW9ucxgLIAMoCzIsLmdvb2dsZS5t",
            "YXBzLndlYXRoZXIudjEuU2FmZXR5UmVjb21tZW5kYXRpb24SFwoPdGltZXpv",
            "bmVfb2Zmc2V0GAwgASgJEi4KCnN0YXJ0X3RpbWUYDSABKAsyGi5nb29nbGUu",
            "cHJvdG9idWYuVGltZXN0YW1wEjMKD2V4cGlyYXRpb25fdGltZRgOIAEoCzIa",
            "Lmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASNwoLZGF0YV9zb3VyY2UYDyAB",
            "KAsyIi5nb29nbGUubWFwcy53ZWF0aGVyLnYxLkRhdGFTb3VyY2VCCgoIX3Bv",
            "bHlnb25CDgoMX2Rlc2NyaXB0aW9uQgwKCl9jZXJ0YWludHlCCgoIX3VyZ2Vu",
            "Y3lCpQEKGmNvbS5nb29nbGUubWFwcy53ZWF0aGVyLnYxQhFQdWJsaWNBbGVy",
            "dHNQcm90b1ABWjpjbG91ZC5nb29nbGUuY29tL2dvL21hcHMvd2VhdGhlci9h",
            "cGl2MS93ZWF0aGVycGI7d2VhdGhlcnBiogIFR01XVjGqAhVHb29nbGUuR2Vv",
            "LldlYXRoZXIuVjHKAhVHb29nbGVcR2VvXFdlYXRoZXJcVjFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Geo.Weather.V1.PublicAlertsEnumsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Type.LocalizedTextReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Geo.Weather.V1.DataSource), global::Google.Geo.Weather.V1.DataSource.Parser, new[]{ "Publisher", "Name", "AuthorityUri" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Geo.Weather.V1.SafetyRecommendation), global::Google.Geo.Weather.V1.SafetyRecommendation.Parser, new[]{ "Directive", "Subtext" }, new[]{ "Subtext" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Geo.Weather.V1.PublicAlerts), global::Google.Geo.Weather.V1.PublicAlerts.Parser, new[]{ "AlertId", "AlertTitle", "EventType", "AreaName", "Polygon", "Description", "Severity", "Certainty", "Urgency", "Instruction", "SafetyRecommendations", "TimezoneOffset", "StartTime", "ExpirationTime", "DataSource" }, new[]{ "Polygon", "Description", "Certainty", "Urgency" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Represents a link to a data source.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DataSource : pb::IMessage<DataSource>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DataSource> _parser = new pb::MessageParser<DataSource>(() => new DataSource());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DataSource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Geo.Weather.V1.PublicAlertsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataSource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataSource(DataSource other) : this() {
      publisher_ = other.publisher_;
      name_ = other.name_;
      authorityUri_ = other.authorityUri_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataSource Clone() {
      return new DataSource(this);
    }

    /// <summary>Field number for the "publisher" field.</summary>
    public const int PublisherFieldNumber = 1;
    private global::Google.Geo.Weather.V1.Publisher publisher_ = global::Google.Geo.Weather.V1.Publisher.Unspecified;
    /// <summary>
    /// The publisher of the alert.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Geo.Weather.V1.Publisher Publisher {
      get { return publisher_; }
      set {
        publisher_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// Official publisher name. Please note that while this field should be
    /// localized, it is not guaranteed that it will be.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "authority_uri" field.</summary>
    public const int AuthorityUriFieldNumber = 3;
    private string authorityUri_ = "";
    /// <summary>
    /// The URL of the authority's website.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AuthorityUri {
      get { return authorityUri_; }
      set {
        authorityUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DataSource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DataSource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Publisher != other.Publisher) return false;
      if (Name != other.Name) return false;
      if (AuthorityUri != other.AuthorityUri) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Publisher != global::Google.Geo.Weather.V1.Publisher.Unspecified) hash ^= Publisher.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (AuthorityUri.Length != 0) hash ^= AuthorityUri.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Publisher != global::Google.Geo.Weather.V1.Publisher.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Publisher);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (AuthorityUri.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AuthorityUri);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Publisher != global::Google.Geo.Weather.V1.Publisher.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Publisher);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (AuthorityUri.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AuthorityUri);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Publisher != global::Google.Geo.Weather.V1.Publisher.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Publisher);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (AuthorityUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AuthorityUri);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DataSource other) {
      if (other == null) {
        return;
      }
      if (other.Publisher != global::Google.Geo.Weather.V1.Publisher.Unspecified) {
        Publisher = other.Publisher;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.AuthorityUri.Length != 0) {
        AuthorityUri = other.AuthorityUri;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Publisher = (global::Google.Geo.Weather.V1.Publisher) input.ReadEnum();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            AuthorityUri = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Publisher = (global::Google.Geo.Weather.V1.Publisher) input.ReadEnum();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            AuthorityUri = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Represents a safety recommendation.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SafetyRecommendation : pb::IMessage<SafetyRecommendation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SafetyRecommendation> _parser = new pb::MessageParser<SafetyRecommendation>(() => new SafetyRecommendation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SafetyRecommendation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Geo.Weather.V1.PublicAlertsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SafetyRecommendation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SafetyRecommendation(SafetyRecommendation other) : this() {
      directive_ = other.directive_;
      subtext_ = other.subtext_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SafetyRecommendation Clone() {
      return new SafetyRecommendation(this);
    }

    /// <summary>Field number for the "directive" field.</summary>
    public const int DirectiveFieldNumber = 1;
    private string directive_ = "";
    /// <summary>
    /// A directive to the user. Please note that while this field should be
    /// localized, it is not guaranteed that it will be.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Directive {
      get { return directive_; }
      set {
        directive_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subtext" field.</summary>
    public const int SubtextFieldNumber = 2;
    private readonly static string SubtextDefaultValue = "";

    private string subtext_;
    /// <summary>
    /// An optional subtext for the directive, which may contain additional
    /// context for the user. Please note that while this field should be
    /// localized, it is not guaranteed that it will be.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Subtext {
      get { return subtext_ ?? SubtextDefaultValue; }
      set {
        subtext_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "subtext" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSubtext {
      get { return subtext_ != null; }
    }
    /// <summary>Clears the value of the "subtext" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSubtext() {
      subtext_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SafetyRecommendation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SafetyRecommendation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Directive != other.Directive) return false;
      if (Subtext != other.Subtext) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Directive.Length != 0) hash ^= Directive.GetHashCode();
      if (HasSubtext) hash ^= Subtext.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Directive.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Directive);
      }
      if (HasSubtext) {
        output.WriteRawTag(18);
        output.WriteString(Subtext);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Directive.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Directive);
      }
      if (HasSubtext) {
        output.WriteRawTag(18);
        output.WriteString(Subtext);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Directive.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Directive);
      }
      if (HasSubtext) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Subtext);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SafetyRecommendation other) {
      if (other == null) {
        return;
      }
      if (other.Directive.Length != 0) {
        Directive = other.Directive;
      }
      if (other.HasSubtext) {
        Subtext = other.Subtext;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Directive = input.ReadString();
            break;
          }
          case 18: {
            Subtext = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Directive = input.ReadString();
            break;
          }
          case 18: {
            Subtext = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Represents the public weather alerts.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PublicAlerts : pb::IMessage<PublicAlerts>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PublicAlerts> _parser = new pb::MessageParser<PublicAlerts>(() => new PublicAlerts());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PublicAlerts> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Geo.Weather.V1.PublicAlertsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PublicAlerts() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PublicAlerts(PublicAlerts other) : this() {
      _hasBits0 = other._hasBits0;
      alertId_ = other.alertId_;
      alertTitle_ = other.alertTitle_ != null ? other.alertTitle_.Clone() : null;
      eventType_ = other.eventType_;
      areaName_ = other.areaName_;
      polygon_ = other.polygon_;
      description_ = other.description_;
      severity_ = other.severity_;
      certainty_ = other.certainty_;
      urgency_ = other.urgency_;
      instruction_ = other.instruction_.Clone();
      safetyRecommendations_ = other.safetyRecommendations_.Clone();
      timezoneOffset_ = other.timezoneOffset_;
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      expirationTime_ = other.expirationTime_ != null ? other.expirationTime_.Clone() : null;
      dataSource_ = other.dataSource_ != null ? other.dataSource_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PublicAlerts Clone() {
      return new PublicAlerts(this);
    }

    /// <summary>Field number for the "alert_id" field.</summary>
    public const int AlertIdFieldNumber = 1;
    private string alertId_ = "";
    /// <summary>
    /// The unique identifier for this alert.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AlertId {
      get { return alertId_; }
      set {
        alertId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "alert_title" field.</summary>
    public const int AlertTitleFieldNumber = 2;
    private global::Google.Type.LocalizedText alertTitle_;
    /// <summary>
    /// The localized title for the alert.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Type.LocalizedText AlertTitle {
      get { return alertTitle_; }
      set {
        alertTitle_ = value;
      }
    }

    /// <summary>Field number for the "event_type" field.</summary>
    public const int EventTypeFieldNumber = 3;
    private global::Google.Geo.Weather.V1.WeatherEventType eventType_ = global::Google.Geo.Weather.V1.WeatherEventType.Unspecified;
    /// <summary>
    /// The type of weather event.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Geo.Weather.V1.WeatherEventType EventType {
      get { return eventType_; }
      set {
        eventType_ = value;
      }
    }

    /// <summary>Field number for the "area_name" field.</summary>
    public const int AreaNameFieldNumber = 4;
    private string areaName_ = "";
    /// <summary>
    /// The name of the area where the alert is issued.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AreaName {
      get { return areaName_; }
      set {
        areaName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "polygon" field.</summary>
    public const int PolygonFieldNumber = 5;
    private readonly static string PolygonDefaultValue = "";

    private string polygon_;
    /// <summary>
    /// A GeoJSON representation of the areas where the alert is issued.
    ///
    /// The GeoJSON data must be in RFC 7946 format and represent either a
    /// Polygon (for a single contiguous area) or a MultiPolygon (for multiple
    /// distinct areas).
    ///
    /// Example:
    ///
    /// {
    ///  "type": "Polygon",
    ///   "coordinates": [
    ///       [
    ///           [-1, -1], [-1, 0], [0, 0], [-1, -1]
    ///       ]
    ///   ]
    /// }
    ///
    /// A sample MultiPolygon GeoJson string looks like:
    ///
    /// {
    ///  "type": "MultiPolygon",
    ///   "coordinates": [
    ///       [
    ///           [0, 0], [-1, 0], [-1, 1], [0, 0]
    ///       ],
    ///       [
    ///           [0, 0], [-2, 0], [-2, 2], [0, 0]
    ///       ]
    ///   ]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Polygon {
      get { return polygon_ ?? PolygonDefaultValue; }
      set {
        polygon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "polygon" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPolygon {
      get { return polygon_ != null; }
    }
    /// <summary>Clears the value of the "polygon" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPolygon() {
      polygon_ = null;
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 6;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    /// <summary>
    /// The latest text describing the alert as issued by the official authority.
    /// Please note that while this field should be localized, it is not guaranteed
    /// that it will be.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDescription() {
      description_ = null;
    }

    /// <summary>Field number for the "severity" field.</summary>
    public const int SeverityFieldNumber = 7;
    private global::Google.Geo.Weather.V1.Severity severity_ = global::Google.Geo.Weather.V1.Severity.Unknown;
    /// <summary>
    /// The severity level of the alert.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Geo.Weather.V1.Severity Severity {
      get { return severity_; }
      set {
        severity_ = value;
      }
    }

    /// <summary>Field number for the "certainty" field.</summary>
    public const int CertaintyFieldNumber = 8;
    private readonly static global::Google.Geo.Weather.V1.Certainty CertaintyDefaultValue = global::Google.Geo.Weather.V1.Certainty.Unknown;

    private global::Google.Geo.Weather.V1.Certainty certainty_;
    /// <summary>
    /// The certainty of the alert.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Geo.Weather.V1.Certainty Certainty {
      get { if ((_hasBits0 & 1) != 0) { return certainty_; } else { return CertaintyDefaultValue; } }
      set {
        _hasBits0 |= 1;
        certainty_ = value;
      }
    }
    /// <summary>Gets whether the "certainty" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCertainty {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "certainty" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCertainty() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "urgency" field.</summary>
    public const int UrgencyFieldNumber = 9;
    private readonly static global::Google.Geo.Weather.V1.Urgency UrgencyDefaultValue = global::Google.Geo.Weather.V1.Urgency.Unknown;

    private global::Google.Geo.Weather.V1.Urgency urgency_;
    /// <summary>
    /// The urgency of the alert.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Geo.Weather.V1.Urgency Urgency {
      get { if ((_hasBits0 & 2) != 0) { return urgency_; } else { return UrgencyDefaultValue; } }
      set {
        _hasBits0 |= 2;
        urgency_ = value;
      }
    }
    /// <summary>Gets whether the "urgency" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUrgency {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "urgency" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUrgency() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "instruction" field.</summary>
    public const int InstructionFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _repeated_instruction_codec
        = pb::FieldCodec.ForString(82);
    private readonly pbc::RepeatedField<string> instruction_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Instructions recommended by the publisher. Please note that while this
    /// field should be localized, it is not guaranteed that it will be.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Instruction {
      get { return instruction_; }
    }

    /// <summary>Field number for the "safety_recommendations" field.</summary>
    public const int SafetyRecommendationsFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Google.Geo.Weather.V1.SafetyRecommendation> _repeated_safetyRecommendations_codec
        = pb::FieldCodec.ForMessage(90, global::Google.Geo.Weather.V1.SafetyRecommendation.Parser);
    private readonly pbc::RepeatedField<global::Google.Geo.Weather.V1.SafetyRecommendation> safetyRecommendations_ = new pbc::RepeatedField<global::Google.Geo.Weather.V1.SafetyRecommendation>();
    /// <summary>
    /// Safety recommendations directive to the user, these can be provided by the
    /// publisher or other authorities.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Geo.Weather.V1.SafetyRecommendation> SafetyRecommendations {
      get { return safetyRecommendations_; }
    }

    /// <summary>Field number for the "timezone_offset" field.</summary>
    public const int TimezoneOffsetFieldNumber = 12;
    private string timezoneOffset_ = "";
    /// <summary>
    /// The timezone offset of the event, in +/-HH:MM format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TimezoneOffset {
      get { return timezoneOffset_; }
      set {
        timezoneOffset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 13;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    /// <summary>
    /// The start time of the event.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "expiration_time" field.</summary>
    public const int ExpirationTimeFieldNumber = 14;
    private global::Google.Protobuf.WellKnownTypes.Timestamp expirationTime_;
    /// <summary>
    /// The expiration time of the event.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ExpirationTime {
      get { return expirationTime_; }
      set {
        expirationTime_ = value;
      }
    }

    /// <summary>Field number for the "data_source" field.</summary>
    public const int DataSourceFieldNumber = 15;
    private global::Google.Geo.Weather.V1.DataSource dataSource_;
    /// <summary>
    /// Details of the publisher that issued the alert.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Geo.Weather.V1.DataSource DataSource {
      get { return dataSource_; }
      set {
        dataSource_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PublicAlerts);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PublicAlerts other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AlertId != other.AlertId) return false;
      if (!object.Equals(AlertTitle, other.AlertTitle)) return false;
      if (EventType != other.EventType) return false;
      if (AreaName != other.AreaName) return false;
      if (Polygon != other.Polygon) return false;
      if (Description != other.Description) return false;
      if (Severity != other.Severity) return false;
      if (Certainty != other.Certainty) return false;
      if (Urgency != other.Urgency) return false;
      if(!instruction_.Equals(other.instruction_)) return false;
      if(!safetyRecommendations_.Equals(other.safetyRecommendations_)) return false;
      if (TimezoneOffset != other.TimezoneOffset) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(ExpirationTime, other.ExpirationTime)) return false;
      if (!object.Equals(DataSource, other.DataSource)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AlertId.Length != 0) hash ^= AlertId.GetHashCode();
      if (alertTitle_ != null) hash ^= AlertTitle.GetHashCode();
      if (EventType != global::Google.Geo.Weather.V1.WeatherEventType.Unspecified) hash ^= EventType.GetHashCode();
      if (AreaName.Length != 0) hash ^= AreaName.GetHashCode();
      if (HasPolygon) hash ^= Polygon.GetHashCode();
      if (HasDescription) hash ^= Description.GetHashCode();
      if (Severity != global::Google.Geo.Weather.V1.Severity.Unknown) hash ^= Severity.GetHashCode();
      if (HasCertainty) hash ^= Certainty.GetHashCode();
      if (HasUrgency) hash ^= Urgency.GetHashCode();
      hash ^= instruction_.GetHashCode();
      hash ^= safetyRecommendations_.GetHashCode();
      if (TimezoneOffset.Length != 0) hash ^= TimezoneOffset.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (expirationTime_ != null) hash ^= ExpirationTime.GetHashCode();
      if (dataSource_ != null) hash ^= DataSource.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AlertId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AlertId);
      }
      if (alertTitle_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AlertTitle);
      }
      if (EventType != global::Google.Geo.Weather.V1.WeatherEventType.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) EventType);
      }
      if (AreaName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(AreaName);
      }
      if (HasPolygon) {
        output.WriteRawTag(42);
        output.WriteString(Polygon);
      }
      if (HasDescription) {
        output.WriteRawTag(50);
        output.WriteString(Description);
      }
      if (Severity != global::Google.Geo.Weather.V1.Severity.Unknown) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Severity);
      }
      if (HasCertainty) {
        output.WriteRawTag(64);
        output.WriteEnum((int) Certainty);
      }
      if (HasUrgency) {
        output.WriteRawTag(72);
        output.WriteEnum((int) Urgency);
      }
      instruction_.WriteTo(output, _repeated_instruction_codec);
      safetyRecommendations_.WriteTo(output, _repeated_safetyRecommendations_codec);
      if (TimezoneOffset.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(TimezoneOffset);
      }
      if (startTime_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(StartTime);
      }
      if (expirationTime_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(ExpirationTime);
      }
      if (dataSource_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(DataSource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AlertId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AlertId);
      }
      if (alertTitle_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AlertTitle);
      }
      if (EventType != global::Google.Geo.Weather.V1.WeatherEventType.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) EventType);
      }
      if (AreaName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(AreaName);
      }
      if (HasPolygon) {
        output.WriteRawTag(42);
        output.WriteString(Polygon);
      }
      if (HasDescription) {
        output.WriteRawTag(50);
        output.WriteString(Description);
      }
      if (Severity != global::Google.Geo.Weather.V1.Severity.Unknown) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Severity);
      }
      if (HasCertainty) {
        output.WriteRawTag(64);
        output.WriteEnum((int) Certainty);
      }
      if (HasUrgency) {
        output.WriteRawTag(72);
        output.WriteEnum((int) Urgency);
      }
      instruction_.WriteTo(ref output, _repeated_instruction_codec);
      safetyRecommendations_.WriteTo(ref output, _repeated_safetyRecommendations_codec);
      if (TimezoneOffset.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(TimezoneOffset);
      }
      if (startTime_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(StartTime);
      }
      if (expirationTime_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(ExpirationTime);
      }
      if (dataSource_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(DataSource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AlertId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AlertId);
      }
      if (alertTitle_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AlertTitle);
      }
      if (EventType != global::Google.Geo.Weather.V1.WeatherEventType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EventType);
      }
      if (AreaName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AreaName);
      }
      if (HasPolygon) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Polygon);
      }
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Severity != global::Google.Geo.Weather.V1.Severity.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Severity);
      }
      if (HasCertainty) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Certainty);
      }
      if (HasUrgency) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Urgency);
      }
      size += instruction_.CalculateSize(_repeated_instruction_codec);
      size += safetyRecommendations_.CalculateSize(_repeated_safetyRecommendations_codec);
      if (TimezoneOffset.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TimezoneOffset);
      }
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (expirationTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpirationTime);
      }
      if (dataSource_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DataSource);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PublicAlerts other) {
      if (other == null) {
        return;
      }
      if (other.AlertId.Length != 0) {
        AlertId = other.AlertId;
      }
      if (other.alertTitle_ != null) {
        if (alertTitle_ == null) {
          AlertTitle = new global::Google.Type.LocalizedText();
        }
        AlertTitle.MergeFrom(other.AlertTitle);
      }
      if (other.EventType != global::Google.Geo.Weather.V1.WeatherEventType.Unspecified) {
        EventType = other.EventType;
      }
      if (other.AreaName.Length != 0) {
        AreaName = other.AreaName;
      }
      if (other.HasPolygon) {
        Polygon = other.Polygon;
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      if (other.Severity != global::Google.Geo.Weather.V1.Severity.Unknown) {
        Severity = other.Severity;
      }
      if (other.HasCertainty) {
        Certainty = other.Certainty;
      }
      if (other.HasUrgency) {
        Urgency = other.Urgency;
      }
      instruction_.Add(other.instruction_);
      safetyRecommendations_.Add(other.safetyRecommendations_);
      if (other.TimezoneOffset.Length != 0) {
        TimezoneOffset = other.TimezoneOffset;
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.expirationTime_ != null) {
        if (expirationTime_ == null) {
          ExpirationTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ExpirationTime.MergeFrom(other.ExpirationTime);
      }
      if (other.dataSource_ != null) {
        if (dataSource_ == null) {
          DataSource = new global::Google.Geo.Weather.V1.DataSource();
        }
        DataSource.MergeFrom(other.DataSource);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AlertId = input.ReadString();
            break;
          }
          case 18: {
            if (alertTitle_ == null) {
              AlertTitle = new global::Google.Type.LocalizedText();
            }
            input.ReadMessage(AlertTitle);
            break;
          }
          case 24: {
            EventType = (global::Google.Geo.Weather.V1.WeatherEventType) input.ReadEnum();
            break;
          }
          case 34: {
            AreaName = input.ReadString();
            break;
          }
          case 42: {
            Polygon = input.ReadString();
            break;
          }
          case 50: {
            Description = input.ReadString();
            break;
          }
          case 56: {
            Severity = (global::Google.Geo.Weather.V1.Severity) input.ReadEnum();
            break;
          }
          case 64: {
            Certainty = (global::Google.Geo.Weather.V1.Certainty) input.ReadEnum();
            break;
          }
          case 72: {
            Urgency = (global::Google.Geo.Weather.V1.Urgency) input.ReadEnum();
            break;
          }
          case 82: {
            instruction_.AddEntriesFrom(input, _repeated_instruction_codec);
            break;
          }
          case 90: {
            safetyRecommendations_.AddEntriesFrom(input, _repeated_safetyRecommendations_codec);
            break;
          }
          case 98: {
            TimezoneOffset = input.ReadString();
            break;
          }
          case 106: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 114: {
            if (expirationTime_ == null) {
              ExpirationTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ExpirationTime);
            break;
          }
          case 122: {
            if (dataSource_ == null) {
              DataSource = new global::Google.Geo.Weather.V1.DataSource();
            }
            input.ReadMessage(DataSource);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            AlertId = input.ReadString();
            break;
          }
          case 18: {
            if (alertTitle_ == null) {
              AlertTitle = new global::Google.Type.LocalizedText();
            }
            input.ReadMessage(AlertTitle);
            break;
          }
          case 24: {
            EventType = (global::Google.Geo.Weather.V1.WeatherEventType) input.ReadEnum();
            break;
          }
          case 34: {
            AreaName = input.ReadString();
            break;
          }
          case 42: {
            Polygon = input.ReadString();
            break;
          }
          case 50: {
            Description = input.ReadString();
            break;
          }
          case 56: {
            Severity = (global::Google.Geo.Weather.V1.Severity) input.ReadEnum();
            break;
          }
          case 64: {
            Certainty = (global::Google.Geo.Weather.V1.Certainty) input.ReadEnum();
            break;
          }
          case 72: {
            Urgency = (global::Google.Geo.Weather.V1.Urgency) input.ReadEnum();
            break;
          }
          case 82: {
            instruction_.AddEntriesFrom(ref input, _repeated_instruction_codec);
            break;
          }
          case 90: {
            safetyRecommendations_.AddEntriesFrom(ref input, _repeated_safetyRecommendations_codec);
            break;
          }
          case 98: {
            TimezoneOffset = input.ReadString();
            break;
          }
          case 106: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 114: {
            if (expirationTime_ == null) {
              ExpirationTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ExpirationTime);
            break;
          }
          case 122: {
            if (dataSource_ == null) {
              DataSource = new global::Google.Geo.Weather.V1.DataSource();
            }
            input.ReadMessage(DataSource);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
