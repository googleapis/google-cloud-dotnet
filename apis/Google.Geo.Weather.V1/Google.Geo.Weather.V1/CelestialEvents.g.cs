// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/maps/weather/v1/celestial_events.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Geo.Weather.V1 {

  /// <summary>Holder for reflection information generated from google/maps/weather/v1/celestial_events.proto</summary>
  public static partial class CelestialEventsReflection {

    #region Descriptor
    /// <summary>File descriptor for google/maps/weather/v1/celestial_events.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CelestialEventsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci1nb29nbGUvbWFwcy93ZWF0aGVyL3YxL2NlbGVzdGlhbF9ldmVudHMucHJv",
            "dG8SFmdvb2dsZS5tYXBzLndlYXRoZXIudjEaH2dvb2dsZS9wcm90b2J1Zi90",
            "aW1lc3RhbXAucHJvdG8ibgoJU3VuRXZlbnRzEjAKDHN1bnJpc2VfdGltZRgB",
            "IAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLwoLc3Vuc2V0X3Rp",
            "bWUYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wIqoBCgpNb29u",
            "RXZlbnRzEjIKDm1vb25yaXNlX3RpbWVzGAQgAygLMhouZ29vZ2xlLnByb3Rv",
            "YnVmLlRpbWVzdGFtcBIxCg1tb29uc2V0X3RpbWVzGAUgAygLMhouZ29vZ2xl",
            "LnByb3RvYnVmLlRpbWVzdGFtcBI1Cgptb29uX3BoYXNlGAMgASgOMiEuZ29v",
            "Z2xlLm1hcHMud2VhdGhlci52MS5Nb29uUGhhc2UquwEKCU1vb25QaGFzZRIa",
            "ChZNT09OX1BIQVNFX1VOU1BFQ0lGSUVEEAASDAoITkVXX01PT04QARITCg9X",
            "QVhJTkdfQ1JFU0NFTlQQAhIRCg1GSVJTVF9RVUFSVEVSEAMSEgoOV0FYSU5H",
            "X0dJQkJPVVMQBBINCglGVUxMX01PT04QBRISCg5XQU5JTkdfR0lCQk9VUxAG",
            "EhAKDExBU1RfUVVBUlRFUhAHEhMKD1dBTklOR19DUkVTQ0VOVBAIQqgBChpj",
            "b20uZ29vZ2xlLm1hcHMud2VhdGhlci52MUIUQ2VsZXN0aWFsRXZlbnRzUHJv",
            "dG9QAVo6Y2xvdWQuZ29vZ2xlLmNvbS9nby9tYXBzL3dlYXRoZXIvYXBpdjEv",
            "d2VhdGhlcnBiO3dlYXRoZXJwYqICBUdNV1YxqgIVR29vZ2xlLkdlby5XZWF0",
            "aGVyLlYxygIVR29vZ2xlXEdlb1xXZWF0aGVyXFYxYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Google.Geo.Weather.V1.MoonPhase), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Geo.Weather.V1.SunEvents), global::Google.Geo.Weather.V1.SunEvents.Parser, new[]{ "SunriseTime", "SunsetTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Geo.Weather.V1.MoonEvents), global::Google.Geo.Weather.V1.MoonEvents.Parser, new[]{ "MoonriseTimes", "MoonsetTimes", "MoonPhase" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Marks the moon phase (a.k.a. lunar phase).
  /// </summary>
  public enum MoonPhase {
    /// <summary>
    /// Unspecified moon phase.
    /// </summary>
    [pbr::OriginalName("MOON_PHASE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// The moon is not illuminated by the sun.
    /// </summary>
    [pbr::OriginalName("NEW_MOON")] NewMoon = 1,
    /// <summary>
    /// The moon is lit by 0%-50% on its right side in the northern hemisphere ðŸŒ’
    /// and on its left side in the southern hemisphere ðŸŒ˜.
    /// </summary>
    [pbr::OriginalName("WAXING_CRESCENT")] WaxingCrescent = 2,
    /// <summary>
    /// The moon is lit by 50.1% on its right side in the northern hemisphere ðŸŒ“
    /// and on its left side in the southern hemisphere ðŸŒ—.
    /// </summary>
    [pbr::OriginalName("FIRST_QUARTER")] FirstQuarter = 3,
    /// <summary>
    /// The moon is lit by 50%-100% on its right side in the northern hemisphere ðŸŒ”
    /// and on its left side in the southern hemisphere ðŸŒ–.
    /// </summary>
    [pbr::OriginalName("WAXING_GIBBOUS")] WaxingGibbous = 4,
    /// <summary>
    /// The moon is fully illuminated.
    /// </summary>
    [pbr::OriginalName("FULL_MOON")] FullMoon = 5,
    /// <summary>
    /// The moon is lit by 50%-100% on its left side in the northern hemisphere ðŸŒ–
    /// and on its right side in the southern hemisphere ðŸŒ”.
    /// </summary>
    [pbr::OriginalName("WANING_GIBBOUS")] WaningGibbous = 6,
    /// <summary>
    /// The moon is lit by 50.1% on its left side in the northern hemisphere ðŸŒ—
    /// and on its right side in the southern hemisphere ðŸŒ“.
    /// </summary>
    [pbr::OriginalName("LAST_QUARTER")] LastQuarter = 7,
    /// <summary>
    /// The moon is lit by 0%-50% on its left side in the northern hemisphere ðŸŒ˜
    /// and on its right side in the southern hemisphere ðŸŒ’.
    /// </summary>
    [pbr::OriginalName("WANING_CRESCENT")] WaningCrescent = 8,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Represents the events related to the sun (e.g. sunrise, sunset).
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SunEvents : pb::IMessage<SunEvents>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SunEvents> _parser = new pb::MessageParser<SunEvents>(() => new SunEvents());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SunEvents> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Geo.Weather.V1.CelestialEventsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SunEvents() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SunEvents(SunEvents other) : this() {
      sunriseTime_ = other.sunriseTime_ != null ? other.sunriseTime_.Clone() : null;
      sunsetTime_ = other.sunsetTime_ != null ? other.sunsetTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SunEvents Clone() {
      return new SunEvents(this);
    }

    /// <summary>Field number for the "sunrise_time" field.</summary>
    public const int SunriseTimeFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp sunriseTime_;
    /// <summary>
    /// The time when the sun rises.
    ///
    /// NOTE: In some unique cases (e.g. north of the artic circle) there may be no
    /// sunrise time for a day. In these cases, this field will be unset.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp SunriseTime {
      get { return sunriseTime_; }
      set {
        sunriseTime_ = value;
      }
    }

    /// <summary>Field number for the "sunset_time" field.</summary>
    public const int SunsetTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp sunsetTime_;
    /// <summary>
    /// The time when the sun sets.
    ///
    /// NOTE: In some unique cases (e.g. north of the artic circle) there may be no
    /// sunset time for a day. In these cases, this field will be unset.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp SunsetTime {
      get { return sunsetTime_; }
      set {
        sunsetTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SunEvents);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SunEvents other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SunriseTime, other.SunriseTime)) return false;
      if (!object.Equals(SunsetTime, other.SunsetTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (sunriseTime_ != null) hash ^= SunriseTime.GetHashCode();
      if (sunsetTime_ != null) hash ^= SunsetTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (sunriseTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SunriseTime);
      }
      if (sunsetTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SunsetTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (sunriseTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SunriseTime);
      }
      if (sunsetTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SunsetTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (sunriseTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SunriseTime);
      }
      if (sunsetTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SunsetTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SunEvents other) {
      if (other == null) {
        return;
      }
      if (other.sunriseTime_ != null) {
        if (sunriseTime_ == null) {
          SunriseTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        SunriseTime.MergeFrom(other.SunriseTime);
      }
      if (other.sunsetTime_ != null) {
        if (sunsetTime_ == null) {
          SunsetTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        SunsetTime.MergeFrom(other.SunsetTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (sunriseTime_ == null) {
              SunriseTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(SunriseTime);
            break;
          }
          case 18: {
            if (sunsetTime_ == null) {
              SunsetTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(SunsetTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (sunriseTime_ == null) {
              SunriseTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(SunriseTime);
            break;
          }
          case 18: {
            if (sunsetTime_ == null) {
              SunsetTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(SunsetTime);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Represents the events related to the moon (e.g. moonrise, moonset).
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class MoonEvents : pb::IMessage<MoonEvents>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MoonEvents> _parser = new pb::MessageParser<MoonEvents>(() => new MoonEvents());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MoonEvents> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Geo.Weather.V1.CelestialEventsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MoonEvents() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MoonEvents(MoonEvents other) : this() {
      moonriseTimes_ = other.moonriseTimes_.Clone();
      moonsetTimes_ = other.moonsetTimes_.Clone();
      moonPhase_ = other.moonPhase_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MoonEvents Clone() {
      return new MoonEvents(this);
    }

    /// <summary>Field number for the "moonrise_times" field.</summary>
    public const int MoonriseTimesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Protobuf.WellKnownTypes.Timestamp> _repeated_moonriseTimes_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Protobuf.WellKnownTypes.Timestamp.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Timestamp> moonriseTimes_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Timestamp>();
    /// <summary>
    /// The time when the upper limb of the moon appears above the horizon
    /// (see https://en.wikipedia.org/wiki/Moonrise_and_moonset).
    ///
    /// NOTE: For most cases, there'll be a single moon rise time per day. In other
    /// cases, the list might be empty (e.g. when the moon rises after next day
    /// midnight).
    /// However, in unique cases (e.g. in polar regions), the list may contain
    /// more than one value. In these cases, the values are sorted in ascending
    /// order.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Timestamp> MoonriseTimes {
      get { return moonriseTimes_; }
    }

    /// <summary>Field number for the "moonset_times" field.</summary>
    public const int MoonsetTimesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Google.Protobuf.WellKnownTypes.Timestamp> _repeated_moonsetTimes_codec
        = pb::FieldCodec.ForMessage(42, global::Google.Protobuf.WellKnownTypes.Timestamp.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Timestamp> moonsetTimes_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Timestamp>();
    /// <summary>
    /// The time when the upper limb of the moon disappears below the
    /// horizon (see https://en.wikipedia.org/wiki/Moonrise_and_moonset).
    ///
    /// NOTE: For most cases, there'll be a single moon set time per day. In other
    /// cases, the list might be empty (e.g. when the moon sets after next day
    /// midnight).
    /// However, in unique cases (e.g. in polar regions), the list may contain
    /// more than one value. In these cases, the values are sorted in ascending
    /// order.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Timestamp> MoonsetTimes {
      get { return moonsetTimes_; }
    }

    /// <summary>Field number for the "moon_phase" field.</summary>
    public const int MoonPhaseFieldNumber = 3;
    private global::Google.Geo.Weather.V1.MoonPhase moonPhase_ = global::Google.Geo.Weather.V1.MoonPhase.Unspecified;
    /// <summary>
    /// The moon phase (a.k.a. lunar phase).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Geo.Weather.V1.MoonPhase MoonPhase {
      get { return moonPhase_; }
      set {
        moonPhase_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MoonEvents);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MoonEvents other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!moonriseTimes_.Equals(other.moonriseTimes_)) return false;
      if(!moonsetTimes_.Equals(other.moonsetTimes_)) return false;
      if (MoonPhase != other.MoonPhase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= moonriseTimes_.GetHashCode();
      hash ^= moonsetTimes_.GetHashCode();
      if (MoonPhase != global::Google.Geo.Weather.V1.MoonPhase.Unspecified) hash ^= MoonPhase.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MoonPhase != global::Google.Geo.Weather.V1.MoonPhase.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) MoonPhase);
      }
      moonriseTimes_.WriteTo(output, _repeated_moonriseTimes_codec);
      moonsetTimes_.WriteTo(output, _repeated_moonsetTimes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MoonPhase != global::Google.Geo.Weather.V1.MoonPhase.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) MoonPhase);
      }
      moonriseTimes_.WriteTo(ref output, _repeated_moonriseTimes_codec);
      moonsetTimes_.WriteTo(ref output, _repeated_moonsetTimes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += moonriseTimes_.CalculateSize(_repeated_moonriseTimes_codec);
      size += moonsetTimes_.CalculateSize(_repeated_moonsetTimes_codec);
      if (MoonPhase != global::Google.Geo.Weather.V1.MoonPhase.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MoonPhase);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MoonEvents other) {
      if (other == null) {
        return;
      }
      moonriseTimes_.Add(other.moonriseTimes_);
      moonsetTimes_.Add(other.moonsetTimes_);
      if (other.MoonPhase != global::Google.Geo.Weather.V1.MoonPhase.Unspecified) {
        MoonPhase = other.MoonPhase;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 24: {
            MoonPhase = (global::Google.Geo.Weather.V1.MoonPhase) input.ReadEnum();
            break;
          }
          case 34: {
            moonriseTimes_.AddEntriesFrom(input, _repeated_moonriseTimes_codec);
            break;
          }
          case 42: {
            moonsetTimes_.AddEntriesFrom(input, _repeated_moonsetTimes_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 24: {
            MoonPhase = (global::Google.Geo.Weather.V1.MoonPhase) input.ReadEnum();
            break;
          }
          case 34: {
            moonriseTimes_.AddEntriesFrom(ref input, _repeated_moonriseTimes_codec);
            break;
          }
          case 42: {
            moonsetTimes_.AddEntriesFrom(ref input, _repeated_moonsetTimes_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
