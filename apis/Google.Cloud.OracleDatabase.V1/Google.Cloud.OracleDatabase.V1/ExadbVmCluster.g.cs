// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/oracledatabase/v1/exadb_vm_cluster.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.OracleDatabase.V1 {

  /// <summary>Holder for reflection information generated from google/cloud/oracledatabase/v1/exadb_vm_cluster.proto</summary>
  public static partial class ExadbVmClusterReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/oracledatabase/v1/exadb_vm_cluster.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ExadbVmClusterReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjVnb29nbGUvY2xvdWQvb3JhY2xlZGF0YWJhc2UvdjEvZXhhZGJfdm1fY2x1",
            "c3Rlci5wcm90bxIeZ29vZ2xlLmNsb3VkLm9yYWNsZWRhdGFiYXNlLnYxGh9n",
            "b29nbGUvYXBpL2ZpZWxkX2JlaGF2aW9yLnByb3RvGhlnb29nbGUvYXBpL3Jl",
            "c291cmNlLnByb3RvGitnb29nbGUvY2xvdWQvb3JhY2xlZGF0YWJhc2UvdjEv",
            "Y29tbW9uLnByb3RvGh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3Rv",
            "Ghpnb29nbGUvdHlwZS9kYXRldGltZS5wcm90byKLBgoORXhhZGJWbUNsdXN0",
            "ZXISEQoEbmFtZRgBIAEoCUID4EEIElEKCnByb3BlcnRpZXMYAiABKAsyOC5n",
            "b29nbGUuY2xvdWQub3JhY2xlZGF0YWJhc2UudjEuRXhhZGJWbUNsdXN0ZXJQ",
            "cm9wZXJ0aWVzQgPgQQISHwoPZ2NwX29yYWNsZV96b25lGAMgASgJQgbgQQPg",
            "QQUSTwoGbGFiZWxzGAUgAygLMjouZ29vZ2xlLmNsb3VkLm9yYWNsZWRhdGFi",
            "YXNlLnYxLkV4YWRiVm1DbHVzdGVyLkxhYmVsc0VudHJ5QgPgQQESSAoLb2Ri",
            "X25ldHdvcmsYBiABKAlCM+BBAeBBBfpBKgoob3JhY2xlZGF0YWJhc2UuZ29v",
            "Z2xlYXBpcy5jb20vT2RiTmV0d29yaxJGCgpvZGJfc3VibmV0GAcgASgJQjLg",
            "QQLgQQX6QSkKJ29yYWNsZWRhdGFiYXNlLmdvb2dsZWFwaXMuY29tL09kYlN1",
            "Ym5ldBJNChFiYWNrdXBfb2RiX3N1Ym5ldBgIIAEoCUIy4EEC4EEF+kEpCidv",
            "cmFjbGVkYXRhYmFzZS5nb29nbGVhcGlzLmNvbS9PZGJTdWJuZXQSHAoMZGlz",
            "cGxheV9uYW1lGAkgASgJQgbgQQLgQQUSNAoLY3JlYXRlX3RpbWUYCiABKAsy",
            "Gi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMSGwoOZW50aXRsZW1l",
            "bnRfaWQYCyABKAlCA+BBAxotCgtMYWJlbHNFbnRyeRILCgNrZXkYASABKAkS",
            "DQoFdmFsdWUYAiABKAk6AjgBOp8B6kGbAQosb3JhY2xlZGF0YWJhc2UuZ29v",
            "Z2xlYXBpcy5jb20vRXhhZGJWbUNsdXN0ZXISSnByb2plY3RzL3twcm9qZWN0",
            "fS9sb2NhdGlvbnMve2xvY2F0aW9ufS9leGFkYlZtQ2x1c3RlcnMve2V4YWRi",
            "X3ZtX2NsdXN0ZXJ9Kg9leGFkYlZtQ2x1c3RlcnMyDmV4YWRiVm1DbHVzdGVy",
            "IkEKHEV4YWRiVm1DbHVzdGVyU3RvcmFnZURldGFpbHMSIQoUc2l6ZV9pbl9n",
            "YnNfcGVyX25vZGUYAiABKAVCA+BBAiLHCwoYRXhhZGJWbUNsdXN0ZXJQcm9w",
            "ZXJ0aWVzEhwKDGNsdXN0ZXJfbmFtZRgBIAEoCUIG4EEB4EEFEh0KDWdyaWRf",
            "aW1hZ2VfaWQYAiABKAlCBuBBAuBBBRIXCgpub2RlX2NvdW50GAMgASgFQgPg",
            "QQISKwobZW5hYmxlZF9lY3B1X2NvdW50X3Blcl9ub2RlGBQgASgFQgbgQQLg",
            "QQUSLgoeYWRkaXRpb25hbF9lY3B1X2NvdW50X3Blcl9ub2RlGBUgASgFQgbg",
            "QQHgQQUSZAoWdm1fZmlsZV9zeXN0ZW1fc3RvcmFnZRgGIAEoCzI8Lmdvb2ds",
            "ZS5jbG91ZC5vcmFjbGVkYXRhYmFzZS52MS5FeGFkYlZtQ2x1c3RlclN0b3Jh",
            "Z2VEZXRhaWxzQgbgQQLgQQUSZAoNbGljZW5zZV9tb2RlbBgHIAEoDjJFLmdv",
            "b2dsZS5jbG91ZC5vcmFjbGVkYXRhYmFzZS52MS5FeGFkYlZtQ2x1c3RlclBy",
            "b3BlcnRpZXMuTGljZW5zZU1vZGVsQgbgQQHgQQUSYgoZZXhhc2NhbGVfZGJf",
            "c3RvcmFnZV92YXVsdBgIIAEoCUI/4EEC4EEF+kE2CjRvcmFjbGVkYXRhYmFz",
            "ZS5nb29nbGVhcGlzLmNvbS9FeGFzY2FsZURiU3RvcmFnZVZhdWx0Eh8KD2hv",
            "c3RuYW1lX3ByZWZpeBgJIAEoCUIG4EEC4EEFEhUKCGhvc3RuYW1lGAogASgJ",
            "QgPgQQMSHwoPc3NoX3B1YmxpY19rZXlzGAsgAygJQgbgQQLgQQUSZAoXZGF0",
            "YV9jb2xsZWN0aW9uX29wdGlvbnMYDCABKAsyOy5nb29nbGUuY2xvdWQub3Jh",
            "Y2xlZGF0YWJhc2UudjEuRGF0YUNvbGxlY3Rpb25PcHRpb25zQ29tbW9uQgbg",
            "QQHgQQUSMAoJdGltZV96b25lGA0gASgLMhUuZ29vZ2xlLnR5cGUuVGltZVpv",
            "bmVCBuBBAeBBBRJzCg9saWZlY3ljbGVfc3RhdGUYDiABKA4yVS5nb29nbGUu",
            "Y2xvdWQub3JhY2xlZGF0YWJhc2UudjEuRXhhZGJWbUNsdXN0ZXJQcm9wZXJ0",
            "aWVzLkV4YWRiVm1DbHVzdGVyTGlmZWN5Y2xlU3RhdGVCA+BBAxJoCg9zaGFw",
            "ZV9hdHRyaWJ1dGUYDyABKA4yRy5nb29nbGUuY2xvdWQub3JhY2xlZGF0YWJh",
            "c2UudjEuRXhhZGJWbUNsdXN0ZXJQcm9wZXJ0aWVzLlNoYXBlQXR0cmlidXRl",
            "QgbgQQLgQQUSGwoObWVtb3J5X3NpemVfZ2IYECABKAVCA+BBAxImChZzY2Fu",
            "X2xpc3RlbmVyX3BvcnRfdGNwGBEgASgFQgbgQQHgQQUSFAoHb2NpX3VyaRgS",
            "IAEoCUID4EEDEhcKCmdpX3ZlcnNpb24YEyABKAlCA+BBAyJfCgxMaWNlbnNl",
            "TW9kZWwSHQoZTElDRU5TRV9NT0RFTF9VTlNQRUNJRklFRBAAEhQKEExJQ0VO",
            "U0VfSU5DTFVERUQQARIaChZCUklOR19ZT1VSX09XTl9MSUNFTlNFEAIiyQEK",
            "HEV4YWRiVm1DbHVzdGVyTGlmZWN5Y2xlU3RhdGUSMAosRVhBREJfVk1fQ0xV",
            "U1RFUl9MSUZFQ1lDTEVfU1RBVEVfVU5TUEVDSUZJRUQQABIQCgxQUk9WSVNJ",
            "T05JTkcQARINCglBVkFJTEFCTEUQAhIMCghVUERBVElORxADEg8KC1RFUk1J",
            "TkFUSU5HEAQSDgoKVEVSTUlOQVRFRBAFEgoKBkZBSUxFRBAGEhsKF01BSU5U",
            "RU5BTkNFX0lOX1BST0dSRVNTEAciVwoOU2hhcGVBdHRyaWJ1dGUSHwobU0hB",
            "UEVfQVRUUklCVVRFX1VOU1BFQ0lGSUVEEAASEQoNU01BUlRfU1RPUkFHRRAB",
            "EhEKDUJMT0NLX1NUT1JBR0UQAkLtAQoiY29tLmdvb2dsZS5jbG91ZC5vcmFj",
            "bGVkYXRhYmFzZS52MUITRXhhZGJWbUNsdXN0ZXJQcm90b1ABWkpjbG91ZC5n",
            "b29nbGUuY29tL2dvL29yYWNsZWRhdGFiYXNlL2FwaXYxL29yYWNsZWRhdGFi",
            "YXNlcGI7b3JhY2xlZGF0YWJhc2VwYqoCHkdvb2dsZS5DbG91ZC5PcmFjbGVE",
            "YXRhYmFzZS5WMcoCHkdvb2dsZVxDbG91ZFxPcmFjbGVEYXRhYmFzZVxWMeoC",
            "IUdvb2dsZTo6Q2xvdWQ6Ok9yYWNsZURhdGFiYXNlOjpWMWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Cloud.OracleDatabase.V1.CommonReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Type.DatetimeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.OracleDatabase.V1.ExadbVmCluster), global::Google.Cloud.OracleDatabase.V1.ExadbVmCluster.Parser, new[]{ "Name", "Properties", "GcpOracleZone", "Labels", "OdbNetwork", "OdbSubnet", "BackupOdbSubnet", "DisplayName", "CreateTime", "EntitlementId" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterStorageDetails), global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterStorageDetails.Parser, new[]{ "SizeInGbsPerNode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterProperties), global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterProperties.Parser, new[]{ "ClusterName", "GridImageId", "NodeCount", "EnabledEcpuCountPerNode", "AdditionalEcpuCountPerNode", "VmFileSystemStorage", "LicenseModel", "ExascaleDbStorageVault", "HostnamePrefix", "Hostname", "SshPublicKeys", "DataCollectionOptions", "TimeZone", "LifecycleState", "ShapeAttribute", "MemorySizeGb", "ScanListenerPortTcp", "OciUri", "GiVersion" }, null, new[]{ typeof(global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterProperties.Types.LicenseModel), typeof(global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterProperties.Types.ExadbVmClusterLifecycleState), typeof(global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterProperties.Types.ShapeAttribute) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// ExadbVmCluster represents a cluster of VMs that are used to run Exadata
  /// workloads.
  /// https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/ExadbVmCluster/
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ExadbVmCluster : pb::IMessage<ExadbVmCluster>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExadbVmCluster> _parser = new pb::MessageParser<ExadbVmCluster>(() => new ExadbVmCluster());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ExadbVmCluster> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExadbVmCluster() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExadbVmCluster(ExadbVmCluster other) : this() {
      name_ = other.name_;
      properties_ = other.properties_ != null ? other.properties_.Clone() : null;
      gcpOracleZone_ = other.gcpOracleZone_;
      labels_ = other.labels_.Clone();
      odbNetwork_ = other.odbNetwork_;
      odbSubnet_ = other.odbSubnet_;
      backupOdbSubnet_ = other.backupOdbSubnet_;
      displayName_ = other.displayName_;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      entitlementId_ = other.entitlementId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExadbVmCluster Clone() {
      return new ExadbVmCluster(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Identifier. The name of the ExadbVmCluster resource in the following
    /// format:
    /// projects/{project}/locations/{region}/exadbVmClusters/{exadb_vm_cluster}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 2;
    private global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterProperties properties_;
    /// <summary>
    /// Required. The properties of the ExadbVmCluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterProperties Properties {
      get { return properties_; }
      set {
        properties_ = value;
      }
    }

    /// <summary>Field number for the "gcp_oracle_zone" field.</summary>
    public const int GcpOracleZoneFieldNumber = 3;
    private string gcpOracleZone_ = "";
    /// <summary>
    /// Output only. Immutable. The GCP Oracle zone where Oracle ExadbVmCluster is
    /// hosted. Example: us-east4-b-r2. During creation, the system will pick the
    /// zone assigned to the ExascaleDbStorageVault.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GcpOracleZone {
      get { return gcpOracleZone_; }
      set {
        gcpOracleZone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 5;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 42);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Optional. The labels or tags associated with the ExadbVmCluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "odb_network" field.</summary>
    public const int OdbNetworkFieldNumber = 6;
    private string odbNetwork_ = "";
    /// <summary>
    /// Optional. Immutable. The name of the OdbNetwork associated with the
    /// ExadbVmCluster. Format:
    /// projects/{project}/locations/{location}/odbNetworks/{odb_network} It is
    /// optional but if specified, this should match the parent ODBNetwork of the
    /// OdbSubnet.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OdbNetwork {
      get { return odbNetwork_; }
      set {
        odbNetwork_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "odb_subnet" field.</summary>
    public const int OdbSubnetFieldNumber = 7;
    private string odbSubnet_ = "";
    /// <summary>
    /// Required. Immutable. The name of the OdbSubnet associated with the
    /// ExadbVmCluster for IP allocation. Format:
    /// projects/{project}/locations/{location}/odbNetworks/{odb_network}/odbSubnets/{odb_subnet}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OdbSubnet {
      get { return odbSubnet_; }
      set {
        odbSubnet_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "backup_odb_subnet" field.</summary>
    public const int BackupOdbSubnetFieldNumber = 8;
    private string backupOdbSubnet_ = "";
    /// <summary>
    /// Required. Immutable. The name of the backup OdbSubnet associated with the
    /// ExadbVmCluster. Format:
    /// projects/{project}/locations/{location}/odbNetworks/{odb_network}/odbSubnets/{odb_subnet}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BackupOdbSubnet {
      get { return backupOdbSubnet_; }
      set {
        backupOdbSubnet_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 9;
    private string displayName_ = "";
    /// <summary>
    /// Required. Immutable. The display name for the ExadbVmCluster. The name does
    /// not have to be unique within your project. The name must be 1-255
    /// characters long and can only contain alphanumeric characters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 10;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. The date and time that the ExadbVmCluster was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "entitlement_id" field.</summary>
    public const int EntitlementIdFieldNumber = 11;
    private string entitlementId_ = "";
    /// <summary>
    /// Output only. The ID of the subscription entitlement associated with the
    /// ExadbVmCluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EntitlementId {
      get { return entitlementId_; }
      set {
        entitlementId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ExadbVmCluster);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ExadbVmCluster other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(Properties, other.Properties)) return false;
      if (GcpOracleZone != other.GcpOracleZone) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if (OdbNetwork != other.OdbNetwork) return false;
      if (OdbSubnet != other.OdbSubnet) return false;
      if (BackupOdbSubnet != other.BackupOdbSubnet) return false;
      if (DisplayName != other.DisplayName) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (EntitlementId != other.EntitlementId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (properties_ != null) hash ^= Properties.GetHashCode();
      if (GcpOracleZone.Length != 0) hash ^= GcpOracleZone.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (OdbNetwork.Length != 0) hash ^= OdbNetwork.GetHashCode();
      if (OdbSubnet.Length != 0) hash ^= OdbSubnet.GetHashCode();
      if (BackupOdbSubnet.Length != 0) hash ^= BackupOdbSubnet.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (EntitlementId.Length != 0) hash ^= EntitlementId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (properties_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Properties);
      }
      if (GcpOracleZone.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(GcpOracleZone);
      }
      labels_.WriteTo(output, _map_labels_codec);
      if (OdbNetwork.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(OdbNetwork);
      }
      if (OdbSubnet.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(OdbSubnet);
      }
      if (BackupOdbSubnet.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(BackupOdbSubnet);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(DisplayName);
      }
      if (createTime_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(CreateTime);
      }
      if (EntitlementId.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(EntitlementId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (properties_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Properties);
      }
      if (GcpOracleZone.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(GcpOracleZone);
      }
      labels_.WriteTo(ref output, _map_labels_codec);
      if (OdbNetwork.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(OdbNetwork);
      }
      if (OdbSubnet.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(OdbSubnet);
      }
      if (BackupOdbSubnet.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(BackupOdbSubnet);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(DisplayName);
      }
      if (createTime_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(CreateTime);
      }
      if (EntitlementId.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(EntitlementId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (properties_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Properties);
      }
      if (GcpOracleZone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GcpOracleZone);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      if (OdbNetwork.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OdbNetwork);
      }
      if (OdbSubnet.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OdbSubnet);
      }
      if (BackupOdbSubnet.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BackupOdbSubnet);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (EntitlementId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EntitlementId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ExadbVmCluster other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.properties_ != null) {
        if (properties_ == null) {
          Properties = new global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterProperties();
        }
        Properties.MergeFrom(other.Properties);
      }
      if (other.GcpOracleZone.Length != 0) {
        GcpOracleZone = other.GcpOracleZone;
      }
      labels_.MergeFrom(other.labels_);
      if (other.OdbNetwork.Length != 0) {
        OdbNetwork = other.OdbNetwork;
      }
      if (other.OdbSubnet.Length != 0) {
        OdbSubnet = other.OdbSubnet;
      }
      if (other.BackupOdbSubnet.Length != 0) {
        BackupOdbSubnet = other.BackupOdbSubnet;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.EntitlementId.Length != 0) {
        EntitlementId = other.EntitlementId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (properties_ == null) {
              Properties = new global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterProperties();
            }
            input.ReadMessage(Properties);
            break;
          }
          case 26: {
            GcpOracleZone = input.ReadString();
            break;
          }
          case 42: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 50: {
            OdbNetwork = input.ReadString();
            break;
          }
          case 58: {
            OdbSubnet = input.ReadString();
            break;
          }
          case 66: {
            BackupOdbSubnet = input.ReadString();
            break;
          }
          case 74: {
            DisplayName = input.ReadString();
            break;
          }
          case 82: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 90: {
            EntitlementId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (properties_ == null) {
              Properties = new global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterProperties();
            }
            input.ReadMessage(Properties);
            break;
          }
          case 26: {
            GcpOracleZone = input.ReadString();
            break;
          }
          case 42: {
            labels_.AddEntriesFrom(ref input, _map_labels_codec);
            break;
          }
          case 50: {
            OdbNetwork = input.ReadString();
            break;
          }
          case 58: {
            OdbSubnet = input.ReadString();
            break;
          }
          case 66: {
            BackupOdbSubnet = input.ReadString();
            break;
          }
          case 74: {
            DisplayName = input.ReadString();
            break;
          }
          case 82: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 90: {
            EntitlementId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The storage allocation for the exadbvmcluster, in gigabytes (GB).
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ExadbVmClusterStorageDetails : pb::IMessage<ExadbVmClusterStorageDetails>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExadbVmClusterStorageDetails> _parser = new pb::MessageParser<ExadbVmClusterStorageDetails>(() => new ExadbVmClusterStorageDetails());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ExadbVmClusterStorageDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExadbVmClusterStorageDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExadbVmClusterStorageDetails(ExadbVmClusterStorageDetails other) : this() {
      sizeInGbsPerNode_ = other.sizeInGbsPerNode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExadbVmClusterStorageDetails Clone() {
      return new ExadbVmClusterStorageDetails(this);
    }

    /// <summary>Field number for the "size_in_gbs_per_node" field.</summary>
    public const int SizeInGbsPerNodeFieldNumber = 2;
    private int sizeInGbsPerNode_;
    /// <summary>
    /// Required. The storage allocation for the exadbvmcluster per node, in
    /// gigabytes (GB). This field is used to calculate the total storage
    /// allocation for the exadbvmcluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SizeInGbsPerNode {
      get { return sizeInGbsPerNode_; }
      set {
        sizeInGbsPerNode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ExadbVmClusterStorageDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ExadbVmClusterStorageDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SizeInGbsPerNode != other.SizeInGbsPerNode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SizeInGbsPerNode != 0) hash ^= SizeInGbsPerNode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SizeInGbsPerNode != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SizeInGbsPerNode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SizeInGbsPerNode != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SizeInGbsPerNode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SizeInGbsPerNode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SizeInGbsPerNode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ExadbVmClusterStorageDetails other) {
      if (other == null) {
        return;
      }
      if (other.SizeInGbsPerNode != 0) {
        SizeInGbsPerNode = other.SizeInGbsPerNode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            SizeInGbsPerNode = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 16: {
            SizeInGbsPerNode = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The properties of an ExadbVmCluster.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ExadbVmClusterProperties : pb::IMessage<ExadbVmClusterProperties>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExadbVmClusterProperties> _parser = new pb::MessageParser<ExadbVmClusterProperties>(() => new ExadbVmClusterProperties());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ExadbVmClusterProperties> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExadbVmClusterProperties() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExadbVmClusterProperties(ExadbVmClusterProperties other) : this() {
      clusterName_ = other.clusterName_;
      gridImageId_ = other.gridImageId_;
      nodeCount_ = other.nodeCount_;
      enabledEcpuCountPerNode_ = other.enabledEcpuCountPerNode_;
      additionalEcpuCountPerNode_ = other.additionalEcpuCountPerNode_;
      vmFileSystemStorage_ = other.vmFileSystemStorage_ != null ? other.vmFileSystemStorage_.Clone() : null;
      licenseModel_ = other.licenseModel_;
      exascaleDbStorageVault_ = other.exascaleDbStorageVault_;
      hostnamePrefix_ = other.hostnamePrefix_;
      hostname_ = other.hostname_;
      sshPublicKeys_ = other.sshPublicKeys_.Clone();
      dataCollectionOptions_ = other.dataCollectionOptions_ != null ? other.dataCollectionOptions_.Clone() : null;
      timeZone_ = other.timeZone_ != null ? other.timeZone_.Clone() : null;
      lifecycleState_ = other.lifecycleState_;
      shapeAttribute_ = other.shapeAttribute_;
      memorySizeGb_ = other.memorySizeGb_;
      scanListenerPortTcp_ = other.scanListenerPortTcp_;
      ociUri_ = other.ociUri_;
      giVersion_ = other.giVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExadbVmClusterProperties Clone() {
      return new ExadbVmClusterProperties(this);
    }

    /// <summary>Field number for the "cluster_name" field.</summary>
    public const int ClusterNameFieldNumber = 1;
    private string clusterName_ = "";
    /// <summary>
    /// Optional. Immutable. The cluster name for Exascale vm cluster. The cluster
    /// name must begin with an alphabetic character and may contain hyphens(-) but
    /// can not contain underscores(_). It should be not more than 11 characters
    /// and is not case sensitive. OCI Cluster name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClusterName {
      get { return clusterName_; }
      set {
        clusterName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "grid_image_id" field.</summary>
    public const int GridImageIdFieldNumber = 2;
    private string gridImageId_ = "";
    /// <summary>
    /// Required. Immutable. Grid Infrastructure Version.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GridImageId {
      get { return gridImageId_; }
      set {
        gridImageId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "node_count" field.</summary>
    public const int NodeCountFieldNumber = 3;
    private int nodeCount_;
    /// <summary>
    /// Required. The number of nodes/VMs in the ExadbVmCluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NodeCount {
      get { return nodeCount_; }
      set {
        nodeCount_ = value;
      }
    }

    /// <summary>Field number for the "enabled_ecpu_count_per_node" field.</summary>
    public const int EnabledEcpuCountPerNodeFieldNumber = 20;
    private int enabledEcpuCountPerNode_;
    /// <summary>
    /// Required. Immutable. The number of ECPUs enabled per node for an exadata vm
    /// cluster on exascale infrastructure.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EnabledEcpuCountPerNode {
      get { return enabledEcpuCountPerNode_; }
      set {
        enabledEcpuCountPerNode_ = value;
      }
    }

    /// <summary>Field number for the "additional_ecpu_count_per_node" field.</summary>
    public const int AdditionalEcpuCountPerNodeFieldNumber = 21;
    private int additionalEcpuCountPerNode_;
    /// <summary>
    /// Optional. Immutable. The number of additional ECPUs per node for an Exadata
    /// VM cluster on exascale infrastructure.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AdditionalEcpuCountPerNode {
      get { return additionalEcpuCountPerNode_; }
      set {
        additionalEcpuCountPerNode_ = value;
      }
    }

    /// <summary>Field number for the "vm_file_system_storage" field.</summary>
    public const int VmFileSystemStorageFieldNumber = 6;
    private global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterStorageDetails vmFileSystemStorage_;
    /// <summary>
    /// Required. Immutable. Total storage details for the ExadbVmCluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterStorageDetails VmFileSystemStorage {
      get { return vmFileSystemStorage_; }
      set {
        vmFileSystemStorage_ = value;
      }
    }

    /// <summary>Field number for the "license_model" field.</summary>
    public const int LicenseModelFieldNumber = 7;
    private global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterProperties.Types.LicenseModel licenseModel_ = global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterProperties.Types.LicenseModel.Unspecified;
    /// <summary>
    /// Optional. Immutable. The license type of the ExadbVmCluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterProperties.Types.LicenseModel LicenseModel {
      get { return licenseModel_; }
      set {
        licenseModel_ = value;
      }
    }

    /// <summary>Field number for the "exascale_db_storage_vault" field.</summary>
    public const int ExascaleDbStorageVaultFieldNumber = 8;
    private string exascaleDbStorageVault_ = "";
    /// <summary>
    /// Required. Immutable. The name of ExascaleDbStorageVault associated with the
    /// ExadbVmCluster. It can refer to an existing ExascaleDbStorageVault. Or a
    /// new one can be created during the ExadbVmCluster creation (requires
    /// storage_vault_properties to be set).
    /// Format:
    /// projects/{project}/locations/{location}/exascaleDbStorageVaults/{exascale_db_storage_vault}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ExascaleDbStorageVault {
      get { return exascaleDbStorageVault_; }
      set {
        exascaleDbStorageVault_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hostname_prefix" field.</summary>
    public const int HostnamePrefixFieldNumber = 9;
    private string hostnamePrefix_ = "";
    /// <summary>
    /// Required. Immutable. Prefix for VM cluster host names.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HostnamePrefix {
      get { return hostnamePrefix_; }
      set {
        hostnamePrefix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hostname" field.</summary>
    public const int HostnameFieldNumber = 10;
    private string hostname_ = "";
    /// <summary>
    /// Output only. The hostname of the ExadbVmCluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Hostname {
      get { return hostname_; }
      set {
        hostname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ssh_public_keys" field.</summary>
    public const int SshPublicKeysFieldNumber = 11;
    private static readonly pb::FieldCodec<string> _repeated_sshPublicKeys_codec
        = pb::FieldCodec.ForString(90);
    private readonly pbc::RepeatedField<string> sshPublicKeys_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Required. Immutable. The SSH public keys for the ExadbVmCluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> SshPublicKeys {
      get { return sshPublicKeys_; }
    }

    /// <summary>Field number for the "data_collection_options" field.</summary>
    public const int DataCollectionOptionsFieldNumber = 12;
    private global::Google.Cloud.OracleDatabase.V1.DataCollectionOptionsCommon dataCollectionOptions_;
    /// <summary>
    /// Optional. Immutable. Indicates user preference for data collection options.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.OracleDatabase.V1.DataCollectionOptionsCommon DataCollectionOptions {
      get { return dataCollectionOptions_; }
      set {
        dataCollectionOptions_ = value;
      }
    }

    /// <summary>Field number for the "time_zone" field.</summary>
    public const int TimeZoneFieldNumber = 13;
    private global::Google.Type.TimeZone timeZone_;
    /// <summary>
    /// Optional. Immutable. The time zone of the ExadbVmCluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Type.TimeZone TimeZone {
      get { return timeZone_; }
      set {
        timeZone_ = value;
      }
    }

    /// <summary>Field number for the "lifecycle_state" field.</summary>
    public const int LifecycleStateFieldNumber = 14;
    private global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterProperties.Types.ExadbVmClusterLifecycleState lifecycleState_ = global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterProperties.Types.ExadbVmClusterLifecycleState.Unspecified;
    /// <summary>
    /// Output only. State of the cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterProperties.Types.ExadbVmClusterLifecycleState LifecycleState {
      get { return lifecycleState_; }
      set {
        lifecycleState_ = value;
      }
    }

    /// <summary>Field number for the "shape_attribute" field.</summary>
    public const int ShapeAttributeFieldNumber = 15;
    private global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterProperties.Types.ShapeAttribute shapeAttribute_ = global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterProperties.Types.ShapeAttribute.Unspecified;
    /// <summary>
    /// Required. Immutable. The shape attribute of the VM cluster. The type of
    /// Exascale storage used for Exadata VM cluster. The default is SMART_STORAGE
    /// which supports Oracle Database 23ai and later
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterProperties.Types.ShapeAttribute ShapeAttribute {
      get { return shapeAttribute_; }
      set {
        shapeAttribute_ = value;
      }
    }

    /// <summary>Field number for the "memory_size_gb" field.</summary>
    public const int MemorySizeGbFieldNumber = 16;
    private int memorySizeGb_;
    /// <summary>
    /// Output only. Memory per VM (GB) (Read-only): Shows the amount of memory
    /// allocated to each VM. Memory is calculated based on 2.75 GB per Total
    /// ECPUs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MemorySizeGb {
      get { return memorySizeGb_; }
      set {
        memorySizeGb_ = value;
      }
    }

    /// <summary>Field number for the "scan_listener_port_tcp" field.</summary>
    public const int ScanListenerPortTcpFieldNumber = 17;
    private int scanListenerPortTcp_;
    /// <summary>
    /// Optional. Immutable. SCAN listener port - TCP
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ScanListenerPortTcp {
      get { return scanListenerPortTcp_; }
      set {
        scanListenerPortTcp_ = value;
      }
    }

    /// <summary>Field number for the "oci_uri" field.</summary>
    public const int OciUriFieldNumber = 18;
    private string ociUri_ = "";
    /// <summary>
    /// Output only. Deep link to the OCI console to view this resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OciUri {
      get { return ociUri_; }
      set {
        ociUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gi_version" field.</summary>
    public const int GiVersionFieldNumber = 19;
    private string giVersion_ = "";
    /// <summary>
    /// Output only. The Oracle Grid Infrastructure (GI) software version.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GiVersion {
      get { return giVersion_; }
      set {
        giVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ExadbVmClusterProperties);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ExadbVmClusterProperties other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClusterName != other.ClusterName) return false;
      if (GridImageId != other.GridImageId) return false;
      if (NodeCount != other.NodeCount) return false;
      if (EnabledEcpuCountPerNode != other.EnabledEcpuCountPerNode) return false;
      if (AdditionalEcpuCountPerNode != other.AdditionalEcpuCountPerNode) return false;
      if (!object.Equals(VmFileSystemStorage, other.VmFileSystemStorage)) return false;
      if (LicenseModel != other.LicenseModel) return false;
      if (ExascaleDbStorageVault != other.ExascaleDbStorageVault) return false;
      if (HostnamePrefix != other.HostnamePrefix) return false;
      if (Hostname != other.Hostname) return false;
      if(!sshPublicKeys_.Equals(other.sshPublicKeys_)) return false;
      if (!object.Equals(DataCollectionOptions, other.DataCollectionOptions)) return false;
      if (!object.Equals(TimeZone, other.TimeZone)) return false;
      if (LifecycleState != other.LifecycleState) return false;
      if (ShapeAttribute != other.ShapeAttribute) return false;
      if (MemorySizeGb != other.MemorySizeGb) return false;
      if (ScanListenerPortTcp != other.ScanListenerPortTcp) return false;
      if (OciUri != other.OciUri) return false;
      if (GiVersion != other.GiVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ClusterName.Length != 0) hash ^= ClusterName.GetHashCode();
      if (GridImageId.Length != 0) hash ^= GridImageId.GetHashCode();
      if (NodeCount != 0) hash ^= NodeCount.GetHashCode();
      if (EnabledEcpuCountPerNode != 0) hash ^= EnabledEcpuCountPerNode.GetHashCode();
      if (AdditionalEcpuCountPerNode != 0) hash ^= AdditionalEcpuCountPerNode.GetHashCode();
      if (vmFileSystemStorage_ != null) hash ^= VmFileSystemStorage.GetHashCode();
      if (LicenseModel != global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterProperties.Types.LicenseModel.Unspecified) hash ^= LicenseModel.GetHashCode();
      if (ExascaleDbStorageVault.Length != 0) hash ^= ExascaleDbStorageVault.GetHashCode();
      if (HostnamePrefix.Length != 0) hash ^= HostnamePrefix.GetHashCode();
      if (Hostname.Length != 0) hash ^= Hostname.GetHashCode();
      hash ^= sshPublicKeys_.GetHashCode();
      if (dataCollectionOptions_ != null) hash ^= DataCollectionOptions.GetHashCode();
      if (timeZone_ != null) hash ^= TimeZone.GetHashCode();
      if (LifecycleState != global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterProperties.Types.ExadbVmClusterLifecycleState.Unspecified) hash ^= LifecycleState.GetHashCode();
      if (ShapeAttribute != global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterProperties.Types.ShapeAttribute.Unspecified) hash ^= ShapeAttribute.GetHashCode();
      if (MemorySizeGb != 0) hash ^= MemorySizeGb.GetHashCode();
      if (ScanListenerPortTcp != 0) hash ^= ScanListenerPortTcp.GetHashCode();
      if (OciUri.Length != 0) hash ^= OciUri.GetHashCode();
      if (GiVersion.Length != 0) hash ^= GiVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ClusterName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClusterName);
      }
      if (GridImageId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GridImageId);
      }
      if (NodeCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(NodeCount);
      }
      if (vmFileSystemStorage_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(VmFileSystemStorage);
      }
      if (LicenseModel != global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterProperties.Types.LicenseModel.Unspecified) {
        output.WriteRawTag(56);
        output.WriteEnum((int) LicenseModel);
      }
      if (ExascaleDbStorageVault.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ExascaleDbStorageVault);
      }
      if (HostnamePrefix.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(HostnamePrefix);
      }
      if (Hostname.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Hostname);
      }
      sshPublicKeys_.WriteTo(output, _repeated_sshPublicKeys_codec);
      if (dataCollectionOptions_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(DataCollectionOptions);
      }
      if (timeZone_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(TimeZone);
      }
      if (LifecycleState != global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterProperties.Types.ExadbVmClusterLifecycleState.Unspecified) {
        output.WriteRawTag(112);
        output.WriteEnum((int) LifecycleState);
      }
      if (ShapeAttribute != global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterProperties.Types.ShapeAttribute.Unspecified) {
        output.WriteRawTag(120);
        output.WriteEnum((int) ShapeAttribute);
      }
      if (MemorySizeGb != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(MemorySizeGb);
      }
      if (ScanListenerPortTcp != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(ScanListenerPortTcp);
      }
      if (OciUri.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(OciUri);
      }
      if (GiVersion.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(GiVersion);
      }
      if (EnabledEcpuCountPerNode != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(EnabledEcpuCountPerNode);
      }
      if (AdditionalEcpuCountPerNode != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(AdditionalEcpuCountPerNode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ClusterName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClusterName);
      }
      if (GridImageId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GridImageId);
      }
      if (NodeCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(NodeCount);
      }
      if (vmFileSystemStorage_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(VmFileSystemStorage);
      }
      if (LicenseModel != global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterProperties.Types.LicenseModel.Unspecified) {
        output.WriteRawTag(56);
        output.WriteEnum((int) LicenseModel);
      }
      if (ExascaleDbStorageVault.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ExascaleDbStorageVault);
      }
      if (HostnamePrefix.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(HostnamePrefix);
      }
      if (Hostname.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Hostname);
      }
      sshPublicKeys_.WriteTo(ref output, _repeated_sshPublicKeys_codec);
      if (dataCollectionOptions_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(DataCollectionOptions);
      }
      if (timeZone_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(TimeZone);
      }
      if (LifecycleState != global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterProperties.Types.ExadbVmClusterLifecycleState.Unspecified) {
        output.WriteRawTag(112);
        output.WriteEnum((int) LifecycleState);
      }
      if (ShapeAttribute != global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterProperties.Types.ShapeAttribute.Unspecified) {
        output.WriteRawTag(120);
        output.WriteEnum((int) ShapeAttribute);
      }
      if (MemorySizeGb != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(MemorySizeGb);
      }
      if (ScanListenerPortTcp != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(ScanListenerPortTcp);
      }
      if (OciUri.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(OciUri);
      }
      if (GiVersion.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(GiVersion);
      }
      if (EnabledEcpuCountPerNode != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(EnabledEcpuCountPerNode);
      }
      if (AdditionalEcpuCountPerNode != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(AdditionalEcpuCountPerNode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ClusterName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterName);
      }
      if (GridImageId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GridImageId);
      }
      if (NodeCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NodeCount);
      }
      if (EnabledEcpuCountPerNode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(EnabledEcpuCountPerNode);
      }
      if (AdditionalEcpuCountPerNode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AdditionalEcpuCountPerNode);
      }
      if (vmFileSystemStorage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VmFileSystemStorage);
      }
      if (LicenseModel != global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterProperties.Types.LicenseModel.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LicenseModel);
      }
      if (ExascaleDbStorageVault.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExascaleDbStorageVault);
      }
      if (HostnamePrefix.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HostnamePrefix);
      }
      if (Hostname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Hostname);
      }
      size += sshPublicKeys_.CalculateSize(_repeated_sshPublicKeys_codec);
      if (dataCollectionOptions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DataCollectionOptions);
      }
      if (timeZone_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeZone);
      }
      if (LifecycleState != global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterProperties.Types.ExadbVmClusterLifecycleState.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LifecycleState);
      }
      if (ShapeAttribute != global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterProperties.Types.ShapeAttribute.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ShapeAttribute);
      }
      if (MemorySizeGb != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MemorySizeGb);
      }
      if (ScanListenerPortTcp != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ScanListenerPortTcp);
      }
      if (OciUri.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OciUri);
      }
      if (GiVersion.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(GiVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ExadbVmClusterProperties other) {
      if (other == null) {
        return;
      }
      if (other.ClusterName.Length != 0) {
        ClusterName = other.ClusterName;
      }
      if (other.GridImageId.Length != 0) {
        GridImageId = other.GridImageId;
      }
      if (other.NodeCount != 0) {
        NodeCount = other.NodeCount;
      }
      if (other.EnabledEcpuCountPerNode != 0) {
        EnabledEcpuCountPerNode = other.EnabledEcpuCountPerNode;
      }
      if (other.AdditionalEcpuCountPerNode != 0) {
        AdditionalEcpuCountPerNode = other.AdditionalEcpuCountPerNode;
      }
      if (other.vmFileSystemStorage_ != null) {
        if (vmFileSystemStorage_ == null) {
          VmFileSystemStorage = new global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterStorageDetails();
        }
        VmFileSystemStorage.MergeFrom(other.VmFileSystemStorage);
      }
      if (other.LicenseModel != global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterProperties.Types.LicenseModel.Unspecified) {
        LicenseModel = other.LicenseModel;
      }
      if (other.ExascaleDbStorageVault.Length != 0) {
        ExascaleDbStorageVault = other.ExascaleDbStorageVault;
      }
      if (other.HostnamePrefix.Length != 0) {
        HostnamePrefix = other.HostnamePrefix;
      }
      if (other.Hostname.Length != 0) {
        Hostname = other.Hostname;
      }
      sshPublicKeys_.Add(other.sshPublicKeys_);
      if (other.dataCollectionOptions_ != null) {
        if (dataCollectionOptions_ == null) {
          DataCollectionOptions = new global::Google.Cloud.OracleDatabase.V1.DataCollectionOptionsCommon();
        }
        DataCollectionOptions.MergeFrom(other.DataCollectionOptions);
      }
      if (other.timeZone_ != null) {
        if (timeZone_ == null) {
          TimeZone = new global::Google.Type.TimeZone();
        }
        TimeZone.MergeFrom(other.TimeZone);
      }
      if (other.LifecycleState != global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterProperties.Types.ExadbVmClusterLifecycleState.Unspecified) {
        LifecycleState = other.LifecycleState;
      }
      if (other.ShapeAttribute != global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterProperties.Types.ShapeAttribute.Unspecified) {
        ShapeAttribute = other.ShapeAttribute;
      }
      if (other.MemorySizeGb != 0) {
        MemorySizeGb = other.MemorySizeGb;
      }
      if (other.ScanListenerPortTcp != 0) {
        ScanListenerPortTcp = other.ScanListenerPortTcp;
      }
      if (other.OciUri.Length != 0) {
        OciUri = other.OciUri;
      }
      if (other.GiVersion.Length != 0) {
        GiVersion = other.GiVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClusterName = input.ReadString();
            break;
          }
          case 18: {
            GridImageId = input.ReadString();
            break;
          }
          case 24: {
            NodeCount = input.ReadInt32();
            break;
          }
          case 50: {
            if (vmFileSystemStorage_ == null) {
              VmFileSystemStorage = new global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterStorageDetails();
            }
            input.ReadMessage(VmFileSystemStorage);
            break;
          }
          case 56: {
            LicenseModel = (global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterProperties.Types.LicenseModel) input.ReadEnum();
            break;
          }
          case 66: {
            ExascaleDbStorageVault = input.ReadString();
            break;
          }
          case 74: {
            HostnamePrefix = input.ReadString();
            break;
          }
          case 82: {
            Hostname = input.ReadString();
            break;
          }
          case 90: {
            sshPublicKeys_.AddEntriesFrom(input, _repeated_sshPublicKeys_codec);
            break;
          }
          case 98: {
            if (dataCollectionOptions_ == null) {
              DataCollectionOptions = new global::Google.Cloud.OracleDatabase.V1.DataCollectionOptionsCommon();
            }
            input.ReadMessage(DataCollectionOptions);
            break;
          }
          case 106: {
            if (timeZone_ == null) {
              TimeZone = new global::Google.Type.TimeZone();
            }
            input.ReadMessage(TimeZone);
            break;
          }
          case 112: {
            LifecycleState = (global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterProperties.Types.ExadbVmClusterLifecycleState) input.ReadEnum();
            break;
          }
          case 120: {
            ShapeAttribute = (global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterProperties.Types.ShapeAttribute) input.ReadEnum();
            break;
          }
          case 128: {
            MemorySizeGb = input.ReadInt32();
            break;
          }
          case 136: {
            ScanListenerPortTcp = input.ReadInt32();
            break;
          }
          case 146: {
            OciUri = input.ReadString();
            break;
          }
          case 154: {
            GiVersion = input.ReadString();
            break;
          }
          case 160: {
            EnabledEcpuCountPerNode = input.ReadInt32();
            break;
          }
          case 168: {
            AdditionalEcpuCountPerNode = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ClusterName = input.ReadString();
            break;
          }
          case 18: {
            GridImageId = input.ReadString();
            break;
          }
          case 24: {
            NodeCount = input.ReadInt32();
            break;
          }
          case 50: {
            if (vmFileSystemStorage_ == null) {
              VmFileSystemStorage = new global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterStorageDetails();
            }
            input.ReadMessage(VmFileSystemStorage);
            break;
          }
          case 56: {
            LicenseModel = (global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterProperties.Types.LicenseModel) input.ReadEnum();
            break;
          }
          case 66: {
            ExascaleDbStorageVault = input.ReadString();
            break;
          }
          case 74: {
            HostnamePrefix = input.ReadString();
            break;
          }
          case 82: {
            Hostname = input.ReadString();
            break;
          }
          case 90: {
            sshPublicKeys_.AddEntriesFrom(ref input, _repeated_sshPublicKeys_codec);
            break;
          }
          case 98: {
            if (dataCollectionOptions_ == null) {
              DataCollectionOptions = new global::Google.Cloud.OracleDatabase.V1.DataCollectionOptionsCommon();
            }
            input.ReadMessage(DataCollectionOptions);
            break;
          }
          case 106: {
            if (timeZone_ == null) {
              TimeZone = new global::Google.Type.TimeZone();
            }
            input.ReadMessage(TimeZone);
            break;
          }
          case 112: {
            LifecycleState = (global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterProperties.Types.ExadbVmClusterLifecycleState) input.ReadEnum();
            break;
          }
          case 120: {
            ShapeAttribute = (global::Google.Cloud.OracleDatabase.V1.ExadbVmClusterProperties.Types.ShapeAttribute) input.ReadEnum();
            break;
          }
          case 128: {
            MemorySizeGb = input.ReadInt32();
            break;
          }
          case 136: {
            ScanListenerPortTcp = input.ReadInt32();
            break;
          }
          case 146: {
            OciUri = input.ReadString();
            break;
          }
          case 154: {
            GiVersion = input.ReadString();
            break;
          }
          case 160: {
            EnabledEcpuCountPerNode = input.ReadInt32();
            break;
          }
          case 168: {
            AdditionalEcpuCountPerNode = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ExadbVmClusterProperties message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// The Oracle license model that applies to the ExaScale VM cluster
      /// </summary>
      public enum LicenseModel {
        /// <summary>
        /// Unspecified.
        /// </summary>
        [pbr::OriginalName("LICENSE_MODEL_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Default is license included.
        /// </summary>
        [pbr::OriginalName("LICENSE_INCLUDED")] LicenseIncluded = 1,
        /// <summary>
        /// Bring your own license.
        /// </summary>
        [pbr::OriginalName("BRING_YOUR_OWN_LICENSE")] BringYourOwnLicense = 2,
      }

      /// <summary>
      /// The various lifecycle states of the VM cluster.
      /// </summary>
      public enum ExadbVmClusterLifecycleState {
        /// <summary>
        /// Default unspecified value.
        /// </summary>
        [pbr::OriginalName("EXADB_VM_CLUSTER_LIFECYCLE_STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Indicates that the resource is in provisioning state.
        /// </summary>
        [pbr::OriginalName("PROVISIONING")] Provisioning = 1,
        /// <summary>
        /// Indicates that the resource is in available state.
        /// </summary>
        [pbr::OriginalName("AVAILABLE")] Available = 2,
        /// <summary>
        /// Indicates that the resource is in updating state.
        /// </summary>
        [pbr::OriginalName("UPDATING")] Updating = 3,
        /// <summary>
        /// Indicates that the resource is in terminating state.
        /// </summary>
        [pbr::OriginalName("TERMINATING")] Terminating = 4,
        /// <summary>
        /// Indicates that the resource is in terminated state.
        /// </summary>
        [pbr::OriginalName("TERMINATED")] Terminated = 5,
        /// <summary>
        /// Indicates that the resource is in failed state.
        /// </summary>
        [pbr::OriginalName("FAILED")] Failed = 6,
        /// <summary>
        /// Indicates that the resource is in maintenance in progress state.
        /// </summary>
        [pbr::OriginalName("MAINTENANCE_IN_PROGRESS")] MaintenanceInProgress = 7,
      }

      /// <summary>
      /// The shape attribute of the VM cluster. The type of Exascale storage used
      /// for Exadata VM cluster. The default is SMART_STORAGE which supports Oracle
      /// Database 23ai and later
      /// </summary>
      public enum ShapeAttribute {
        /// <summary>
        /// Default unspecified value.
        /// </summary>
        [pbr::OriginalName("SHAPE_ATTRIBUTE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Indicates that the resource is in smart storage.
        /// </summary>
        [pbr::OriginalName("SMART_STORAGE")] SmartStorage = 1,
        /// <summary>
        /// Indicates that the resource is in block storage.
        /// </summary>
        [pbr::OriginalName("BLOCK_STORAGE")] BlockStorage = 2,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
