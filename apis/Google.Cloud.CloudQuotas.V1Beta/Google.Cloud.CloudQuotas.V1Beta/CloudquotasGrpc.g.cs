// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/api/cloudquotas/v1beta/cloudquotas.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.CloudQuotas.V1Beta {
  /// <summary>
  /// The Cloud Quotas API is an infrastructure service for Google Cloud that lets
  /// service consumers list and manage their resource usage limits.
  ///
  /// - List/Get the metadata and current status of the quotas for a service.
  /// - Create/Update quota preferencess that declare the preferred quota values.
  /// - Check the status of a quota preference request.
  /// - List/Get pending and historical quota preference.
  /// </summary>
  public static partial class CloudQuotas
  {
    static readonly string __ServiceName = "google.api.cloudquotas.v1beta.CloudQuotas";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudQuotas.V1Beta.ListQuotaInfosRequest> __Marshaller_google_api_cloudquotas_v1beta_ListQuotaInfosRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudQuotas.V1Beta.ListQuotaInfosRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudQuotas.V1Beta.ListQuotaInfosResponse> __Marshaller_google_api_cloudquotas_v1beta_ListQuotaInfosResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudQuotas.V1Beta.ListQuotaInfosResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudQuotas.V1Beta.GetQuotaInfoRequest> __Marshaller_google_api_cloudquotas_v1beta_GetQuotaInfoRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudQuotas.V1Beta.GetQuotaInfoRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudQuotas.V1Beta.QuotaInfo> __Marshaller_google_api_cloudquotas_v1beta_QuotaInfo = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudQuotas.V1Beta.QuotaInfo.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudQuotas.V1Beta.ListQuotaPreferencesRequest> __Marshaller_google_api_cloudquotas_v1beta_ListQuotaPreferencesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudQuotas.V1Beta.ListQuotaPreferencesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudQuotas.V1Beta.ListQuotaPreferencesResponse> __Marshaller_google_api_cloudquotas_v1beta_ListQuotaPreferencesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudQuotas.V1Beta.ListQuotaPreferencesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudQuotas.V1Beta.GetQuotaPreferenceRequest> __Marshaller_google_api_cloudquotas_v1beta_GetQuotaPreferenceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudQuotas.V1Beta.GetQuotaPreferenceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudQuotas.V1Beta.QuotaPreference> __Marshaller_google_api_cloudquotas_v1beta_QuotaPreference = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudQuotas.V1Beta.QuotaPreference.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudQuotas.V1Beta.CreateQuotaPreferenceRequest> __Marshaller_google_api_cloudquotas_v1beta_CreateQuotaPreferenceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudQuotas.V1Beta.CreateQuotaPreferenceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudQuotas.V1Beta.UpdateQuotaPreferenceRequest> __Marshaller_google_api_cloudquotas_v1beta_UpdateQuotaPreferenceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudQuotas.V1Beta.UpdateQuotaPreferenceRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.CloudQuotas.V1Beta.ListQuotaInfosRequest, global::Google.Cloud.CloudQuotas.V1Beta.ListQuotaInfosResponse> __Method_ListQuotaInfos = new grpc::Method<global::Google.Cloud.CloudQuotas.V1Beta.ListQuotaInfosRequest, global::Google.Cloud.CloudQuotas.V1Beta.ListQuotaInfosResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListQuotaInfos",
        __Marshaller_google_api_cloudquotas_v1beta_ListQuotaInfosRequest,
        __Marshaller_google_api_cloudquotas_v1beta_ListQuotaInfosResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.CloudQuotas.V1Beta.GetQuotaInfoRequest, global::Google.Cloud.CloudQuotas.V1Beta.QuotaInfo> __Method_GetQuotaInfo = new grpc::Method<global::Google.Cloud.CloudQuotas.V1Beta.GetQuotaInfoRequest, global::Google.Cloud.CloudQuotas.V1Beta.QuotaInfo>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetQuotaInfo",
        __Marshaller_google_api_cloudquotas_v1beta_GetQuotaInfoRequest,
        __Marshaller_google_api_cloudquotas_v1beta_QuotaInfo);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.CloudQuotas.V1Beta.ListQuotaPreferencesRequest, global::Google.Cloud.CloudQuotas.V1Beta.ListQuotaPreferencesResponse> __Method_ListQuotaPreferences = new grpc::Method<global::Google.Cloud.CloudQuotas.V1Beta.ListQuotaPreferencesRequest, global::Google.Cloud.CloudQuotas.V1Beta.ListQuotaPreferencesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListQuotaPreferences",
        __Marshaller_google_api_cloudquotas_v1beta_ListQuotaPreferencesRequest,
        __Marshaller_google_api_cloudquotas_v1beta_ListQuotaPreferencesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.CloudQuotas.V1Beta.GetQuotaPreferenceRequest, global::Google.Cloud.CloudQuotas.V1Beta.QuotaPreference> __Method_GetQuotaPreference = new grpc::Method<global::Google.Cloud.CloudQuotas.V1Beta.GetQuotaPreferenceRequest, global::Google.Cloud.CloudQuotas.V1Beta.QuotaPreference>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetQuotaPreference",
        __Marshaller_google_api_cloudquotas_v1beta_GetQuotaPreferenceRequest,
        __Marshaller_google_api_cloudquotas_v1beta_QuotaPreference);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.CloudQuotas.V1Beta.CreateQuotaPreferenceRequest, global::Google.Cloud.CloudQuotas.V1Beta.QuotaPreference> __Method_CreateQuotaPreference = new grpc::Method<global::Google.Cloud.CloudQuotas.V1Beta.CreateQuotaPreferenceRequest, global::Google.Cloud.CloudQuotas.V1Beta.QuotaPreference>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateQuotaPreference",
        __Marshaller_google_api_cloudquotas_v1beta_CreateQuotaPreferenceRequest,
        __Marshaller_google_api_cloudquotas_v1beta_QuotaPreference);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.CloudQuotas.V1Beta.UpdateQuotaPreferenceRequest, global::Google.Cloud.CloudQuotas.V1Beta.QuotaPreference> __Method_UpdateQuotaPreference = new grpc::Method<global::Google.Cloud.CloudQuotas.V1Beta.UpdateQuotaPreferenceRequest, global::Google.Cloud.CloudQuotas.V1Beta.QuotaPreference>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateQuotaPreference",
        __Marshaller_google_api_cloudquotas_v1beta_UpdateQuotaPreferenceRequest,
        __Marshaller_google_api_cloudquotas_v1beta_QuotaPreference);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.CloudQuotas.V1Beta.CloudquotasReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of CloudQuotas</summary>
    [grpc::BindServiceMethod(typeof(CloudQuotas), "BindService")]
    public abstract partial class CloudQuotasBase
    {
      /// <summary>
      /// Lists QuotaInfos of all quotas for a given project, folder or organization.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.CloudQuotas.V1Beta.ListQuotaInfosResponse> ListQuotaInfos(global::Google.Cloud.CloudQuotas.V1Beta.ListQuotaInfosRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieve the QuotaInfo of a quota for a project, folder or organization.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.CloudQuotas.V1Beta.QuotaInfo> GetQuotaInfo(global::Google.Cloud.CloudQuotas.V1Beta.GetQuotaInfoRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists QuotaPreferences in a given project, folder or organization.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.CloudQuotas.V1Beta.ListQuotaPreferencesResponse> ListQuotaPreferences(global::Google.Cloud.CloudQuotas.V1Beta.ListQuotaPreferencesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets details of a single QuotaPreference.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.CloudQuotas.V1Beta.QuotaPreference> GetQuotaPreference(global::Google.Cloud.CloudQuotas.V1Beta.GetQuotaPreferenceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a new QuotaPreference that declares the desired value for a quota.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.CloudQuotas.V1Beta.QuotaPreference> CreateQuotaPreference(global::Google.Cloud.CloudQuotas.V1Beta.CreateQuotaPreferenceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the parameters of a single QuotaPreference. It can updates the
      /// config in any states, not just the ones pending approval.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.CloudQuotas.V1Beta.QuotaPreference> UpdateQuotaPreference(global::Google.Cloud.CloudQuotas.V1Beta.UpdateQuotaPreferenceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for CloudQuotas</summary>
    public partial class CloudQuotasClient : grpc::ClientBase<CloudQuotasClient>
    {
      /// <summary>Creates a new client for CloudQuotas</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public CloudQuotasClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for CloudQuotas that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public CloudQuotasClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected CloudQuotasClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected CloudQuotasClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Lists QuotaInfos of all quotas for a given project, folder or organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudQuotas.V1Beta.ListQuotaInfosResponse ListQuotaInfos(global::Google.Cloud.CloudQuotas.V1Beta.ListQuotaInfosRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListQuotaInfos(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists QuotaInfos of all quotas for a given project, folder or organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudQuotas.V1Beta.ListQuotaInfosResponse ListQuotaInfos(global::Google.Cloud.CloudQuotas.V1Beta.ListQuotaInfosRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListQuotaInfos, null, options, request);
      }
      /// <summary>
      /// Lists QuotaInfos of all quotas for a given project, folder or organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudQuotas.V1Beta.ListQuotaInfosResponse> ListQuotaInfosAsync(global::Google.Cloud.CloudQuotas.V1Beta.ListQuotaInfosRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListQuotaInfosAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists QuotaInfos of all quotas for a given project, folder or organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudQuotas.V1Beta.ListQuotaInfosResponse> ListQuotaInfosAsync(global::Google.Cloud.CloudQuotas.V1Beta.ListQuotaInfosRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListQuotaInfos, null, options, request);
      }
      /// <summary>
      /// Retrieve the QuotaInfo of a quota for a project, folder or organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudQuotas.V1Beta.QuotaInfo GetQuotaInfo(global::Google.Cloud.CloudQuotas.V1Beta.GetQuotaInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetQuotaInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve the QuotaInfo of a quota for a project, folder or organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudQuotas.V1Beta.QuotaInfo GetQuotaInfo(global::Google.Cloud.CloudQuotas.V1Beta.GetQuotaInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetQuotaInfo, null, options, request);
      }
      /// <summary>
      /// Retrieve the QuotaInfo of a quota for a project, folder or organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudQuotas.V1Beta.QuotaInfo> GetQuotaInfoAsync(global::Google.Cloud.CloudQuotas.V1Beta.GetQuotaInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetQuotaInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve the QuotaInfo of a quota for a project, folder or organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudQuotas.V1Beta.QuotaInfo> GetQuotaInfoAsync(global::Google.Cloud.CloudQuotas.V1Beta.GetQuotaInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetQuotaInfo, null, options, request);
      }
      /// <summary>
      /// Lists QuotaPreferences in a given project, folder or organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudQuotas.V1Beta.ListQuotaPreferencesResponse ListQuotaPreferences(global::Google.Cloud.CloudQuotas.V1Beta.ListQuotaPreferencesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListQuotaPreferences(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists QuotaPreferences in a given project, folder or organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudQuotas.V1Beta.ListQuotaPreferencesResponse ListQuotaPreferences(global::Google.Cloud.CloudQuotas.V1Beta.ListQuotaPreferencesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListQuotaPreferences, null, options, request);
      }
      /// <summary>
      /// Lists QuotaPreferences in a given project, folder or organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudQuotas.V1Beta.ListQuotaPreferencesResponse> ListQuotaPreferencesAsync(global::Google.Cloud.CloudQuotas.V1Beta.ListQuotaPreferencesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListQuotaPreferencesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists QuotaPreferences in a given project, folder or organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudQuotas.V1Beta.ListQuotaPreferencesResponse> ListQuotaPreferencesAsync(global::Google.Cloud.CloudQuotas.V1Beta.ListQuotaPreferencesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListQuotaPreferences, null, options, request);
      }
      /// <summary>
      /// Gets details of a single QuotaPreference.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudQuotas.V1Beta.QuotaPreference GetQuotaPreference(global::Google.Cloud.CloudQuotas.V1Beta.GetQuotaPreferenceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetQuotaPreference(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single QuotaPreference.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudQuotas.V1Beta.QuotaPreference GetQuotaPreference(global::Google.Cloud.CloudQuotas.V1Beta.GetQuotaPreferenceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetQuotaPreference, null, options, request);
      }
      /// <summary>
      /// Gets details of a single QuotaPreference.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudQuotas.V1Beta.QuotaPreference> GetQuotaPreferenceAsync(global::Google.Cloud.CloudQuotas.V1Beta.GetQuotaPreferenceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetQuotaPreferenceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single QuotaPreference.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudQuotas.V1Beta.QuotaPreference> GetQuotaPreferenceAsync(global::Google.Cloud.CloudQuotas.V1Beta.GetQuotaPreferenceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetQuotaPreference, null, options, request);
      }
      /// <summary>
      /// Creates a new QuotaPreference that declares the desired value for a quota.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudQuotas.V1Beta.QuotaPreference CreateQuotaPreference(global::Google.Cloud.CloudQuotas.V1Beta.CreateQuotaPreferenceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateQuotaPreference(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new QuotaPreference that declares the desired value for a quota.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudQuotas.V1Beta.QuotaPreference CreateQuotaPreference(global::Google.Cloud.CloudQuotas.V1Beta.CreateQuotaPreferenceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateQuotaPreference, null, options, request);
      }
      /// <summary>
      /// Creates a new QuotaPreference that declares the desired value for a quota.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudQuotas.V1Beta.QuotaPreference> CreateQuotaPreferenceAsync(global::Google.Cloud.CloudQuotas.V1Beta.CreateQuotaPreferenceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateQuotaPreferenceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new QuotaPreference that declares the desired value for a quota.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudQuotas.V1Beta.QuotaPreference> CreateQuotaPreferenceAsync(global::Google.Cloud.CloudQuotas.V1Beta.CreateQuotaPreferenceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateQuotaPreference, null, options, request);
      }
      /// <summary>
      /// Updates the parameters of a single QuotaPreference. It can updates the
      /// config in any states, not just the ones pending approval.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudQuotas.V1Beta.QuotaPreference UpdateQuotaPreference(global::Google.Cloud.CloudQuotas.V1Beta.UpdateQuotaPreferenceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateQuotaPreference(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the parameters of a single QuotaPreference. It can updates the
      /// config in any states, not just the ones pending approval.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudQuotas.V1Beta.QuotaPreference UpdateQuotaPreference(global::Google.Cloud.CloudQuotas.V1Beta.UpdateQuotaPreferenceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateQuotaPreference, null, options, request);
      }
      /// <summary>
      /// Updates the parameters of a single QuotaPreference. It can updates the
      /// config in any states, not just the ones pending approval.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudQuotas.V1Beta.QuotaPreference> UpdateQuotaPreferenceAsync(global::Google.Cloud.CloudQuotas.V1Beta.UpdateQuotaPreferenceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateQuotaPreferenceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the parameters of a single QuotaPreference. It can updates the
      /// config in any states, not just the ones pending approval.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudQuotas.V1Beta.QuotaPreference> UpdateQuotaPreferenceAsync(global::Google.Cloud.CloudQuotas.V1Beta.UpdateQuotaPreferenceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateQuotaPreference, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override CloudQuotasClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new CloudQuotasClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(CloudQuotasBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ListQuotaInfos, serviceImpl.ListQuotaInfos)
          .AddMethod(__Method_GetQuotaInfo, serviceImpl.GetQuotaInfo)
          .AddMethod(__Method_ListQuotaPreferences, serviceImpl.ListQuotaPreferences)
          .AddMethod(__Method_GetQuotaPreference, serviceImpl.GetQuotaPreference)
          .AddMethod(__Method_CreateQuotaPreference, serviceImpl.CreateQuotaPreference)
          .AddMethod(__Method_UpdateQuotaPreference, serviceImpl.UpdateQuotaPreference).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, CloudQuotasBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_ListQuotaInfos, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.CloudQuotas.V1Beta.ListQuotaInfosRequest, global::Google.Cloud.CloudQuotas.V1Beta.ListQuotaInfosResponse>(serviceImpl.ListQuotaInfos));
      serviceBinder.AddMethod(__Method_GetQuotaInfo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.CloudQuotas.V1Beta.GetQuotaInfoRequest, global::Google.Cloud.CloudQuotas.V1Beta.QuotaInfo>(serviceImpl.GetQuotaInfo));
      serviceBinder.AddMethod(__Method_ListQuotaPreferences, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.CloudQuotas.V1Beta.ListQuotaPreferencesRequest, global::Google.Cloud.CloudQuotas.V1Beta.ListQuotaPreferencesResponse>(serviceImpl.ListQuotaPreferences));
      serviceBinder.AddMethod(__Method_GetQuotaPreference, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.CloudQuotas.V1Beta.GetQuotaPreferenceRequest, global::Google.Cloud.CloudQuotas.V1Beta.QuotaPreference>(serviceImpl.GetQuotaPreference));
      serviceBinder.AddMethod(__Method_CreateQuotaPreference, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.CloudQuotas.V1Beta.CreateQuotaPreferenceRequest, global::Google.Cloud.CloudQuotas.V1Beta.QuotaPreference>(serviceImpl.CreateQuotaPreference));
      serviceBinder.AddMethod(__Method_UpdateQuotaPreference, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.CloudQuotas.V1Beta.UpdateQuotaPreferenceRequest, global::Google.Cloud.CloudQuotas.V1Beta.QuotaPreference>(serviceImpl.UpdateQuotaPreference));
    }

  }
}
#endregion
