// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/configdelivery/v1beta/config_delivery.proto
// </auto-generated>
// Original file comments:
// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.ConfigDelivery.V1Beta {
  /// <summary>
  /// ConfigDelivery service manages the deployment of kubernetes configuration to
  /// a fleet of kubernetes clusters.
  /// </summary>
  public static partial class ConfigDelivery
  {
    static readonly string __ServiceName = "google.cloud.configdelivery.v1beta.ConfigDelivery";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ConfigDelivery.V1Beta.ListResourceBundlesRequest> __Marshaller_google_cloud_configdelivery_v1beta_ListResourceBundlesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ConfigDelivery.V1Beta.ListResourceBundlesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ConfigDelivery.V1Beta.ListResourceBundlesResponse> __Marshaller_google_cloud_configdelivery_v1beta_ListResourceBundlesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ConfigDelivery.V1Beta.ListResourceBundlesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ConfigDelivery.V1Beta.GetResourceBundleRequest> __Marshaller_google_cloud_configdelivery_v1beta_GetResourceBundleRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ConfigDelivery.V1Beta.GetResourceBundleRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ConfigDelivery.V1Beta.ResourceBundle> __Marshaller_google_cloud_configdelivery_v1beta_ResourceBundle = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ConfigDelivery.V1Beta.ResourceBundle.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ConfigDelivery.V1Beta.CreateResourceBundleRequest> __Marshaller_google_cloud_configdelivery_v1beta_CreateResourceBundleRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ConfigDelivery.V1Beta.CreateResourceBundleRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.LongRunning.Operation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ConfigDelivery.V1Beta.UpdateResourceBundleRequest> __Marshaller_google_cloud_configdelivery_v1beta_UpdateResourceBundleRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ConfigDelivery.V1Beta.UpdateResourceBundleRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ConfigDelivery.V1Beta.DeleteResourceBundleRequest> __Marshaller_google_cloud_configdelivery_v1beta_DeleteResourceBundleRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ConfigDelivery.V1Beta.DeleteResourceBundleRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ConfigDelivery.V1Beta.ListFleetPackagesRequest> __Marshaller_google_cloud_configdelivery_v1beta_ListFleetPackagesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ConfigDelivery.V1Beta.ListFleetPackagesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ConfigDelivery.V1Beta.ListFleetPackagesResponse> __Marshaller_google_cloud_configdelivery_v1beta_ListFleetPackagesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ConfigDelivery.V1Beta.ListFleetPackagesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ConfigDelivery.V1Beta.GetFleetPackageRequest> __Marshaller_google_cloud_configdelivery_v1beta_GetFleetPackageRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ConfigDelivery.V1Beta.GetFleetPackageRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ConfigDelivery.V1Beta.FleetPackage> __Marshaller_google_cloud_configdelivery_v1beta_FleetPackage = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ConfigDelivery.V1Beta.FleetPackage.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ConfigDelivery.V1Beta.CreateFleetPackageRequest> __Marshaller_google_cloud_configdelivery_v1beta_CreateFleetPackageRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ConfigDelivery.V1Beta.CreateFleetPackageRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ConfigDelivery.V1Beta.UpdateFleetPackageRequest> __Marshaller_google_cloud_configdelivery_v1beta_UpdateFleetPackageRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ConfigDelivery.V1Beta.UpdateFleetPackageRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ConfigDelivery.V1Beta.DeleteFleetPackageRequest> __Marshaller_google_cloud_configdelivery_v1beta_DeleteFleetPackageRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ConfigDelivery.V1Beta.DeleteFleetPackageRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ConfigDelivery.V1Beta.ListReleasesRequest> __Marshaller_google_cloud_configdelivery_v1beta_ListReleasesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ConfigDelivery.V1Beta.ListReleasesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ConfigDelivery.V1Beta.ListReleasesResponse> __Marshaller_google_cloud_configdelivery_v1beta_ListReleasesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ConfigDelivery.V1Beta.ListReleasesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ConfigDelivery.V1Beta.GetReleaseRequest> __Marshaller_google_cloud_configdelivery_v1beta_GetReleaseRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ConfigDelivery.V1Beta.GetReleaseRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ConfigDelivery.V1Beta.Release> __Marshaller_google_cloud_configdelivery_v1beta_Release = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ConfigDelivery.V1Beta.Release.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ConfigDelivery.V1Beta.CreateReleaseRequest> __Marshaller_google_cloud_configdelivery_v1beta_CreateReleaseRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ConfigDelivery.V1Beta.CreateReleaseRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ConfigDelivery.V1Beta.UpdateReleaseRequest> __Marshaller_google_cloud_configdelivery_v1beta_UpdateReleaseRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ConfigDelivery.V1Beta.UpdateReleaseRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ConfigDelivery.V1Beta.DeleteReleaseRequest> __Marshaller_google_cloud_configdelivery_v1beta_DeleteReleaseRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ConfigDelivery.V1Beta.DeleteReleaseRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ConfigDelivery.V1Beta.ListVariantsRequest> __Marshaller_google_cloud_configdelivery_v1beta_ListVariantsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ConfigDelivery.V1Beta.ListVariantsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ConfigDelivery.V1Beta.ListVariantsResponse> __Marshaller_google_cloud_configdelivery_v1beta_ListVariantsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ConfigDelivery.V1Beta.ListVariantsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ConfigDelivery.V1Beta.GetVariantRequest> __Marshaller_google_cloud_configdelivery_v1beta_GetVariantRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ConfigDelivery.V1Beta.GetVariantRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ConfigDelivery.V1Beta.Variant> __Marshaller_google_cloud_configdelivery_v1beta_Variant = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ConfigDelivery.V1Beta.Variant.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ConfigDelivery.V1Beta.CreateVariantRequest> __Marshaller_google_cloud_configdelivery_v1beta_CreateVariantRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ConfigDelivery.V1Beta.CreateVariantRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ConfigDelivery.V1Beta.UpdateVariantRequest> __Marshaller_google_cloud_configdelivery_v1beta_UpdateVariantRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ConfigDelivery.V1Beta.UpdateVariantRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ConfigDelivery.V1Beta.DeleteVariantRequest> __Marshaller_google_cloud_configdelivery_v1beta_DeleteVariantRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ConfigDelivery.V1Beta.DeleteVariantRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ConfigDelivery.V1Beta.ListRolloutsRequest> __Marshaller_google_cloud_configdelivery_v1beta_ListRolloutsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ConfigDelivery.V1Beta.ListRolloutsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ConfigDelivery.V1Beta.ListRolloutsResponse> __Marshaller_google_cloud_configdelivery_v1beta_ListRolloutsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ConfigDelivery.V1Beta.ListRolloutsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ConfigDelivery.V1Beta.GetRolloutRequest> __Marshaller_google_cloud_configdelivery_v1beta_GetRolloutRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ConfigDelivery.V1Beta.GetRolloutRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ConfigDelivery.V1Beta.Rollout> __Marshaller_google_cloud_configdelivery_v1beta_Rollout = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ConfigDelivery.V1Beta.Rollout.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ConfigDelivery.V1Beta.SuspendRolloutRequest> __Marshaller_google_cloud_configdelivery_v1beta_SuspendRolloutRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ConfigDelivery.V1Beta.SuspendRolloutRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ConfigDelivery.V1Beta.ResumeRolloutRequest> __Marshaller_google_cloud_configdelivery_v1beta_ResumeRolloutRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ConfigDelivery.V1Beta.ResumeRolloutRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ConfigDelivery.V1Beta.AbortRolloutRequest> __Marshaller_google_cloud_configdelivery_v1beta_AbortRolloutRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ConfigDelivery.V1Beta.AbortRolloutRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.ListResourceBundlesRequest, global::Google.Cloud.ConfigDelivery.V1Beta.ListResourceBundlesResponse> __Method_ListResourceBundles = new grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.ListResourceBundlesRequest, global::Google.Cloud.ConfigDelivery.V1Beta.ListResourceBundlesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListResourceBundles",
        __Marshaller_google_cloud_configdelivery_v1beta_ListResourceBundlesRequest,
        __Marshaller_google_cloud_configdelivery_v1beta_ListResourceBundlesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.GetResourceBundleRequest, global::Google.Cloud.ConfigDelivery.V1Beta.ResourceBundle> __Method_GetResourceBundle = new grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.GetResourceBundleRequest, global::Google.Cloud.ConfigDelivery.V1Beta.ResourceBundle>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetResourceBundle",
        __Marshaller_google_cloud_configdelivery_v1beta_GetResourceBundleRequest,
        __Marshaller_google_cloud_configdelivery_v1beta_ResourceBundle);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.CreateResourceBundleRequest, global::Google.LongRunning.Operation> __Method_CreateResourceBundle = new grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.CreateResourceBundleRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateResourceBundle",
        __Marshaller_google_cloud_configdelivery_v1beta_CreateResourceBundleRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.UpdateResourceBundleRequest, global::Google.LongRunning.Operation> __Method_UpdateResourceBundle = new grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.UpdateResourceBundleRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateResourceBundle",
        __Marshaller_google_cloud_configdelivery_v1beta_UpdateResourceBundleRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.DeleteResourceBundleRequest, global::Google.LongRunning.Operation> __Method_DeleteResourceBundle = new grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.DeleteResourceBundleRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteResourceBundle",
        __Marshaller_google_cloud_configdelivery_v1beta_DeleteResourceBundleRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.ListFleetPackagesRequest, global::Google.Cloud.ConfigDelivery.V1Beta.ListFleetPackagesResponse> __Method_ListFleetPackages = new grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.ListFleetPackagesRequest, global::Google.Cloud.ConfigDelivery.V1Beta.ListFleetPackagesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListFleetPackages",
        __Marshaller_google_cloud_configdelivery_v1beta_ListFleetPackagesRequest,
        __Marshaller_google_cloud_configdelivery_v1beta_ListFleetPackagesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.GetFleetPackageRequest, global::Google.Cloud.ConfigDelivery.V1Beta.FleetPackage> __Method_GetFleetPackage = new grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.GetFleetPackageRequest, global::Google.Cloud.ConfigDelivery.V1Beta.FleetPackage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetFleetPackage",
        __Marshaller_google_cloud_configdelivery_v1beta_GetFleetPackageRequest,
        __Marshaller_google_cloud_configdelivery_v1beta_FleetPackage);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.CreateFleetPackageRequest, global::Google.LongRunning.Operation> __Method_CreateFleetPackage = new grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.CreateFleetPackageRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateFleetPackage",
        __Marshaller_google_cloud_configdelivery_v1beta_CreateFleetPackageRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.UpdateFleetPackageRequest, global::Google.LongRunning.Operation> __Method_UpdateFleetPackage = new grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.UpdateFleetPackageRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateFleetPackage",
        __Marshaller_google_cloud_configdelivery_v1beta_UpdateFleetPackageRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.DeleteFleetPackageRequest, global::Google.LongRunning.Operation> __Method_DeleteFleetPackage = new grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.DeleteFleetPackageRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteFleetPackage",
        __Marshaller_google_cloud_configdelivery_v1beta_DeleteFleetPackageRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.ListReleasesRequest, global::Google.Cloud.ConfigDelivery.V1Beta.ListReleasesResponse> __Method_ListReleases = new grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.ListReleasesRequest, global::Google.Cloud.ConfigDelivery.V1Beta.ListReleasesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListReleases",
        __Marshaller_google_cloud_configdelivery_v1beta_ListReleasesRequest,
        __Marshaller_google_cloud_configdelivery_v1beta_ListReleasesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.GetReleaseRequest, global::Google.Cloud.ConfigDelivery.V1Beta.Release> __Method_GetRelease = new grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.GetReleaseRequest, global::Google.Cloud.ConfigDelivery.V1Beta.Release>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetRelease",
        __Marshaller_google_cloud_configdelivery_v1beta_GetReleaseRequest,
        __Marshaller_google_cloud_configdelivery_v1beta_Release);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.CreateReleaseRequest, global::Google.LongRunning.Operation> __Method_CreateRelease = new grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.CreateReleaseRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateRelease",
        __Marshaller_google_cloud_configdelivery_v1beta_CreateReleaseRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.UpdateReleaseRequest, global::Google.LongRunning.Operation> __Method_UpdateRelease = new grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.UpdateReleaseRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateRelease",
        __Marshaller_google_cloud_configdelivery_v1beta_UpdateReleaseRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.DeleteReleaseRequest, global::Google.LongRunning.Operation> __Method_DeleteRelease = new grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.DeleteReleaseRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteRelease",
        __Marshaller_google_cloud_configdelivery_v1beta_DeleteReleaseRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.ListVariantsRequest, global::Google.Cloud.ConfigDelivery.V1Beta.ListVariantsResponse> __Method_ListVariants = new grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.ListVariantsRequest, global::Google.Cloud.ConfigDelivery.V1Beta.ListVariantsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListVariants",
        __Marshaller_google_cloud_configdelivery_v1beta_ListVariantsRequest,
        __Marshaller_google_cloud_configdelivery_v1beta_ListVariantsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.GetVariantRequest, global::Google.Cloud.ConfigDelivery.V1Beta.Variant> __Method_GetVariant = new grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.GetVariantRequest, global::Google.Cloud.ConfigDelivery.V1Beta.Variant>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetVariant",
        __Marshaller_google_cloud_configdelivery_v1beta_GetVariantRequest,
        __Marshaller_google_cloud_configdelivery_v1beta_Variant);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.CreateVariantRequest, global::Google.LongRunning.Operation> __Method_CreateVariant = new grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.CreateVariantRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateVariant",
        __Marshaller_google_cloud_configdelivery_v1beta_CreateVariantRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.UpdateVariantRequest, global::Google.LongRunning.Operation> __Method_UpdateVariant = new grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.UpdateVariantRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateVariant",
        __Marshaller_google_cloud_configdelivery_v1beta_UpdateVariantRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.DeleteVariantRequest, global::Google.LongRunning.Operation> __Method_DeleteVariant = new grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.DeleteVariantRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteVariant",
        __Marshaller_google_cloud_configdelivery_v1beta_DeleteVariantRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.ListRolloutsRequest, global::Google.Cloud.ConfigDelivery.V1Beta.ListRolloutsResponse> __Method_ListRollouts = new grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.ListRolloutsRequest, global::Google.Cloud.ConfigDelivery.V1Beta.ListRolloutsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListRollouts",
        __Marshaller_google_cloud_configdelivery_v1beta_ListRolloutsRequest,
        __Marshaller_google_cloud_configdelivery_v1beta_ListRolloutsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.GetRolloutRequest, global::Google.Cloud.ConfigDelivery.V1Beta.Rollout> __Method_GetRollout = new grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.GetRolloutRequest, global::Google.Cloud.ConfigDelivery.V1Beta.Rollout>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetRollout",
        __Marshaller_google_cloud_configdelivery_v1beta_GetRolloutRequest,
        __Marshaller_google_cloud_configdelivery_v1beta_Rollout);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.SuspendRolloutRequest, global::Google.LongRunning.Operation> __Method_SuspendRollout = new grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.SuspendRolloutRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SuspendRollout",
        __Marshaller_google_cloud_configdelivery_v1beta_SuspendRolloutRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.ResumeRolloutRequest, global::Google.LongRunning.Operation> __Method_ResumeRollout = new grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.ResumeRolloutRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResumeRollout",
        __Marshaller_google_cloud_configdelivery_v1beta_ResumeRolloutRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.AbortRolloutRequest, global::Google.LongRunning.Operation> __Method_AbortRollout = new grpc::Method<global::Google.Cloud.ConfigDelivery.V1Beta.AbortRolloutRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AbortRollout",
        __Marshaller_google_cloud_configdelivery_v1beta_AbortRolloutRequest,
        __Marshaller_google_longrunning_Operation);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.ConfigDelivery.V1Beta.ConfigDeliveryReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of ConfigDelivery</summary>
    [grpc::BindServiceMethod(typeof(ConfigDelivery), "BindService")]
    public abstract partial class ConfigDeliveryBase
    {
      /// <summary>
      /// Lists ResourceBundles in a given project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ConfigDelivery.V1Beta.ListResourceBundlesResponse> ListResourceBundles(global::Google.Cloud.ConfigDelivery.V1Beta.ListResourceBundlesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets details of a single ResourceBundle.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ConfigDelivery.V1Beta.ResourceBundle> GetResourceBundle(global::Google.Cloud.ConfigDelivery.V1Beta.GetResourceBundleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a new ResourceBundle in a given project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateResourceBundle(global::Google.Cloud.ConfigDelivery.V1Beta.CreateResourceBundleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the parameters of a single ResourceBundle.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> UpdateResourceBundle(global::Google.Cloud.ConfigDelivery.V1Beta.UpdateResourceBundleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a single ResourceBundle.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteResourceBundle(global::Google.Cloud.ConfigDelivery.V1Beta.DeleteResourceBundleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists FleetPackages in a given project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ConfigDelivery.V1Beta.ListFleetPackagesResponse> ListFleetPackages(global::Google.Cloud.ConfigDelivery.V1Beta.ListFleetPackagesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets details of a single FleetPackage.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ConfigDelivery.V1Beta.FleetPackage> GetFleetPackage(global::Google.Cloud.ConfigDelivery.V1Beta.GetFleetPackageRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a new FleetPackage in a given project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateFleetPackage(global::Google.Cloud.ConfigDelivery.V1Beta.CreateFleetPackageRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the parameters of a single FleetPackage.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> UpdateFleetPackage(global::Google.Cloud.ConfigDelivery.V1Beta.UpdateFleetPackageRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a single FleetPackage.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteFleetPackage(global::Google.Cloud.ConfigDelivery.V1Beta.DeleteFleetPackageRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists Releases in a given project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ConfigDelivery.V1Beta.ListReleasesResponse> ListReleases(global::Google.Cloud.ConfigDelivery.V1Beta.ListReleasesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets details of a single Release.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ConfigDelivery.V1Beta.Release> GetRelease(global::Google.Cloud.ConfigDelivery.V1Beta.GetReleaseRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a new Release in a given project, location and resource bundle.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateRelease(global::Google.Cloud.ConfigDelivery.V1Beta.CreateReleaseRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the parameters of a single Release.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> UpdateRelease(global::Google.Cloud.ConfigDelivery.V1Beta.UpdateReleaseRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a single Release.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteRelease(global::Google.Cloud.ConfigDelivery.V1Beta.DeleteReleaseRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists Variants in a given project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ConfigDelivery.V1Beta.ListVariantsResponse> ListVariants(global::Google.Cloud.ConfigDelivery.V1Beta.ListVariantsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets details of a single Variant.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ConfigDelivery.V1Beta.Variant> GetVariant(global::Google.Cloud.ConfigDelivery.V1Beta.GetVariantRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a new Variant in a given project, location, resource bundle, and
      /// release.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateVariant(global::Google.Cloud.ConfigDelivery.V1Beta.CreateVariantRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the parameters of a single Variant.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> UpdateVariant(global::Google.Cloud.ConfigDelivery.V1Beta.UpdateVariantRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a single Variant.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteVariant(global::Google.Cloud.ConfigDelivery.V1Beta.DeleteVariantRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists Rollouts in a given project, location, and Fleet Package.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ConfigDelivery.V1Beta.ListRolloutsResponse> ListRollouts(global::Google.Cloud.ConfigDelivery.V1Beta.ListRolloutsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets details of a single Rollout.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ConfigDelivery.V1Beta.Rollout> GetRollout(global::Google.Cloud.ConfigDelivery.V1Beta.GetRolloutRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Suspend a Rollout.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> SuspendRollout(global::Google.Cloud.ConfigDelivery.V1Beta.SuspendRolloutRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Resume a Rollout.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> ResumeRollout(global::Google.Cloud.ConfigDelivery.V1Beta.ResumeRolloutRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Abort a Rollout.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> AbortRollout(global::Google.Cloud.ConfigDelivery.V1Beta.AbortRolloutRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for ConfigDelivery</summary>
    public partial class ConfigDeliveryClient : grpc::ClientBase<ConfigDeliveryClient>
    {
      /// <summary>Creates a new client for ConfigDelivery</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ConfigDeliveryClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ConfigDelivery that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ConfigDeliveryClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ConfigDeliveryClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ConfigDeliveryClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Lists ResourceBundles in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ConfigDelivery.V1Beta.ListResourceBundlesResponse ListResourceBundles(global::Google.Cloud.ConfigDelivery.V1Beta.ListResourceBundlesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListResourceBundles(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists ResourceBundles in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ConfigDelivery.V1Beta.ListResourceBundlesResponse ListResourceBundles(global::Google.Cloud.ConfigDelivery.V1Beta.ListResourceBundlesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListResourceBundles, null, options, request);
      }
      /// <summary>
      /// Lists ResourceBundles in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ConfigDelivery.V1Beta.ListResourceBundlesResponse> ListResourceBundlesAsync(global::Google.Cloud.ConfigDelivery.V1Beta.ListResourceBundlesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListResourceBundlesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists ResourceBundles in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ConfigDelivery.V1Beta.ListResourceBundlesResponse> ListResourceBundlesAsync(global::Google.Cloud.ConfigDelivery.V1Beta.ListResourceBundlesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListResourceBundles, null, options, request);
      }
      /// <summary>
      /// Gets details of a single ResourceBundle.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ConfigDelivery.V1Beta.ResourceBundle GetResourceBundle(global::Google.Cloud.ConfigDelivery.V1Beta.GetResourceBundleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetResourceBundle(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single ResourceBundle.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ConfigDelivery.V1Beta.ResourceBundle GetResourceBundle(global::Google.Cloud.ConfigDelivery.V1Beta.GetResourceBundleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetResourceBundle, null, options, request);
      }
      /// <summary>
      /// Gets details of a single ResourceBundle.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ConfigDelivery.V1Beta.ResourceBundle> GetResourceBundleAsync(global::Google.Cloud.ConfigDelivery.V1Beta.GetResourceBundleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetResourceBundleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single ResourceBundle.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ConfigDelivery.V1Beta.ResourceBundle> GetResourceBundleAsync(global::Google.Cloud.ConfigDelivery.V1Beta.GetResourceBundleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetResourceBundle, null, options, request);
      }
      /// <summary>
      /// Creates a new ResourceBundle in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateResourceBundle(global::Google.Cloud.ConfigDelivery.V1Beta.CreateResourceBundleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateResourceBundle(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new ResourceBundle in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateResourceBundle(global::Google.Cloud.ConfigDelivery.V1Beta.CreateResourceBundleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateResourceBundle, null, options, request);
      }
      /// <summary>
      /// Creates a new ResourceBundle in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateResourceBundleAsync(global::Google.Cloud.ConfigDelivery.V1Beta.CreateResourceBundleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateResourceBundleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new ResourceBundle in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateResourceBundleAsync(global::Google.Cloud.ConfigDelivery.V1Beta.CreateResourceBundleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateResourceBundle, null, options, request);
      }
      /// <summary>
      /// Updates the parameters of a single ResourceBundle.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateResourceBundle(global::Google.Cloud.ConfigDelivery.V1Beta.UpdateResourceBundleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateResourceBundle(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the parameters of a single ResourceBundle.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateResourceBundle(global::Google.Cloud.ConfigDelivery.V1Beta.UpdateResourceBundleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateResourceBundle, null, options, request);
      }
      /// <summary>
      /// Updates the parameters of a single ResourceBundle.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateResourceBundleAsync(global::Google.Cloud.ConfigDelivery.V1Beta.UpdateResourceBundleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateResourceBundleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the parameters of a single ResourceBundle.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateResourceBundleAsync(global::Google.Cloud.ConfigDelivery.V1Beta.UpdateResourceBundleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateResourceBundle, null, options, request);
      }
      /// <summary>
      /// Deletes a single ResourceBundle.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteResourceBundle(global::Google.Cloud.ConfigDelivery.V1Beta.DeleteResourceBundleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteResourceBundle(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a single ResourceBundle.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteResourceBundle(global::Google.Cloud.ConfigDelivery.V1Beta.DeleteResourceBundleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteResourceBundle, null, options, request);
      }
      /// <summary>
      /// Deletes a single ResourceBundle.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteResourceBundleAsync(global::Google.Cloud.ConfigDelivery.V1Beta.DeleteResourceBundleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteResourceBundleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a single ResourceBundle.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteResourceBundleAsync(global::Google.Cloud.ConfigDelivery.V1Beta.DeleteResourceBundleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteResourceBundle, null, options, request);
      }
      /// <summary>
      /// Lists FleetPackages in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ConfigDelivery.V1Beta.ListFleetPackagesResponse ListFleetPackages(global::Google.Cloud.ConfigDelivery.V1Beta.ListFleetPackagesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListFleetPackages(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists FleetPackages in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ConfigDelivery.V1Beta.ListFleetPackagesResponse ListFleetPackages(global::Google.Cloud.ConfigDelivery.V1Beta.ListFleetPackagesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListFleetPackages, null, options, request);
      }
      /// <summary>
      /// Lists FleetPackages in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ConfigDelivery.V1Beta.ListFleetPackagesResponse> ListFleetPackagesAsync(global::Google.Cloud.ConfigDelivery.V1Beta.ListFleetPackagesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListFleetPackagesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists FleetPackages in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ConfigDelivery.V1Beta.ListFleetPackagesResponse> ListFleetPackagesAsync(global::Google.Cloud.ConfigDelivery.V1Beta.ListFleetPackagesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListFleetPackages, null, options, request);
      }
      /// <summary>
      /// Gets details of a single FleetPackage.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ConfigDelivery.V1Beta.FleetPackage GetFleetPackage(global::Google.Cloud.ConfigDelivery.V1Beta.GetFleetPackageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetFleetPackage(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single FleetPackage.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ConfigDelivery.V1Beta.FleetPackage GetFleetPackage(global::Google.Cloud.ConfigDelivery.V1Beta.GetFleetPackageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetFleetPackage, null, options, request);
      }
      /// <summary>
      /// Gets details of a single FleetPackage.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ConfigDelivery.V1Beta.FleetPackage> GetFleetPackageAsync(global::Google.Cloud.ConfigDelivery.V1Beta.GetFleetPackageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetFleetPackageAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single FleetPackage.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ConfigDelivery.V1Beta.FleetPackage> GetFleetPackageAsync(global::Google.Cloud.ConfigDelivery.V1Beta.GetFleetPackageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetFleetPackage, null, options, request);
      }
      /// <summary>
      /// Creates a new FleetPackage in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateFleetPackage(global::Google.Cloud.ConfigDelivery.V1Beta.CreateFleetPackageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateFleetPackage(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new FleetPackage in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateFleetPackage(global::Google.Cloud.ConfigDelivery.V1Beta.CreateFleetPackageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateFleetPackage, null, options, request);
      }
      /// <summary>
      /// Creates a new FleetPackage in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateFleetPackageAsync(global::Google.Cloud.ConfigDelivery.V1Beta.CreateFleetPackageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateFleetPackageAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new FleetPackage in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateFleetPackageAsync(global::Google.Cloud.ConfigDelivery.V1Beta.CreateFleetPackageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateFleetPackage, null, options, request);
      }
      /// <summary>
      /// Updates the parameters of a single FleetPackage.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateFleetPackage(global::Google.Cloud.ConfigDelivery.V1Beta.UpdateFleetPackageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateFleetPackage(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the parameters of a single FleetPackage.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateFleetPackage(global::Google.Cloud.ConfigDelivery.V1Beta.UpdateFleetPackageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateFleetPackage, null, options, request);
      }
      /// <summary>
      /// Updates the parameters of a single FleetPackage.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateFleetPackageAsync(global::Google.Cloud.ConfigDelivery.V1Beta.UpdateFleetPackageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateFleetPackageAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the parameters of a single FleetPackage.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateFleetPackageAsync(global::Google.Cloud.ConfigDelivery.V1Beta.UpdateFleetPackageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateFleetPackage, null, options, request);
      }
      /// <summary>
      /// Deletes a single FleetPackage.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteFleetPackage(global::Google.Cloud.ConfigDelivery.V1Beta.DeleteFleetPackageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteFleetPackage(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a single FleetPackage.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteFleetPackage(global::Google.Cloud.ConfigDelivery.V1Beta.DeleteFleetPackageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteFleetPackage, null, options, request);
      }
      /// <summary>
      /// Deletes a single FleetPackage.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteFleetPackageAsync(global::Google.Cloud.ConfigDelivery.V1Beta.DeleteFleetPackageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteFleetPackageAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a single FleetPackage.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteFleetPackageAsync(global::Google.Cloud.ConfigDelivery.V1Beta.DeleteFleetPackageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteFleetPackage, null, options, request);
      }
      /// <summary>
      /// Lists Releases in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ConfigDelivery.V1Beta.ListReleasesResponse ListReleases(global::Google.Cloud.ConfigDelivery.V1Beta.ListReleasesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListReleases(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists Releases in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ConfigDelivery.V1Beta.ListReleasesResponse ListReleases(global::Google.Cloud.ConfigDelivery.V1Beta.ListReleasesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListReleases, null, options, request);
      }
      /// <summary>
      /// Lists Releases in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ConfigDelivery.V1Beta.ListReleasesResponse> ListReleasesAsync(global::Google.Cloud.ConfigDelivery.V1Beta.ListReleasesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListReleasesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists Releases in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ConfigDelivery.V1Beta.ListReleasesResponse> ListReleasesAsync(global::Google.Cloud.ConfigDelivery.V1Beta.ListReleasesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListReleases, null, options, request);
      }
      /// <summary>
      /// Gets details of a single Release.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ConfigDelivery.V1Beta.Release GetRelease(global::Google.Cloud.ConfigDelivery.V1Beta.GetReleaseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRelease(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single Release.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ConfigDelivery.V1Beta.Release GetRelease(global::Google.Cloud.ConfigDelivery.V1Beta.GetReleaseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetRelease, null, options, request);
      }
      /// <summary>
      /// Gets details of a single Release.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ConfigDelivery.V1Beta.Release> GetReleaseAsync(global::Google.Cloud.ConfigDelivery.V1Beta.GetReleaseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetReleaseAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single Release.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ConfigDelivery.V1Beta.Release> GetReleaseAsync(global::Google.Cloud.ConfigDelivery.V1Beta.GetReleaseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetRelease, null, options, request);
      }
      /// <summary>
      /// Creates a new Release in a given project, location and resource bundle.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateRelease(global::Google.Cloud.ConfigDelivery.V1Beta.CreateReleaseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateRelease(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new Release in a given project, location and resource bundle.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateRelease(global::Google.Cloud.ConfigDelivery.V1Beta.CreateReleaseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateRelease, null, options, request);
      }
      /// <summary>
      /// Creates a new Release in a given project, location and resource bundle.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateReleaseAsync(global::Google.Cloud.ConfigDelivery.V1Beta.CreateReleaseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateReleaseAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new Release in a given project, location and resource bundle.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateReleaseAsync(global::Google.Cloud.ConfigDelivery.V1Beta.CreateReleaseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateRelease, null, options, request);
      }
      /// <summary>
      /// Updates the parameters of a single Release.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateRelease(global::Google.Cloud.ConfigDelivery.V1Beta.UpdateReleaseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateRelease(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the parameters of a single Release.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateRelease(global::Google.Cloud.ConfigDelivery.V1Beta.UpdateReleaseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateRelease, null, options, request);
      }
      /// <summary>
      /// Updates the parameters of a single Release.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateReleaseAsync(global::Google.Cloud.ConfigDelivery.V1Beta.UpdateReleaseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateReleaseAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the parameters of a single Release.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateReleaseAsync(global::Google.Cloud.ConfigDelivery.V1Beta.UpdateReleaseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateRelease, null, options, request);
      }
      /// <summary>
      /// Deletes a single Release.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteRelease(global::Google.Cloud.ConfigDelivery.V1Beta.DeleteReleaseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteRelease(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a single Release.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteRelease(global::Google.Cloud.ConfigDelivery.V1Beta.DeleteReleaseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteRelease, null, options, request);
      }
      /// <summary>
      /// Deletes a single Release.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteReleaseAsync(global::Google.Cloud.ConfigDelivery.V1Beta.DeleteReleaseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteReleaseAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a single Release.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteReleaseAsync(global::Google.Cloud.ConfigDelivery.V1Beta.DeleteReleaseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteRelease, null, options, request);
      }
      /// <summary>
      /// Lists Variants in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ConfigDelivery.V1Beta.ListVariantsResponse ListVariants(global::Google.Cloud.ConfigDelivery.V1Beta.ListVariantsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListVariants(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists Variants in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ConfigDelivery.V1Beta.ListVariantsResponse ListVariants(global::Google.Cloud.ConfigDelivery.V1Beta.ListVariantsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListVariants, null, options, request);
      }
      /// <summary>
      /// Lists Variants in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ConfigDelivery.V1Beta.ListVariantsResponse> ListVariantsAsync(global::Google.Cloud.ConfigDelivery.V1Beta.ListVariantsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListVariantsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists Variants in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ConfigDelivery.V1Beta.ListVariantsResponse> ListVariantsAsync(global::Google.Cloud.ConfigDelivery.V1Beta.ListVariantsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListVariants, null, options, request);
      }
      /// <summary>
      /// Gets details of a single Variant.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ConfigDelivery.V1Beta.Variant GetVariant(global::Google.Cloud.ConfigDelivery.V1Beta.GetVariantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetVariant(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single Variant.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ConfigDelivery.V1Beta.Variant GetVariant(global::Google.Cloud.ConfigDelivery.V1Beta.GetVariantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetVariant, null, options, request);
      }
      /// <summary>
      /// Gets details of a single Variant.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ConfigDelivery.V1Beta.Variant> GetVariantAsync(global::Google.Cloud.ConfigDelivery.V1Beta.GetVariantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetVariantAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single Variant.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ConfigDelivery.V1Beta.Variant> GetVariantAsync(global::Google.Cloud.ConfigDelivery.V1Beta.GetVariantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetVariant, null, options, request);
      }
      /// <summary>
      /// Creates a new Variant in a given project, location, resource bundle, and
      /// release.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateVariant(global::Google.Cloud.ConfigDelivery.V1Beta.CreateVariantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateVariant(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new Variant in a given project, location, resource bundle, and
      /// release.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateVariant(global::Google.Cloud.ConfigDelivery.V1Beta.CreateVariantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateVariant, null, options, request);
      }
      /// <summary>
      /// Creates a new Variant in a given project, location, resource bundle, and
      /// release.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateVariantAsync(global::Google.Cloud.ConfigDelivery.V1Beta.CreateVariantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateVariantAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new Variant in a given project, location, resource bundle, and
      /// release.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateVariantAsync(global::Google.Cloud.ConfigDelivery.V1Beta.CreateVariantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateVariant, null, options, request);
      }
      /// <summary>
      /// Updates the parameters of a single Variant.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateVariant(global::Google.Cloud.ConfigDelivery.V1Beta.UpdateVariantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateVariant(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the parameters of a single Variant.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateVariant(global::Google.Cloud.ConfigDelivery.V1Beta.UpdateVariantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateVariant, null, options, request);
      }
      /// <summary>
      /// Updates the parameters of a single Variant.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateVariantAsync(global::Google.Cloud.ConfigDelivery.V1Beta.UpdateVariantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateVariantAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the parameters of a single Variant.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateVariantAsync(global::Google.Cloud.ConfigDelivery.V1Beta.UpdateVariantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateVariant, null, options, request);
      }
      /// <summary>
      /// Deletes a single Variant.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteVariant(global::Google.Cloud.ConfigDelivery.V1Beta.DeleteVariantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteVariant(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a single Variant.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteVariant(global::Google.Cloud.ConfigDelivery.V1Beta.DeleteVariantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteVariant, null, options, request);
      }
      /// <summary>
      /// Deletes a single Variant.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteVariantAsync(global::Google.Cloud.ConfigDelivery.V1Beta.DeleteVariantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteVariantAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a single Variant.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteVariantAsync(global::Google.Cloud.ConfigDelivery.V1Beta.DeleteVariantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteVariant, null, options, request);
      }
      /// <summary>
      /// Lists Rollouts in a given project, location, and Fleet Package.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ConfigDelivery.V1Beta.ListRolloutsResponse ListRollouts(global::Google.Cloud.ConfigDelivery.V1Beta.ListRolloutsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListRollouts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists Rollouts in a given project, location, and Fleet Package.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ConfigDelivery.V1Beta.ListRolloutsResponse ListRollouts(global::Google.Cloud.ConfigDelivery.V1Beta.ListRolloutsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListRollouts, null, options, request);
      }
      /// <summary>
      /// Lists Rollouts in a given project, location, and Fleet Package.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ConfigDelivery.V1Beta.ListRolloutsResponse> ListRolloutsAsync(global::Google.Cloud.ConfigDelivery.V1Beta.ListRolloutsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListRolloutsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists Rollouts in a given project, location, and Fleet Package.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ConfigDelivery.V1Beta.ListRolloutsResponse> ListRolloutsAsync(global::Google.Cloud.ConfigDelivery.V1Beta.ListRolloutsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListRollouts, null, options, request);
      }
      /// <summary>
      /// Gets details of a single Rollout.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ConfigDelivery.V1Beta.Rollout GetRollout(global::Google.Cloud.ConfigDelivery.V1Beta.GetRolloutRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRollout(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single Rollout.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ConfigDelivery.V1Beta.Rollout GetRollout(global::Google.Cloud.ConfigDelivery.V1Beta.GetRolloutRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetRollout, null, options, request);
      }
      /// <summary>
      /// Gets details of a single Rollout.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ConfigDelivery.V1Beta.Rollout> GetRolloutAsync(global::Google.Cloud.ConfigDelivery.V1Beta.GetRolloutRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRolloutAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single Rollout.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ConfigDelivery.V1Beta.Rollout> GetRolloutAsync(global::Google.Cloud.ConfigDelivery.V1Beta.GetRolloutRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetRollout, null, options, request);
      }
      /// <summary>
      /// Suspend a Rollout.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation SuspendRollout(global::Google.Cloud.ConfigDelivery.V1Beta.SuspendRolloutRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SuspendRollout(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Suspend a Rollout.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation SuspendRollout(global::Google.Cloud.ConfigDelivery.V1Beta.SuspendRolloutRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SuspendRollout, null, options, request);
      }
      /// <summary>
      /// Suspend a Rollout.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> SuspendRolloutAsync(global::Google.Cloud.ConfigDelivery.V1Beta.SuspendRolloutRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SuspendRolloutAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Suspend a Rollout.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> SuspendRolloutAsync(global::Google.Cloud.ConfigDelivery.V1Beta.SuspendRolloutRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SuspendRollout, null, options, request);
      }
      /// <summary>
      /// Resume a Rollout.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ResumeRollout(global::Google.Cloud.ConfigDelivery.V1Beta.ResumeRolloutRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResumeRollout(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Resume a Rollout.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ResumeRollout(global::Google.Cloud.ConfigDelivery.V1Beta.ResumeRolloutRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResumeRollout, null, options, request);
      }
      /// <summary>
      /// Resume a Rollout.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ResumeRolloutAsync(global::Google.Cloud.ConfigDelivery.V1Beta.ResumeRolloutRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResumeRolloutAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Resume a Rollout.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ResumeRolloutAsync(global::Google.Cloud.ConfigDelivery.V1Beta.ResumeRolloutRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResumeRollout, null, options, request);
      }
      /// <summary>
      /// Abort a Rollout.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation AbortRollout(global::Google.Cloud.ConfigDelivery.V1Beta.AbortRolloutRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AbortRollout(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Abort a Rollout.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation AbortRollout(global::Google.Cloud.ConfigDelivery.V1Beta.AbortRolloutRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AbortRollout, null, options, request);
      }
      /// <summary>
      /// Abort a Rollout.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> AbortRolloutAsync(global::Google.Cloud.ConfigDelivery.V1Beta.AbortRolloutRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AbortRolloutAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Abort a Rollout.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> AbortRolloutAsync(global::Google.Cloud.ConfigDelivery.V1Beta.AbortRolloutRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AbortRollout, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override ConfigDeliveryClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ConfigDeliveryClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(ConfigDeliveryBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ListResourceBundles, serviceImpl.ListResourceBundles)
          .AddMethod(__Method_GetResourceBundle, serviceImpl.GetResourceBundle)
          .AddMethod(__Method_CreateResourceBundle, serviceImpl.CreateResourceBundle)
          .AddMethod(__Method_UpdateResourceBundle, serviceImpl.UpdateResourceBundle)
          .AddMethod(__Method_DeleteResourceBundle, serviceImpl.DeleteResourceBundle)
          .AddMethod(__Method_ListFleetPackages, serviceImpl.ListFleetPackages)
          .AddMethod(__Method_GetFleetPackage, serviceImpl.GetFleetPackage)
          .AddMethod(__Method_CreateFleetPackage, serviceImpl.CreateFleetPackage)
          .AddMethod(__Method_UpdateFleetPackage, serviceImpl.UpdateFleetPackage)
          .AddMethod(__Method_DeleteFleetPackage, serviceImpl.DeleteFleetPackage)
          .AddMethod(__Method_ListReleases, serviceImpl.ListReleases)
          .AddMethod(__Method_GetRelease, serviceImpl.GetRelease)
          .AddMethod(__Method_CreateRelease, serviceImpl.CreateRelease)
          .AddMethod(__Method_UpdateRelease, serviceImpl.UpdateRelease)
          .AddMethod(__Method_DeleteRelease, serviceImpl.DeleteRelease)
          .AddMethod(__Method_ListVariants, serviceImpl.ListVariants)
          .AddMethod(__Method_GetVariant, serviceImpl.GetVariant)
          .AddMethod(__Method_CreateVariant, serviceImpl.CreateVariant)
          .AddMethod(__Method_UpdateVariant, serviceImpl.UpdateVariant)
          .AddMethod(__Method_DeleteVariant, serviceImpl.DeleteVariant)
          .AddMethod(__Method_ListRollouts, serviceImpl.ListRollouts)
          .AddMethod(__Method_GetRollout, serviceImpl.GetRollout)
          .AddMethod(__Method_SuspendRollout, serviceImpl.SuspendRollout)
          .AddMethod(__Method_ResumeRollout, serviceImpl.ResumeRollout)
          .AddMethod(__Method_AbortRollout, serviceImpl.AbortRollout).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ConfigDeliveryBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_ListResourceBundles, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ConfigDelivery.V1Beta.ListResourceBundlesRequest, global::Google.Cloud.ConfigDelivery.V1Beta.ListResourceBundlesResponse>(serviceImpl.ListResourceBundles));
      serviceBinder.AddMethod(__Method_GetResourceBundle, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ConfigDelivery.V1Beta.GetResourceBundleRequest, global::Google.Cloud.ConfigDelivery.V1Beta.ResourceBundle>(serviceImpl.GetResourceBundle));
      serviceBinder.AddMethod(__Method_CreateResourceBundle, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ConfigDelivery.V1Beta.CreateResourceBundleRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateResourceBundle));
      serviceBinder.AddMethod(__Method_UpdateResourceBundle, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ConfigDelivery.V1Beta.UpdateResourceBundleRequest, global::Google.LongRunning.Operation>(serviceImpl.UpdateResourceBundle));
      serviceBinder.AddMethod(__Method_DeleteResourceBundle, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ConfigDelivery.V1Beta.DeleteResourceBundleRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteResourceBundle));
      serviceBinder.AddMethod(__Method_ListFleetPackages, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ConfigDelivery.V1Beta.ListFleetPackagesRequest, global::Google.Cloud.ConfigDelivery.V1Beta.ListFleetPackagesResponse>(serviceImpl.ListFleetPackages));
      serviceBinder.AddMethod(__Method_GetFleetPackage, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ConfigDelivery.V1Beta.GetFleetPackageRequest, global::Google.Cloud.ConfigDelivery.V1Beta.FleetPackage>(serviceImpl.GetFleetPackage));
      serviceBinder.AddMethod(__Method_CreateFleetPackage, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ConfigDelivery.V1Beta.CreateFleetPackageRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateFleetPackage));
      serviceBinder.AddMethod(__Method_UpdateFleetPackage, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ConfigDelivery.V1Beta.UpdateFleetPackageRequest, global::Google.LongRunning.Operation>(serviceImpl.UpdateFleetPackage));
      serviceBinder.AddMethod(__Method_DeleteFleetPackage, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ConfigDelivery.V1Beta.DeleteFleetPackageRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteFleetPackage));
      serviceBinder.AddMethod(__Method_ListReleases, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ConfigDelivery.V1Beta.ListReleasesRequest, global::Google.Cloud.ConfigDelivery.V1Beta.ListReleasesResponse>(serviceImpl.ListReleases));
      serviceBinder.AddMethod(__Method_GetRelease, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ConfigDelivery.V1Beta.GetReleaseRequest, global::Google.Cloud.ConfigDelivery.V1Beta.Release>(serviceImpl.GetRelease));
      serviceBinder.AddMethod(__Method_CreateRelease, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ConfigDelivery.V1Beta.CreateReleaseRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateRelease));
      serviceBinder.AddMethod(__Method_UpdateRelease, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ConfigDelivery.V1Beta.UpdateReleaseRequest, global::Google.LongRunning.Operation>(serviceImpl.UpdateRelease));
      serviceBinder.AddMethod(__Method_DeleteRelease, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ConfigDelivery.V1Beta.DeleteReleaseRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteRelease));
      serviceBinder.AddMethod(__Method_ListVariants, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ConfigDelivery.V1Beta.ListVariantsRequest, global::Google.Cloud.ConfigDelivery.V1Beta.ListVariantsResponse>(serviceImpl.ListVariants));
      serviceBinder.AddMethod(__Method_GetVariant, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ConfigDelivery.V1Beta.GetVariantRequest, global::Google.Cloud.ConfigDelivery.V1Beta.Variant>(serviceImpl.GetVariant));
      serviceBinder.AddMethod(__Method_CreateVariant, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ConfigDelivery.V1Beta.CreateVariantRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateVariant));
      serviceBinder.AddMethod(__Method_UpdateVariant, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ConfigDelivery.V1Beta.UpdateVariantRequest, global::Google.LongRunning.Operation>(serviceImpl.UpdateVariant));
      serviceBinder.AddMethod(__Method_DeleteVariant, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ConfigDelivery.V1Beta.DeleteVariantRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteVariant));
      serviceBinder.AddMethod(__Method_ListRollouts, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ConfigDelivery.V1Beta.ListRolloutsRequest, global::Google.Cloud.ConfigDelivery.V1Beta.ListRolloutsResponse>(serviceImpl.ListRollouts));
      serviceBinder.AddMethod(__Method_GetRollout, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ConfigDelivery.V1Beta.GetRolloutRequest, global::Google.Cloud.ConfigDelivery.V1Beta.Rollout>(serviceImpl.GetRollout));
      serviceBinder.AddMethod(__Method_SuspendRollout, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ConfigDelivery.V1Beta.SuspendRolloutRequest, global::Google.LongRunning.Operation>(serviceImpl.SuspendRollout));
      serviceBinder.AddMethod(__Method_ResumeRollout, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ConfigDelivery.V1Beta.ResumeRolloutRequest, global::Google.LongRunning.Operation>(serviceImpl.ResumeRollout));
      serviceBinder.AddMethod(__Method_AbortRollout, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ConfigDelivery.V1Beta.AbortRolloutRequest, global::Google.LongRunning.Operation>(serviceImpl.AbortRollout));
    }

  }
}
#endregion
