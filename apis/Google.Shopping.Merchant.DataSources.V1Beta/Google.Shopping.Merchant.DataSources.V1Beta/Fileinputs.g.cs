// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/shopping/merchant/datasources/v1beta/fileinputs.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Shopping.Merchant.DataSources.V1Beta {

  /// <summary>Holder for reflection information generated from google/shopping/merchant/datasources/v1beta/fileinputs.proto</summary>
  public static partial class FileinputsReflection {

    #region Descriptor
    /// <summary>File descriptor for google/shopping/merchant/datasources/v1beta/fileinputs.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FileinputsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cjxnb29nbGUvc2hvcHBpbmcvbWVyY2hhbnQvZGF0YXNvdXJjZXMvdjFiZXRh",
            "L2ZpbGVpbnB1dHMucHJvdG8SK2dvb2dsZS5zaG9wcGluZy5tZXJjaGFudC5k",
            "YXRhc291cmNlcy52MWJldGEaH2dvb2dsZS9hcGkvZmllbGRfYmVoYXZpb3Iu",
            "cHJvdG8aG2dvb2dsZS90eXBlL2RheW9md2Vlay5wcm90bxobZ29vZ2xlL3R5",
            "cGUvdGltZW9mZGF5LnByb3RvIp0GCglGaWxlSW5wdXQSYQoOZmV0Y2hfc2V0",
            "dGluZ3MYASABKAsyRC5nb29nbGUuc2hvcHBpbmcubWVyY2hhbnQuZGF0YXNv",
            "dXJjZXMudjFiZXRhLkZpbGVJbnB1dC5GZXRjaFNldHRpbmdzQgPgQQESFgoJ",
            "ZmlsZV9uYW1lGAIgASgJQgPgQQESYgoPZmlsZV9pbnB1dF90eXBlGAMgASgO",
            "MkQuZ29vZ2xlLnNob3BwaW5nLm1lcmNoYW50LmRhdGFzb3VyY2VzLnYxYmV0",
            "YS5GaWxlSW5wdXQuRmlsZUlucHV0VHlwZUID4EEDGtQDCg1GZXRjaFNldHRp",
            "bmdzEhQKB2VuYWJsZWQYASABKAhCA+BBARIZCgxkYXlfb2ZfbW9udGgYAiAB",
            "KAVCA+BBARIwCgt0aW1lX29mX2RheRgDIAEoCzIWLmdvb2dsZS50eXBlLlRp",
            "bWVPZkRheUID4EEBEjAKC2RheV9vZl93ZWVrGAQgASgOMhYuZ29vZ2xlLnR5",
            "cGUuRGF5T2ZXZWVrQgPgQQESFgoJdGltZV96b25lGAUgASgJQgPgQQESZgoJ",
            "ZnJlcXVlbmN5GAYgASgOMk4uZ29vZ2xlLnNob3BwaW5nLm1lcmNoYW50LmRh",
            "dGFzb3VyY2VzLnYxYmV0YS5GaWxlSW5wdXQuRmV0Y2hTZXR0aW5ncy5GcmVx",
            "dWVuY3lCA+BBAhIWCglmZXRjaF91cmkYByABKAlCA+BBARIVCgh1c2VybmFt",
            "ZRgIIAEoCUID4EEBEhUKCHBhc3N3b3JkGAkgASgJQgPgQQEiaAoJRnJlcXVl",
            "bmN5EhkKFUZSRVFVRU5DWV9VTlNQRUNJRklFRBAAEhMKD0ZSRVFVRU5DWV9E",
            "QUlMWRABEhQKEEZSRVFVRU5DWV9XRUVLTFkQAhIVChFGUkVRVUVOQ1lfTU9O",
            "VEhMWRADIloKDUZpbGVJbnB1dFR5cGUSHwobRklMRV9JTlBVVF9UWVBFX1VO",
            "U1BFQ0lGSUVEEAASCgoGVVBMT0FEEAESCQoFRkVUQ0gQAhIRCg1HT09HTEVf",
            "U0hFRVRTEANCqwIKL2NvbS5nb29nbGUuc2hvcHBpbmcubWVyY2hhbnQuZGF0",
            "YXNvdXJjZXMudjFiZXRhQg9GaWxlSW5wdXRzUHJvdG9QAVpXY2xvdWQuZ29v",
            "Z2xlLmNvbS9nby9zaG9wcGluZy9tZXJjaGFudC9kYXRhc291cmNlcy9hcGl2",
            "MWJldGEvZGF0YXNvdXJjZXNwYjtkYXRhc291cmNlc3BiqgIrR29vZ2xlLlNo",
            "b3BwaW5nLk1lcmNoYW50LkRhdGFTb3VyY2VzLlYxQmV0YcoCK0dvb2dsZVxT",
            "aG9wcGluZ1xNZXJjaGFudFxEYXRhU291cmNlc1xWMWJldGHqAi9Hb29nbGU6",
            "OlNob3BwaW5nOjpNZXJjaGFudDo6RGF0YVNvdXJjZXM6OlYxYmV0YWIGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Type.DayofweekReflection.Descriptor, global::Google.Type.TimeofdayReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Shopping.Merchant.DataSources.V1Beta.FileInput), global::Google.Shopping.Merchant.DataSources.V1Beta.FileInput.Parser, new[]{ "FetchSettings", "FileName", "FileInputType" }, null, new[]{ typeof(global::Google.Shopping.Merchant.DataSources.V1Beta.FileInput.Types.FileInputType) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Shopping.Merchant.DataSources.V1Beta.FileInput.Types.FetchSettings), global::Google.Shopping.Merchant.DataSources.V1Beta.FileInput.Types.FetchSettings.Parser, new[]{ "Enabled", "DayOfMonth", "TimeOfDay", "DayOfWeek", "TimeZone", "Frequency", "FetchUri", "Username", "Password" }, null, new[]{ typeof(global::Google.Shopping.Merchant.DataSources.V1Beta.FileInput.Types.FetchSettings.Types.Frequency) }, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// The data specific for file data sources. This field is empty for other
  /// data source inputs.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class FileInput : pb::IMessage<FileInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FileInput> _parser = new pb::MessageParser<FileInput>(() => new FileInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FileInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Shopping.Merchant.DataSources.V1Beta.FileinputsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FileInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FileInput(FileInput other) : this() {
      fetchSettings_ = other.fetchSettings_ != null ? other.fetchSettings_.Clone() : null;
      fileName_ = other.fileName_;
      fileInputType_ = other.fileInputType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FileInput Clone() {
      return new FileInput(this);
    }

    /// <summary>Field number for the "fetch_settings" field.</summary>
    public const int FetchSettingsFieldNumber = 1;
    private global::Google.Shopping.Merchant.DataSources.V1Beta.FileInput.Types.FetchSettings fetchSettings_;
    /// <summary>
    /// Optional. Fetch details to deliver the data source. It contains settings
    /// for `FETCH` and `GOOGLE_SHEETS` file input types. The required fields vary
    /// based on the frequency of fetching.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Shopping.Merchant.DataSources.V1Beta.FileInput.Types.FetchSettings FetchSettings {
      get { return fetchSettings_; }
      set {
        fetchSettings_ = value;
      }
    }

    /// <summary>Field number for the "file_name" field.</summary>
    public const int FileNameFieldNumber = 2;
    private string fileName_ = "";
    /// <summary>
    /// Optional. The file name of the data source. Required for `UPLOAD` file
    /// input type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FileName {
      get { return fileName_; }
      set {
        fileName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "file_input_type" field.</summary>
    public const int FileInputTypeFieldNumber = 3;
    private global::Google.Shopping.Merchant.DataSources.V1Beta.FileInput.Types.FileInputType fileInputType_ = global::Google.Shopping.Merchant.DataSources.V1Beta.FileInput.Types.FileInputType.Unspecified;
    /// <summary>
    /// Output only. The type of file input.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Shopping.Merchant.DataSources.V1Beta.FileInput.Types.FileInputType FileInputType {
      get { return fileInputType_; }
      set {
        fileInputType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FileInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FileInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(FetchSettings, other.FetchSettings)) return false;
      if (FileName != other.FileName) return false;
      if (FileInputType != other.FileInputType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (fetchSettings_ != null) hash ^= FetchSettings.GetHashCode();
      if (FileName.Length != 0) hash ^= FileName.GetHashCode();
      if (FileInputType != global::Google.Shopping.Merchant.DataSources.V1Beta.FileInput.Types.FileInputType.Unspecified) hash ^= FileInputType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (fetchSettings_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FetchSettings);
      }
      if (FileName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FileName);
      }
      if (FileInputType != global::Google.Shopping.Merchant.DataSources.V1Beta.FileInput.Types.FileInputType.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) FileInputType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (fetchSettings_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FetchSettings);
      }
      if (FileName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FileName);
      }
      if (FileInputType != global::Google.Shopping.Merchant.DataSources.V1Beta.FileInput.Types.FileInputType.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) FileInputType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (fetchSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FetchSettings);
      }
      if (FileName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FileName);
      }
      if (FileInputType != global::Google.Shopping.Merchant.DataSources.V1Beta.FileInput.Types.FileInputType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FileInputType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FileInput other) {
      if (other == null) {
        return;
      }
      if (other.fetchSettings_ != null) {
        if (fetchSettings_ == null) {
          FetchSettings = new global::Google.Shopping.Merchant.DataSources.V1Beta.FileInput.Types.FetchSettings();
        }
        FetchSettings.MergeFrom(other.FetchSettings);
      }
      if (other.FileName.Length != 0) {
        FileName = other.FileName;
      }
      if (other.FileInputType != global::Google.Shopping.Merchant.DataSources.V1Beta.FileInput.Types.FileInputType.Unspecified) {
        FileInputType = other.FileInputType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (fetchSettings_ == null) {
              FetchSettings = new global::Google.Shopping.Merchant.DataSources.V1Beta.FileInput.Types.FetchSettings();
            }
            input.ReadMessage(FetchSettings);
            break;
          }
          case 18: {
            FileName = input.ReadString();
            break;
          }
          case 24: {
            FileInputType = (global::Google.Shopping.Merchant.DataSources.V1Beta.FileInput.Types.FileInputType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (fetchSettings_ == null) {
              FetchSettings = new global::Google.Shopping.Merchant.DataSources.V1Beta.FileInput.Types.FetchSettings();
            }
            input.ReadMessage(FetchSettings);
            break;
          }
          case 18: {
            FileName = input.ReadString();
            break;
          }
          case 24: {
            FileInputType = (global::Google.Shopping.Merchant.DataSources.V1Beta.FileInput.Types.FileInputType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the FileInput message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// The method of file delivery.
      /// </summary>
      public enum FileInputType {
        /// <summary>
        /// File input type unspecified.
        /// </summary>
        [pbr::OriginalName("FILE_INPUT_TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The file is uploaded through SFTP, Google Cloud Storage or manually in
        /// the Merchant Center.
        /// </summary>
        [pbr::OriginalName("UPLOAD")] Upload = 1,
        /// <summary>
        /// The file is fetched from the configured
        /// [fetch_uri][google.shopping.merchant.datasources.v1beta.FileInput.FetchSettings.fetch_uri].
        /// </summary>
        [pbr::OriginalName("FETCH")] Fetch = 2,
        /// <summary>
        /// The file is fetched from Google Sheets specified in the
        /// [fetch_uri][google.shopping.merchant.datasources.v1beta.FileInput.FetchSettings.fetch_uri].
        /// </summary>
        [pbr::OriginalName("GOOGLE_SHEETS")] GoogleSheets = 3,
      }

      /// <summary>
      /// Fetch details to deliver the data source.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class FetchSettings : pb::IMessage<FetchSettings>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<FetchSettings> _parser = new pb::MessageParser<FetchSettings>(() => new FetchSettings());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<FetchSettings> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Shopping.Merchant.DataSources.V1Beta.FileInput.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public FetchSettings() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public FetchSettings(FetchSettings other) : this() {
          enabled_ = other.enabled_;
          dayOfMonth_ = other.dayOfMonth_;
          timeOfDay_ = other.timeOfDay_ != null ? other.timeOfDay_.Clone() : null;
          dayOfWeek_ = other.dayOfWeek_;
          timeZone_ = other.timeZone_;
          frequency_ = other.frequency_;
          fetchUri_ = other.fetchUri_;
          username_ = other.username_;
          password_ = other.password_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public FetchSettings Clone() {
          return new FetchSettings(this);
        }

        /// <summary>Field number for the "enabled" field.</summary>
        public const int EnabledFieldNumber = 1;
        private bool enabled_;
        /// <summary>
        /// Optional. Enables or pauses the fetch schedule.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Enabled {
          get { return enabled_; }
          set {
            enabled_ = value;
          }
        }

        /// <summary>Field number for the "day_of_month" field.</summary>
        public const int DayOfMonthFieldNumber = 2;
        private int dayOfMonth_;
        /// <summary>
        /// Optional. The day of the month when the data source file should be
        /// fetched (1-31). This field can only be set for monthly frequency.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int DayOfMonth {
          get { return dayOfMonth_; }
          set {
            dayOfMonth_ = value;
          }
        }

        /// <summary>Field number for the "time_of_day" field.</summary>
        public const int TimeOfDayFieldNumber = 3;
        private global::Google.Type.TimeOfDay timeOfDay_;
        /// <summary>
        /// Optional. The hour of the day when the data source file should be
        /// fetched. Minutes and seconds are not supported and will be ignored.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Type.TimeOfDay TimeOfDay {
          get { return timeOfDay_; }
          set {
            timeOfDay_ = value;
          }
        }

        /// <summary>Field number for the "day_of_week" field.</summary>
        public const int DayOfWeekFieldNumber = 4;
        private global::Google.Type.DayOfWeek dayOfWeek_ = global::Google.Type.DayOfWeek.Unspecified;
        /// <summary>
        /// Optional. The day of the week when the data source file should be
        /// fetched. This field can only be set for weekly frequency.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Type.DayOfWeek DayOfWeek {
          get { return dayOfWeek_; }
          set {
            dayOfWeek_ = value;
          }
        }

        /// <summary>Field number for the "time_zone" field.</summary>
        public const int TimeZoneFieldNumber = 5;
        private string timeZone_ = "";
        /// <summary>
        /// Optional. [Time zone](https://cldr.unicode.org) used for schedule. UTC by
        /// default. For example, "America/Los_Angeles".
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string TimeZone {
          get { return timeZone_; }
          set {
            timeZone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "frequency" field.</summary>
        public const int FrequencyFieldNumber = 6;
        private global::Google.Shopping.Merchant.DataSources.V1Beta.FileInput.Types.FetchSettings.Types.Frequency frequency_ = global::Google.Shopping.Merchant.DataSources.V1Beta.FileInput.Types.FetchSettings.Types.Frequency.Unspecified;
        /// <summary>
        /// Required. The frequency describing fetch schedule.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Shopping.Merchant.DataSources.V1Beta.FileInput.Types.FetchSettings.Types.Frequency Frequency {
          get { return frequency_; }
          set {
            frequency_ = value;
          }
        }

        /// <summary>Field number for the "fetch_uri" field.</summary>
        public const int FetchUriFieldNumber = 7;
        private string fetchUri_ = "";
        /// <summary>
        /// Optional. The URL where the data source file can be fetched. Google
        /// Merchant Center supports automatic scheduled uploads using the HTTP,
        /// HTTPS or SFTP protocols, so the value will need to be a valid link using
        /// one of those three protocols. Immutable for Google Sheets files.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string FetchUri {
          get { return fetchUri_; }
          set {
            fetchUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "username" field.</summary>
        public const int UsernameFieldNumber = 8;
        private string username_ = "";
        /// <summary>
        /// Optional. An optional user name for
        /// [fetch_uri][google.shopping.merchant.datasources.v1beta.FileInput.FetchSettings.fetch_uri].
        /// Used for [submitting data sources through
        /// SFTP](https://support.google.com/merchants/answer/13813117).
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Username {
          get { return username_; }
          set {
            username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "password" field.</summary>
        public const int PasswordFieldNumber = 9;
        private string password_ = "";
        /// <summary>
        /// Optional. An optional password for
        /// [fetch_uri][google.shopping.merchant.datasources.v1beta.FileInput.FetchSettings.fetch_uri].
        /// Used for [submitting data sources through
        /// SFTP](https://support.google.com/merchants/answer/13813117).
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Password {
          get { return password_; }
          set {
            password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as FetchSettings);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(FetchSettings other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Enabled != other.Enabled) return false;
          if (DayOfMonth != other.DayOfMonth) return false;
          if (!object.Equals(TimeOfDay, other.TimeOfDay)) return false;
          if (DayOfWeek != other.DayOfWeek) return false;
          if (TimeZone != other.TimeZone) return false;
          if (Frequency != other.Frequency) return false;
          if (FetchUri != other.FetchUri) return false;
          if (Username != other.Username) return false;
          if (Password != other.Password) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Enabled != false) hash ^= Enabled.GetHashCode();
          if (DayOfMonth != 0) hash ^= DayOfMonth.GetHashCode();
          if (timeOfDay_ != null) hash ^= TimeOfDay.GetHashCode();
          if (DayOfWeek != global::Google.Type.DayOfWeek.Unspecified) hash ^= DayOfWeek.GetHashCode();
          if (TimeZone.Length != 0) hash ^= TimeZone.GetHashCode();
          if (Frequency != global::Google.Shopping.Merchant.DataSources.V1Beta.FileInput.Types.FetchSettings.Types.Frequency.Unspecified) hash ^= Frequency.GetHashCode();
          if (FetchUri.Length != 0) hash ^= FetchUri.GetHashCode();
          if (Username.Length != 0) hash ^= Username.GetHashCode();
          if (Password.Length != 0) hash ^= Password.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Enabled != false) {
            output.WriteRawTag(8);
            output.WriteBool(Enabled);
          }
          if (DayOfMonth != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(DayOfMonth);
          }
          if (timeOfDay_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(TimeOfDay);
          }
          if (DayOfWeek != global::Google.Type.DayOfWeek.Unspecified) {
            output.WriteRawTag(32);
            output.WriteEnum((int) DayOfWeek);
          }
          if (TimeZone.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(TimeZone);
          }
          if (Frequency != global::Google.Shopping.Merchant.DataSources.V1Beta.FileInput.Types.FetchSettings.Types.Frequency.Unspecified) {
            output.WriteRawTag(48);
            output.WriteEnum((int) Frequency);
          }
          if (FetchUri.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(FetchUri);
          }
          if (Username.Length != 0) {
            output.WriteRawTag(66);
            output.WriteString(Username);
          }
          if (Password.Length != 0) {
            output.WriteRawTag(74);
            output.WriteString(Password);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Enabled != false) {
            output.WriteRawTag(8);
            output.WriteBool(Enabled);
          }
          if (DayOfMonth != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(DayOfMonth);
          }
          if (timeOfDay_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(TimeOfDay);
          }
          if (DayOfWeek != global::Google.Type.DayOfWeek.Unspecified) {
            output.WriteRawTag(32);
            output.WriteEnum((int) DayOfWeek);
          }
          if (TimeZone.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(TimeZone);
          }
          if (Frequency != global::Google.Shopping.Merchant.DataSources.V1Beta.FileInput.Types.FetchSettings.Types.Frequency.Unspecified) {
            output.WriteRawTag(48);
            output.WriteEnum((int) Frequency);
          }
          if (FetchUri.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(FetchUri);
          }
          if (Username.Length != 0) {
            output.WriteRawTag(66);
            output.WriteString(Username);
          }
          if (Password.Length != 0) {
            output.WriteRawTag(74);
            output.WriteString(Password);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Enabled != false) {
            size += 1 + 1;
          }
          if (DayOfMonth != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(DayOfMonth);
          }
          if (timeOfDay_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeOfDay);
          }
          if (DayOfWeek != global::Google.Type.DayOfWeek.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DayOfWeek);
          }
          if (TimeZone.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TimeZone);
          }
          if (Frequency != global::Google.Shopping.Merchant.DataSources.V1Beta.FileInput.Types.FetchSettings.Types.Frequency.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Frequency);
          }
          if (FetchUri.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(FetchUri);
          }
          if (Username.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
          }
          if (Password.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(FetchSettings other) {
          if (other == null) {
            return;
          }
          if (other.Enabled != false) {
            Enabled = other.Enabled;
          }
          if (other.DayOfMonth != 0) {
            DayOfMonth = other.DayOfMonth;
          }
          if (other.timeOfDay_ != null) {
            if (timeOfDay_ == null) {
              TimeOfDay = new global::Google.Type.TimeOfDay();
            }
            TimeOfDay.MergeFrom(other.TimeOfDay);
          }
          if (other.DayOfWeek != global::Google.Type.DayOfWeek.Unspecified) {
            DayOfWeek = other.DayOfWeek;
          }
          if (other.TimeZone.Length != 0) {
            TimeZone = other.TimeZone;
          }
          if (other.Frequency != global::Google.Shopping.Merchant.DataSources.V1Beta.FileInput.Types.FetchSettings.Types.Frequency.Unspecified) {
            Frequency = other.Frequency;
          }
          if (other.FetchUri.Length != 0) {
            FetchUri = other.FetchUri;
          }
          if (other.Username.Length != 0) {
            Username = other.Username;
          }
          if (other.Password.Length != 0) {
            Password = other.Password;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Enabled = input.ReadBool();
                break;
              }
              case 16: {
                DayOfMonth = input.ReadInt32();
                break;
              }
              case 26: {
                if (timeOfDay_ == null) {
                  TimeOfDay = new global::Google.Type.TimeOfDay();
                }
                input.ReadMessage(TimeOfDay);
                break;
              }
              case 32: {
                DayOfWeek = (global::Google.Type.DayOfWeek) input.ReadEnum();
                break;
              }
              case 42: {
                TimeZone = input.ReadString();
                break;
              }
              case 48: {
                Frequency = (global::Google.Shopping.Merchant.DataSources.V1Beta.FileInput.Types.FetchSettings.Types.Frequency) input.ReadEnum();
                break;
              }
              case 58: {
                FetchUri = input.ReadString();
                break;
              }
              case 66: {
                Username = input.ReadString();
                break;
              }
              case 74: {
                Password = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Enabled = input.ReadBool();
                break;
              }
              case 16: {
                DayOfMonth = input.ReadInt32();
                break;
              }
              case 26: {
                if (timeOfDay_ == null) {
                  TimeOfDay = new global::Google.Type.TimeOfDay();
                }
                input.ReadMessage(TimeOfDay);
                break;
              }
              case 32: {
                DayOfWeek = (global::Google.Type.DayOfWeek) input.ReadEnum();
                break;
              }
              case 42: {
                TimeZone = input.ReadString();
                break;
              }
              case 48: {
                Frequency = (global::Google.Shopping.Merchant.DataSources.V1Beta.FileInput.Types.FetchSettings.Types.Frequency) input.ReadEnum();
                break;
              }
              case 58: {
                FetchUri = input.ReadString();
                break;
              }
              case 66: {
                Username = input.ReadString();
                break;
              }
              case 74: {
                Password = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the FetchSettings message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          /// <summary>
          /// The required fields vary based on the frequency of fetching. For a
          /// monthly
          /// fetch schedule,
          /// [day of
          /// month][google.shopping.content.bundles.DataSources.FileInput.FetchSchedule.day_of_month]
          /// and
          /// [hour of
          /// day][google.shopping.content.bundles.DataSources.FileInput.FetchSchedule.time_of_day]
          /// are required. For a weekly fetch schedule,
          /// [day of
          /// week][google.shopping.content.bundles.DataSources.FileInput.FetchSchedule.day_of_week]
          /// and [hour of
          /// day][google.shopping.content.bundles.DataSources.FileInput.FetchSchedule.time_of_day]
          /// are required. For a daily fetch schedule, only an [hour of
          /// day][google.shopping.content.bundles.DataSources.FileInput.FetchSchedule.time_of_day]
          /// is required.
          /// </summary>
          public enum Frequency {
            /// <summary>
            /// Frequency unspecified.
            /// </summary>
            [pbr::OriginalName("FREQUENCY_UNSPECIFIED")] Unspecified = 0,
            /// <summary>
            /// The fetch happens every day.
            /// </summary>
            [pbr::OriginalName("FREQUENCY_DAILY")] Daily = 1,
            /// <summary>
            /// The fetch happens every week.
            /// </summary>
            [pbr::OriginalName("FREQUENCY_WEEKLY")] Weekly = 2,
            /// <summary>
            /// The fetch happens every month.
            /// </summary>
            [pbr::OriginalName("FREQUENCY_MONTHLY")] Monthly = 3,
          }

        }
        #endregion

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
