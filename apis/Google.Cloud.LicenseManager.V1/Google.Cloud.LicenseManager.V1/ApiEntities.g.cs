// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/licensemanager/v1/api_entities.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.LicenseManager.V1 {

  /// <summary>Holder for reflection information generated from google/cloud/licensemanager/v1/api_entities.proto</summary>
  public static partial class ApiEntitiesReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/licensemanager/v1/api_entities.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ApiEntitiesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjFnb29nbGUvY2xvdWQvbGljZW5zZW1hbmFnZXIvdjEvYXBpX2VudGl0aWVz",
            "LnByb3RvEh5nb29nbGUuY2xvdWQubGljZW5zZW1hbmFnZXIudjEaH2dvb2ds",
            "ZS9hcGkvZmllbGRfYmVoYXZpb3IucHJvdG8aGWdvb2dsZS9hcGkvcmVzb3Vy",
            "Y2UucHJvdG8aH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8iiwcK",
            "DUNvbmZpZ3VyYXRpb24SEQoEbmFtZRgBIAEoCUID4EEIEhkKDGRpc3BsYXlf",
            "bmFtZRgFIAEoCUID4EECEj4KB3Byb2R1Y3QYBiABKAlCLeBBAvpBJwolbGlj",
            "ZW5zZW1hbmFnZXIuZ29vZ2xlYXBpcy5jb20vUHJvZHVjdBJGCgxsaWNlbnNl",
            "X3R5cGUYByABKA4yKy5nb29nbGUuY2xvdWQubGljZW5zZW1hbmFnZXIudjEu",
            "TGljZW5zZVR5cGVCA+BBAhJOChRjdXJyZW50X2JpbGxpbmdfaW5mbxgIIAEo",
            "CzIrLmdvb2dsZS5jbG91ZC5saWNlbnNlbWFuYWdlci52MS5CaWxsaW5nSW5m",
            "b0ID4EECEksKEW5leHRfYmlsbGluZ19pbmZvGAkgASgLMisuZ29vZ2xlLmNs",
            "b3VkLmxpY2Vuc2VtYW5hZ2VyLnYxLkJpbGxpbmdJbmZvQgPgQQISNAoLY3Jl",
            "YXRlX3RpbWUYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPg",
            "QQMSNAoLdXBkYXRlX3RpbWUYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGlt",
            "ZXN0YW1wQgPgQQMSTgoGbGFiZWxzGAQgAygLMjkuZ29vZ2xlLmNsb3VkLmxp",
            "Y2Vuc2VtYW5hZ2VyLnYxLkNvbmZpZ3VyYXRpb24uTGFiZWxzRW50cnlCA+BB",
            "ARJHCgVzdGF0ZRgKIAEoDjIzLmdvb2dsZS5jbG91ZC5saWNlbnNlbWFuYWdl",
            "ci52MS5Db25maWd1cmF0aW9uLlN0YXRlQgPgQQMaLQoLTGFiZWxzRW50cnkS",
            "CwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASJYCgVTdGF0ZRIVChFT",
            "VEFURV9VTlNQRUNJRklFRBAAEhAKDFNUQVRFX0FDVElWRRABEhMKD1NUQVRF",
            "X1NVU1BFTkRFRBACEhEKDVNUQVRFX0RFTEVURUQQAzqYAepBlAEKK2xpY2Vu",
            "c2VtYW5hZ2VyLmdvb2dsZWFwaXMuY29tL0NvbmZpZ3VyYXRpb24SRnByb2pl",
            "Y3RzL3twcm9qZWN0fS9sb2NhdGlvbnMve2xvY2F0aW9ufS9jb25maWd1cmF0",
            "aW9ucy97Y29uZmlndXJhdGlvbn0qDmNvbmZpZ3VyYXRpb25zMg1jb25maWd1",
            "cmF0aW9uIuYBCgtCaWxsaW5nSW5mbxJXChJ1c2VyX2NvdW50X2JpbGxpbmcY",
            "ASABKAsyNC5nb29nbGUuY2xvdWQubGljZW5zZW1hbmFnZXIudjEuVXNlckNv",
            "dW50QmlsbGluZ0luZm9CA+BBAkgAEjMKCnN0YXJ0X3RpbWUYAiABKAsyGi5n",
            "b29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMSMQoIZW5kX3RpbWUYAyAB",
            "KAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQNCFgoUY3VycmVu",
            "dF9iaWxsaW5nX2luZm8iLwoUVXNlckNvdW50QmlsbGluZ0luZm8SFwoKdXNl",
            "cl9jb3VudBgBIAEoBUID4EECIjAKDlVzZXJDb3VudFVzYWdlEh4KEXVuaXF1",
            "ZV91c2VyX2NvdW50GAEgASgFQgPgQQIizQMKB1Byb2R1Y3QSEQoEbmFtZRgB",
            "IAEoCUID4EEIEhQKB3ZlcnNpb24YAiABKAlCA+BBAhIcCg9wcm9kdWN0X2Nv",
            "bXBhbnkYAyABKAlCA+BBAhJBCgVzdGF0ZRgEIAEoDjItLmdvb2dsZS5jbG91",
            "ZC5saWNlbnNlbWFuYWdlci52MS5Qcm9kdWN0LlN0YXRlQgPgQQMSEAoDc2t1",
            "GAUgASgJQgPgQQISGAoLZGVzY3JpcHRpb24YBiABKAlCA+BBAhIZCgxkaXNw",
            "bGF5X25hbWUYByABKAlCA+BBAiJ2CgVTdGF0ZRIVChFTVEFURV9VTlNQRUNJ",
            "RklFRBAAEhYKElNUQVRFX1BST1ZJU0lPTklORxABEhEKDVNUQVRFX1JVTk5J",
            "TkcQAhIVChFTVEFURV9URVJNSU5BVElORxADEhQKEFNUQVRFX1RFUk1JTkFU",
            "RUQQBDp56kF2CiVsaWNlbnNlbWFuYWdlci5nb29nbGVhcGlzLmNvbS9Qcm9k",
            "dWN0Ejpwcm9qZWN0cy97cHJvamVjdH0vbG9jYXRpb25zL3tsb2NhdGlvbn0v",
            "cHJvZHVjdHMve3Byb2R1Y3R9Kghwcm9kdWN0czIHcHJvZHVjdCKbBwoISW5z",
            "dGFuY2USEQoEbmFtZRgBIAEoCUID4EEIEjQKC2NyZWF0ZV90aW1lGAIgASgL",
            "MhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEjQKC3VwZGF0ZV90",
            "aW1lGAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEkkK",
            "BmxhYmVscxgEIAMoCzI0Lmdvb2dsZS5jbG91ZC5saWNlbnNlbWFuYWdlci52",
            "MS5JbnN0YW5jZS5MYWJlbHNFbnRyeUID4EEBEkIKBXN0YXRlGAUgASgOMi4u",
            "Z29vZ2xlLmNsb3VkLmxpY2Vuc2VtYW5hZ2VyLnYxLkluc3RhbmNlLlN0YXRl",
            "QgPgQQMSEwoGcmVnaW9uGAYgASgJQgPgQQMSYAoScHJvZHVjdF9hY3RpdmF0",
            "aW9uGAcgAygLMj8uZ29vZ2xlLmNsb3VkLmxpY2Vuc2VtYW5hZ2VyLnYxLklu",
            "c3RhbmNlLlByb2R1Y3RBY3RpdmF0aW9uRW50cnlCA+BBAxIfChJsaWNlbnNl",
            "X3ZlcnNpb25faWQYCCABKAlCA+BBAxJIChBjb21wdXRlX2luc3RhbmNlGAkg",
            "ASgJQi7gQQL6QSgKJmNvbXB1dGUuZ29vZ2xlYXBpcy5jb20vQ29tcHV0ZUlu",
            "c3RhbmNlGi0KC0xhYmVsc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgC",
            "IAEoCToCOAEaaQoWUHJvZHVjdEFjdGl2YXRpb25FbnRyeRILCgNrZXkYASAB",
            "KAkSPgoFdmFsdWUYAiABKA4yLy5nb29nbGUuY2xvdWQubGljZW5zZW1hbmFn",
            "ZXIudjEuQWN0aXZhdGlvblN0YXRlOgI4ASKEAQoFU3RhdGUSFQoRU1RBVEVf",
            "VU5TUEVDSUZJRUQQABIQCgxQUk9WSVNJT05JTkcQARILCgdTVEFHSU5HEAIS",
            "CwoHUlVOTklORxADEgwKCFNUT1BQSU5HEAQSCwoHU1RPUFBFRBAFEg4KClRF",
            "Uk1JTkFURUQQBhINCglSRVBBSVJJTkcQBzp+6kF7CiZsaWNlbnNlbWFuYWdl",
            "ci5nb29nbGVhcGlzLmNvbS9JbnN0YW5jZRI8cHJvamVjdHMve3Byb2plY3R9",
            "L2xvY2F0aW9ucy97bG9jYXRpb259L2luc3RhbmNlcy97aW5zdGFuY2V9Kglp",
            "bnN0YW5jZXMyCGluc3RhbmNlIloKBVVzYWdlEkIKDWxpbWFfaW5zdGFuY2UY",
            "ASABKAlCK/pBKAombGljZW5zZW1hbmFnZXIuZ29vZ2xlYXBpcy5jb20vSW5z",
            "dGFuY2USDQoFdXNlcnMYAiABKAUqeQoLTGljZW5zZVR5cGUSHAoYTElDRU5T",
            "RV9UWVBFX1VOU1BFQ0lGSUVEEAASIwofTElDRU5TRV9UWVBFX1BFUl9NT05U",
            "SF9QRVJfVVNFUhABEicKI0xJQ0VOU0VfVFlQRV9CUklOR19ZT1VSX09XTl9M",
            "SUNFTlNFEAIq/gEKD0FjdGl2YXRpb25TdGF0ZRIgChxBQ1RJVkFUSU9OX1NU",
            "QVRFX1VOU1BFQ0lGSUVEEAASIgoeQUNUSVZBVElPTl9TVEFURV9LRVlfUkVR",
            "VUVTVEVEEAESHwobQUNUSVZBVElPTl9TVEFURV9BQ1RJVkFUSU5HEAISHgoa",
            "QUNUSVZBVElPTl9TVEFURV9BQ1RJVkFURUQQAxIhCh1BQ1RJVkFUSU9OX1NU",
            "QVRFX0RFQUNUSVZBVElORxAEEiAKHEFDVElWQVRJT05fU1RBVEVfREVBQ1RJ",
            "VkFURUQQBRIfChtBQ1RJVkFUSU9OX1NUQVRFX1RFUk1JTkFURUQQBkLqAQoi",
            "Y29tLmdvb2dsZS5jbG91ZC5saWNlbnNlbWFuYWdlci52MUIQQXBpRW50aXRp",
            "ZXNQcm90b1ABWkpjbG91ZC5nb29nbGUuY29tL2dvL2xpY2Vuc2VtYW5hZ2Vy",
            "L2FwaXYxL2xpY2Vuc2VtYW5hZ2VycGI7bGljZW5zZW1hbmFnZXJwYqoCHkdv",
            "b2dsZS5DbG91ZC5MaWNlbnNlTWFuYWdlci5WMcoCHkdvb2dsZVxDbG91ZFxM",
            "aWNlbnNlTWFuYWdlclxWMeoCIUdvb2dsZTo6Q2xvdWQ6OkxpY2Vuc2VNYW5h",
            "Z2VyOjpWMWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Google.Cloud.LicenseManager.V1.LicenseType), typeof(global::Google.Cloud.LicenseManager.V1.ActivationState), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.LicenseManager.V1.Configuration), global::Google.Cloud.LicenseManager.V1.Configuration.Parser, new[]{ "Name", "DisplayName", "Product", "LicenseType", "CurrentBillingInfo", "NextBillingInfo", "CreateTime", "UpdateTime", "Labels", "State" }, null, new[]{ typeof(global::Google.Cloud.LicenseManager.V1.Configuration.Types.State) }, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.LicenseManager.V1.BillingInfo), global::Google.Cloud.LicenseManager.V1.BillingInfo.Parser, new[]{ "UserCountBilling", "StartTime", "EndTime" }, new[]{ "CurrentBillingInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.LicenseManager.V1.UserCountBillingInfo), global::Google.Cloud.LicenseManager.V1.UserCountBillingInfo.Parser, new[]{ "UserCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.LicenseManager.V1.UserCountUsage), global::Google.Cloud.LicenseManager.V1.UserCountUsage.Parser, new[]{ "UniqueUserCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.LicenseManager.V1.Product), global::Google.Cloud.LicenseManager.V1.Product.Parser, new[]{ "Name", "Version", "ProductCompany", "State", "Sku", "Description", "DisplayName" }, null, new[]{ typeof(global::Google.Cloud.LicenseManager.V1.Product.Types.State) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.LicenseManager.V1.Instance), global::Google.Cloud.LicenseManager.V1.Instance.Parser, new[]{ "Name", "CreateTime", "UpdateTime", "Labels", "State", "Region", "ProductActivation", "LicenseVersionId", "ComputeInstance" }, null, new[]{ typeof(global::Google.Cloud.LicenseManager.V1.Instance.Types.State) }, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.LicenseManager.V1.Usage), global::Google.Cloud.LicenseManager.V1.Usage.Parser, new[]{ "LimaInstance", "Users" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Different types of licenses that are supported.
  /// </summary>
  public enum LicenseType {
    /// <summary>
    /// unspecified.
    /// </summary>
    [pbr::OriginalName("LICENSE_TYPE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Billing will be based on number of users listed per month.
    /// </summary>
    [pbr::OriginalName("LICENSE_TYPE_PER_MONTH_PER_USER")] PerMonthPerUser = 1,
    /// <summary>
    /// Bring your own license.
    /// </summary>
    [pbr::OriginalName("LICENSE_TYPE_BRING_YOUR_OWN_LICENSE")] BringYourOwnLicense = 2,
  }

  /// <summary>
  /// State of the License Key activation on the instance.
  /// </summary>
  public enum ActivationState {
    /// <summary>
    /// The Status of the activation is unspecified
    /// </summary>
    [pbr::OriginalName("ACTIVATION_STATE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Activation key (MAK) requested for the instance.
    /// </summary>
    [pbr::OriginalName("ACTIVATION_STATE_KEY_REQUESTED")] KeyRequested = 1,
    /// <summary>
    /// License activation process is running on the instance.
    /// </summary>
    [pbr::OriginalName("ACTIVATION_STATE_ACTIVATING")] Activating = 2,
    /// <summary>
    /// License activation is complete on the instance.
    /// </summary>
    [pbr::OriginalName("ACTIVATION_STATE_ACTIVATED")] Activated = 3,
    /// <summary>
    /// License Key is deactivating on the instance.
    /// </summary>
    [pbr::OriginalName("ACTIVATION_STATE_DEACTIVATING")] Deactivating = 4,
    /// <summary>
    /// License Key is deactivated on the instance.
    /// </summary>
    [pbr::OriginalName("ACTIVATION_STATE_DEACTIVATED")] Deactivated = 5,
    /// <summary>
    /// License Key activation failed on the instance.
    /// </summary>
    [pbr::OriginalName("ACTIVATION_STATE_TERMINATED")] Terminated = 6,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Configuration for a Google SPLA product
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Configuration : pb::IMessage<Configuration>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Configuration> _parser = new pb::MessageParser<Configuration>(() => new Configuration());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Configuration> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.LicenseManager.V1.ApiEntitiesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Configuration() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Configuration(Configuration other) : this() {
      name_ = other.name_;
      displayName_ = other.displayName_;
      product_ = other.product_;
      licenseType_ = other.licenseType_;
      currentBillingInfo_ = other.currentBillingInfo_ != null ? other.currentBillingInfo_.Clone() : null;
      nextBillingInfo_ = other.nextBillingInfo_ != null ? other.nextBillingInfo_.Clone() : null;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      updateTime_ = other.updateTime_ != null ? other.updateTime_.Clone() : null;
      labels_ = other.labels_.Clone();
      state_ = other.state_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Configuration Clone() {
      return new Configuration(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Identifier. name of resource
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 5;
    private string displayName_ = "";
    /// <summary>
    /// Required. User given name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "product" field.</summary>
    public const int ProductFieldNumber = 6;
    private string product_ = "";
    /// <summary>
    /// Required. Name field (with URL) of the Product offered for SPLA.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Product {
      get { return product_; }
      set {
        product_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "license_type" field.</summary>
    public const int LicenseTypeFieldNumber = 7;
    private global::Google.Cloud.LicenseManager.V1.LicenseType licenseType_ = global::Google.Cloud.LicenseManager.V1.LicenseType.Unspecified;
    /// <summary>
    /// Required. LicenseType to be applied for billing
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.LicenseManager.V1.LicenseType LicenseType {
      get { return licenseType_; }
      set {
        licenseType_ = value;
      }
    }

    /// <summary>Field number for the "current_billing_info" field.</summary>
    public const int CurrentBillingInfoFieldNumber = 8;
    private global::Google.Cloud.LicenseManager.V1.BillingInfo currentBillingInfo_;
    /// <summary>
    /// Required. Billing information applicable till end of the current month.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.LicenseManager.V1.BillingInfo CurrentBillingInfo {
      get { return currentBillingInfo_; }
      set {
        currentBillingInfo_ = value;
      }
    }

    /// <summary>Field number for the "next_billing_info" field.</summary>
    public const int NextBillingInfoFieldNumber = 9;
    private global::Google.Cloud.LicenseManager.V1.BillingInfo nextBillingInfo_;
    /// <summary>
    /// Required. Billing information applicable for next month.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.LicenseManager.V1.BillingInfo NextBillingInfo {
      get { return nextBillingInfo_; }
      set {
        nextBillingInfo_ = value;
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. [Output only] Create time stamp
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "update_time" field.</summary>
    public const int UpdateTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateTime_;
    /// <summary>
    /// Output only. [Output only] Update time stamp
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 34);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Optional. Labels as key value pairs
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 10;
    private global::Google.Cloud.LicenseManager.V1.Configuration.Types.State state_ = global::Google.Cloud.LicenseManager.V1.Configuration.Types.State.Unspecified;
    /// <summary>
    /// Output only. State of the configuration.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.LicenseManager.V1.Configuration.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Configuration);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Configuration other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (DisplayName != other.DisplayName) return false;
      if (Product != other.Product) return false;
      if (LicenseType != other.LicenseType) return false;
      if (!object.Equals(CurrentBillingInfo, other.CurrentBillingInfo)) return false;
      if (!object.Equals(NextBillingInfo, other.NextBillingInfo)) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(UpdateTime, other.UpdateTime)) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if (State != other.State) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (Product.Length != 0) hash ^= Product.GetHashCode();
      if (LicenseType != global::Google.Cloud.LicenseManager.V1.LicenseType.Unspecified) hash ^= LicenseType.GetHashCode();
      if (currentBillingInfo_ != null) hash ^= CurrentBillingInfo.GetHashCode();
      if (nextBillingInfo_ != null) hash ^= NextBillingInfo.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (updateTime_ != null) hash ^= UpdateTime.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (State != global::Google.Cloud.LicenseManager.V1.Configuration.Types.State.Unspecified) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (createTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UpdateTime);
      }
      labels_.WriteTo(output, _map_labels_codec);
      if (DisplayName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DisplayName);
      }
      if (Product.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Product);
      }
      if (LicenseType != global::Google.Cloud.LicenseManager.V1.LicenseType.Unspecified) {
        output.WriteRawTag(56);
        output.WriteEnum((int) LicenseType);
      }
      if (currentBillingInfo_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(CurrentBillingInfo);
      }
      if (nextBillingInfo_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(NextBillingInfo);
      }
      if (State != global::Google.Cloud.LicenseManager.V1.Configuration.Types.State.Unspecified) {
        output.WriteRawTag(80);
        output.WriteEnum((int) State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (createTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UpdateTime);
      }
      labels_.WriteTo(ref output, _map_labels_codec);
      if (DisplayName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DisplayName);
      }
      if (Product.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Product);
      }
      if (LicenseType != global::Google.Cloud.LicenseManager.V1.LicenseType.Unspecified) {
        output.WriteRawTag(56);
        output.WriteEnum((int) LicenseType);
      }
      if (currentBillingInfo_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(CurrentBillingInfo);
      }
      if (nextBillingInfo_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(NextBillingInfo);
      }
      if (State != global::Google.Cloud.LicenseManager.V1.Configuration.Types.State.Unspecified) {
        output.WriteRawTag(80);
        output.WriteEnum((int) State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (Product.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Product);
      }
      if (LicenseType != global::Google.Cloud.LicenseManager.V1.LicenseType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LicenseType);
      }
      if (currentBillingInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentBillingInfo);
      }
      if (nextBillingInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NextBillingInfo);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (updateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateTime);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      if (State != global::Google.Cloud.LicenseManager.V1.Configuration.Types.State.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Configuration other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.Product.Length != 0) {
        Product = other.Product;
      }
      if (other.LicenseType != global::Google.Cloud.LicenseManager.V1.LicenseType.Unspecified) {
        LicenseType = other.LicenseType;
      }
      if (other.currentBillingInfo_ != null) {
        if (currentBillingInfo_ == null) {
          CurrentBillingInfo = new global::Google.Cloud.LicenseManager.V1.BillingInfo();
        }
        CurrentBillingInfo.MergeFrom(other.CurrentBillingInfo);
      }
      if (other.nextBillingInfo_ != null) {
        if (nextBillingInfo_ == null) {
          NextBillingInfo = new global::Google.Cloud.LicenseManager.V1.BillingInfo();
        }
        NextBillingInfo.MergeFrom(other.NextBillingInfo);
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.updateTime_ != null) {
        if (updateTime_ == null) {
          UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateTime.MergeFrom(other.UpdateTime);
      }
      labels_.MergeFrom(other.labels_);
      if (other.State != global::Google.Cloud.LicenseManager.V1.Configuration.Types.State.Unspecified) {
        State = other.State;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 26: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 34: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 42: {
            DisplayName = input.ReadString();
            break;
          }
          case 50: {
            Product = input.ReadString();
            break;
          }
          case 56: {
            LicenseType = (global::Google.Cloud.LicenseManager.V1.LicenseType) input.ReadEnum();
            break;
          }
          case 66: {
            if (currentBillingInfo_ == null) {
              CurrentBillingInfo = new global::Google.Cloud.LicenseManager.V1.BillingInfo();
            }
            input.ReadMessage(CurrentBillingInfo);
            break;
          }
          case 74: {
            if (nextBillingInfo_ == null) {
              NextBillingInfo = new global::Google.Cloud.LicenseManager.V1.BillingInfo();
            }
            input.ReadMessage(NextBillingInfo);
            break;
          }
          case 80: {
            State = (global::Google.Cloud.LicenseManager.V1.Configuration.Types.State) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 26: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 34: {
            labels_.AddEntriesFrom(ref input, _map_labels_codec);
            break;
          }
          case 42: {
            DisplayName = input.ReadString();
            break;
          }
          case 50: {
            Product = input.ReadString();
            break;
          }
          case 56: {
            LicenseType = (global::Google.Cloud.LicenseManager.V1.LicenseType) input.ReadEnum();
            break;
          }
          case 66: {
            if (currentBillingInfo_ == null) {
              CurrentBillingInfo = new global::Google.Cloud.LicenseManager.V1.BillingInfo();
            }
            input.ReadMessage(CurrentBillingInfo);
            break;
          }
          case 74: {
            if (nextBillingInfo_ == null) {
              NextBillingInfo = new global::Google.Cloud.LicenseManager.V1.BillingInfo();
            }
            input.ReadMessage(NextBillingInfo);
            break;
          }
          case 80: {
            State = (global::Google.Cloud.LicenseManager.V1.Configuration.Types.State) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Configuration message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// State of the configuration.
      /// </summary>
      public enum State {
        /// <summary>
        /// The Status of the configuration is unspecified
        /// </summary>
        [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Configuration is in active state.
        /// </summary>
        [pbr::OriginalName("STATE_ACTIVE")] Active = 1,
        /// <summary>
        /// Configuration is in deactivated state.
        /// </summary>
        [pbr::OriginalName("STATE_SUSPENDED")] Suspended = 2,
        /// <summary>
        /// Configuration is in deleted state.
        /// </summary>
        [pbr::OriginalName("STATE_DELETED")] Deleted = 3,
      }

    }
    #endregion

  }

  /// <summary>
  /// Billing Information.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class BillingInfo : pb::IMessage<BillingInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BillingInfo> _parser = new pb::MessageParser<BillingInfo>(() => new BillingInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BillingInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.LicenseManager.V1.ApiEntitiesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BillingInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BillingInfo(BillingInfo other) : this() {
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      switch (other.CurrentBillingInfoCase) {
        case CurrentBillingInfoOneofCase.UserCountBilling:
          UserCountBilling = other.UserCountBilling.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BillingInfo Clone() {
      return new BillingInfo(this);
    }

    /// <summary>Field number for the "user_count_billing" field.</summary>
    public const int UserCountBillingFieldNumber = 1;
    /// <summary>
    /// Required. This type of billing uses user count for computing total
    /// charge.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.LicenseManager.V1.UserCountBillingInfo UserCountBilling {
      get { return currentBillingInfoCase_ == CurrentBillingInfoOneofCase.UserCountBilling ? (global::Google.Cloud.LicenseManager.V1.UserCountBillingInfo) currentBillingInfo_ : null; }
      set {
        currentBillingInfo_ = value;
        currentBillingInfoCase_ = value == null ? CurrentBillingInfoOneofCase.None : CurrentBillingInfoOneofCase.UserCountBilling;
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    /// <summary>
    /// Output only. When the billing starts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    /// <summary>
    /// Output only. When the billing ends.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    private object currentBillingInfo_;
    /// <summary>Enum of possible cases for the "current_billing_info" oneof.</summary>
    public enum CurrentBillingInfoOneofCase {
      None = 0,
      UserCountBilling = 1,
    }
    private CurrentBillingInfoOneofCase currentBillingInfoCase_ = CurrentBillingInfoOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CurrentBillingInfoOneofCase CurrentBillingInfoCase {
      get { return currentBillingInfoCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCurrentBillingInfo() {
      currentBillingInfoCase_ = CurrentBillingInfoOneofCase.None;
      currentBillingInfo_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BillingInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BillingInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserCountBilling, other.UserCountBilling)) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      if (CurrentBillingInfoCase != other.CurrentBillingInfoCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (currentBillingInfoCase_ == CurrentBillingInfoOneofCase.UserCountBilling) hash ^= UserCountBilling.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      hash ^= (int) currentBillingInfoCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (currentBillingInfoCase_ == CurrentBillingInfoOneofCase.UserCountBilling) {
        output.WriteRawTag(10);
        output.WriteMessage(UserCountBilling);
      }
      if (startTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (currentBillingInfoCase_ == CurrentBillingInfoOneofCase.UserCountBilling) {
        output.WriteRawTag(10);
        output.WriteMessage(UserCountBilling);
      }
      if (startTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (currentBillingInfoCase_ == CurrentBillingInfoOneofCase.UserCountBilling) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserCountBilling);
      }
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BillingInfo other) {
      if (other == null) {
        return;
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      switch (other.CurrentBillingInfoCase) {
        case CurrentBillingInfoOneofCase.UserCountBilling:
          if (UserCountBilling == null) {
            UserCountBilling = new global::Google.Cloud.LicenseManager.V1.UserCountBillingInfo();
          }
          UserCountBilling.MergeFrom(other.UserCountBilling);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Google.Cloud.LicenseManager.V1.UserCountBillingInfo subBuilder = new global::Google.Cloud.LicenseManager.V1.UserCountBillingInfo();
            if (currentBillingInfoCase_ == CurrentBillingInfoOneofCase.UserCountBilling) {
              subBuilder.MergeFrom(UserCountBilling);
            }
            input.ReadMessage(subBuilder);
            UserCountBilling = subBuilder;
            break;
          }
          case 18: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 26: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Google.Cloud.LicenseManager.V1.UserCountBillingInfo subBuilder = new global::Google.Cloud.LicenseManager.V1.UserCountBillingInfo();
            if (currentBillingInfoCase_ == CurrentBillingInfoOneofCase.UserCountBilling) {
              subBuilder.MergeFrom(UserCountBilling);
            }
            input.ReadMessage(subBuilder);
            UserCountBilling = subBuilder;
            break;
          }
          case 18: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 26: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// This approach uses total unique user count for billing.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UserCountBillingInfo : pb::IMessage<UserCountBillingInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserCountBillingInfo> _parser = new pb::MessageParser<UserCountBillingInfo>(() => new UserCountBillingInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserCountBillingInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.LicenseManager.V1.ApiEntitiesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserCountBillingInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserCountBillingInfo(UserCountBillingInfo other) : this() {
      userCount_ = other.userCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserCountBillingInfo Clone() {
      return new UserCountBillingInfo(this);
    }

    /// <summary>Field number for the "user_count" field.</summary>
    public const int UserCountFieldNumber = 1;
    private int userCount_;
    /// <summary>
    /// Required. Number of users to bill for.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UserCount {
      get { return userCount_; }
      set {
        userCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserCountBillingInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserCountBillingInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserCount != other.UserCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (UserCount != 0) hash ^= UserCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UserCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UserCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (UserCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserCountBillingInfo other) {
      if (other == null) {
        return;
      }
      if (other.UserCount != 0) {
        UserCount = other.UserCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserCount = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UserCount = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message representing usage for license configurations which use user-count
  /// billing.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UserCountUsage : pb::IMessage<UserCountUsage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserCountUsage> _parser = new pb::MessageParser<UserCountUsage>(() => new UserCountUsage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserCountUsage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.LicenseManager.V1.ApiEntitiesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserCountUsage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserCountUsage(UserCountUsage other) : this() {
      uniqueUserCount_ = other.uniqueUserCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserCountUsage Clone() {
      return new UserCountUsage(this);
    }

    /// <summary>Field number for the "unique_user_count" field.</summary>
    public const int UniqueUserCountFieldNumber = 1;
    private int uniqueUserCount_;
    /// <summary>
    /// Required. Unique number of licensed users.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UniqueUserCount {
      get { return uniqueUserCount_; }
      set {
        uniqueUserCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserCountUsage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserCountUsage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UniqueUserCount != other.UniqueUserCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (UniqueUserCount != 0) hash ^= UniqueUserCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UniqueUserCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UniqueUserCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UniqueUserCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UniqueUserCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (UniqueUserCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UniqueUserCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserCountUsage other) {
      if (other == null) {
        return;
      }
      if (other.UniqueUserCount != 0) {
        UniqueUserCount = other.UniqueUserCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UniqueUserCount = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UniqueUserCount = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Products for Google SPLA.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Product : pb::IMessage<Product>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Product> _parser = new pb::MessageParser<Product>(() => new Product());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Product> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.LicenseManager.V1.ApiEntitiesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Product() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Product(Product other) : this() {
      name_ = other.name_;
      version_ = other.version_;
      productCompany_ = other.productCompany_;
      state_ = other.state_;
      sku_ = other.sku_;
      description_ = other.description_;
      displayName_ = other.displayName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Product Clone() {
      return new Product(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Identifier. Full name of the product resource.
    /// ex "projects/1/locations/us-central1/products/office-2021"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private string version_ = "";
    /// <summary>
    /// Required. Version of the product.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "product_company" field.</summary>
    public const int ProductCompanyFieldNumber = 3;
    private string productCompany_ = "";
    /// <summary>
    /// Required. Company that released the product.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ProductCompany {
      get { return productCompany_; }
      set {
        productCompany_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 4;
    private global::Google.Cloud.LicenseManager.V1.Product.Types.State state_ = global::Google.Cloud.LicenseManager.V1.Product.Types.State.Unspecified;
    /// <summary>
    /// Output only. State of the product.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.LicenseManager.V1.Product.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "sku" field.</summary>
    public const int SkuFieldNumber = 5;
    private string sku_ = "";
    /// <summary>
    /// Required. SKU for mapping to the Billing/Subscription resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Sku {
      get { return sku_; }
      set {
        sku_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 6;
    private string description_ = "";
    /// <summary>
    /// Required. Human-readable, detailed description of the Product
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 7;
    private string displayName_ = "";
    /// <summary>
    /// Required. Human-readable name of the Product
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Product);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Product other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Version != other.Version) return false;
      if (ProductCompany != other.ProductCompany) return false;
      if (State != other.State) return false;
      if (Sku != other.Sku) return false;
      if (Description != other.Description) return false;
      if (DisplayName != other.DisplayName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (ProductCompany.Length != 0) hash ^= ProductCompany.GetHashCode();
      if (State != global::Google.Cloud.LicenseManager.V1.Product.Types.State.Unspecified) hash ^= State.GetHashCode();
      if (Sku.Length != 0) hash ^= Sku.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Version);
      }
      if (ProductCompany.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ProductCompany);
      }
      if (State != global::Google.Cloud.LicenseManager.V1.Product.Types.State.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) State);
      }
      if (Sku.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Sku);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Description);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(DisplayName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Version);
      }
      if (ProductCompany.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ProductCompany);
      }
      if (State != global::Google.Cloud.LicenseManager.V1.Product.Types.State.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) State);
      }
      if (Sku.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Sku);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Description);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(DisplayName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (ProductCompany.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProductCompany);
      }
      if (State != global::Google.Cloud.LicenseManager.V1.Product.Types.State.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (Sku.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sku);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Product other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      if (other.ProductCompany.Length != 0) {
        ProductCompany = other.ProductCompany;
      }
      if (other.State != global::Google.Cloud.LicenseManager.V1.Product.Types.State.Unspecified) {
        State = other.State;
      }
      if (other.Sku.Length != 0) {
        Sku = other.Sku;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Version = input.ReadString();
            break;
          }
          case 26: {
            ProductCompany = input.ReadString();
            break;
          }
          case 32: {
            State = (global::Google.Cloud.LicenseManager.V1.Product.Types.State) input.ReadEnum();
            break;
          }
          case 42: {
            Sku = input.ReadString();
            break;
          }
          case 50: {
            Description = input.ReadString();
            break;
          }
          case 58: {
            DisplayName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Version = input.ReadString();
            break;
          }
          case 26: {
            ProductCompany = input.ReadString();
            break;
          }
          case 32: {
            State = (global::Google.Cloud.LicenseManager.V1.Product.Types.State) input.ReadEnum();
            break;
          }
          case 42: {
            Sku = input.ReadString();
            break;
          }
          case 50: {
            Description = input.ReadString();
            break;
          }
          case 58: {
            DisplayName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Product message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// State of the product.
      /// </summary>
      public enum State {
        /// <summary>
        /// The Status of the product is unknown.
        /// </summary>
        [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Product is under provisioning stage.
        /// </summary>
        [pbr::OriginalName("STATE_PROVISIONING")] Provisioning = 1,
        /// <summary>
        /// Product is ok to run on instances.
        /// </summary>
        [pbr::OriginalName("STATE_RUNNING")] Running = 2,
        /// <summary>
        /// The product is about to terminate or has been announced for termination.
        /// </summary>
        [pbr::OriginalName("STATE_TERMINATING")] Terminating = 3,
        /// <summary>
        /// The product has been terminated.
        /// </summary>
        [pbr::OriginalName("STATE_TERMINATED")] Terminated = 4,
      }

    }
    #endregion

  }

  /// <summary>
  /// Message describing Instance object
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Instance : pb::IMessage<Instance>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Instance> _parser = new pb::MessageParser<Instance>(() => new Instance());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Instance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.LicenseManager.V1.ApiEntitiesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Instance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Instance(Instance other) : this() {
      name_ = other.name_;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      updateTime_ = other.updateTime_ != null ? other.updateTime_.Clone() : null;
      labels_ = other.labels_.Clone();
      state_ = other.state_;
      region_ = other.region_;
      productActivation_ = other.productActivation_.Clone();
      licenseVersionId_ = other.licenseVersionId_;
      computeInstance_ = other.computeInstance_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Instance Clone() {
      return new Instance(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Identifier. name of resource
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. [Output only] Create time stamp
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "update_time" field.</summary>
    public const int UpdateTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateTime_;
    /// <summary>
    /// Output only. [Output only] Update time stamp
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 34);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Optional. Labels as key value pairs
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 5;
    private global::Google.Cloud.LicenseManager.V1.Instance.Types.State state_ = global::Google.Cloud.LicenseManager.V1.Instance.Types.State.Unspecified;
    /// <summary>
    /// Output only. The state of the VM.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.LicenseManager.V1.Instance.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "region" field.</summary>
    public const int RegionFieldNumber = 6;
    private string region_ = "";
    /// <summary>
    /// Output only. The location of the VM.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Region {
      get { return region_; }
      set {
        region_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "product_activation" field.</summary>
    public const int ProductActivationFieldNumber = 7;
    private static readonly pbc::MapField<string, global::Google.Cloud.LicenseManager.V1.ActivationState>.Codec _map_productActivation_codec
        = new pbc::MapField<string, global::Google.Cloud.LicenseManager.V1.ActivationState>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForEnum(16, x => (int) x, x => (global::Google.Cloud.LicenseManager.V1.ActivationState) x, global::Google.Cloud.LicenseManager.V1.ActivationState.Unspecified), 58);
    private readonly pbc::MapField<string, global::Google.Cloud.LicenseManager.V1.ActivationState> productActivation_ = new pbc::MapField<string, global::Google.Cloud.LicenseManager.V1.ActivationState>();
    /// <summary>
    /// Output only. Map with Product_Name and Activation State of the VM.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::Google.Cloud.LicenseManager.V1.ActivationState> ProductActivation {
      get { return productActivation_; }
    }

    /// <summary>Field number for the "license_version_id" field.</summary>
    public const int LicenseVersionIdFieldNumber = 8;
    private string licenseVersionId_ = "";
    /// <summary>
    /// Output only. license version id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LicenseVersionId {
      get { return licenseVersionId_; }
      set {
        licenseVersionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "compute_instance" field.</summary>
    public const int ComputeInstanceFieldNumber = 9;
    private string computeInstance_ = "";
    /// <summary>
    /// Required. Compute Instance resource name, i.e.
    /// projects/{project}/zones/{zone}/instances/{instance}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ComputeInstance {
      get { return computeInstance_; }
      set {
        computeInstance_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Instance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Instance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(UpdateTime, other.UpdateTime)) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if (State != other.State) return false;
      if (Region != other.Region) return false;
      if (!ProductActivation.Equals(other.ProductActivation)) return false;
      if (LicenseVersionId != other.LicenseVersionId) return false;
      if (ComputeInstance != other.ComputeInstance) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (updateTime_ != null) hash ^= UpdateTime.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (State != global::Google.Cloud.LicenseManager.V1.Instance.Types.State.Unspecified) hash ^= State.GetHashCode();
      if (Region.Length != 0) hash ^= Region.GetHashCode();
      hash ^= ProductActivation.GetHashCode();
      if (LicenseVersionId.Length != 0) hash ^= LicenseVersionId.GetHashCode();
      if (ComputeInstance.Length != 0) hash ^= ComputeInstance.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (createTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UpdateTime);
      }
      labels_.WriteTo(output, _map_labels_codec);
      if (State != global::Google.Cloud.LicenseManager.V1.Instance.Types.State.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) State);
      }
      if (Region.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Region);
      }
      productActivation_.WriteTo(output, _map_productActivation_codec);
      if (LicenseVersionId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(LicenseVersionId);
      }
      if (ComputeInstance.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ComputeInstance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (createTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UpdateTime);
      }
      labels_.WriteTo(ref output, _map_labels_codec);
      if (State != global::Google.Cloud.LicenseManager.V1.Instance.Types.State.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) State);
      }
      if (Region.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Region);
      }
      productActivation_.WriteTo(ref output, _map_productActivation_codec);
      if (LicenseVersionId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(LicenseVersionId);
      }
      if (ComputeInstance.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ComputeInstance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (updateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateTime);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      if (State != global::Google.Cloud.LicenseManager.V1.Instance.Types.State.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (Region.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Region);
      }
      size += productActivation_.CalculateSize(_map_productActivation_codec);
      if (LicenseVersionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LicenseVersionId);
      }
      if (ComputeInstance.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComputeInstance);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Instance other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.updateTime_ != null) {
        if (updateTime_ == null) {
          UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateTime.MergeFrom(other.UpdateTime);
      }
      labels_.MergeFrom(other.labels_);
      if (other.State != global::Google.Cloud.LicenseManager.V1.Instance.Types.State.Unspecified) {
        State = other.State;
      }
      if (other.Region.Length != 0) {
        Region = other.Region;
      }
      productActivation_.MergeFrom(other.productActivation_);
      if (other.LicenseVersionId.Length != 0) {
        LicenseVersionId = other.LicenseVersionId;
      }
      if (other.ComputeInstance.Length != 0) {
        ComputeInstance = other.ComputeInstance;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 26: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 34: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 40: {
            State = (global::Google.Cloud.LicenseManager.V1.Instance.Types.State) input.ReadEnum();
            break;
          }
          case 50: {
            Region = input.ReadString();
            break;
          }
          case 58: {
            productActivation_.AddEntriesFrom(input, _map_productActivation_codec);
            break;
          }
          case 66: {
            LicenseVersionId = input.ReadString();
            break;
          }
          case 74: {
            ComputeInstance = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 26: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 34: {
            labels_.AddEntriesFrom(ref input, _map_labels_codec);
            break;
          }
          case 40: {
            State = (global::Google.Cloud.LicenseManager.V1.Instance.Types.State) input.ReadEnum();
            break;
          }
          case 50: {
            Region = input.ReadString();
            break;
          }
          case 58: {
            productActivation_.AddEntriesFrom(ref input, _map_productActivation_codec);
            break;
          }
          case 66: {
            LicenseVersionId = input.ReadString();
            break;
          }
          case 74: {
            ComputeInstance = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Instance message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// VM status enum.
      /// </summary>
      public enum State {
        /// <summary>
        /// The Status of the VM is unspecified.
        /// </summary>
        [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Resources are being allocated for the instance.
        /// </summary>
        [pbr::OriginalName("PROVISIONING")] Provisioning = 1,
        /// <summary>
        /// All required resources have been allocated and
        /// the instance is being started.
        /// </summary>
        [pbr::OriginalName("STAGING")] Staging = 2,
        /// <summary>
        /// The instance is running.
        /// </summary>
        [pbr::OriginalName("RUNNING")] Running = 3,
        /// <summary>
        /// The instance is currently stopping (either being deleted or terminated).
        /// </summary>
        [pbr::OriginalName("STOPPING")] Stopping = 4,
        /// <summary>
        /// The instance has stopped due to various reasons (user request, VM
        /// preemption, project freezing, etc.).
        /// </summary>
        [pbr::OriginalName("STOPPED")] Stopped = 5,
        /// <summary>
        /// The instance has failed in some way.
        /// </summary>
        [pbr::OriginalName("TERMINATED")] Terminated = 6,
        /// <summary>
        /// The instance is in repair.
        /// </summary>
        [pbr::OriginalName("REPAIRING")] Repairing = 7,
      }

    }
    #endregion

  }

  /// <summary>
  /// Message describing total counts of users who accessed a VM.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Usage : pb::IMessage<Usage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Usage> _parser = new pb::MessageParser<Usage>(() => new Usage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Usage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.LicenseManager.V1.ApiEntitiesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Usage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Usage(Usage other) : this() {
      limaInstance_ = other.limaInstance_;
      users_ = other.users_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Usage Clone() {
      return new Usage(this);
    }

    /// <summary>Field number for the "lima_instance" field.</summary>
    public const int LimaInstanceFieldNumber = 1;
    private string limaInstance_ = "";
    /// <summary>
    /// LiMa Instance resource name, i.e.
    /// projects/{project}/locations/{location}/instances/{instance}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LimaInstance {
      get { return limaInstance_; }
      set {
        limaInstance_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "users" field.</summary>
    public const int UsersFieldNumber = 2;
    private int users_;
    /// <summary>
    /// Number of unique users accessing the VM.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Users {
      get { return users_; }
      set {
        users_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Usage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Usage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LimaInstance != other.LimaInstance) return false;
      if (Users != other.Users) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (LimaInstance.Length != 0) hash ^= LimaInstance.GetHashCode();
      if (Users != 0) hash ^= Users.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LimaInstance.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LimaInstance);
      }
      if (Users != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Users);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LimaInstance.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LimaInstance);
      }
      if (Users != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Users);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (LimaInstance.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LimaInstance);
      }
      if (Users != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Users);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Usage other) {
      if (other == null) {
        return;
      }
      if (other.LimaInstance.Length != 0) {
        LimaInstance = other.LimaInstance;
      }
      if (other.Users != 0) {
        Users = other.Users;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LimaInstance = input.ReadString();
            break;
          }
          case 16: {
            Users = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LimaInstance = input.ReadString();
            break;
          }
          case 16: {
            Users = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
